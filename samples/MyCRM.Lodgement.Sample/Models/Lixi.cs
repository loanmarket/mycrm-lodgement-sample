//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.495.0.
namespace MyCRMAPI.Lodgement.Models
{
    
    
    /// <summary>
    /// <para>addressType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("addressType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("addressType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressType
    {
        
        /// <summary>
        /// <para>Details for assisting in more accurately locating and making deliveries to the address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details for assisting in more accurately locating and making deliveries to the ad" +
            "dress.")]
        [System.Xml.Serialization.XmlElementAttribute("DeliveryPoint")]
        public AddressTypeDeliveryPoint DeliveryPoint { get; set; }
        
        /// <summary>
        /// <para>The DX Box address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The DX Box address.")]
        [System.Xml.Serialization.XmlElementAttribute("DXBox")]
        public AddressTypeDXBox DXBox { get; set; }
        
        /// <summary>
        /// <para>The non standard address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The non standard address.")]
        [System.Xml.Serialization.XmlElementAttribute("NonStandard")]
        public AddressTypeNonStandard NonStandard { get; set; }
        
        /// <summary>
        /// <para>The standard PO Box address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The standard PO Box address.")]
        [System.Xml.Serialization.XmlElementAttribute("POBox")]
        public AddressTypePOBox POBox { get; set; }
        
        /// <summary>
        /// <para>The standard address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The standard address.")]
        [System.Xml.Serialization.XmlElementAttribute("Standard")]
        public AddressTypeStandard Standard { get; set; }
        
        /// <summary>
        /// <para>The name of the town, city or island the delivery point is located in or associated with. Australian addresses do not have a City as per Australia Post guidelines. According to New Zealand Post Address Standards, the Town/City is a mandatory element of all addresses, i.e. urban, rural and delivery service addresses.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The name of the town, city or island the delivery point is located in or associated with. Australian addresses do not have a City as per Australia Post guidelines. According to New Zealand Post Address Standards, the Town/City is a mandatory element of all addresses, i.e. urban, rural and delivery service addresses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("City")]
        public string City { get; set; }
        
        /// <summary>
        /// <para>The destination country of the address</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The destination country of the address")]
        [System.Xml.Serialization.XmlAttributeAttribute("Country")]
        public CountryCodeList Country { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Country property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountrySpecified { get; set; }
        
        /// <summary>
        /// <para>The source of data used in searching information about an address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of data used in searching information about an address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DataSource")]
        public DataSourceList DataSource { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataSource property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Latitude is a geographic coordinate that specifies the north-south position of a point on the Earth's surface</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Latitude is a geographic coordinate that specifies the north-south position of a " +
            "point on the Earth\'s surface")]
        [System.Xml.Serialization.XmlAttributeAttribute("Latitude")]
        public decimal Latitude { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Latitude property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatitudeSpecified { get; set; }
        
        /// <summary>
        /// <para>A local government area (LGA) is an administrative division of a country that a local government is responsible for. The size of an LGA varies by country but it is generally a subdivision of a state, province, division, or territory.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A local government area (LGA) is an administrative division of a country that a l" +
            "ocal government is responsible for. The size of an LGA varies by country but it " +
            "is generally a subdivision of a state, province, division, or territory.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LGAName")]
        public string LGAName { get; set; }
        
        /// <summary>
        /// <para>Longitude is a geographic coordinate that specifies the east-west position of a point on the Earth's surface</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Longitude is a geographic coordinate that specifies the east-west position of a p" +
            "oint on the Earth\'s surface")]
        [System.Xml.Serialization.XmlAttributeAttribute("Longitude")]
        public decimal Longitude { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Longitude property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongitudeSpecified { get; set; }
        
        /// <summary>
        /// <para>A four digit numeric descriptor for a postal delivery area, aligned with placename, suburb or locality and in some circumstances a unique Postal Delivery Type.</para>
        /// <para>A four digit numeric descriptor that helps to identify delivery addresses in New Zealand when there are the same or similar street and town names used nationwide.</para>
        /// <para xml:lang="en">Pattern: \d{4}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A four digit numeric descriptor for a postal delivery area, aligned with placenam" +
            "e, suburb or locality and in some circumstances a unique Postal Delivery Type.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandPostCode")]
        public string NewZealandPostCode { get; set; }
        
        /// <summary>
        /// <para>A series of letters and/or digits for a postal delivery area overseas.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A series of letters and/or digits for a postal delivery area overseas.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OverseasPostCode")]
        public string OverseasPostCode { get; set; }
        
        /// <summary>
        /// <para>The State, Province or Territory overseas that the specific placename/address is located.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The State, Province or Territory overseas that the specific placename/address is " +
            "located.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OverseasState")]
        public string OverseasState { get; set; }
        
        /// <summary>
        /// <para>The order of this address within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this address within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The full name of the placename or Post Office of delivery containing the specific address, which may include a Delivery Centre or a Business Centre.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The full name of the placename or Post Office of delivery containing the specific" +
            " address, which may include a Delivery Centre or a Business Centre.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Suburb")]
        public string Suburb { get; set; }
        
        /// <summary>
        /// <para>For Pre-Approval loans, the address of the property is not required.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For Pre-Approval loans, the address of the property is not required.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TBAAddress")]
        public YesNoList TBAAddress { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TBAAddress property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TBAAddressSpecified { get; set; }
        
        /// <summary>
        /// <para>Determines if the address is Standard, Non Standard, a DX Box or a PO BOX</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Determines if the address is Standard, Non Standard, a DX Box or a PO BOX")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public AddressTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique identification assigned to this address.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identification assigned to this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressTypeDeliveryPoint", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeDeliveryPoint
    {
        
        /// <summary>
        /// <para>Uniquely identifies every delivery point in the Postal Address File (PAF) or equivalent in other countries.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uniquely identifies every delivery point in the Postal Address File (PAF) or equi" +
            "valent in other countries.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Identifier")]
        public string Identifier { get; set; }
        
        /// <summary>
        /// <para>The barcode encoded version of the Delivery Point Identifier.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The barcode encoded version of the Delivery Point Identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IdentifierBarcode")]
        public string IdentifierBarcode { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressTypeDXBox", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeDXBox
    {
        
        /// <summary>
        /// <para>An exchange box in an authorised DX system</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An exchange box in an authorised DX system")]
        [System.Xml.Serialization.XmlAttributeAttribute("Exchange")]
        public string Exchange { get; set; }
        
        /// <summary>
        /// <para>An identification number, used for tracking the documents from the moment they're collected to the time they arrive at their destination.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An identification number, used for tracking the documents from the moment they\'re" +
            " collected to the time they arrive at their destination.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>The name of the company providing DX mailing services</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the company providing DX mailing services")]
        [System.Xml.Serialization.XmlAttributeAttribute("Provider")]
        public string Provider { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressTypeNonStandard", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeNonStandard
    {
        
        /// <summary>
        /// <para>Line 1 of the address.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line 1 of the address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Line1")]
        public string Line1 { get; set; }
        
        /// <summary>
        /// <para>Line 2 of the address.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line 2 of the address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Line2")]
        public string Line2 { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressTypePOBox", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypePOBox
    {
        
        /// <summary>
        /// <para>An exchange box in an authorised PO system</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An exchange box in an authorised PO system")]
        [System.Xml.Serialization.XmlAttributeAttribute("Exchange")]
        public string Exchange { get; set; }
        
        /// <summary>
        /// <para>An identification number, forming part of an address, for the channel of postal delivery.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An identification number, forming part of an address, for the channel of postal d" +
            "elivery.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>The specification of the identification of a postal delivery service such as General Post Office Box, Community Mail Bag, etc. to clearly distinguish it from another when applicable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specification of the identification of a postal delivery service such as Gene" +
            "ral Post Office Box, Community Mail Bag, etc. to clearly distinguish it from ano" +
            "ther when applicable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public PoBoxTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>poBoxTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("poBoxTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("poBoxTypeList", Namespace="")]
    public enum PoBoxTypeList
    {
        
        /// <summary>
        /// <para>Community Mail Bag</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Mail Bag")]
        [System.Xml.Serialization.XmlEnumAttribute("Community Mail Bag")]
        Community_Mail_Bag,
        
        /// <summary>
        /// <para>Counter Delivery</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Counter Delivery")]
        [System.Xml.Serialization.XmlEnumAttribute("Counter Delivery")]
        Counter_Delivery,
        
        /// <summary>
        /// <para>PO Box</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PO Box")]
        [System.Xml.Serialization.XmlEnumAttribute("PO Box")]
        PO_Box,
        
        /// <summary>
        /// <para>Poste Restante</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poste Restante")]
        [System.Xml.Serialization.XmlEnumAttribute("Poste Restante")]
        Poste_Restante,
        
        /// <summary>
        /// <para>Private Bag</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Bag")]
        [System.Xml.Serialization.XmlEnumAttribute("Private Bag")]
        Private_Bag,
        
        /// <summary>
        /// <para>Response Bag</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Response Bag")]
        [System.Xml.Serialization.XmlEnumAttribute("Response Bag")]
        Response_Bag,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AddressTypeStandard", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeStandard
    {
        
        /// <summary>
        /// <para>The full name used to identify the physical building or property. Usually this information is not abbreviated. Should include any reference to a wing or other components of a building complex, if applicable.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The full name used to identify the physical building or property. Usually this in" +
            "formation is not abbreviated. Should include any reference to a wing or other co" +
            "mponents of a building complex, if applicable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BuildingName")]
        public string BuildingName { get; set; }
        
        /// <summary>
        /// <para>Descriptors used to identify the floor or level of a multi-storey building or complex.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Descriptors used to identify the floor or level of a multi-storey building or com" +
            "plex.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Level")]
        public string Level { get; set; }
        
        /// <summary>
        /// <para>The full street name used to identify the street location of the property.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The full street name used to identify the street location of the property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StreetName")]
        public string StreetName { get; set; }
        
        /// <summary>
        /// <para>To record the numeric or numeric/alpha reference number of a house or property.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("To record the numeric or numeric/alpha reference number of a house or property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StreetNumber")]
        public string StreetNumber { get; set; }
        
        /// <summary>
        /// <para>A suffix used to further describe the part of the address that offers directional information. For addresses in New Zealand, this attribute is used for the field referred to as street direction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A suffix used to further describe the part of the address that offers directional" +
            " information. For addresses in New Zealand, this attribute is used for the field" +
            " referred to as street direction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StreetSuffix")]
        public StreetSuffixList StreetSuffix { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StreetSuffix property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreetSuffixSpecified { get; set; }
        
        /// <summary>
        /// <para>Used to identify the thoroughfare type</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Used to identify the thoroughfare type")]
        [System.Xml.Serialization.XmlAttributeAttribute("StreetType")]
        public StreetTypeList StreetType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StreetType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StreetTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The specification of the type of a separately identifiable portion within a building complex or marina with its associated number or identifier to clearly distinguish it from another. Can either be depicted by numerals or alpha characters, or a mixture of both.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The specification of the type of a separately identifiable portion within a building complex or marina with its associated number or identifier to clearly distinguish it from another. Can either be depicted by numerals or alpha characters, or a mixture of both.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Unit")]
        public string Unit { get; set; }
    }
    
    /// <summary>
    /// <para>A list of valid Street Suffixes (accommodating the data item referred to as 'Street Suffix' in the Australia Post Data Guide and 'Street Direction' in New Zealand Post Address Standards).</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of valid Street Suffixes (accommodating the data item referred to as \'Stre" +
        "et Suffix\' in the Australia Post Data Guide and \'Street Direction\' in New Zealan" +
        "d Post Address Standards).")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("streetSuffixList", Namespace="")]
    public enum StreetSuffixList
    {
        
        /// <summary>
        /// <para>Central</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Central")]
        Central,
        
        /// <summary>
        /// <para>East</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("East")]
        East,
        
        /// <summary>
        /// <para>Extension</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extension")]
        Extension,
        
        /// <summary>
        /// <para>Lower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lower")]
        Lower,
        
        /// <summary>
        /// <para>North</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("North")]
        North,
        
        /// <summary>
        /// <para>North East</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("North East")]
        [System.Xml.Serialization.XmlEnumAttribute("North East")]
        North_East,
        
        /// <summary>
        /// <para>North West</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("North West")]
        [System.Xml.Serialization.XmlEnumAttribute("North West")]
        North_West,
        
        /// <summary>
        /// <para>South</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South")]
        South,
        
        /// <summary>
        /// <para>South East</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South East")]
        [System.Xml.Serialization.XmlEnumAttribute("South East")]
        South_East,
        
        /// <summary>
        /// <para>South West</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South West")]
        [System.Xml.Serialization.XmlEnumAttribute("South West")]
        South_West,
        
        /// <summary>
        /// <para>Upper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upper")]
        Upper,
        
        /// <summary>
        /// <para>West</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("West")]
        West,
    }
    
    /// <summary>
    /// <para>streetTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("streetTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("streetTypeList", Namespace="")]
    public enum StreetTypeList
    {
        
        /// <summary>
        /// <para>Access</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Access")]
        Access,
        
        /// <summary>
        /// <para>Accessway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accessway")]
        Accessway,
        
        /// <summary>
        /// <para>Alley</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alley")]
        Alley,
        
        /// <summary>
        /// <para>Anchorage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anchorage")]
        Anchorage,
        
        /// <summary>
        /// <para>Approach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Approach")]
        Approach,
        
        /// <summary>
        /// <para>Arcade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arcade")]
        Arcade,
        
        /// <summary>
        /// <para>Arch</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arch")]
        Arch,
        
        /// <summary>
        /// <para>Avenue</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Avenue")]
        Avenue,
        
        /// <summary>
        /// <para>Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank")]
        Bank,
        
        /// <summary>
        /// <para>Bay</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bay")]
        Bay,
        
        /// <summary>
        /// <para>Beach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beach")]
        Beach,
        
        /// <summary>
        /// <para>Belt</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belt")]
        Belt,
        
        /// <summary>
        /// <para>Bend</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bend")]
        Bend,
        
        /// <summary>
        /// <para>Bluff</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bluff")]
        Bluff,
        
        /// <summary>
        /// <para>Boulevard</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boulevard")]
        Boulevard,
        
        /// <summary>
        /// <para>Brae</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brae")]
        Brae,
        
        /// <summary>
        /// <para>Briars</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Briars")]
        Briars,
        
        /// <summary>
        /// <para>Bridge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bridge")]
        Bridge,
        
        /// <summary>
        /// <para>Bypass</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bypass")]
        Bypass,
        
        /// <summary>
        /// <para>Centre</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Centre")]
        Centre,
        
        /// <summary>
        /// <para>Chase</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chase")]
        Chase,
        
        /// <summary>
        /// <para>Circle</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Circle")]
        Circle,
        
        /// <summary>
        /// <para>Circus</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Circus")]
        Circus,
        
        /// <summary>
        /// <para>Claim</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Claim")]
        Claim,
        
        /// <summary>
        /// <para>Close</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Close")]
        Close,
        
        /// <summary>
        /// <para>Common</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Common")]
        Common,
        
        /// <summary>
        /// <para>Court</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court")]
        Court,
        
        /// <summary>
        /// <para>Courts</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Courts")]
        Courts,
        
        /// <summary>
        /// <para>Cove</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cove")]
        Cove,
        
        /// <summary>
        /// <para>Creek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Creek")]
        Creek,
        
        /// <summary>
        /// <para>Crescent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crescent")]
        Crescent,
        
        /// <summary>
        /// <para>Crest</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crest")]
        Crest,
        
        /// <summary>
        /// <para>Cul</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cul")]
        Cul,
        
        /// <summary>
        /// <para>Dale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dale")]
        Dale,
        
        /// <summary>
        /// <para>Dell</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dell")]
        Dell,
        
        /// <summary>
        /// <para>Downs</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Downs")]
        Downs,
        
        /// <summary>
        /// <para>Drive</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drive")]
        Drive,
        
        /// <summary>
        /// <para>Dune</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dune")]
        Dune,
        
        /// <summary>
        /// <para>Elm</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Elm")]
        Elm,
        
        /// <summary>
        /// <para>End</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("End")]
        End,
        
        /// <summary>
        /// <para>Entrance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Entrance")]
        Entrance,
        
        /// <summary>
        /// <para>Esplanade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Esplanade")]
        Esplanade,
        
        /// <summary>
        /// <para>Estate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Estate")]
        Estate,
        
        /// <summary>
        /// <para>Fairway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fairway")]
        Fairway,
        
        /// <summary>
        /// <para>Fall</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fall")]
        Fall,
        
        /// <summary>
        /// <para>Fare</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fare")]
        Fare,
        
        /// <summary>
        /// <para>Farms</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farms")]
        Farms,
        
        /// <summary>
        /// <para>Fen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fen")]
        Fen,
        
        /// <summary>
        /// <para>Fern</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fern")]
        Fern,
        
        /// <summary>
        /// <para>Flat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flat")]
        Flat,
        
        /// <summary>
        /// <para>Flats</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flats")]
        Flats,
        
        /// <summary>
        /// <para>Garden</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden")]
        Garden,
        
        /// <summary>
        /// <para>Gardens</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gardens")]
        Gardens,
        
        /// <summary>
        /// <para>Gate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gate")]
        Gate,
        
        /// <summary>
        /// <para>Glade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glade")]
        Glade,
        
        /// <summary>
        /// <para>Glen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glen")]
        Glen,
        
        /// <summary>
        /// <para>Grange</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grange")]
        Grange,
        
        /// <summary>
        /// <para>Green</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Green")]
        Green,
        
        /// <summary>
        /// <para>Grove</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grove")]
        Grove,
        
        /// <summary>
        /// <para>Gully</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gully")]
        Gully,
        
        /// <summary>
        /// <para>Haven</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Haven")]
        Haven,
        
        /// <summary>
        /// <para>Head</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Head")]
        Head,
        
        /// <summary>
        /// <para>Heights</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heights")]
        Heights,
        
        /// <summary>
        /// <para>Highway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Highway")]
        Highway,
        
        /// <summary>
        /// <para>Hill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hill")]
        Hill,
        
        /// <summary>
        /// <para>Island</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Island")]
        Island,
        
        /// <summary>
        /// <para>Junction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Junction")]
        Junction,
        
        /// <summary>
        /// <para>Key</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Key")]
        Key,
        
        /// <summary>
        /// <para>Knob</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Knob")]
        Knob,
        
        /// <summary>
        /// <para>Ladder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ladder")]
        Ladder,
        
        /// <summary>
        /// <para>Landing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landing")]
        Landing,
        
        /// <summary>
        /// <para>Lane</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lane")]
        Lane,
        
        /// <summary>
        /// <para>Line</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line")]
        Line,
        
        /// <summary>
        /// <para>Link</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link")]
        Link,
        
        /// <summary>
        /// <para>Lookout</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lookout")]
        Lookout,
        
        /// <summary>
        /// <para>Loop</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loop")]
        Loop,
        
        /// <summary>
        /// <para>Mall</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mall")]
        Mall,
        
        /// <summary>
        /// <para>Mead</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mead")]
        Mead,
        
        /// <summary>
        /// <para>Meadows</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meadows")]
        Meadows,
        
        /// <summary>
        /// <para>Mews</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mews")]
        Mews,
        
        /// <summary>
        /// <para>Mile</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mile")]
        Mile,
        
        /// <summary>
        /// <para>Motorway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motorway")]
        Motorway,
        
        /// <summary>
        /// <para>Motu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motu")]
        Motu,
        
        /// <summary>
        /// <para>Mount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mount")]
        Mount,
        
        /// <summary>
        /// <para>Neaves</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Neaves")]
        Neaves,
        
        /// <summary>
        /// <para>Oaks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oaks")]
        Oaks,
        
        /// <summary>
        /// <para>Paddock</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paddock")]
        Paddock,
        
        /// <summary>
        /// <para>Paku</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paku")]
        Paku,
        
        /// <summary>
        /// <para>Parade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parade")]
        Parade,
        
        /// <summary>
        /// <para>Park</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Park")]
        Park,
        
        /// <summary>
        /// <para>Parkway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parkway")]
        Parkway,
        
        /// <summary>
        /// <para>Pass</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pass")]
        Pass,
        
        /// <summary>
        /// <para>Passage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Passage")]
        Passage,
        
        /// <summary>
        /// <para>Path</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Path")]
        Path,
        
        /// <summary>
        /// <para>Place</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Place")]
        Place,
        
        /// <summary>
        /// <para>Point</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Point")]
        Point,
        
        /// <summary>
        /// <para>Priors</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Priors")]
        Priors,
        
        /// <summary>
        /// <para>Promenade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Promenade")]
        Promenade,
        
        /// <summary>
        /// <para>Quadrant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quadrant")]
        Quadrant,
        
        /// <summary>
        /// <para>Quay</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quay")]
        Quay,
        
        /// <summary>
        /// <para>Reef</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reef")]
        Reef,
        
        /// <summary>
        /// <para>Reserve</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reserve")]
        Reserve,
        
        /// <summary>
        /// <para>Rest</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rest")]
        Rest,
        
        /// <summary>
        /// <para>Retreat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retreat")]
        Retreat,
        
        /// <summary>
        /// <para>Ridge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ridge")]
        Ridge,
        
        /// <summary>
        /// <para>Rise</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rise")]
        Rise,
        
        /// <summary>
        /// <para>Road</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road")]
        Road,
        
        /// <summary>
        /// <para>Roads</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roads")]
        Roads,
        
        /// <summary>
        /// <para>Roadway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roadway")]
        Roadway,
        
        /// <summary>
        /// <para>Route</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Route")]
        Route,
        
        /// <summary>
        /// <para>Row</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Row")]
        Row,
        
        /// <summary>
        /// <para>Service Lane</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Service Lane")]
        [System.Xml.Serialization.XmlEnumAttribute("Service Lane")]
        Service_Lane,
        
        /// <summary>
        /// <para>Slope</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Slope")]
        Slope,
        
        /// <summary>
        /// <para>Spa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spa")]
        Spa,
        
        /// <summary>
        /// <para>Spur</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spur")]
        Spur,
        
        /// <summary>
        /// <para>Square</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Square")]
        Square,
        
        /// <summary>
        /// <para>State Highway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("State Highway")]
        [System.Xml.Serialization.XmlEnumAttribute("State Highway")]
        State_Highway,
        
        /// <summary>
        /// <para>Steep</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Steep")]
        Steep,
        
        /// <summary>
        /// <para>Steps</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Steps")]
        Steps,
        
        /// <summary>
        /// <para>Straight</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Straight")]
        Straight,
        
        /// <summary>
        /// <para>Strand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Strand")]
        Strand,
        
        /// <summary>
        /// <para>Street</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Street")]
        Street,
        
        /// <summary>
        /// <para>Terrace</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Terrace")]
        Terrace,
        
        /// <summary>
        /// <para>Towers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Towers")]
        Towers,
        
        /// <summary>
        /// <para>Track</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Track")]
        Track,
        
        /// <summary>
        /// <para>Trail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trail")]
        Trail,
        
        /// <summary>
        /// <para>Tramway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tramway")]
        Tramway,
        
        /// <summary>
        /// <para>Trees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trees")]
        Trees,
        
        /// <summary>
        /// <para>Vale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vale")]
        Vale,
        
        /// <summary>
        /// <para>Valley</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valley")]
        Valley,
        
        /// <summary>
        /// <para>Venus</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Venus")]
        Venus,
        
        /// <summary>
        /// <para>View</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("View")]
        View,
        
        /// <summary>
        /// <para>Views</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Views")]
        Views,
        
        /// <summary>
        /// <para>Village</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Village")]
        Village,
        
        /// <summary>
        /// <para>Villas</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Villas")]
        Villas,
        
        /// <summary>
        /// <para>Vista</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vista")]
        Vista,
        
        /// <summary>
        /// <para>Vue</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vue")]
        Vue,
        
        /// <summary>
        /// <para>Walk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Walk")]
        Walk,
        
        /// <summary>
        /// <para>Waters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waters")]
        Waters,
        
        /// <summary>
        /// <para>Way</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Way")]
        Way,
        
        /// <summary>
        /// <para>Wharf</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wharf")]
        Wharf,
        
        /// <summary>
        /// <para>Wynd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wynd")]
        Wynd,
    }
    
    /// <summary>
    /// <para>countryCodeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("countryCodeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("countryCodeList", Namespace="")]
    public enum CountryCodeList
    {
        
        /// <summary>
        /// <para>Andorra</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Andorra")]
        AD,
        
        /// <summary>
        /// <para>United Arab Emirates</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("United Arab Emirates")]
        AE,
        
        /// <summary>
        /// <para>Afghanistan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Afghanistan")]
        AF,
        
        /// <summary>
        /// <para>Antigua and Barbuda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Antigua and Barbuda")]
        AG,
        
        /// <summary>
        /// <para>Anguilla</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anguilla")]
        AI,
        
        /// <summary>
        /// <para>Albania</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Albania")]
        AL,
        
        /// <summary>
        /// <para>Armenia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Armenia")]
        AM,
        
        /// <summary>
        /// <para>Angola</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Angola")]
        AO,
        
        /// <summary>
        /// <para>Antarctica</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Antarctica")]
        AQ,
        
        /// <summary>
        /// <para>Argentina</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Argentina")]
        AR,
        
        /// <summary>
        /// <para>American Samoa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("American Samoa")]
        AS,
        
        /// <summary>
        /// <para>Austria</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Austria")]
        AT,
        
        /// <summary>
        /// <para>Australia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Australia")]
        AU,
        
        /// <summary>
        /// <para>Aruba</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aruba")]
        AW,
        
        /// <summary>
        /// <para>Åland Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Åland Islands")]
        AX,
        
        /// <summary>
        /// <para>Azerbaijan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Azerbaijan")]
        AZ,
        
        /// <summary>
        /// <para>Bosnia and Herzegovina</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bosnia and Herzegovina")]
        BA,
        
        /// <summary>
        /// <para>Barbados</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Barbados")]
        BB,
        
        /// <summary>
        /// <para>Bangladesh</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bangladesh")]
        BD,
        
        /// <summary>
        /// <para>Belgium</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belgium")]
        BE,
        
        /// <summary>
        /// <para>Burkina Faso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Burkina Faso")]
        BF,
        
        /// <summary>
        /// <para>Bulgaria</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulgaria")]
        BG,
        
        /// <summary>
        /// <para>Bahrain</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bahrain")]
        BH,
        
        /// <summary>
        /// <para>Burundi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Burundi")]
        BI,
        
        /// <summary>
        /// <para>Benin</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Benin")]
        BJ,
        
        /// <summary>
        /// <para>Saint Barthélemy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Barthélemy")]
        BL,
        
        /// <summary>
        /// <para>Bermuda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bermuda")]
        BM,
        
        /// <summary>
        /// <para>Brunei Darussalam</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brunei Darussalam")]
        BN,
        
        /// <summary>
        /// <para>Bolivia, Plurinational State of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bolivia, Plurinational State of")]
        BO,
        
        /// <summary>
        /// <para>Bonaire, Sint Eustatius and Saba</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonaire, Sint Eustatius and Saba")]
        BQ,
        
        /// <summary>
        /// <para>Brazil</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brazil")]
        BR,
        
        /// <summary>
        /// <para>Bahamas</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bahamas")]
        BS,
        
        /// <summary>
        /// <para>Bhutan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bhutan")]
        BT,
        
        /// <summary>
        /// <para>Bouvet Island</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bouvet Island")]
        BV,
        
        /// <summary>
        /// <para>Botswana</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Botswana")]
        BW,
        
        /// <summary>
        /// <para>Belarus</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belarus")]
        BY,
        
        /// <summary>
        /// <para>Belize</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belize")]
        BZ,
        
        /// <summary>
        /// <para>Canada</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Canada")]
        CA,
        
        /// <summary>
        /// <para>Cocos (Keeling) Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cocos (Keeling) Islands")]
        CC,
        
        /// <summary>
        /// <para>Congo, the Democratic Republic of the</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Congo, the Democratic Republic of the")]
        CD,
        
        /// <summary>
        /// <para>Central African Republic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Central African Republic")]
        CF,
        
        /// <summary>
        /// <para>Congo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Congo")]
        CG,
        
        /// <summary>
        /// <para>Switzerland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Switzerland")]
        CH,
        
        /// <summary>
        /// <para>Côte d'Ivoire</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Côte d\'Ivoire")]
        CI,
        
        /// <summary>
        /// <para>Cook Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cook Islands")]
        CK,
        
        /// <summary>
        /// <para>Chile</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chile")]
        CL,
        
        /// <summary>
        /// <para>Cameroon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cameroon")]
        CM,
        
        /// <summary>
        /// <para>China</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("China")]
        CN,
        
        /// <summary>
        /// <para>Colombia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Colombia")]
        CO,
        
        /// <summary>
        /// <para>Costa Rica</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Costa Rica")]
        CR,
        
        /// <summary>
        /// <para>Cuba</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cuba")]
        CU,
        
        /// <summary>
        /// <para>Cabo Verde</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cabo Verde")]
        CV,
        
        /// <summary>
        /// <para>Curaçao</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Curaçao")]
        CW,
        
        /// <summary>
        /// <para>Christmas Island</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Christmas Island")]
        CX,
        
        /// <summary>
        /// <para>Cyprus</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cyprus")]
        CY,
        
        /// <summary>
        /// <para>Czech Republic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Czech Republic")]
        CZ,
        
        /// <summary>
        /// <para>Germany</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Germany")]
        DE,
        
        /// <summary>
        /// <para>Djibouti</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Djibouti")]
        DJ,
        
        /// <summary>
        /// <para>Denmark</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Denmark")]
        DK,
        
        /// <summary>
        /// <para>Dominica</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dominica")]
        DM,
        
        /// <summary>
        /// <para>Dominican Republic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dominican Republic")]
        DO,
        
        /// <summary>
        /// <para>Algeria</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Algeria")]
        DZ,
        
        /// <summary>
        /// <para>Ecuador</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ecuador")]
        EC,
        
        /// <summary>
        /// <para>Estonia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Estonia")]
        EE,
        
        /// <summary>
        /// <para>Egypt</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Egypt")]
        EG,
        
        /// <summary>
        /// <para>Western Sahara</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Western Sahara")]
        EH,
        
        /// <summary>
        /// <para>Eritrea</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Eritrea")]
        ER,
        
        /// <summary>
        /// <para>Spain</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spain")]
        ES,
        
        /// <summary>
        /// <para>Ethiopia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ethiopia")]
        ET,
        
        /// <summary>
        /// <para>Finland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Finland")]
        FI,
        
        /// <summary>
        /// <para>Fiji</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fiji")]
        FJ,
        
        /// <summary>
        /// <para>Falkland Islands (Malvinas)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Falkland Islands (Malvinas)")]
        FK,
        
        /// <summary>
        /// <para>Micronesia, Federated States of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Micronesia, Federated States of")]
        FM,
        
        /// <summary>
        /// <para>Faroe Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faroe Islands")]
        FO,
        
        /// <summary>
        /// <para>France</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("France")]
        FR,
        
        /// <summary>
        /// <para>Gabon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gabon")]
        GA,
        
        /// <summary>
        /// <para>United Kingdom</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("United Kingdom")]
        GB,
        
        /// <summary>
        /// <para>Grenada</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grenada")]
        GD,
        
        /// <summary>
        /// <para>Georgia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Georgia")]
        GE,
        
        /// <summary>
        /// <para>French Guiana</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("French Guiana")]
        GF,
        
        /// <summary>
        /// <para>Guernsey</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guernsey")]
        GG,
        
        /// <summary>
        /// <para>Ghana</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ghana")]
        GH,
        
        /// <summary>
        /// <para>Gibraltar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gibraltar")]
        GI,
        
        /// <summary>
        /// <para>Greenland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Greenland")]
        GL,
        
        /// <summary>
        /// <para>Gambia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gambia")]
        GM,
        
        /// <summary>
        /// <para>Guinea</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guinea")]
        GN,
        
        /// <summary>
        /// <para>Guadeloupe</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guadeloupe")]
        GP,
        
        /// <summary>
        /// <para>Equatorial Guinea</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equatorial Guinea")]
        GQ,
        
        /// <summary>
        /// <para>Greece</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Greece")]
        GR,
        
        /// <summary>
        /// <para>South Georgia and the South Sandwich Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South Georgia and the South Sandwich Islands")]
        GS,
        
        /// <summary>
        /// <para>Guatemala</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guatemala")]
        GT,
        
        /// <summary>
        /// <para>Guam</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guam")]
        GU,
        
        /// <summary>
        /// <para>Guinea-Bissau</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guinea-Bissau")]
        GW,
        
        /// <summary>
        /// <para>Guyana</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guyana")]
        GY,
        
        /// <summary>
        /// <para>Hong Kong</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hong Kong")]
        HK,
        
        /// <summary>
        /// <para>Heard Island and McDonald Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heard Island and McDonald Islands")]
        HM,
        
        /// <summary>
        /// <para>Honduras</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Honduras")]
        HN,
        
        /// <summary>
        /// <para>Croatia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Croatia")]
        HR,
        
        /// <summary>
        /// <para>Haiti</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Haiti")]
        HT,
        
        /// <summary>
        /// <para>Hungary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hungary")]
        HU,
        
        /// <summary>
        /// <para>Indonesia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indonesia")]
        ID,
        
        /// <summary>
        /// <para>Ireland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ireland")]
        IE,
        
        /// <summary>
        /// <para>Israel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Israel")]
        IL,
        
        /// <summary>
        /// <para>Isle of Man</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Isle of Man")]
        IM,
        
        /// <summary>
        /// <para>India</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("India")]
        IN,
        
        /// <summary>
        /// <para>British Indian Ocean Territory</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("British Indian Ocean Territory")]
        IO,
        
        /// <summary>
        /// <para>Iraq</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iraq")]
        IQ,
        
        /// <summary>
        /// <para>Iran, Islamic Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iran, Islamic Republic of")]
        IR,
        
        /// <summary>
        /// <para>Iceland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iceland")]
        IS,
        
        /// <summary>
        /// <para>Italy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Italy")]
        IT,
        
        /// <summary>
        /// <para>Jersey</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jersey")]
        JE,
        
        /// <summary>
        /// <para>Jamaica</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jamaica")]
        JM,
        
        /// <summary>
        /// <para>Jordan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jordan")]
        JO,
        
        /// <summary>
        /// <para>Japan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Japan")]
        JP,
        
        /// <summary>
        /// <para>Kenya</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kenya")]
        KE,
        
        /// <summary>
        /// <para>Kyrgyzstan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kyrgyzstan")]
        KG,
        
        /// <summary>
        /// <para>Cambodia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cambodia")]
        KH,
        
        /// <summary>
        /// <para>Kiribati</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kiribati")]
        KI,
        
        /// <summary>
        /// <para>Comoros</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comoros")]
        KM,
        
        /// <summary>
        /// <para>Saint Kitts and Nevis</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Kitts and Nevis")]
        KN,
        
        /// <summary>
        /// <para>Korea, Democratic People's Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Korea, Democratic People\'s Republic of")]
        KP,
        
        /// <summary>
        /// <para>Korea, Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Korea, Republic of")]
        KR,
        
        /// <summary>
        /// <para>Kuwait</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kuwait")]
        KW,
        
        /// <summary>
        /// <para>Cayman Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cayman Islands")]
        KY,
        
        /// <summary>
        /// <para>Kazakhstan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kazakhstan")]
        KZ,
        
        /// <summary>
        /// <para>Lao People's Democratic Republic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lao People\'s Democratic Republic")]
        LA,
        
        /// <summary>
        /// <para>Lebanon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lebanon")]
        LB,
        
        /// <summary>
        /// <para>Saint Lucia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Lucia")]
        LC,
        
        /// <summary>
        /// <para>Liechtenstein</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liechtenstein")]
        LI,
        
        /// <summary>
        /// <para>Sri Lanka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sri Lanka")]
        LK,
        
        /// <summary>
        /// <para>Liberia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liberia")]
        LR,
        
        /// <summary>
        /// <para>Lesotho</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lesotho")]
        LS,
        
        /// <summary>
        /// <para>Lithuania</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lithuania")]
        LT,
        
        /// <summary>
        /// <para>Luxembourg</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Luxembourg")]
        LU,
        
        /// <summary>
        /// <para>Latvia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Latvia")]
        LV,
        
        /// <summary>
        /// <para>Libya</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Libya")]
        LY,
        
        /// <summary>
        /// <para>Morocco</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Morocco")]
        MA,
        
        /// <summary>
        /// <para>Monaco</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monaco")]
        MC,
        
        /// <summary>
        /// <para>Moldova, Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Moldova, Republic of")]
        MD,
        
        /// <summary>
        /// <para>Montenegro</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Montenegro")]
        ME,
        
        /// <summary>
        /// <para>Saint Martin (French part)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Martin (French part)")]
        MF,
        
        /// <summary>
        /// <para>Madagascar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Madagascar")]
        MG,
        
        /// <summary>
        /// <para>Marshall Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marshall Islands")]
        MH,
        
        /// <summary>
        /// <para>Macedonia, the former Yugoslav Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Macedonia, the former Yugoslav Republic of")]
        MK,
        
        /// <summary>
        /// <para>Mali</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mali")]
        ML,
        
        /// <summary>
        /// <para>Myanmar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Myanmar")]
        MM,
        
        /// <summary>
        /// <para>Mongolia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mongolia")]
        MN,
        
        /// <summary>
        /// <para>Macao</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Macao")]
        MO,
        
        /// <summary>
        /// <para>Northern Mariana Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Northern Mariana Islands")]
        MP,
        
        /// <summary>
        /// <para>Martinique</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Martinique")]
        MQ,
        
        /// <summary>
        /// <para>Mauritania</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mauritania")]
        MR,
        
        /// <summary>
        /// <para>Montserrat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Montserrat")]
        MS,
        
        /// <summary>
        /// <para>Malta</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Malta")]
        MT,
        
        /// <summary>
        /// <para>Mauritius</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mauritius")]
        MU,
        
        /// <summary>
        /// <para>Maldives</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Maldives")]
        MV,
        
        /// <summary>
        /// <para>Malawi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Malawi")]
        MW,
        
        /// <summary>
        /// <para>Mexico</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mexico")]
        MX,
        
        /// <summary>
        /// <para>Malaysia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Malaysia")]
        MY,
        
        /// <summary>
        /// <para>Mozambique</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mozambique")]
        MZ,
        
        /// <summary>
        /// <para>Namibia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Namibia")]
        NA,
        
        /// <summary>
        /// <para>New Caledonia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Caledonia")]
        NC,
        
        /// <summary>
        /// <para>Niger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Niger")]
        NE,
        
        /// <summary>
        /// <para>Norfolk Island</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Norfolk Island")]
        NF,
        
        /// <summary>
        /// <para>Nigeria</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nigeria")]
        NG,
        
        /// <summary>
        /// <para>Nicaragua</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nicaragua")]
        NI,
        
        /// <summary>
        /// <para>Netherlands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Netherlands")]
        NL,
        
        /// <summary>
        /// <para>Norway</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Norway")]
        NO,
        
        /// <summary>
        /// <para>Nepal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nepal")]
        NP,
        
        /// <summary>
        /// <para>Nauru</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nauru")]
        NR,
        
        /// <summary>
        /// <para>Niue</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Niue")]
        NU,
        
        /// <summary>
        /// <para>New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand")]
        NZ,
        
        /// <summary>
        /// <para>Oman</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oman")]
        OM,
        
        /// <summary>
        /// <para>Panama</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Panama")]
        PA,
        
        /// <summary>
        /// <para>Peru</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peru")]
        PE,
        
        /// <summary>
        /// <para>French Polynesia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("French Polynesia")]
        PF,
        
        /// <summary>
        /// <para>Papua New Guinea</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Papua New Guinea")]
        PG,
        
        /// <summary>
        /// <para>Philippines</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Philippines")]
        PH,
        
        /// <summary>
        /// <para>Pakistan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pakistan")]
        PK,
        
        /// <summary>
        /// <para>Poland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poland")]
        PL,
        
        /// <summary>
        /// <para>Saint Pierre and Miquelon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Pierre and Miquelon")]
        PM,
        
        /// <summary>
        /// <para>Pitcairn</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pitcairn")]
        PN,
        
        /// <summary>
        /// <para>Puerto Rico</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Puerto Rico")]
        PR,
        
        /// <summary>
        /// <para>Palestine, State of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Palestine, State of")]
        PS,
        
        /// <summary>
        /// <para>Portugal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Portugal")]
        PT,
        
        /// <summary>
        /// <para>Palau</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Palau")]
        PW,
        
        /// <summary>
        /// <para>Paraguay</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paraguay")]
        PY,
        
        /// <summary>
        /// <para>Qatar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Qatar")]
        QA,
        
        /// <summary>
        /// <para>Réunion</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Réunion")]
        RE,
        
        /// <summary>
        /// <para>Romania</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Romania")]
        RO,
        
        /// <summary>
        /// <para>Serbia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Serbia")]
        RS,
        
        /// <summary>
        /// <para>Russian Federation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Russian Federation")]
        RU,
        
        /// <summary>
        /// <para>Rwanda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rwanda")]
        RW,
        
        /// <summary>
        /// <para>Saudi Arabia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saudi Arabia")]
        SA,
        
        /// <summary>
        /// <para>Solomon Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solomon Islands")]
        SB,
        
        /// <summary>
        /// <para>Seychelles</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seychelles")]
        SC,
        
        /// <summary>
        /// <para>Sudan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sudan")]
        SD,
        
        /// <summary>
        /// <para>Sweden</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sweden")]
        SE,
        
        /// <summary>
        /// <para>Singapore</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Singapore")]
        SG,
        
        /// <summary>
        /// <para>Saint Helena, Ascension and Tristan da Cunha</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Helena, Ascension and Tristan da Cunha")]
        SH,
        
        /// <summary>
        /// <para>Slovenia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Slovenia")]
        SI,
        
        /// <summary>
        /// <para>Svalbard and Jan Mayen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Svalbard and Jan Mayen")]
        SJ,
        
        /// <summary>
        /// <para>Slovakia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Slovakia")]
        SK,
        
        /// <summary>
        /// <para>Sierra Leone</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sierra Leone")]
        SL,
        
        /// <summary>
        /// <para>San Marino</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("San Marino")]
        SM,
        
        /// <summary>
        /// <para>Senegal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Senegal")]
        SN,
        
        /// <summary>
        /// <para>Somalia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Somalia")]
        SO,
        
        /// <summary>
        /// <para>Suriname</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Suriname")]
        SR,
        
        /// <summary>
        /// <para>South Sudan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South Sudan")]
        SS,
        
        /// <summary>
        /// <para>Sao Tome and Principe</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sao Tome and Principe")]
        ST,
        
        /// <summary>
        /// <para>El Salvador</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("El Salvador")]
        SV,
        
        /// <summary>
        /// <para>Sint Maarten (Dutch part)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sint Maarten (Dutch part)")]
        SX,
        
        /// <summary>
        /// <para>Syrian Arab Republic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Syrian Arab Republic")]
        SY,
        
        /// <summary>
        /// <para>Swaziland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Swaziland")]
        SZ,
        
        /// <summary>
        /// <para>Turks and Caicos Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turks and Caicos Islands")]
        TC,
        
        /// <summary>
        /// <para>Chad</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chad")]
        TD,
        
        /// <summary>
        /// <para>French Southern Territories</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("French Southern Territories")]
        TF,
        
        /// <summary>
        /// <para>Togo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Togo")]
        TG,
        
        /// <summary>
        /// <para>Thailand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Thailand")]
        TH,
        
        /// <summary>
        /// <para>Tajikistan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tajikistan")]
        TJ,
        
        /// <summary>
        /// <para>Tokelau</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tokelau")]
        TK,
        
        /// <summary>
        /// <para>Timor-Leste</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timor-Leste")]
        TL,
        
        /// <summary>
        /// <para>Turkmenistan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turkmenistan")]
        TM,
        
        /// <summary>
        /// <para>Tunisia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tunisia")]
        TN,
        
        /// <summary>
        /// <para>Tonga</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tonga")]
        TO,
        
        /// <summary>
        /// <para>Turkey</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turkey")]
        TR,
        
        /// <summary>
        /// <para>Trinidad and Tobago</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trinidad and Tobago")]
        TT,
        
        /// <summary>
        /// <para>Tuvalu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tuvalu")]
        TV,
        
        /// <summary>
        /// <para>Taiwan, Province of China</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taiwan, Province of China")]
        TW,
        
        /// <summary>
        /// <para>Tanzania, United Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tanzania, United Republic of")]
        TZ,
        
        /// <summary>
        /// <para>Ukraine</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ukraine")]
        UA,
        
        /// <summary>
        /// <para>Uganda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uganda")]
        UG,
        
        /// <summary>
        /// <para>United States Minor Outlying Islands</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("United States Minor Outlying Islands")]
        UM,
        
        /// <summary>
        /// <para>United States</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("United States")]
        US,
        
        /// <summary>
        /// <para>Uruguay</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uruguay")]
        UY,
        
        /// <summary>
        /// <para>Uzbekistan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uzbekistan")]
        UZ,
        
        /// <summary>
        /// <para>Holy See (Vatican City State)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Holy See (Vatican City State)")]
        VA,
        
        /// <summary>
        /// <para>Saint Vincent and the Grenadines</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Vincent and the Grenadines")]
        VC,
        
        /// <summary>
        /// <para>Venezuela, Bolivarian Republic of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Venezuela, Bolivarian Republic of")]
        VE,
        
        /// <summary>
        /// <para>Virgin Islands, British</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Virgin Islands, British")]
        VG,
        
        /// <summary>
        /// <para>Virgin Islands, U.S.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Virgin Islands, U.S.")]
        VI,
        
        /// <summary>
        /// <para>Viet Nam</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Viet Nam")]
        VN,
        
        /// <summary>
        /// <para>Vanuatu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vanuatu")]
        VU,
        
        /// <summary>
        /// <para>Wallis and Futuna</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wallis and Futuna")]
        WF,
        
        /// <summary>
        /// <para>Samoa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Samoa")]
        WS,
        
        /// <summary>
        /// <para>Yemen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yemen")]
        YE,
        
        /// <summary>
        /// <para>Mayotte</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mayotte")]
        YT,
        
        /// <summary>
        /// <para>South Africa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South Africa")]
        ZA,
        
        /// <summary>
        /// <para>Zambia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zambia")]
        ZM,
        
        /// <summary>
        /// <para>Zimbabwe</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zimbabwe")]
        ZW,
    }
    
    /// <summary>
    /// <para>dataSourceList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("dataSourceList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("dataSourceList", Namespace="")]
    public enum DataSourceList
    {
        
        /// <summary>
        /// <para>GNAF</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GNAF")]
        GNAF,
        
        /// <summary>
        /// <para>RP Data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RP Data")]
        [System.Xml.Serialization.XmlEnumAttribute("RP Data")]
        RP_Data,
        
        /// <summary>
        /// <para>The source of data used in searching information about the real estate property is Valocity property search service.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of data used in searching information about the real estate property i" +
            "s Valocity property search service.")]
        Valocity,
    }
    
    /// <summary>
    /// <para>yesNoList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("yesNoList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yesNoList", Namespace="")]
    public enum YesNoList
    {
        
        /// <summary>
        /// <para>No</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No")]
        No,
        
        /// <summary>
        /// <para>Yes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yes")]
        Yes,
    }
    
    /// <summary>
    /// <para>addressTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("addressTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("addressTypeList", Namespace="")]
    public enum AddressTypeList
    {
        
        /// <summary>
        /// <para>DX Box</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DX Box")]
        [System.Xml.Serialization.XmlEnumAttribute("DX Box")]
        DX_Box,
        
        /// <summary>
        /// <para>Non Standard</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Standard")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Standard")]
        Non_Standard,
        
        /// <summary>
        /// <para>PO Box or Bag</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PO Box or Bag")]
        [System.Xml.Serialization.XmlEnumAttribute("PO Box or Bag")]
        PO_Box_Or_Bag,
        
        /// <summary>
        /// <para>Standard</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Standard")]
        Standard,
    }
    
    /// <summary>
    /// <para>dealingNumberType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("dealingNumberType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("dealingNumberType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealingNumberType
    {
        
        /// <summary>
        /// <para>Indicates the book number associated with the Dealing</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the book number associated with the Dealing")]
        [System.Xml.Serialization.XmlAttributeAttribute("BookNumber")]
        public string BookNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates the registered number associated with the Dealing</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the registered number associated with the Dealing")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredNumber")]
        public string RegisteredNumber { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Dealing Number Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Dealing Number Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    /// <summary>
    /// <para>Instructions on sending documentation to a nominated authority.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Instructions on sending documentation to a nominated authority.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("documentationInstructionsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentationInstructionsType
    {
        
        /// <summary>
        /// <para>The method by which the documentation will be sent to the nominated authority.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The method by which the documentation will be sent to the nominated authority.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Method")]
        public DocumentationInstructionsMethodList Method { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Method property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of nominated authority to receive the documentation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of nominated authority to receive the documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SendDocumentsTo")]
        public SendDocumentsToList SendDocumentsTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendDocumentsTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SendDocumentsToSpecified { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the location for delivery (an Address element).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the location for delivery (an Address element).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_DeliverTo")]
        public string X_DeliverTo { get; set; }
        
        /// <summary>
        /// <para>The nominated authority to receive the documentation.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The nominated authority to receive the documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_NominatedAuthority")]
        public string X_NominatedAuthority { get; set; }
    }
    
    /// <summary>
    /// <para>documentationInstructionsMethodList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("documentationInstructionsMethodList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("documentationInstructionsMethodList", Namespace="")]
    public enum DocumentationInstructionsMethodList
    {
        
        /// <summary>
        /// <para>Email</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Email")]
        Email,
        
        /// <summary>
        /// <para>eSign</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("eSign")]
        [System.Xml.Serialization.XmlEnumAttribute("eSign")]
        ESign,
        
        /// <summary>
        /// <para>Post</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Post")]
        Post,
    }
    
    /// <summary>
    /// <para>sendDocumentsToList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("sendDocumentsToList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sendDocumentsToList", Namespace="")]
    public enum SendDocumentsToList
    {
        
        /// <summary>
        /// <para>Accountant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountant")]
        Accountant,
        
        /// <summary>
        /// <para>All</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All")]
        All,
        
        /// <summary>
        /// <para>Applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applicant")]
        Applicant,
        
        /// <summary>
        /// <para>Branch</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Branch")]
        Branch,
        
        /// <summary>
        /// <para>Loan Writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan Writer")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Writer")]
        Loan_Writer,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Solicitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solicitor")]
        Solicitor,
    }
    
    /// <summary>
    /// <para>A complex type used for defining durations in terms of units and length of time (as a multiple of the units).</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A complex type used for defining durations in terms of units and length of time (" +
        "as a multiple of the units).")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("durationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DurationType
    {
        
        /// <summary>
        /// <para>The length of the duration as a multiple of the units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The length of the duration as a multiple of the units.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Length")]
        public string Length { get; set; }
        
        /// <summary>
        /// <para>The units used to define the duration.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units used to define the duration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Units")]
        public DurationUnitsList Units { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Units property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitsSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>durationUnitsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("durationUnitsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("durationUnitsList", Namespace="")]
    public enum DurationUnitsList
    {
        
        /// <summary>
        /// <para>Days</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Days")]
        Days,
        
        /// <summary>
        /// <para>Months</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Months")]
        Months,
        
        /// <summary>
        /// <para>Weeks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weeks")]
        Weeks,
        
        /// <summary>
        /// <para>Years</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Years")]
        Years,
    }
    
    /// <summary>
    /// <para>financialAccountType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("financialAccountType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("financialAccountType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinancialAccountType
    {
        
        /// <summary>
        /// <para>The free form name assigned to the account.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The free form name assigned to the account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccountName")]
        public string AccountName { get; set; }
        
        /// <summary>
        /// <para>The unique number assigned to this account. (typically by the financial institution)</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The unique number assigned to this account. (typically by the financial instituti" +
            "on)")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccountNumber")]
        public string AccountNumber { get; set; }
        
        /// <summary>
        /// <para>The lender specific product name that describes the account.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The lender specific product name that describes the account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccountTypeName")]
        public string AccountTypeName { get; set; }
        
        /// <summary>
        /// <para>The BSB number identifying where this account is held.</para>
        /// <para>A pattern to restrict BSB values to be exactly 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The BSB number identifying where this account is held.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("BSB")]
        public string BSB { get; set; }
        
        /// <summary>
        /// <para>The financial institution where the account is held.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The financial institution where the account is held.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialInstitution")]
        public FinancialInstitutionList FinancialInstitution { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialInstitution property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialInstitutionSpecified { get; set; }
        
        /// <summary>
        /// <para>For a financial institution not listed, the text name of the FI.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a financial institution not listed, the text name of the FI.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherFIName")]
        public string OtherFIName { get; set; }
    }
    
    /// <summary>
    /// <para>financialInstitutionList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("financialInstitutionList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("financialInstitutionList", Namespace="")]
    public enum FinancialInstitutionList
    {
        
        /// <summary>
        /// <para>ANZ Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANZ Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("ANZ Bank")]
        ANZ_Bank,
        
        /// <summary>
        /// <para>ASB Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ASB Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("ASB Bank")]
        ASB_Bank,
        
        /// <summary>
        /// <para>Bank of Baroda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank of Baroda")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank of Baroda")]
        Bank_Of_Baroda,
        
        /// <summary>
        /// <para>Bank of China</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank of China")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank of China")]
        Bank_Of_China,
        
        /// <summary>
        /// <para>Bank of India</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank of India")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank of India")]
        Bank_Of_India,
        
        /// <summary>
        /// <para>Bank of New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank of New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank of New Zealand")]
        Bank_Of_New_Zealand,
        
        /// <summary>
        /// <para>Bank of Tokyo-Mitsubishi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank of Tokyo-Mitsubishi")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank of Tokyo-Mitsubishi")]
        Bank_Of_Tokyo_Mitsubishi,
        
        /// <summary>
        /// <para>Brighten Home Loans</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brighten Home Loans")]
        [System.Xml.Serialization.XmlEnumAttribute("Brighten Home Loans")]
        Brighten_Home_Loans,
        
        /// <summary>
        /// <para>China Construction Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("China Construction Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("China Construction Bank")]
        China_Construction_Bank,
        
        /// <summary>
        /// <para>Citibank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Citibank")]
        Citibank,
        
        /// <summary>
        /// <para>Citywide Home Loans</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Citywide Home Loans")]
        [System.Xml.Serialization.XmlEnumAttribute("Citywide Home Loans")]
        Citywide_Home_Loans,
        
        /// <summary>
        /// <para>Commonwealth Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commonwealth Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Commonwealth Bank")]
        Commonwealth_Bank,
        
        /// <summary>
        /// <para>Deutsche Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deutsche Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Deutsche Bank")]
        Deutsche_Bank,
        
        /// <summary>
        /// <para>Heartland Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heartland Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Heartland Bank")]
        Heartland_Bank,
        
        /// <summary>
        /// <para>International Commercial Bank of China</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Commercial Bank of China")]
        [System.Xml.Serialization.XmlEnumAttribute("International Commercial Bank of China")]
        International_Commercial_Bank_Of_China,
        
        /// <summary>
        /// <para>JPMorgan Chase Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JPMorgan Chase Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("JPMorgan Chase Bank")]
        JPMorgan_Chase_Bank,
        
        /// <summary>
        /// <para>Kiwibank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kiwibank")]
        Kiwibank,
        
        /// <summary>
        /// <para>Kookmin Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kookmin Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Kookmin Bank")]
        Kookmin_Bank,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Pepper New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pepper New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("Pepper New Zealand")]
        Pepper_New_Zealand,
        
        /// <summary>
        /// <para>Rabobank Nederland</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rabobank Nederland")]
        [System.Xml.Serialization.XmlEnumAttribute("Rabobank Nederland")]
        Rabobank_Nederland,
        
        /// <summary>
        /// <para>Rabobank New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rabobank New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("Rabobank New Zealand")]
        Rabobank_New_Zealand,
        
        /// <summary>
        /// <para>Southland Building Society</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Southland Building Society")]
        [System.Xml.Serialization.XmlEnumAttribute("Southland Building Society")]
        Southland_Building_Society,
        
        /// <summary>
        /// <para>The Co-operative Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Co-operative Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("The Co-operative Bank")]
        The_Co_Operative_Bank,
        
        /// <summary>
        /// <para>The Hongkong and Shanghai Banking Corporation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Hongkong and Shanghai Banking Corporation")]
        [System.Xml.Serialization.XmlEnumAttribute("The Hongkong and Shanghai Banking Corporation")]
        The_Hongkong_And_Shanghai_Banking_Corporation,
        
        /// <summary>
        /// <para>TSB Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TSB Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("TSB Bank")]
        TSB_Bank,
        
        /// <summary>
        /// <para>Westpac Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Westpac Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Westpac Bank")]
        Westpac_Bank,
    }
    
    /// <summary>
    /// <para>Specification of how funds are to be distributed.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Specification of how funds are to be distributed.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("fundsDisbursementType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundsDisbursementType
    {
        
        /// <summary>
        /// <para>The account number to receive the specified funds at settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The account number to receive the specified funds at settlement.")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public FinancialAccountType AccountNumber { get; set; }
        
        /// <summary>
        /// <para>The BPAY biller details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The BPAY biller details.")]
        [System.Xml.Serialization.XmlElementAttribute("BillerDetails")]
        public FundsDisbursementTypeBillerDetails BillerDetails { get; set; }
        
        /// <summary>
        /// <para>The name of the person receiving the disbursed funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the person receiving the disbursed funds.")]
        [System.Xml.Serialization.XmlElementAttribute("PersonName")]
        public PersonNameType PersonName { get; set; }
        
        /// <summary>
        /// <para>Indicates the amount of funds to be disbursed at settlement.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the amount of funds to be disbursed at settlement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The registered name of the company receiving the disbursed funds.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The registered name of the company receiving the disbursed funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The date on which the funds will be disbursed.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the funds will be disbursed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DisbursementDate", DataType="date")]
        public System.DateTime DisbursementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisbursementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisbursementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Specification of the method of distributing the funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specification of the method of distributing the funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Method")]
        public SurplusFundsDisbursementMethodList Method { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Method property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Funds Disbursement Element.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Funds Disbursement Element.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The loan account or transaction account to receive the funds at settlement.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan account or transaction account to receive the funds at settlement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Account")]
        public string X_Account { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the address of the party receiving the disbursed funds.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the address of the party receiving the disbursed funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FundsDisbursementTypeBillerDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundsDisbursementTypeBillerDetails
    {
        
        /// <summary>
        /// <para>The BPAY biller code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The BPAY biller code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BillerCode")]
        public string BillerCode { get; set; }
        
        /// <summary>
        /// <para>The BPAY biller name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The BPAY biller name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BillerName")]
        public string BillerName { get; set; }
        
        /// <summary>
        /// <para>The BPAY customer reference number (CRN).</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The BPAY customer reference number (CRN).")]
        [System.Xml.Serialization.XmlAttributeAttribute("CRN")]
        public string CRN { get; set; }
    }
    
    /// <summary>
    /// <para>personNameType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("personNameType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("personNameType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonNameType
    {
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The familiar name, nickname or preferred name by which the person wishes to be known.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The familiar name, nickname or preferred name by which the person wishes to be kn" +
            "own.")]
        [System.Xml.Serialization.XmlAttributeAttribute("KnownAs")]
        public string KnownAs { get; set; }
        
        /// <summary>
        /// <para>A person's other name. Also referred to as their 'middle name'. For example - where someone's name is Frederick Joseph Gilbert - 'Joseph' would be considered their other name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s other name. Also referred to as their \'middle name\'. For example - whe" +
            "re someone\'s name is Frederick Joseph Gilbert - \'Joseph\' would be considered the" +
            "ir other name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MiddleNames")]
        public string MiddleNames { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>The alternate or other titles this person uses when they are formally addressed. This can include multiple titles and/or appropriate abbreviations.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The alternate or other titles this person uses when they are formally addressed. " +
            "This can include multiple titles and/or appropriate abbreviations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherNameTitle")]
        public string OtherNameTitle { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
    }
    
    /// <summary>
    /// <para>A list of commonly used formal name titles.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of commonly used formal name titles.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nameTitleList", Namespace="")]
    public enum NameTitleList
    {
        
        /// <summary>
        /// <para>Dr</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dr")]
        Dr,
        
        /// <summary>
        /// <para>Hon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hon")]
        Hon,
        
        /// <summary>
        /// <para>Lady</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lady")]
        Lady,
        
        /// <summary>
        /// <para>Miss</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miss")]
        Miss,
        
        /// <summary>
        /// <para>Mr</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mr")]
        Mr,
        
        /// <summary>
        /// <para>Mrs</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mrs")]
        Mrs,
        
        /// <summary>
        /// <para>Ms</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ms")]
        Ms,
        
        /// <summary>
        /// <para>The name title is not included in this list and may be provided in the corresponding OtherNameTitle field if available.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title is not included in this list and may be provided in the correspond" +
            "ing OtherNameTitle field if available.")]
        Other,
        
        /// <summary>
        /// <para>Prof</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prof")]
        Prof,
        
        /// <summary>
        /// <para>R Hon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("R Hon")]
        [System.Xml.Serialization.XmlEnumAttribute("R Hon")]
        R_Hon,
        
        /// <summary>
        /// <para>Rev</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rev")]
        Rev,
        
        /// <summary>
        /// <para>Sir</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sir")]
        Sir,
    }
    
    /// <summary>
    /// <para>surplusFundsDisbursementMethodList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("surplusFundsDisbursementMethodList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("surplusFundsDisbursementMethodList", Namespace="")]
    public enum SurplusFundsDisbursementMethodList
    {
        
        /// <summary>
        /// <para>Bank Cheque</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Cheque")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank Cheque")]
        Bank_Cheque,
        
        /// <summary>
        /// <para>BPAY electronic bill payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BPAY electronic bill payment.")]
        Bpay,
        
        /// <summary>
        /// <para>Existing Direct Debit Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Existing Direct Debit Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Existing Direct Debit Account")]
        Existing_Direct_Debit_Account,
        
        /// <summary>
        /// <para>Existing Other Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Existing Other Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Existing Other Account")]
        Existing_Other_Account,
        
        /// <summary>
        /// <para>New Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Account")]
        [System.Xml.Serialization.XmlEnumAttribute("New Account")]
        New_Account,
        
        /// <summary>
        /// <para>Redraw</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Redraw")]
        Redraw,
    }
    
    /// <summary>
    /// <para>percentOwnedType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("percentOwnedType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("percentOwnedType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PercentOwnedType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PercentOwnedTypeOwner> _owner;
        
        /// <summary>
        /// <para>Container that associates a reference to an owner or other responsible party with the percentage of the item that they own or are responsible for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container that associates a reference to an owner or other responsible party with" +
            " the percentage of the item that they own or are responsible for.")]
        [System.Xml.Serialization.XmlElementAttribute("Owner")]
        public System.Collections.Generic.List<PercentOwnedTypeOwner> Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                this._owner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Owner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnerSpecified
        {
            get
            {
                return (this.Owner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PercentOwnedType" /> class.</para>
        /// </summary>
        public PercentOwnedType()
        {
            this._owner = new System.Collections.Generic.List<PercentOwnedTypeOwner>();
        }
        
        /// <summary>
        /// <para>Flag to indicate whether the ownership proportions are equal across all owners, specified individually for each one, or not specified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the ownership proportions are equal across all owners, s" +
            "pecified individually for each one, or not specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Proportions")]
        public ProportionsList Proportions { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Proportions property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProportionsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PercentOwnedTypeOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PercentOwnedTypeOwner
    {
        
        /// <summary>
        /// <para>Captures the percentage of the item that referenced party owns or is responsible for.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the percentage of the item that referenced party owns or is responsible " +
            "for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Percent")]
        public decimal Percent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to a party that is an owner of the item, or has a similar relationship such as a borrower or beneficiary.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to a party that is an owner of the item, or has a similar re" +
            "lationship such as a borrower or beneficiary.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Party")]
        public string X_Party { get; set; }
    }
    
    /// <summary>
    /// <para>proportionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proportionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proportionsList", Namespace="")]
    public enum ProportionsList
    {
        
        /// <summary>
        /// <para>Equal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equal")]
        Equal,
        
        /// <summary>
        /// <para>Not Specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Not Specified")]
        [System.Xml.Serialization.XmlEnumAttribute("Not Specified")]
        Not_Specified,
        
        /// <summary>
        /// <para>Specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specified")]
        Specified,
    }
    
    /// <summary>
    /// <para>phoneType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("phoneType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("phoneType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhoneType
    {
        
        /// <summary>
        /// <para>Captures the international dialing code for the country in which the fixed phone number is located, e.g. "61" for Australia. Maximum length is 3 digits.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the international dialing code for the country in which the fixed phone " +
            "number is located, e.g. \"61\" for Australia. Maximum length is 3 digits.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CountryCode")]
        public string CountryCode { get; set; }
        
        /// <summary>
        /// <para>The Area Code prefix for a New Zealand telephone number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Area Code prefix for a New Zealand telephone number.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandDialingCode")]
        public NzDialingCodeList NewZealandDialingCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewZealandDialingCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewZealandDialingCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>The local-dial number. For local rate, free call, satellite or similar special non-overseas numbers where the area or dialing code is not otherwise available, the full phone number. Required, allowed once only.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The local-dial number. For local rate, free call, satellite or similar special no" +
            "n-overseas numbers where the area or dialing code is not otherwise available, th" +
            "e full phone number. Required, allowed once only.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>The Dialing Code prefix for an overseas phone number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Dialing Code prefix for an overseas phone number")]
        [System.Xml.Serialization.XmlAttributeAttribute("OverseasDialingCode")]
        public string OverseasDialingCode { get; set; }
    }
    
    /// <summary>
    /// <para>A list of valid Area Codes for New Zealand telephone numbers.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of valid Area Codes for New Zealand telephone numbers.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nzDialingCodeList", Namespace="")]
    public enum NzDialingCodeList
    {
        
        /// <summary>
        /// <para>Special Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("01")]
        Item01,
        
        /// <summary>
        /// <para>Hand-Off Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hand-Off Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("011")]
        Item011,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("020")]
        Item020,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("021")]
        Item021,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("022")]
        Item022,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("023")]
        Item023,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("024")]
        Item024,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("025")]
        Item025,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("026")]
        Item026,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("027")]
        Item027,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("028")]
        Item028,
        
        /// <summary>
        /// <para>Non-Geographic Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Geographic Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("029")]
        Item029,
        
        /// <summary>
        /// <para>Geographic Service Code for Nelson, West Coast, Southland, Marlborough, Christchurch, Oamaru, and Otago.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geographic Service Code for Nelson, West Coast, Southland, Marlborough, Christchu" +
            "rch, Oamaru, and Otago.")]
        [System.Xml.Serialization.XmlEnumAttribute("03")]
        Item03,
        
        /// <summary>
        /// <para>Geographic Service Code for the Wellington Region.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geographic Service Code for the Wellington Region.")]
        [System.Xml.Serialization.XmlEnumAttribute("04")]
        Item04,
        
        /// <summary>
        /// <para>Service Provider Prefixes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Service Provider Prefixes.")]
        [System.Xml.Serialization.XmlEnumAttribute("05")]
        Item05,
        
        /// <summary>
        /// <para>Free-Phone Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Free-Phone Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("050")]
        Item050,
        
        /// <summary>
        /// <para>Free-Phone Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Free-Phone Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("0508")]
        Item0508,
        
        /// <summary>
        /// <para>Geographic Service Code for Taranaki, Wanganui, Manawatu, Gisborne, Hawke's Bay, and Wairarapa.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geographic Service Code for Taranaki, Wanganui, Manawatu, Gisborne, Hawke\'s Bay, " +
            "and Wairarapa.")]
        [System.Xml.Serialization.XmlEnumAttribute("06")]
        Item06,
        
        /// <summary>
        /// <para>Geographic Service Code for Waikato and Bay of Plenty.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geographic Service Code for Waikato and Bay of Plenty.")]
        [System.Xml.Serialization.XmlEnumAttribute("07")]
        Item07,
        
        /// <summary>
        /// <para>Personal Number Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Number Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("070")]
        Item070,
        
        /// <summary>
        /// <para>Value-Added Service Codes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Value-Added Service Codes.")]
        [System.Xml.Serialization.XmlEnumAttribute("08")]
        Item08,
        
        /// <summary>
        /// <para>Free-Phone Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Free-Phone Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("080")]
        Item080,
        
        /// <summary>
        /// <para>Free-Phone Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Free-Phone Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("0800")]
        Item0800,
        
        /// <summary>
        /// <para>Geographic Service Code for Northland and Auckland.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geographic Service Code for Northland and Auckland.")]
        [System.Xml.Serialization.XmlEnumAttribute("09")]
        Item09,
        
        /// <summary>
        /// <para>Premium-Rate Services Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Premium-Rate Services Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("090")]
        Item090,
        
        /// <summary>
        /// <para>Special Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>Nation-Wide Number Service Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nation-Wide Number Service Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("50")]
        Item50,
    }
    
    /// <summary>
    /// <para>Captures information about any significant changes in circumstances that will adversely affect the applicant's or applicants' ability to make contracted loan repayments; the nature of the change, and how they will continue to make repayments.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Captures information about any significant changes in circumstances that will adv" +
        "ersely affect the applicant\'s or applicants\' ability to make contracted loan rep" +
        "ayments; the nature of the change, and how they will continue to make repayments" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("responsibleLendingType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponsibleLendingType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ResponsibleLendingTypeMitigant> _mitigant;
        
        /// <summary>
        /// <para>In relation to the significant changes, it must be possible to provide one or more mitigants for the significant changes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In relation to the significant changes, it must be possible to provide one or mor" +
            "e mitigants for the significant changes")]
        [System.Xml.Serialization.XmlElementAttribute("Mitigant")]
        public System.Collections.Generic.List<ResponsibleLendingTypeMitigant> Mitigant
        {
            get
            {
                return this._mitigant;
            }
            set
            {
                this._mitigant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Mitigant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MitigantSpecified
        {
            get
            {
                return (this.Mitigant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ResponsibleLendingType" /> class.</para>
        /// </summary>
        public ResponsibleLendingType()
        {
            this._mitigant = new System.Collections.Generic.List<ResponsibleLendingTypeMitigant>();
            this._significantChange = new System.Collections.Generic.List<ResponsibleLendingTypeSignificantChange>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<ResponsibleLendingTypeSignificantChange> _significantChange;
        
        /// <summary>
        /// <para>The kind of change the applicant is expecting.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The kind of change the applicant is expecting.")]
        [System.Xml.Serialization.XmlElementAttribute("SignificantChange")]
        public System.Collections.Generic.List<ResponsibleLendingTypeSignificantChange> SignificantChange
        {
            get
            {
                return this._significantChange;
            }
            set
            {
                this._significantChange = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SignificantChange collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignificantChangeSpecified
        {
            get
            {
                return (this.SignificantChange.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Each borrower to inform the lender if they are aware of any significant changes in circumstances that will adversely affect their ability to make contracted loan repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Each borrower to inform the lender if they are aware of any significant changes i" +
            "n circumstances that will adversely affect their ability to make contracted loan" +
            " repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnticipatedChanges")]
        public YesNoList AnticipatedChanges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnticipatedChanges property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnticipatedChangesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResponsibleLendingTypeMitigant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponsibleLendingTypeMitigant
    {
        
        /// <summary>
        /// <para>Information regarding the sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the sale of assets.")]
        [System.Xml.Serialization.XmlElementAttribute("SaleOfAssets")]
        public ResponsibleLendingTypeMitigantSaleOfAssets SaleOfAssets { get; set; }
        
        /// <summary>
        /// <para>Information regarding the savings or superannuation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the savings or superannuation.")]
        [System.Xml.Serialization.XmlElementAttribute("SavingsOrSuperannuation")]
        public ResponsibleLendingTypeMitigantSavingsOrSuperannuation SavingsOrSuperannuation { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the mitigant factor.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the mitigant factor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>In relation to the significant changes, it must be possible to provide one or more mitigants for the significant changes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In relation to the significant changes, it must be possible to provide one or mor" +
            "e mitigants for the significant changes")]
        [System.Xml.Serialization.XmlAttributeAttribute("Factor")]
        public MitigantFactorList Factor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Factor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FactorSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Mitigant Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Mitigant Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResponsibleLendingTypeMitigantSaleOfAssets", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponsibleLendingTypeMitigantSaleOfAssets
    {
        
        /// <summary>
        /// <para>The asset is a security held by the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurity")]
        public YesNoList LenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Details regarding the security asset held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details regarding the security asset held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurityDescription")]
        public string LenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>The sale of assets refers to sale of other assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The sale of assets refers to sale of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssets")]
        public YesNoList OtherAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Details regarding the sales of other assets.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details regarding the sales of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssetsDescription")]
        public string OtherAssetsDescription { get; set; }
        
        /// <summary>
        /// <para>The asset is a security held by another lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by another lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurity")]
        public YesNoList OtherLenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Details regarding the security asset held by the other lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details regarding the security asset held by the other lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurityDescription")]
        public string OtherLenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>The sale of assets refers to sale of shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The sale of assets refers to sale of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Shares")]
        public YesNoList Shares { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shares property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharesSpecified { get; set; }
        
        /// <summary>
        /// <para>Details regarding the sales of shares.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details regarding the sales of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SharesDescription")]
        public string SharesDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResponsibleLendingTypeMitigantSavingsOrSuperannuation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponsibleLendingTypeMitigantSavingsOrSuperannuation
    {
        
        /// <summary>
        /// <para>The savings are held in the lender account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in the lender account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccount")]
        public YesNoList LenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the savings account held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the savings account held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccountDescription")]
        public string LenderHeldSavingsAccountDescription { get; set; }
        
        /// <summary>
        /// <para>The savings are held in another financial institution account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in another financial institution account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccount")]
        public YesNoList OtherLenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the savings account held by another lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the savings account held by another lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccountDescription")]
        public string OtherLenderHeldSavingsAccountDescription { get; set; }
    }
    
    /// <summary>
    /// <para>mitigantFactorList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("mitigantFactorList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("mitigantFactorList", Namespace="")]
    public enum MitigantFactorList
    {
        
        /// <summary>
        /// <para>Application Reflects Changes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application Reflects Changes")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Reflects Changes")]
        Application_Reflects_Changes,
        
        /// <summary>
        /// <para>Downsize of Principal Residence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Downsize of Principal Residence")]
        [System.Xml.Serialization.XmlEnumAttribute("Downsize of Principal Residence")]
        Downsize_Of_Principal_Residence,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Reducing Expenditure</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reducing Expenditure")]
        [System.Xml.Serialization.XmlEnumAttribute("Reducing Expenditure")]
        Reducing_Expenditure,
        
        /// <summary>
        /// <para>Sale of Assets</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sale of Assets")]
        [System.Xml.Serialization.XmlEnumAttribute("Sale of Assets")]
        Sale_Of_Assets,
        
        /// <summary>
        /// <para>Securing Additional Income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Securing Additional Income")]
        [System.Xml.Serialization.XmlEnumAttribute("Securing Additional Income")]
        Securing_Additional_Income,
        
        /// <summary>
        /// <para>Using Savings</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Using Savings")]
        [System.Xml.Serialization.XmlEnumAttribute("Using Savings")]
        Using_Savings,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResponsibleLendingTypeSignificantChange", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResponsibleLendingTypeSignificantChange
    {
        
        /// <summary>
        /// <para>The kind of change the applicant is expecting.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The kind of change the applicant is expecting.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Change")]
        public SignificantChangeList Change { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Change property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the change.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the change.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The anticipated end date of the change in circumstances</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The anticipated end date of the change in circumstances")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The anticipated start date of the change in circumstances</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The anticipated start date of the change in circumstances")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Significant Change Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Significant Change Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    /// <summary>
    /// <para>significantChangeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("significantChangeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("significantChangeList", Namespace="")]
    public enum SignificantChangeList
    {
        
        /// <summary>
        /// <para>Anticipated Large Expenditure</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anticipated Large Expenditure")]
        [System.Xml.Serialization.XmlEnumAttribute("Anticipated Large Expenditure")]
        Anticipated_Large_Expenditure,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Permanent Decrease in Income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Permanent Decrease in Income")]
        [System.Xml.Serialization.XmlEnumAttribute("Permanent Decrease in Income")]
        Permanent_Decrease_In_Income,
        
        /// <summary>
        /// <para>Permanent Increase in Expense</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Permanent Increase in Expense")]
        [System.Xml.Serialization.XmlEnumAttribute("Permanent Increase in Expense")]
        Permanent_Increase_In_Expense,
        
        /// <summary>
        /// <para>Retirement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retirement")]
        Retirement,
        
        /// <summary>
        /// <para>Temporary Decrease in Income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Temporary Decrease in Income")]
        [System.Xml.Serialization.XmlEnumAttribute("Temporary Decrease in Income")]
        Temporary_Decrease_In_Income,
        
        /// <summary>
        /// <para>Temporary Increase in Expense</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Temporary Increase in Expense")]
        [System.Xml.Serialization.XmlEnumAttribute("Temporary Increase in Expense")]
        Temporary_Increase_In_Expense,
    }
    
    /// <summary>
    /// <para>Security agreement details.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Security agreement details.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("securityAgreementType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityAgreementType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<SecurityAgreementTypeTermsAndConditions> _termsAndConditions;
        
        /// <summary>
        /// <para>The terms and conditions of an asset used as a security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The terms and conditions of an asset used as a security.")]
        [System.Xml.Serialization.XmlElementAttribute("TermsAndConditions")]
        public System.Collections.Generic.List<SecurityAgreementTypeTermsAndConditions> TermsAndConditions
        {
            get
            {
                return this._termsAndConditions;
            }
            set
            {
                this._termsAndConditions = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TermsAndConditions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TermsAndConditionsSpecified
        {
            get
            {
                return (this.TermsAndConditions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SecurityAgreementType" /> class.</para>
        /// </summary>
        public SecurityAgreementType()
        {
            this._termsAndConditions = new System.Collections.Generic.List<SecurityAgreementTypeTermsAndConditions>();
        }
        
        /// <summary>
        /// <para>A security agreement is held for this security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A security agreement is held for this security.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Held")]
        public YesNoList Held { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Held property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeldSpecified { get; set; }
        
        /// <summary>
        /// <para>The security agreement that is held for this security is to be discharged.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security agreement that is held for this security is to be discharged.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBeDischarged")]
        public YesNoList ToBeDischarged { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBeDischarged property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBeDischargedSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of security agreement held over the security.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of security agreement held over the security.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public string Type { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SecurityAgreementTypeTermsAndConditions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityAgreementTypeTermsAndConditions
    {
        
        /// <summary>
        /// <para>The code used to identify the terms and conditions in the lender's system.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The code used to identify the terms and conditions in the lender\'s system.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TermsCode")]
        public string TermsCode { get; set; }
        
        /// <summary>
        /// <para>The name used by the lender for this set of terms and conditions.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name used by the lender for this set of terms and conditions.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TermsName")]
        public string TermsName { get; set; }
        
        /// <summary>
        /// <para>The version used by the lender for this set of terms and conditions.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The version used by the lender for this set of terms and conditions.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TermsVersion")]
        public string TermsVersion { get; set; }
    }
    
    /// <summary>
    /// <para>vendorTaxInvoiceType</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("vendorTaxInvoiceType")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vendorTaxInvoiceType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorTaxInvoiceType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VendorTaxInvoiceTypeAsset> _asset;
        
        /// <summary>
        /// <para>Defines an asset involved in the transaction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines an asset involved in the transaction.")]
        [System.Xml.Serialization.XmlElementAttribute("Asset")]
        public System.Collections.Generic.List<VendorTaxInvoiceTypeAsset> Asset
        {
            get
            {
                return this._asset;
            }
            set
            {
                this._asset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Asset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetSpecified
        {
            get
            {
                return (this.Asset.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VendorTaxInvoiceType" /> class.</para>
        /// </summary>
        public VendorTaxInvoiceType()
        {
            this._asset = new System.Collections.Generic.List<VendorTaxInvoiceTypeAsset>();
        }
        
        /// <summary>
        /// <para>The invoice number as supplied by the vendor.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The invoice number as supplied by the vendor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InvoiceNumber")]
        public string InvoiceNumber { get; set; }
        
        /// <summary>
        /// <para>The order of this vendor tax invoice within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this vendor tax invoice within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The date of the tax invoice.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the tax invoice.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxInvoiceDate", DataType="date")]
        public System.DateTime TaxInvoiceDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxInvoiceDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxInvoiceDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Identifier for the Invoice.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifier for the Invoice.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Party accepting delivery, and the location for delivery. For a commercial loan this is most commonly the customer, however it may be at a different address than the main applicant address.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Party accepting delivery, and the location for delivery. For a commercial loan th" +
            "is is most commonly the customer, however it may be at a different address than " +
            "the main applicant address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_DeliverTo")]
        public string X_DeliverTo { get; set; }
        
        /// <summary>
        /// <para>This is the party receiving legal title to the goods, hence who is responsible for paying the invoice. Can be either the lender or the end customer depending on the finance structure.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This is the party receiving legal title to the goods, hence who is responsible fo" +
            "r paying the invoice. Can be either the lender or the end customer depending on " +
            "the finance structure.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Purchaser")]
        public string X_Purchaser { get; set; }
        
        /// <summary>
        /// <para>The party from whom the applicant is acquiring the specified asset(s) and hence to whom the loan funds (purchase/lease etc.) are paid.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party from whom the applicant is acquiring the specified asset(s) and hence t" +
            "o whom the loan funds (purchase/lease etc.) are paid.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Vendor")]
        public string X_Vendor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VendorTaxInvoiceTypeAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorTaxInvoiceTypeAsset
    {
        
        /// <summary>
        /// <para>A free text description of the Asset.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free text description of the Asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssetDescription")]
        public string AssetDescription { get; set; }
        
        /// <summary>
        /// <para>Delivery date of the asset.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Delivery date of the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DeliveryDate", DataType="date")]
        public System.DateTime DeliveryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeliveryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of deposit paid for the asset.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of deposit paid for the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositPaid")]
        public decimal DepositPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>The final position on the asset in dollars.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The final position on the asset in dollars.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinalPosition")]
        public decimal FinalPosition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinalPosition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinalPositionSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the goods have been delivered, and if not, when.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the goods have been delivered, and if not, when.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodsDelivery")]
        public GoodsDeliveryList GoodsDelivery { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodsDelivery property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodsDeliverySpecified { get; set; }
        
        /// <summary>
        /// <para>Dollar amount of the GST component.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of the GST component.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTComponent")]
        public decimal GSTComponent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTComponent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTComponentSpecified { get; set; }
        
        /// <summary>
        /// <para>Other costs that do not attract GST, such as fee component, luxury car tax, GST-free components etc. Cost of Goods Sold Is needed as some on-road costs do not attract GST, including fee component, tax components, luxury tax, etc.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other costs that do not attract GST, such as fee component, luxury car tax, GST-f" +
            "ree components etc. Cost of Goods Sold Is needed as some on-road costs do not at" +
            "tract GST, including fee component, tax components, luxury tax, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonTaxableAmount")]
        public decimal NonTaxableAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonTaxableAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonTaxableAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Non taxable on-costs. For a motor vehicle on road costs include the total of registration, CTP, stamp duty and other similar costs.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non taxable on-costs. For a motor vehicle on road costs include the total of regi" +
            "stration, CTP, stamp duty and other similar costs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnCosts")]
        public decimal OnCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnCostsSpecified { get; set; }
        
        /// <summary>
        /// <para>Dollar amount of the payout.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of the payout.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Payout")]
        public decimal Payout { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Payout property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayoutSpecified { get; set; }
        
        /// <summary>
        /// <para>Dollar amount of the refund.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of the refund.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Refund")]
        public decimal Refund { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Refund property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefundSpecified { get; set; }
        
        /// <summary>
        /// <para>Base purchase price, ex tax. May include freight or delivery.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Base purchase price, ex tax. May include freight or delivery.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxableAmountOfAsset")]
        public decimal TaxableAmountOfAsset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxableAmountOfAsset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxableAmountOfAssetSpecified { get; set; }
        
        /// <summary>
        /// <para>Dollar amount of the total cost of the asset.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of the total cost of the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalCostOfAsset")]
        public decimal TotalCostOfAsset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCostOfAsset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCostOfAssetSpecified { get; set; }
        
        /// <summary>
        /// <para>Dollar amount of the trade-in.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of the trade-in.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradeIn")]
        public decimal TradeIn { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradeIn property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeInSpecified { get; set; }
        
        /// <summary>
        /// <para>A unique Identifier for this asset.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique Identifier for this asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueAssetIdentifier")]
        public string UniqueAssetIdentifier { get; set; }
    }
    
    /// <summary>
    /// <para>goodsDeliveryList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("goodsDeliveryList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("goodsDeliveryList", Namespace="")]
    public enum GoodsDeliveryList
    {
        
        /// <summary>
        /// <para>Already Delivered</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Already Delivered")]
        [System.Xml.Serialization.XmlEnumAttribute("Already Delivered")]
        Already_Delivered,
        
        /// <summary>
        /// <para>To Be Delivered on Payment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("To Be Delivered on Payment")]
        [System.Xml.Serialization.XmlEnumAttribute("To Be Delivered on Payment")]
        To_Be_Delivered_On_Payment,
        
        /// <summary>
        /// <para>Will Be Delivered on Date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Will Be Delivered on Date")]
        [System.Xml.Serialization.XmlEnumAttribute("Will Be Delivered on Date")]
        Will_Be_Delivered_On_Date,
    }
    
    /// <summary>
    /// <para>absLendingPurposeCodeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("absLendingPurposeCodeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("absLendingPurposeCodeList", Namespace="")]
    public enum AbsLendingPurposeCodeList
    {
        
        /// <summary>
        /// <para>Construction of dwelling - House</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of dwelling - House")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-121")]
        ABS_121,
        
        /// <summary>
        /// <para>Construction of dwelling - Other dwelling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of dwelling - Other dwelling")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-123")]
        ABS_123,
        
        /// <summary>
        /// <para>Purchase of newly erected dwelling - House</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of newly erected dwelling - House")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-125")]
        ABS_125,
        
        /// <summary>
        /// <para>Purchase of newly erected dwelling - Other dwelling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of newly erected dwelling - Other dwelling")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-127")]
        ABS_127,
        
        /// <summary>
        /// <para>Purchase of established dwelling - House</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of established dwelling - House")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-129")]
        ABS_129,
        
        /// <summary>
        /// <para>Purchase of established dwelling - Other dwelling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of established dwelling - Other dwelling")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-131")]
        ABS_131,
        
        /// <summary>
        /// <para>Refinance existing home loans - Loans held with other financial institutions</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinance existing home loans - Loans held with other financial institutions")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-133")]
        ABS_133,
        
        /// <summary>
        /// <para>Structural and non-structural alterations and/or additions to dwellings (excluding swimming pools, maintenance, repairs and other home improvements)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural and non-structural alterations and/or additions to dwellings (excludin" +
            "g swimming pools, maintenance, repairs and other home improvements)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-143")]
        ABS_143,
        
        /// <summary>
        /// <para>Purchase of motor cars and station wagons - New</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of motor cars and station wagons - New")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-221")]
        ABS_221,
        
        /// <summary>
        /// <para>Purchase of motor cars and station wagons - Used</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of motor cars and station wagons - Used")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-223")]
        ABS_223,
        
        /// <summary>
        /// <para>Purchase of other motor vehicles</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of other motor vehicles")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-225")]
        ABS_225,
        
        /// <summary>
        /// <para>Purchase of motor cycles, scooters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of motor cycles, scooters")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-227")]
        ABS_227,
        
        /// <summary>
        /// <para>Purchase of boats, caravans and trailers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of boats, caravans and trailers")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-229")]
        ABS_229,
        
        /// <summary>
        /// <para>Purchase of individual residential blocks of land</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of individual residential blocks of land")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-231")]
        ABS_231,
        
        /// <summary>
        /// <para>Unsecured loans for alterations and/or additions to dwellings</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unsecured loans for alterations and/or additions to dwellings")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-233")]
        ABS_233,
        
        /// <summary>
        /// <para>Unsecured loans to assist in the purchase or construction of housing for owner occupation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unsecured loans to assist in the purchase or construction of housing for owner oc" +
            "cupation")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-235")]
        ABS_235,
        
        /// <summary>
        /// <para>Purchase of household and personal goods</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of household and personal goods")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-237")]
        ABS_237,
        
        /// <summary>
        /// <para>Debt consolidation (excluding refinance of personal loans)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debt consolidation (excluding refinance of personal loans)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-239")]
        ABS_239,
        
        /// <summary>
        /// <para>Travel and holidays</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel and holidays")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-241")]
        ABS_241,
        
        /// <summary>
        /// <para>Refinance of personal loans (excluding investment loans)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinance of personal loans (excluding investment loans)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-243")]
        ABS_243,
        
        /// <summary>
        /// <para>Personal investment in dwellings for rent/resale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal investment in dwellings for rent/resale")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-245")]
        ABS_245,
        
        /// <summary>
        /// <para>Other personal investment (including shares and other investment assets)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other personal investment (including shares and other investment assets)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-247")]
        ABS_247,
        
        /// <summary>
        /// <para>Refinancing of investment loans (including purchase of dwellings for rent/resale, purchase of shares and other investment assets)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinancing of investment loans (including purchase of dwellings for rent/resale," +
            " purchase of shares and other investment assets)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-248")]
        ABS_248,
        
        /// <summary>
        /// <para>Other purposes (including swimming pools and home improvements - other than alterations and additions, motor accessories and any other purpose)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other purposes (including swimming pools and home improvements - other than alter" +
            "ations and additions, motor accessories and any other purpose)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-249")]
        ABS_249,
        
        /// <summary>
        /// <para>Construction of dwellings for rent/resale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of dwellings for rent/resale")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-320")]
        ABS_320,
        
        /// <summary>
        /// <para>Construction of non-residential buildings - Shop</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of non-residential buildings - Shop")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-321")]
        ABS_321,
        
        /// <summary>
        /// <para>Construction of non-residential buildings - Offices</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of non-residential buildings - Offices")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-322")]
        ABS_322,
        
        /// <summary>
        /// <para>Construction of non-residential buildings - Industrial buildings</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of non-residential buildings - Industrial buildings")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-323")]
        ABS_323,
        
        /// <summary>
        /// <para>Construction of non-residential buildings - Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of non-residential buildings - Other")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-324")]
        ABS_324,
        
        /// <summary>
        /// <para>Construction of non-building structures</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction of non-building structures")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-326")]
        ABS_326,
        
        /// <summary>
        /// <para>Structural and non-structural alterations and/or additions to buildings (excluding maintenance, repairs and other improvements that don't include building work)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural and non-structural alterations and/or additions to buildings (excludin" +
            "g maintenance, repairs and other improvements that don\'t include building work)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-327")]
        ABS_327,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Dwellings for rent/resale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Dwellings for rent/resale")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-329")]
        ABS_329,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Shops</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Shops")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-330")]
        ABS_330,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Offices</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Offices")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-331")]
        ABS_331,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Industrial buildings (including factories, automotive repair facilities, etc.)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Industrial buildings (including factories, autom" +
            "otive repair facilities, etc.)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-332")]
        ABS_332,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Other non-residential buildings (including hotels, buildings for educational, religious, health, entertainment and recreational purposes)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Other non-residential buildings (including hotel" +
            "s, buildings for educational, religious, health, entertainment and recreational " +
            "purposes)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-333")]
        ABS_333,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Rural property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Rural property")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-335")]
        ABS_335,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Land for residential block development</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Land for residential block development")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-336")]
        ABS_336,
        
        /// <summary>
        /// <para>Purchase of land and buildings - Other land purchases</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of land and buildings - Other land purchases")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-337")]
        ABS_337,
        
        /// <summary>
        /// <para>Wholesale Finance (including purchase of goods by wholesalers or retailers, traders' stocks held under bailment or floor plan schemes or working capital)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wholesale Finance (including purchase of goods by wholesalers or retailers, trade" +
            "rs\' stocks held under bailment or floor plan schemes or working capital)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-340")]
        ABS_340,
        
        /// <summary>
        /// <para>Purchase of plant and equipment - Motor vehicles (excluding motorcycles, trailers, caravans, trains, boats and planes)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of plant and equipment - Motor vehicles (excluding motorcycles, trailers" +
            ", caravans, trains, boats and planes)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-341")]
        ABS_341,
        
        /// <summary>
        /// <para>Purchase of plant and equipment - Other transport equipment (including motorcycles, trailers, caravans, trains, boats and planes)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of plant and equipment - Other transport equipment (including motorcycle" +
            "s, trailers, caravans, trains, boats and planes)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-342")]
        ABS_342,
        
        /// <summary>
        /// <para>Purchase of plant and equipment - Other plant equipment (including construction and earthmoving equipment, agricultural machinery and office equipment)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase of plant and equipment - Other plant equipment (including construction a" +
            "nd earthmoving equipment, agricultural machinery and office equipment)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-343")]
        ABS_343,
        
        /// <summary>
        /// <para>Refinance of existing commercial loans</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinance of existing commercial loans")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-348")]
        ABS_348,
        
        /// <summary>
        /// <para>Other purpose (including factoring - whether secured by trade debts or to purchase trade debts, maintenance, repairs and other improvements to property not involving building work)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other purpose (including factoring - whether secured by trade debts or to purchas" +
            "e trade debts, maintenance, repairs and other improvements to property not invol" +
            "ving building work)")]
        [System.Xml.Serialization.XmlEnumAttribute("ABS-349")]
        ABS_349,
    }
    
    /// <summary>
    /// <para>absOccupationCodeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("absOccupationCodeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("absOccupationCodeList", Namespace="")]
    public enum AbsOccupationCodeList
    {
        
        /// <summary>
        /// <para>MANAGERS AND ADMINISTRATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MANAGERS AND ADMINISTRATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <summary>
        /// <para>GENERALIST MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERALIST MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <summary>
        /// <para>GENERAL MANAGERS AND ADMINISTRATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL MANAGERS AND ADMINISTRATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("111")]
        Item111,
        
        /// <summary>
        /// <para>LEGISLATORS AND GOVERNMENT APPOINTED OFFICIALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEGISLATORS AND GOVERNMENT APPOINTED OFFICIALS")]
        [System.Xml.Serialization.XmlEnumAttribute("1111")]
        Item1111,
        
        /// <summary>
        /// <para>Parliamentarian or Councillor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parliamentarian or Councillor")]
        [System.Xml.Serialization.XmlEnumAttribute("1111-11")]
        Item1111_11,
        
        /// <summary>
        /// <para>Judge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Judge")]
        [System.Xml.Serialization.XmlEnumAttribute("1111-13")]
        Item1111_13,
        
        /// <summary>
        /// <para>Magistrate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Magistrate")]
        [System.Xml.Serialization.XmlEnumAttribute("1111-15")]
        Item1111_15,
        
        /// <summary>
        /// <para>Tribunal Member</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tribunal Member")]
        [System.Xml.Serialization.XmlEnumAttribute("1111-17")]
        Item1111_17,
        
        /// <summary>
        /// <para>Legislators and Government Appointed Officials nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legislators and Government Appointed Officials nec")]
        [System.Xml.Serialization.XmlEnumAttribute("1111-79")]
        Item1111_79,
        
        /// <summary>
        /// <para>GENERAL MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1112")]
        Item1112,
        
        /// <summary>
        /// <para>General Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1112-11")]
        Item1112_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS GENERALIST MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS GENERALIST MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("119")]
        Item119,
        
        /// <summary>
        /// <para>BUILDING AND CONSTRUCTION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUILDING AND CONSTRUCTION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1191")]
        Item1191,
        
        /// <summary>
        /// <para>Construction Project Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Project Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1191-11")]
        Item1191_11,
        
        /// <summary>
        /// <para>Project Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Project Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("1191-13")]
        Item1191_13,
        
        /// <summary>
        /// <para>IMPORTERS, EXPORTERS AND WHOLESALERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IMPORTERS, EXPORTERS AND WHOLESALERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1192")]
        Item1192,
        
        /// <summary>
        /// <para>Importer or Exporter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Importer or Exporter")]
        [System.Xml.Serialization.XmlEnumAttribute("1192-11")]
        Item1192_11,
        
        /// <summary>
        /// <para>Wholesaler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wholesaler")]
        [System.Xml.Serialization.XmlEnumAttribute("1192-13")]
        Item1192_13,
        
        /// <summary>
        /// <para>MANUFACTURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MANUFACTURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1193")]
        Item1193,
        
        /// <summary>
        /// <para>Manufacturer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Manufacturer")]
        [System.Xml.Serialization.XmlEnumAttribute("1193-11")]
        Item1193_11,
        
        /// <summary>
        /// <para>SPECIALIST MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPECIALIST MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <summary>
        /// <para>RESOURCE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RESOURCE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("121")]
        Item121,
        
        /// <summary>
        /// <para>FINANCE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINANCE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1211")]
        Item1211,
        
        /// <summary>
        /// <para>Finance Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Finance Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1211-11")]
        Item1211_11,
        
        /// <summary>
        /// <para>COMPANY SECRETARIES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMPANY SECRETARIES")]
        [System.Xml.Serialization.XmlEnumAttribute("1212")]
        Item1212,
        
        /// <summary>
        /// <para>Company Secretary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Company Secretary")]
        [System.Xml.Serialization.XmlEnumAttribute("1212-11")]
        Item1212_11,
        
        /// <summary>
        /// <para>HUMAN RESOURCE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HUMAN RESOURCE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1213")]
        Item1213,
        
        /// <summary>
        /// <para>Human Resource Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resource Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1213-11")]
        Item1213_11,
        
        /// <summary>
        /// <para>ENGINEERING, DISTRIBUTION AND PROCESS MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINEERING, DISTRIBUTION AND PROCESS MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("122")]
        Item122,
        
        /// <summary>
        /// <para>ENGINEERING MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINEERING MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1221")]
        Item1221,
        
        /// <summary>
        /// <para>Engineering Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1221-11")]
        Item1221_11,
        
        /// <summary>
        /// <para>PRODUCTION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRODUCTION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1222")]
        Item1222,
        
        /// <summary>
        /// <para>Production Manager (Manufacturing)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Manager (Manufacturing)")]
        [System.Xml.Serialization.XmlEnumAttribute("1222-11")]
        Item1222_11,
        
        /// <summary>
        /// <para>Production Manager (Mining)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Manager (Mining)")]
        [System.Xml.Serialization.XmlEnumAttribute("1222-13")]
        Item1222_13,
        
        /// <summary>
        /// <para>SUPPLY AND DISTRIBUTION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUPPLY AND DISTRIBUTION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1223")]
        Item1223,
        
        /// <summary>
        /// <para>Supply and Distribution Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supply and Distribution Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1223-11")]
        Item1223_11,
        
        /// <summary>
        /// <para>INFORMATION TECHNOLOGY MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INFORMATION TECHNOLOGY MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1224")]
        Item1224,
        
        /// <summary>
        /// <para>Information Technology Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information Technology Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1224-11")]
        Item1224_11,
        
        /// <summary>
        /// <para>SALES AND MARKETING MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES AND MARKETING MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("123")]
        Item123,
        
        /// <summary>
        /// <para>SALES AND MARKETING MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES AND MARKETING MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1231")]
        Item1231,
        
        /// <summary>
        /// <para>Sales and Marketing Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales and Marketing Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1231-11")]
        Item1231_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS SPECIALIST MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS SPECIALIST MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("129")]
        Item129,
        
        /// <summary>
        /// <para>POLICY AND PLANNING MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLICY AND PLANNING MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1291")]
        Item1291,
        
        /// <summary>
        /// <para>Policy and Planning Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Policy and Planning Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1291-11")]
        Item1291_11,
        
        /// <summary>
        /// <para>HEALTH SERVICES MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HEALTH SERVICES MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1292")]
        Item1292,
        
        /// <summary>
        /// <para>Director of Nursing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Director of Nursing")]
        [System.Xml.Serialization.XmlEnumAttribute("1292-11")]
        Item1292_11,
        
        /// <summary>
        /// <para>Medical Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("1292-13")]
        Item1292_13,
        
        /// <summary>
        /// <para>EDUCATION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EDUCATION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1293")]
        Item1293,
        
        /// <summary>
        /// <para>School Principal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("School Principal")]
        [System.Xml.Serialization.XmlEnumAttribute("1293-11")]
        Item1293_11,
        
        /// <summary>
        /// <para>Faculty Head</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faculty Head")]
        [System.Xml.Serialization.XmlEnumAttribute("1293-13")]
        Item1293_13,
        
        /// <summary>
        /// <para>Regional Education Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Regional Education Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1293-15")]
        Item1293_15,
        
        /// <summary>
        /// <para>Education Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("1293-79")]
        Item1293_79,
        
        /// <summary>
        /// <para>COMMISSIONED OFFICERS (MANAGEMENT)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMMISSIONED OFFICERS (MANAGEMENT)")]
        [System.Xml.Serialization.XmlEnumAttribute("1294")]
        Item1294,
        
        /// <summary>
        /// <para>Commissioned Defence Force Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Defence Force Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("1294-11")]
        Item1294_11,
        
        /// <summary>
        /// <para>Commissioned Fire Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Fire Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("1294-13")]
        Item1294_13,
        
        /// <summary>
        /// <para>Commissioned Police Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Police Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("1294-15")]
        Item1294_15,
        
        /// <summary>
        /// <para>Trainee Commissioned Defence Force Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trainee Commissioned Defence Force Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("1294-81")]
        Item1294_81,
        
        /// <summary>
        /// <para>CHILD CARE CO-ORDINATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHILD CARE CO-ORDINATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("1295")]
        Item1295,
        
        /// <summary>
        /// <para>Child Care Co-ordinator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Care Co-ordinator")]
        [System.Xml.Serialization.XmlEnumAttribute("1295-11")]
        Item1295_11,
        
        /// <summary>
        /// <para>MEDIA PRODUCERS AND ARTISTIC DIRECTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDIA PRODUCERS AND ARTISTIC DIRECTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("1296")]
        Item1296,
        
        /// <summary>
        /// <para>Media Producer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Media Producer")]
        [System.Xml.Serialization.XmlEnumAttribute("1296-11")]
        Item1296_11,
        
        /// <summary>
        /// <para>Artistic Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Artistic Director")]
        [System.Xml.Serialization.XmlEnumAttribute("1296-13")]
        Item1296_13,
        
        /// <summary>
        /// <para>OTHER SPECIALIST MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER SPECIALIST MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1299")]
        Item1299,
        
        /// <summary>
        /// <para>Research and Development Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Research and Development Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-11")]
        Item1299_11,
        
        /// <summary>
        /// <para>Laboratory Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laboratory Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-13")]
        Item1299_13,
        
        /// <summary>
        /// <para>Welfare Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-15")]
        Item1299_15,
        
        /// <summary>
        /// <para>Environment, Parks and Land Care Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environment, Parks and Land Care Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-17")]
        Item1299_17,
        
        /// <summary>
        /// <para>Sports Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-19")]
        Item1299_19,
        
        /// <summary>
        /// <para>Specialist Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("1299-79")]
        Item1299_79,
        
        /// <summary>
        /// <para>FARMERS AND FARM MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FARMERS AND FARM MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <summary>
        /// <para>FARMERS AND FARM MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FARMERS AND FARM MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("131")]
        Item131,
        
        /// <summary>
        /// <para>MIXED CROP AND LIVESTOCK FARMERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MIXED CROP AND LIVESTOCK FARMERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1311")]
        Item1311,
        
        /// <summary>
        /// <para>Mixed Crop and Livestock Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Crop and Livestock Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1311-11")]
        Item1311_11,
        
        /// <summary>
        /// <para>LIVESTOCK FARMERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIVESTOCK FARMERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1312")]
        Item1312,
        
        /// <summary>
        /// <para>Mixed Livestock Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Livestock Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-11")]
        Item1312_11,
        
        /// <summary>
        /// <para>Beef Cattle Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beef Cattle Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-13")]
        Item1312_13,
        
        /// <summary>
        /// <para>Dairy Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-15")]
        Item1312_15,
        
        /// <summary>
        /// <para>Sheep Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-17")]
        Item1312_17,
        
        /// <summary>
        /// <para>Pig Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pig Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-19")]
        Item1312_19,
        
        /// <summary>
        /// <para>Poultry Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-21")]
        Item1312_21,
        
        /// <summary>
        /// <para>Horse Breeder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Breeder")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-23")]
        Item1312_23,
        
        /// <summary>
        /// <para>Apiarist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apiarist")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-25")]
        Item1312_25,
        
        /// <summary>
        /// <para>Livestock Farmers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock Farmers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("1312-79")]
        Item1312_79,
        
        /// <summary>
        /// <para>CROP FARMERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CROP FARMERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1313")]
        Item1313,
        
        /// <summary>
        /// <para>Grain, Oilseed and Pasture Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain, Oilseed and Pasture Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-11")]
        Item1313_11,
        
        /// <summary>
        /// <para>Sugar Cane Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar Cane Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-13")]
        Item1313_13,
        
        /// <summary>
        /// <para>Tobacco Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tobacco Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-15")]
        Item1313_15,
        
        /// <summary>
        /// <para>Fruit and Nut Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Nut Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-17")]
        Item1313_17,
        
        /// <summary>
        /// <para>Vegetable Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-19")]
        Item1313_19,
        
        /// <summary>
        /// <para>Flower Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flower Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-21")]
        Item1313_21,
        
        /// <summary>
        /// <para>Crop Farmers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crop Farmers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("1313-79")]
        Item1313_79,
        
        /// <summary>
        /// <para>AQUACULTURE FARMERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AQUACULTURE FARMERS")]
        [System.Xml.Serialization.XmlEnumAttribute("1314")]
        Item1314,
        
        /// <summary>
        /// <para>Aquaculture Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aquaculture Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("1314-11")]
        Item1314_11,
        
        /// <summary>
        /// <para>PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <summary>
        /// <para>SCIENCE, BUILDING AND ENGINEERING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SCIENCE, BUILDING AND ENGINEERING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <summary>
        /// <para>NATURAL AND PHYSICAL SCIENCE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NATURAL AND PHYSICAL SCIENCE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("211")]
        Item211,
        
        /// <summary>
        /// <para>CHEMISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHEMISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2111")]
        Item2111,
        
        /// <summary>
        /// <para>Chemist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemist")]
        [System.Xml.Serialization.XmlEnumAttribute("2111-11")]
        Item2111_11,
        
        /// <summary>
        /// <para>GEOLOGISTS AND GEOPHYSICISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GEOLOGISTS AND GEOPHYSICISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2112")]
        Item2112,
        
        /// <summary>
        /// <para>Geologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2112-11")]
        Item2112_11,
        
        /// <summary>
        /// <para>Geophysicist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geophysicist")]
        [System.Xml.Serialization.XmlEnumAttribute("2112-13")]
        Item2112_13,
        
        /// <summary>
        /// <para>LIFE SCIENTISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIFE SCIENTISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2113")]
        Item2113,
        
        /// <summary>
        /// <para>Anatomist or Physiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anatomist or Physiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-11")]
        Item2113_11,
        
        /// <summary>
        /// <para>Botanist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Botanist")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-13")]
        Item2113_13,
        
        /// <summary>
        /// <para>Zoologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zoologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-15")]
        Item2113_15,
        
        /// <summary>
        /// <para>Biochemist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biochemist")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-17")]
        Item2113_17,
        
        /// <summary>
        /// <para>Marine Biologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Biologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-19")]
        Item2113_19,
        
        /// <summary>
        /// <para>Life Scientists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Scientists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2113-79")]
        Item2113_79,
        
        /// <summary>
        /// <para>ENVIRONMENTAL AND AGRICULTURAL SCIENCE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENVIRONMENTAL AND AGRICULTURAL SCIENCE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2114")]
        Item2114,
        
        /// <summary>
        /// <para>Environmental Research Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Research Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-11")]
        Item2114_11,
        
        /// <summary>
        /// <para>Forester</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forester")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-13")]
        Item2114_13,
        
        /// <summary>
        /// <para>Park Ranger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Park Ranger")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-15")]
        Item2114_15,
        
        /// <summary>
        /// <para>Soil Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Soil Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-17")]
        Item2114_17,
        
        /// <summary>
        /// <para>Agricultural Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-19")]
        Item2114_19,
        
        /// <summary>
        /// <para>Agricultural Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-21")]
        Item2114_21,
        
        /// <summary>
        /// <para>Environmental and Agricultural Science Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental and Agricultural Science Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2114-79")]
        Item2114_79,
        
        /// <summary>
        /// <para>MEDICAL SCIENTISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDICAL SCIENTISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2115")]
        Item2115,
        
        /// <summary>
        /// <para>Medical Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("2115-11")]
        Item2115_11,
        
        /// <summary>
        /// <para>OTHER NATURAL AND PHYSICAL SCIENCE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER NATURAL AND PHYSICAL SCIENCE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2119")]
        Item2119,
        
        /// <summary>
        /// <para>Physicist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physicist")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-11")]
        Item2119_11,
        
        /// <summary>
        /// <para>Meteorologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meteorologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-13")]
        Item2119_13,
        
        /// <summary>
        /// <para>Extractive Metallurgist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extractive Metallurgist")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-15")]
        Item2119_15,
        
        /// <summary>
        /// <para>Physical Metallurgist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physical Metallurgist")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-17")]
        Item2119_17,
        
        /// <summary>
        /// <para>Materials Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-19")]
        Item2119_19,
        
        /// <summary>
        /// <para>Natural and Physical Science Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural and Physical Science Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2119-79")]
        Item2119_79,
        
        /// <summary>
        /// <para>BUILDING AND ENGINEERING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUILDING AND ENGINEERING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("212")]
        Item212,
        
        /// <summary>
        /// <para>ARCHITECTS AND LANDSCAPE ARCHITECTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARCHITECTS AND LANDSCAPE ARCHITECTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2121")]
        Item2121,
        
        /// <summary>
        /// <para>Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("2121-11")]
        Item2121_11,
        
        /// <summary>
        /// <para>Landscape Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landscape Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("2121-13")]
        Item2121_13,
        
        /// <summary>
        /// <para>QUANTITY SURVEYORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("QUANTITY SURVEYORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2122")]
        Item2122,
        
        /// <summary>
        /// <para>Quantity Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("2122-11")]
        Item2122_11,
        
        /// <summary>
        /// <para>CARTOGRAPHERS AND SURVEYORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CARTOGRAPHERS AND SURVEYORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2123")]
        Item2123,
        
        /// <summary>
        /// <para>Cartographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cartographer")]
        [System.Xml.Serialization.XmlEnumAttribute("2123-11")]
        Item2123_11,
        
        /// <summary>
        /// <para>Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("2123-13")]
        Item2123_13,
        
        /// <summary>
        /// <para>CIVIL ENGINEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CIVIL ENGINEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2124")]
        Item2124,
        
        /// <summary>
        /// <para>Civil Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2124-11")]
        Item2124_11,
        
        /// <summary>
        /// <para>ELECTRICAL AND ELECTRONICS ENGINEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL AND ELECTRONICS ENGINEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2125")]
        Item2125,
        
        /// <summary>
        /// <para>Electrical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2125-11")]
        Item2125_11,
        
        /// <summary>
        /// <para>Electronics Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronics Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2125-13")]
        Item2125_13,
        
        /// <summary>
        /// <para>MECHANICAL, PRODUCTION AND PLANT ENGINEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MECHANICAL, PRODUCTION AND PLANT ENGINEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2126")]
        Item2126,
        
        /// <summary>
        /// <para>Mechanical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2126-11")]
        Item2126_11,
        
        /// <summary>
        /// <para>Production or Plant Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production or Plant Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2126-13")]
        Item2126_13,
        
        /// <summary>
        /// <para>MINING AND MATERIALS ENGINEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINING AND MATERIALS ENGINEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2127")]
        Item2127,
        
        /// <summary>
        /// <para>Mining Engineer (excluding Petroleum)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining Engineer (excluding Petroleum)")]
        [System.Xml.Serialization.XmlEnumAttribute("2127-11")]
        Item2127_11,
        
        /// <summary>
        /// <para>Petroleum Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2127-13")]
        Item2127_13,
        
        /// <summary>
        /// <para>Materials Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2127-15")]
        Item2127_15,
        
        /// <summary>
        /// <para>ENGINEERING TECHNOLOGISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINEERING TECHNOLOGISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2128")]
        Item2128,
        
        /// <summary>
        /// <para>Civil Engineering Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2128-11")]
        Item2128_11,
        
        /// <summary>
        /// <para>Mechanical Engineering Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2128-13")]
        Item2128_13,
        
        /// <summary>
        /// <para>Electrical or Electronics Engineering Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical or Electronics Engineering Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2128-15")]
        Item2128_15,
        
        /// <summary>
        /// <para>Engineering Technologists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Technologists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2128-79")]
        Item2128_79,
        
        /// <summary>
        /// <para>OTHER BUILDING AND ENGINEERING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER BUILDING AND ENGINEERING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2129")]
        Item2129,
        
        /// <summary>
        /// <para>Aeronautical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aeronautical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-11")]
        Item2129_11,
        
        /// <summary>
        /// <para>Agricultural Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-13")]
        Item2129_13,
        
        /// <summary>
        /// <para>Biomedical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biomedical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-15")]
        Item2129_15,
        
        /// <summary>
        /// <para>Chemical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-17")]
        Item2129_17,
        
        /// <summary>
        /// <para>Industrial Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-19")]
        Item2129_19,
        
        /// <summary>
        /// <para>Naval Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Naval Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-21")]
        Item2129_21,
        
        /// <summary>
        /// <para>Building and Engineering Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Engineering Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2129-79")]
        Item2129_79,
        
        /// <summary>
        /// <para>BUSINESS AND INFORMATION PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUSINESS AND INFORMATION PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <summary>
        /// <para>ACCOUNTANTS, AUDITORS AND CORPORATE TREASURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ACCOUNTANTS, AUDITORS AND CORPORATE TREASURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("221")]
        Item221,
        
        /// <summary>
        /// <para>ACCOUNTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ACCOUNTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2211")]
        Item2211,
        
        /// <summary>
        /// <para>Accountant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountant")]
        [System.Xml.Serialization.XmlEnumAttribute("2211-11")]
        Item2211_11,
        
        /// <summary>
        /// <para>AUDITORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUDITORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2212")]
        Item2212,
        
        /// <summary>
        /// <para>External Auditor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("External Auditor")]
        [System.Xml.Serialization.XmlEnumAttribute("2212-11")]
        Item2212_11,
        
        /// <summary>
        /// <para>Internal Auditor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internal Auditor")]
        [System.Xml.Serialization.XmlEnumAttribute("2212-13")]
        Item2212_13,
        
        /// <summary>
        /// <para>CORPORATE TREASURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CORPORATE TREASURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2213")]
        Item2213,
        
        /// <summary>
        /// <para>Corporate Treasurer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corporate Treasurer")]
        [System.Xml.Serialization.XmlEnumAttribute("2213-11")]
        Item2213_11,
        
        /// <summary>
        /// <para>SALES, MARKETING AND ADVERTISING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES, MARKETING AND ADVERTISING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("222")]
        Item222,
        
        /// <summary>
        /// <para>MARKETING AND ADVERTISING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARKETING AND ADVERTISING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2221")]
        Item2221,
        
        /// <summary>
        /// <para>Public Relations Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Relations Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2221-11")]
        Item2221_11,
        
        /// <summary>
        /// <para>Marketing Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marketing Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("2221-13")]
        Item2221_13,
        
        /// <summary>
        /// <para>Market Research Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Market Research Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("2221-15")]
        Item2221_15,
        
        /// <summary>
        /// <para>Advertising Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("2221-17")]
        Item2221_17,
        
        /// <summary>
        /// <para>TECHNICAL SALES REPRESENTATIVES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TECHNICAL SALES REPRESENTATIVES")]
        [System.Xml.Serialization.XmlEnumAttribute("2222")]
        Item2222,
        
        /// <summary>
        /// <para>Sales Representative (Industrial Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Industrial Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("2222-11")]
        Item2222_11,
        
        /// <summary>
        /// <para>Sales Representative (Information and Communication Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Information and Communication Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("2222-13")]
        Item2222_13,
        
        /// <summary>
        /// <para>Sales Representative (Medical and Pharmaceutical Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Medical and Pharmaceutical Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("2222-15")]
        Item2222_15,
        
        /// <summary>
        /// <para>Technical Sales Representatives nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Sales Representatives nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2222-79")]
        Item2222_79,
        
        /// <summary>
        /// <para>COMPUTING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMPUTING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("223")]
        Item223,
        
        /// <summary>
        /// <para>COMPUTING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMPUTING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2231")]
        Item2231,
        
        /// <summary>
        /// <para>Systems Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-11")]
        Item2231_11,
        
        /// <summary>
        /// <para>Systems Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-13")]
        Item2231_13,
        
        /// <summary>
        /// <para>Software Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-15")]
        Item2231_15,
        
        /// <summary>
        /// <para>Applications and Analyst Programmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applications and Analyst Programmer")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-17")]
        Item2231_17,
        
        /// <summary>
        /// <para>Systems Programmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems Programmer")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-19")]
        Item2231_19,
        
        /// <summary>
        /// <para>Computer Systems Auditor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer Systems Auditor")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-21")]
        Item2231_21,
        
        /// <summary>
        /// <para>Computing Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computing Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2231-79")]
        Item2231_79,
        
        /// <summary>
        /// <para>MISCELLANEOUS BUSINESS AND INFORMATION PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS BUSINESS AND INFORMATION PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("229")]
        Item229,
        
        /// <summary>
        /// <para>HUMAN RESOURCE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HUMAN RESOURCE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2291")]
        Item2291,
        
        /// <summary>
        /// <para>Personnel Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personnel Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2291-11")]
        Item2291_11,
        
        /// <summary>
        /// <para>Personnel Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personnel Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("2291-13")]
        Item2291_13,
        
        /// <summary>
        /// <para>Industrial Relations Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Relations Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2291-15")]
        Item2291_15,
        
        /// <summary>
        /// <para>Training Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Training Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2291-17")]
        Item2291_17,
        
        /// <summary>
        /// <para>LIBRARIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBRARIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("2292")]
        Item2292,
        
        /// <summary>
        /// <para>Librarian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Librarian")]
        [System.Xml.Serialization.XmlEnumAttribute("2292-11")]
        Item2292_11,
        
        /// <summary>
        /// <para>MATHEMATICIANS, STATISTICIANS AND ACTUARIES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MATHEMATICIANS, STATISTICIANS AND ACTUARIES")]
        [System.Xml.Serialization.XmlEnumAttribute("2293")]
        Item2293,
        
        /// <summary>
        /// <para>Mathematician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mathematician")]
        [System.Xml.Serialization.XmlEnumAttribute("2293-11")]
        Item2293_11,
        
        /// <summary>
        /// <para>Statistician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Statistician")]
        [System.Xml.Serialization.XmlEnumAttribute("2293-13")]
        Item2293_13,
        
        /// <summary>
        /// <para>Actuary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actuary")]
        [System.Xml.Serialization.XmlEnumAttribute("2293-15")]
        Item2293_15,
        
        /// <summary>
        /// <para>BUSINESS AND ORGANISATION ANALYSTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUSINESS AND ORGANISATION ANALYSTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2294")]
        Item2294,
        
        /// <summary>
        /// <para>Management Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("2294-11")]
        Item2294_11,
        
        /// <summary>
        /// <para>Organisation and Methods Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Organisation and Methods Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("2294-13")]
        Item2294_13,
        
        /// <summary>
        /// <para>Quality Assurance Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quality Assurance Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2294-15")]
        Item2294_15,
        
        /// <summary>
        /// <para>PROPERTY PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PROPERTY PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2295")]
        Item2295,
        
        /// <summary>
        /// <para>Valuer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valuer")]
        [System.Xml.Serialization.XmlEnumAttribute("2295-11")]
        Item2295_11,
        
        /// <summary>
        /// <para>Land Economist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land Economist")]
        [System.Xml.Serialization.XmlEnumAttribute("2295-13")]
        Item2295_13,
        
        /// <summary>
        /// <para>OTHER BUSINESS AND INFORMATION PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER BUSINESS AND INFORMATION PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2299")]
        Item2299,
        
        /// <summary>
        /// <para>Health Information Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Information Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-11")]
        Item2299_11,
        
        /// <summary>
        /// <para>Records Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Records Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-13")]
        Item2299_13,
        
        /// <summary>
        /// <para>Archivist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Archivist")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-15")]
        Item2299_15,
        
        /// <summary>
        /// <para>Policy Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Policy Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-17")]
        Item2299_17,
        
        /// <summary>
        /// <para>Intelligence Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intelligence Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-19")]
        Item2299_19,
        
        /// <summary>
        /// <para>Business and Information Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business and Information Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2299-79")]
        Item2299_79,
        
        /// <summary>
        /// <para>HEALTH PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HEALTH PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <summary>
        /// <para>MEDICAL PRACTITIONERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDICAL PRACTITIONERS")]
        [System.Xml.Serialization.XmlEnumAttribute("231")]
        Item231,
        
        /// <summary>
        /// <para>GENERALIST MEDICAL PRACTITIONERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERALIST MEDICAL PRACTITIONERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2311")]
        Item2311,
        
        /// <summary>
        /// <para>General Medical Practitioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Medical Practitioner")]
        [System.Xml.Serialization.XmlEnumAttribute("2311-11")]
        Item2311_11,
        
        /// <summary>
        /// <para>Medical Practitioner in Training</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Practitioner in Training")]
        [System.Xml.Serialization.XmlEnumAttribute("2311-81")]
        Item2311_81,
        
        /// <summary>
        /// <para>SPECIALIST MEDICAL PRACTITIONERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPECIALIST MEDICAL PRACTITIONERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2312")]
        Item2312,
        
        /// <summary>
        /// <para>Anaesthetist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anaesthetist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-11")]
        Item2312_11,
        
        /// <summary>
        /// <para>Dermatologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dermatologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-13")]
        Item2312_13,
        
        /// <summary>
        /// <para>Emergency Medicine Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Emergency Medicine Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-15")]
        Item2312_15,
        
        /// <summary>
        /// <para>Obstetrician and Gynaecologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Obstetrician and Gynaecologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-17")]
        Item2312_17,
        
        /// <summary>
        /// <para>Ophthalmologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ophthalmologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-19")]
        Item2312_19,
        
        /// <summary>
        /// <para>Paediatrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paediatrician")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-21")]
        Item2312_21,
        
        /// <summary>
        /// <para>Pathologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pathologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-23")]
        Item2312_23,
        
        /// <summary>
        /// <para>Specialist Physician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Physician")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-25")]
        Item2312_25,
        
        /// <summary>
        /// <para>Psychiatrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychiatrist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-27")]
        Item2312_27,
        
        /// <summary>
        /// <para>Radiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-29")]
        Item2312_29,
        
        /// <summary>
        /// <para>Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-31")]
        Item2312_31,
        
        /// <summary>
        /// <para>Specialist Medical Practitioners nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Medical Practitioners nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2312-79")]
        Item2312_79,
        
        /// <summary>
        /// <para>NURSING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NURSING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("232")]
        Item232,
        
        /// <summary>
        /// <para>NURSE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NURSE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2321")]
        Item2321,
        
        /// <summary>
        /// <para>Nurse Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2321-11")]
        Item2321_11,
        
        /// <summary>
        /// <para>NURSE EDUCATORS AND RESEARCHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NURSE EDUCATORS AND RESEARCHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2322")]
        Item2322,
        
        /// <summary>
        /// <para>Nurse Educator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Educator")]
        [System.Xml.Serialization.XmlEnumAttribute("2322-11")]
        Item2322_11,
        
        /// <summary>
        /// <para>Nurse Researcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Researcher")]
        [System.Xml.Serialization.XmlEnumAttribute("2322-13")]
        Item2322_13,
        
        /// <summary>
        /// <para>REGISTERED NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGISTERED NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("2323")]
        Item2323,
        
        /// <summary>
        /// <para>Registered Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("2323-11")]
        Item2323_11,
        
        /// <summary>
        /// <para>REGISTERED MIDWIVES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGISTERED MIDWIVES")]
        [System.Xml.Serialization.XmlEnumAttribute("2324")]
        Item2324,
        
        /// <summary>
        /// <para>Registered Midwife</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Midwife")]
        [System.Xml.Serialization.XmlEnumAttribute("2324-11")]
        Item2324_11,
        
        /// <summary>
        /// <para>REGISTERED MENTAL HEALTH NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGISTERED MENTAL HEALTH NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("2325")]
        Item2325,
        
        /// <summary>
        /// <para>Registered Mental Health Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Mental Health Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("2325-11")]
        Item2325_11,
        
        /// <summary>
        /// <para>REGISTERED DEVELOPMENTAL DISABILITY NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGISTERED DEVELOPMENTAL DISABILITY NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("2326")]
        Item2326,
        
        /// <summary>
        /// <para>Registered Developmental Disability Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Developmental Disability Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("2326-11")]
        Item2326_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS HEALTH PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS HEALTH PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("238")]
        Item238,
        
        /// <summary>
        /// <para>DENTAL PRACTITIONERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DENTAL PRACTITIONERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2381")]
        Item2381,
        
        /// <summary>
        /// <para>Dentist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dentist")]
        [System.Xml.Serialization.XmlEnumAttribute("2381-11")]
        Item2381_11,
        
        /// <summary>
        /// <para>Dental Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("2381-13")]
        Item2381_13,
        
        /// <summary>
        /// <para>PHARMACISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PHARMACISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2382")]
        Item2382,
        
        /// <summary>
        /// <para>Hospital Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospital Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("2382-11")]
        Item2382_11,
        
        /// <summary>
        /// <para>Industrial Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("2382-13")]
        Item2382_13,
        
        /// <summary>
        /// <para>Retail Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("2382-15")]
        Item2382_15,
        
        /// <summary>
        /// <para>OCCUPATIONAL THERAPISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OCCUPATIONAL THERAPISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2383")]
        Item2383,
        
        /// <summary>
        /// <para>Occupational Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupational Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("2383-11")]
        Item2383_11,
        
        /// <summary>
        /// <para>OPTOMETRISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OPTOMETRISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2384")]
        Item2384,
        
        /// <summary>
        /// <para>Optometrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optometrist")]
        [System.Xml.Serialization.XmlEnumAttribute("2384-11")]
        Item2384_11,
        
        /// <summary>
        /// <para>PHYSIOTHERAPISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PHYSIOTHERAPISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2385")]
        Item2385,
        
        /// <summary>
        /// <para>Physiotherapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physiotherapist")]
        [System.Xml.Serialization.XmlEnumAttribute("2385-11")]
        Item2385_11,
        
        /// <summary>
        /// <para>SPEECH PATHOLOGISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPEECH PATHOLOGISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2386")]
        Item2386,
        
        /// <summary>
        /// <para>Speech Pathologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Speech Pathologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2386-11")]
        Item2386_11,
        
        /// <summary>
        /// <para>CHIROPRACTORS AND OSTEOPATHS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHIROPRACTORS AND OSTEOPATHS")]
        [System.Xml.Serialization.XmlEnumAttribute("2387")]
        Item2387,
        
        /// <summary>
        /// <para>Chiropractor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chiropractor")]
        [System.Xml.Serialization.XmlEnumAttribute("2387-11")]
        Item2387_11,
        
        /// <summary>
        /// <para>Osteopath</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Osteopath")]
        [System.Xml.Serialization.XmlEnumAttribute("2387-13")]
        Item2387_13,
        
        /// <summary>
        /// <para>PODIATRISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PODIATRISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2388")]
        Item2388,
        
        /// <summary>
        /// <para>Podiatrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podiatrist")]
        [System.Xml.Serialization.XmlEnumAttribute("2388-11")]
        Item2388_11,
        
        /// <summary>
        /// <para>MEDICAL IMAGING PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDICAL IMAGING PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2391")]
        Item2391,
        
        /// <summary>
        /// <para>Medical Diagnostic Radiographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Diagnostic Radiographer")]
        [System.Xml.Serialization.XmlEnumAttribute("2391-11")]
        Item2391_11,
        
        /// <summary>
        /// <para>Radiation Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radiation Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("2391-13")]
        Item2391_13,
        
        /// <summary>
        /// <para>Nuclear Medicine Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nuclear Medicine Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2391-15")]
        Item2391_15,
        
        /// <summary>
        /// <para>Sonographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sonographer")]
        [System.Xml.Serialization.XmlEnumAttribute("2391-17")]
        Item2391_17,
        
        /// <summary>
        /// <para>VETERINARIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VETERINARIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("2392")]
        Item2392,
        
        /// <summary>
        /// <para>Veterinarian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinarian")]
        [System.Xml.Serialization.XmlEnumAttribute("2392-11")]
        Item2392_11,
        
        /// <summary>
        /// <para>DIETITIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DIETITIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("2393")]
        Item2393,
        
        /// <summary>
        /// <para>Dietitian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dietitian")]
        [System.Xml.Serialization.XmlEnumAttribute("2393-11")]
        Item2393_11,
        
        /// <summary>
        /// <para>NATURAL THERAPY PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NATURAL THERAPY PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2394")]
        Item2394,
        
        /// <summary>
        /// <para>Naturopath</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Naturopath")]
        [System.Xml.Serialization.XmlEnumAttribute("2394-11")]
        Item2394_11,
        
        /// <summary>
        /// <para>Acupuncturist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Acupuncturist")]
        [System.Xml.Serialization.XmlEnumAttribute("2394-13")]
        Item2394_13,
        
        /// <summary>
        /// <para>Natural Therapy Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural Therapy Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2394-79")]
        Item2394_79,
        
        /// <summary>
        /// <para>OTHER HEALTH PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER HEALTH PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2399")]
        Item2399,
        
        /// <summary>
        /// <para>Audiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Audiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2399-11")]
        Item2399_11,
        
        /// <summary>
        /// <para>Orthoptist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Orthoptist")]
        [System.Xml.Serialization.XmlEnumAttribute("2399-13")]
        Item2399_13,
        
        /// <summary>
        /// <para>Orthotist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Orthotist")]
        [System.Xml.Serialization.XmlEnumAttribute("2399-15")]
        Item2399_15,
        
        /// <summary>
        /// <para>Health Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2399-79")]
        Item2399_79,
        
        /// <summary>
        /// <para>EDUCATION PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EDUCATION PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("24")]
        Item24,
        
        /// <summary>
        /// <para>SCHOOL TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SCHOOL TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("241")]
        Item241,
        
        /// <summary>
        /// <para>PRE-PRIMARY SCHOOL TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRE-PRIMARY SCHOOL TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2411")]
        Item2411,
        
        /// <summary>
        /// <para>Pre-Primary School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pre-Primary School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2411-11")]
        Item2411_11,
        
        /// <summary>
        /// <para>PRIMARY SCHOOL TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRIMARY SCHOOL TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2412")]
        Item2412,
        
        /// <summary>
        /// <para>Primary School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2412-11")]
        Item2412_11,
        
        /// <summary>
        /// <para>SECONDARY SCHOOL TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SECONDARY SCHOOL TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2413")]
        Item2413,
        
        /// <summary>
        /// <para>Secondary School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secondary School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2413-11")]
        Item2413_11,
        
        /// <summary>
        /// <para>SPECIAL EDUCATION TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPECIAL EDUCATION TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2414")]
        Item2414,
        
        /// <summary>
        /// <para>Special Needs Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Needs Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2414-11")]
        Item2414_11,
        
        /// <summary>
        /// <para>Teacher of the Hearing Impaired</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teacher of the Hearing Impaired")]
        [System.Xml.Serialization.XmlEnumAttribute("2414-13")]
        Item2414_13,
        
        /// <summary>
        /// <para>Teacher of the Sight Impaired</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teacher of the Sight Impaired")]
        [System.Xml.Serialization.XmlEnumAttribute("2414-15")]
        Item2414_15,
        
        /// <summary>
        /// <para>Special Education Teachers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Education Teachers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2414-79")]
        Item2414_79,
        
        /// <summary>
        /// <para>UNIVERSITY AND VOCATIONAL EDUCATION TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UNIVERSITY AND VOCATIONAL EDUCATION TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("242")]
        Item242,
        
        /// <summary>
        /// <para>UNIVERSITY LECTURERS AND TUTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UNIVERSITY LECTURERS AND TUTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2421")]
        Item2421,
        
        /// <summary>
        /// <para>University Lecturer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("University Lecturer")]
        [System.Xml.Serialization.XmlEnumAttribute("2421-11")]
        Item2421_11,
        
        /// <summary>
        /// <para>University Tutor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("University Tutor")]
        [System.Xml.Serialization.XmlEnumAttribute("2421-13")]
        Item2421_13,
        
        /// <summary>
        /// <para>VOCATIONAL EDUCATION TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VOCATIONAL EDUCATION TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2422")]
        Item2422,
        
        /// <summary>
        /// <para>Vocational Education Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vocational Education Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2422-11")]
        Item2422_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS EDUCATION PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS EDUCATION PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("249")]
        Item249,
        
        /// <summary>
        /// <para>EXTRA-SYSTEMIC TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EXTRA-SYSTEMIC TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2491")]
        Item2491,
        
        /// <summary>
        /// <para>Art Teacher (Private)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Art Teacher (Private)")]
        [System.Xml.Serialization.XmlEnumAttribute("2491-11")]
        Item2491_11,
        
        /// <summary>
        /// <para>Music Teacher (Private)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Teacher (Private)")]
        [System.Xml.Serialization.XmlEnumAttribute("2491-13")]
        Item2491_13,
        
        /// <summary>
        /// <para>Dance Teacher (Private)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dance Teacher (Private)")]
        [System.Xml.Serialization.XmlEnumAttribute("2491-15")]
        Item2491_15,
        
        /// <summary>
        /// <para>Drama Teacher (Private)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drama Teacher (Private)")]
        [System.Xml.Serialization.XmlEnumAttribute("2491-17")]
        Item2491_17,
        
        /// <summary>
        /// <para>Extra-Systemic Teachers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra-Systemic Teachers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2491-79")]
        Item2491_79,
        
        /// <summary>
        /// <para>ENGLISH AS A SECOND LANGUAGE TEACHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGLISH AS A SECOND LANGUAGE TEACHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2492")]
        Item2492,
        
        /// <summary>
        /// <para>English as a Second Language Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("English as a Second Language Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("2492-11")]
        Item2492_11,
        
        /// <summary>
        /// <para>EDUCATION OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EDUCATION OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2493")]
        Item2493,
        
        /// <summary>
        /// <para>Education Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2493-11")]
        Item2493_11,
        
        /// <summary>
        /// <para>SOCIAL, ARTS AND MISCELLANEOUS PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOCIAL, ARTS AND MISCELLANEOUS PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("25")]
        Item25,
        
        /// <summary>
        /// <para>SOCIAL WELFARE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOCIAL WELFARE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("251")]
        Item251,
        
        /// <summary>
        /// <para>SOCIAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOCIAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2511")]
        Item2511,
        
        /// <summary>
        /// <para>Social Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("2511-11")]
        Item2511_11,
        
        /// <summary>
        /// <para>WELFARE AND COMMUNITY WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WELFARE AND COMMUNITY WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2512")]
        Item2512,
        
        /// <summary>
        /// <para>Welfare Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("2512-11")]
        Item2512_11,
        
        /// <summary>
        /// <para>Community Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("2512-13")]
        Item2512_13,
        
        /// <summary>
        /// <para>COUNSELLORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COUNSELLORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2513")]
        Item2513,
        
        /// <summary>
        /// <para>Rehabilitation Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rehabilitation Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-11")]
        Item2513_11,
        
        /// <summary>
        /// <para>Drug and Alcohol Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drug and Alcohol Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-13")]
        Item2513_13,
        
        /// <summary>
        /// <para>Family Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-15")]
        Item2513_15,
        
        /// <summary>
        /// <para>Careers Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Careers Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-17")]
        Item2513_17,
        
        /// <summary>
        /// <para>Student Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Student Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-19")]
        Item2513_19,
        
        /// <summary>
        /// <para>Counsellors nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Counsellors nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2513-79")]
        Item2513_79,
        
        /// <summary>
        /// <para>PSYCHOLOGISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PSYCHOLOGISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2514")]
        Item2514,
        
        /// <summary>
        /// <para>Clinical Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clinical Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2514-11")]
        Item2514_11,
        
        /// <summary>
        /// <para>Educational Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Educational Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2514-13")]
        Item2514_13,
        
        /// <summary>
        /// <para>Organisational Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Organisational Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2514-15")]
        Item2514_15,
        
        /// <summary>
        /// <para>Psychologists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychologists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2514-79")]
        Item2514_79,
        
        /// <summary>
        /// <para>MINISTERS OF RELIGION</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINISTERS OF RELIGION")]
        [System.Xml.Serialization.XmlEnumAttribute("2515")]
        Item2515,
        
        /// <summary>
        /// <para>Minister of Religion</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Minister of Religion")]
        [System.Xml.Serialization.XmlEnumAttribute("2515-11")]
        Item2515_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS SOCIAL PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS SOCIAL PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("252")]
        Item252,
        
        /// <summary>
        /// <para>LEGAL PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEGAL PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2521")]
        Item2521,
        
        /// <summary>
        /// <para>Barrister</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Barrister")]
        [System.Xml.Serialization.XmlEnumAttribute("2521-11")]
        Item2521_11,
        
        /// <summary>
        /// <para>Solicitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solicitor")]
        [System.Xml.Serialization.XmlEnumAttribute("2521-13")]
        Item2521_13,
        
        /// <summary>
        /// <para>Legal Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2521-79")]
        Item2521_79,
        
        /// <summary>
        /// <para>ECONOMISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ECONOMISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("2522")]
        Item2522,
        
        /// <summary>
        /// <para>Economist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Economist")]
        [System.Xml.Serialization.XmlEnumAttribute("2522-11")]
        Item2522_11,
        
        /// <summary>
        /// <para>URBAN AND REGIONAL PLANNERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("URBAN AND REGIONAL PLANNERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2523")]
        Item2523,
        
        /// <summary>
        /// <para>Urban and Regional Planner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Urban and Regional Planner")]
        [System.Xml.Serialization.XmlEnumAttribute("2523-11")]
        Item2523_11,
        
        /// <summary>
        /// <para>OTHER SOCIAL PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER SOCIAL PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2529")]
        Item2529,
        
        /// <summary>
        /// <para>Historian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Historian")]
        [System.Xml.Serialization.XmlEnumAttribute("2529-11")]
        Item2529_11,
        
        /// <summary>
        /// <para>Interpreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interpreter")]
        [System.Xml.Serialization.XmlEnumAttribute("2529-13")]
        Item2529_13,
        
        /// <summary>
        /// <para>Translator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Translator")]
        [System.Xml.Serialization.XmlEnumAttribute("2529-15")]
        Item2529_15,
        
        /// <summary>
        /// <para>Social Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2529-79")]
        Item2529_79,
        
        /// <summary>
        /// <para>ARTISTS AND RELATED PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ARTISTS AND RELATED PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("253")]
        Item253,
        
        /// <summary>
        /// <para>VISUAL ARTS AND CRAFTS PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VISUAL ARTS AND CRAFTS PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2531")]
        Item2531,
        
        /// <summary>
        /// <para>Painter (Visual Arts)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Painter (Visual Arts)")]
        [System.Xml.Serialization.XmlEnumAttribute("2531-11")]
        Item2531_11,
        
        /// <summary>
        /// <para>Sculptor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sculptor")]
        [System.Xml.Serialization.XmlEnumAttribute("2531-13")]
        Item2531_13,
        
        /// <summary>
        /// <para>Potter or Ceramic Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Potter or Ceramic Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("2531-15")]
        Item2531_15,
        
        /// <summary>
        /// <para>Visual Arts and Crafts Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visual Arts and Crafts Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2531-79")]
        Item2531_79,
        
        /// <summary>
        /// <para>PHOTOGRAPHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PHOTOGRAPHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2532")]
        Item2532,
        
        /// <summary>
        /// <para>Photographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographer")]
        [System.Xml.Serialization.XmlEnumAttribute("2532-11")]
        Item2532_11,
        
        /// <summary>
        /// <para>DESIGNERS AND ILLUSTRATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DESIGNERS AND ILLUSTRATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2533")]
        Item2533,
        
        /// <summary>
        /// <para>Fashion Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fashion Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2533-11")]
        Item2533_11,
        
        /// <summary>
        /// <para>Graphic Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Graphic Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2533-13")]
        Item2533_13,
        
        /// <summary>
        /// <para>Industrial Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2533-15")]
        Item2533_15,
        
        /// <summary>
        /// <para>Interior Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interior Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("2533-17")]
        Item2533_17,
        
        /// <summary>
        /// <para>Illustrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Illustrator")]
        [System.Xml.Serialization.XmlEnumAttribute("2533-19")]
        Item2533_19,
        
        /// <summary>
        /// <para>JOURNALISTS AND RELATED PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JOURNALISTS AND RELATED PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2534")]
        Item2534,
        
        /// <summary>
        /// <para>Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-11")]
        Item2534_11,
        
        /// <summary>
        /// <para>Print Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Print Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-13")]
        Item2534_13,
        
        /// <summary>
        /// <para>Television Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-15")]
        Item2534_15,
        
        /// <summary>
        /// <para>Radio Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-17")]
        Item2534_17,
        
        /// <summary>
        /// <para>Copywriter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Copywriter")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-19")]
        Item2534_19,
        
        /// <summary>
        /// <para>Technical Writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Writer")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-21")]
        Item2534_21,
        
        /// <summary>
        /// <para>Journalists and Related Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Journalists and Related Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2534-79")]
        Item2534_79,
        
        /// <summary>
        /// <para>AUTHORS AND RELATED PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUTHORS AND RELATED PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2535")]
        Item2535,
        
        /// <summary>
        /// <para>Author</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author")]
        [System.Xml.Serialization.XmlEnumAttribute("2535-11")]
        Item2535_11,
        
        /// <summary>
        /// <para>Book Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Book Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("2535-13")]
        Item2535_13,
        
        /// <summary>
        /// <para>Script Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Script Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("2535-15")]
        Item2535_15,
        
        /// <summary>
        /// <para>FILM, TELEVISION, RADIO AND STAGE DIRECTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FILM, TELEVISION, RADIO AND STAGE DIRECTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("2536")]
        Item2536,
        
        /// <summary>
        /// <para>Art Director (Film, Television or Stage)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Art Director (Film, Television or Stage)")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-11")]
        Item2536_11,
        
        /// <summary>
        /// <para>Director (Film, Television, Radio or Stage)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Director (Film, Television, Radio or Stage)")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-13")]
        Item2536_13,
        
        /// <summary>
        /// <para>Director of Photography</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Director of Photography")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-15")]
        Item2536_15,
        
        /// <summary>
        /// <para>Film and Video Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Film and Video Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-17")]
        Item2536_17,
        
        /// <summary>
        /// <para>Stage Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stage Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-19")]
        Item2536_19,
        
        /// <summary>
        /// <para>Program Director (Radio or Television)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Program Director (Radio or Television)")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-21")]
        Item2536_21,
        
        /// <summary>
        /// <para>Technical Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Director")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-23")]
        Item2536_23,
        
        /// <summary>
        /// <para>Film, Television, Radio and Stage Directors nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Film, Television, Radio and Stage Directors nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2536-79")]
        Item2536_79,
        
        /// <summary>
        /// <para>MUSICIANS AND RELATED PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MUSICIANS AND RELATED PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2537")]
        Item2537,
        
        /// <summary>
        /// <para>Music Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Director")]
        [System.Xml.Serialization.XmlEnumAttribute("2537-11")]
        Item2537_11,
        
        /// <summary>
        /// <para>Singer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Singer")]
        [System.Xml.Serialization.XmlEnumAttribute("2537-13")]
        Item2537_13,
        
        /// <summary>
        /// <para>Instrumental Musician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Instrumental Musician")]
        [System.Xml.Serialization.XmlEnumAttribute("2537-15")]
        Item2537_15,
        
        /// <summary>
        /// <para>Composer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Composer")]
        [System.Xml.Serialization.XmlEnumAttribute("2537-17")]
        Item2537_17,
        
        /// <summary>
        /// <para>Musicians and Related Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Musicians and Related Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2537-79")]
        Item2537_79,
        
        /// <summary>
        /// <para>ACTORS, DANCERS AND RELATED PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ACTORS, DANCERS AND RELATED PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2538")]
        Item2538,
        
        /// <summary>
        /// <para>Actor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actor")]
        [System.Xml.Serialization.XmlEnumAttribute("2538-11")]
        Item2538_11,
        
        /// <summary>
        /// <para>Dancer or Choreographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dancer or Choreographer")]
        [System.Xml.Serialization.XmlEnumAttribute("2538-13")]
        Item2538_13,
        
        /// <summary>
        /// <para>Actors, Dancers and Related Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actors, Dancers and Related Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2538-79")]
        Item2538_79,
        
        /// <summary>
        /// <para>MEDIA PRESENTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDIA PRESENTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("2539")]
        Item2539,
        
        /// <summary>
        /// <para>Radio Presenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Presenter")]
        [System.Xml.Serialization.XmlEnumAttribute("2539-11")]
        Item2539_11,
        
        /// <summary>
        /// <para>Television Presenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Presenter")]
        [System.Xml.Serialization.XmlEnumAttribute("2539-13")]
        Item2539_13,
        
        /// <summary>
        /// <para>MISCELLANEOUS PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("254")]
        Item254,
        
        /// <summary>
        /// <para>AIR TRANSPORT PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AIR TRANSPORT PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2541")]
        Item2541,
        
        /// <summary>
        /// <para>Aircraft Pilot</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Pilot")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-11")]
        Item2541_11,
        
        /// <summary>
        /// <para>Air Traffic Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Traffic Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-13")]
        Item2541_13,
        
        /// <summary>
        /// <para>Flight Service Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flight Service Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-15")]
        Item2541_15,
        
        /// <summary>
        /// <para>Flight Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flight Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-17")]
        Item2541_17,
        
        /// <summary>
        /// <para>Flying Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flying Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-19")]
        Item2541_19,
        
        /// <summary>
        /// <para>Air Transport Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Transport Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2541-79")]
        Item2541_79,
        
        /// <summary>
        /// <para>SEA TRANSPORT PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SEA TRANSPORT PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2542")]
        Item2542,
        
        /// <summary>
        /// <para>Ship's Master</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Master")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-11")]
        Item2542_11,
        
        /// <summary>
        /// <para>Master Fisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Master Fisher")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-13")]
        Item2542_13,
        
        /// <summary>
        /// <para>Ship's Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-15")]
        Item2542_15,
        
        /// <summary>
        /// <para>Ship's Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-17")]
        Item2542_17,
        
        /// <summary>
        /// <para>Ship's Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-19")]
        Item2542_19,
        
        /// <summary>
        /// <para>Sea Transport Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sea Transport Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2542-79")]
        Item2542_79,
        
        /// <summary>
        /// <para>OCCUPATIONAL AND ENVIRONMENTAL HEALTH PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OCCUPATIONAL AND ENVIRONMENTAL HEALTH PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2543")]
        Item2543,
        
        /// <summary>
        /// <para>Occupational Health and Safety Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupational Health and Safety Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2543-11")]
        Item2543_11,
        
        /// <summary>
        /// <para>Environmental Health Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Health Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2543-13")]
        Item2543_13,
        
        /// <summary>
        /// <para>OTHER PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("2549")]
        Item2549,
        
        /// <summary>
        /// <para>Conservator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conservator")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-11")]
        Item2549_11,
        
        /// <summary>
        /// <para>Electorate Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electorate Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-13")]
        Item2549_13,
        
        /// <summary>
        /// <para>Patents Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Patents Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-15")]
        Item2549_15,
        
        /// <summary>
        /// <para>Oenologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oenologist")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-17")]
        Item2549_17,
        
        /// <summary>
        /// <para>Recreation Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recreation Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-19")]
        Item2549_19,
        
        /// <summary>
        /// <para>Museum or Gallery Curator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Museum or Gallery Curator")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-21")]
        Item2549_21,
        
        /// <summary>
        /// <para>Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("2549-79")]
        Item2549_79,
        
        /// <summary>
        /// <para>ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <summary>
        /// <para>SCIENCE, ENGINEERING AND RELATED ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SCIENCE, ENGINEERING AND RELATED ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,
        
        /// <summary>
        /// <para>MEDICAL AND SCIENCE TECHNICAL OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDICAL AND SCIENCE TECHNICAL OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("311")]
        Item311,
        
        /// <summary>
        /// <para>MEDICAL TECHNICAL OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEDICAL TECHNICAL OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3111")]
        Item3111,
        
        /// <summary>
        /// <para>Medical Laboratory Technical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Laboratory Technical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3111-11")]
        Item3111_11,
        
        /// <summary>
        /// <para>Medical Technical Officers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Technical Officers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3111-79")]
        Item3111_79,
        
        /// <summary>
        /// <para>SCIENCE TECHNICAL OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SCIENCE TECHNICAL OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3112")]
        Item3112,
        
        /// <summary>
        /// <para>Chemistry Technical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemistry Technical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3112-11")]
        Item3112_11,
        
        /// <summary>
        /// <para>Earth Science Technical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earth Science Technical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3112-13")]
        Item3112_13,
        
        /// <summary>
        /// <para>Life Science Technical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Science Technical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3112-15")]
        Item3112_15,
        
        /// <summary>
        /// <para>Agricultural Technical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Technical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3112-17")]
        Item3112_17,
        
        /// <summary>
        /// <para>Science Technical Officers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Science Technical Officers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3112-79")]
        Item3112_79,
        
        /// <summary>
        /// <para>BUILDING AND ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUILDING AND ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("312")]
        Item312,
        
        /// <summary>
        /// <para>BUILDING, ARCHITECTURAL AND SURVEYING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUILDING, ARCHITECTURAL AND SURVEYING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3121")]
        Item3121,
        
        /// <summary>
        /// <para>Building Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-11")]
        Item3121_11,
        
        /// <summary>
        /// <para>Architectural Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-13")]
        Item3121_13,
        
        /// <summary>
        /// <para>Surveying and Cartographic Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveying and Cartographic Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-15")]
        Item3121_15,
        
        /// <summary>
        /// <para>Building Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-17")]
        Item3121_17,
        
        /// <summary>
        /// <para>Plumbing Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbing Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-19")]
        Item3121_19,
        
        /// <summary>
        /// <para>Plumbing Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbing Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3121-21")]
        Item3121_21,
        
        /// <summary>
        /// <para>CIVIL ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CIVIL ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3122")]
        Item3122,
        
        /// <summary>
        /// <para>Civil Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3122-11")]
        Item3122_11,
        
        /// <summary>
        /// <para>Civil Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3122-13")]
        Item3122_13,
        
        /// <summary>
        /// <para>ELECTRICAL ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3123")]
        Item3123,
        
        /// <summary>
        /// <para>Electrical Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3123-11")]
        Item3123_11,
        
        /// <summary>
        /// <para>Electrical Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3123-13")]
        Item3123_13,
        
        /// <summary>
        /// <para>ELECTRONIC ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRONIC ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3124")]
        Item3124,
        
        /// <summary>
        /// <para>Electronic Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3124-11")]
        Item3124_11,
        
        /// <summary>
        /// <para>Electronic Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3124-13")]
        Item3124_13,
        
        /// <summary>
        /// <para>MECHANICAL ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MECHANICAL ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3125")]
        Item3125,
        
        /// <summary>
        /// <para>Mechanical Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3125-11")]
        Item3125_11,
        
        /// <summary>
        /// <para>Mechanical Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3125-13")]
        Item3125_13,
        
        /// <summary>
        /// <para>OTHER BUILDING AND ENGINEERING ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER BUILDING AND ENGINEERING ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3129")]
        Item3129,
        
        /// <summary>
        /// <para>Biomedical Engineering Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biomedical Engineering Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("3129-11")]
        Item3129_11,
        
        /// <summary>
        /// <para>Metallurgical and Materials Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metallurgical and Materials Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3129-13")]
        Item3129_13,
        
        /// <summary>
        /// <para>Mine Deputy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mine Deputy")]
        [System.Xml.Serialization.XmlEnumAttribute("3129-15")]
        Item3129_15,
        
        /// <summary>
        /// <para>Building and Engineering Associate Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Engineering Associate Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3129-79")]
        Item3129_79,
        
        /// <summary>
        /// <para>BUSINESS AND ADMINISTRATION ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUSINESS AND ADMINISTRATION ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("32")]
        Item32,
        
        /// <summary>
        /// <para>FINANCE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINANCE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("321")]
        Item321,
        
        /// <summary>
        /// <para>BRANCH ACCOUNTANTS AND MANAGERS (FINANCIAL INSTITUTION)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRANCH ACCOUNTANTS AND MANAGERS (FINANCIAL INSTITUTION)")]
        [System.Xml.Serialization.XmlEnumAttribute("3211")]
        Item3211,
        
        /// <summary>
        /// <para>Branch Accountant (Financial Institution)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Branch Accountant (Financial Institution)")]
        [System.Xml.Serialization.XmlEnumAttribute("3211-11")]
        Item3211_11,
        
        /// <summary>
        /// <para>Financial Institution Branch Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Institution Branch Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3211-13")]
        Item3211_13,
        
        /// <summary>
        /// <para>FINANCIAL DEALERS AND BROKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINANCIAL DEALERS AND BROKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3212")]
        Item3212,
        
        /// <summary>
        /// <para>Stockbroking Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stockbroking Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-11")]
        Item3212_11,
        
        /// <summary>
        /// <para>Futures Trader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Futures Trader")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-13")]
        Item3212_13,
        
        /// <summary>
        /// <para>Financial Market Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Market Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-15")]
        Item3212_15,
        
        /// <summary>
        /// <para>Commodities Trader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commodities Trader")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-17")]
        Item3212_17,
        
        /// <summary>
        /// <para>Insurance Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Broker")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-19")]
        Item3212_19,
        
        /// <summary>
        /// <para>Bookmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-21")]
        Item3212_21,
        
        /// <summary>
        /// <para>Financial Dealers and Brokers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Dealers and Brokers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3212-79")]
        Item3212_79,
        
        /// <summary>
        /// <para>FINANCIAL INVESTMENT ADVISERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINANCIAL INVESTMENT ADVISERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3213")]
        Item3213,
        
        /// <summary>
        /// <para>Financial Investment Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Investment Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("3213-11")]
        Item3213_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS BUSINESS AND ADMINISTRATION ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS BUSINESS AND ADMINISTRATION ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("329")]
        Item329,
        
        /// <summary>
        /// <para>OFFICE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OFFICE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3291")]
        Item3291,
        
        /// <summary>
        /// <para>Office Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3291-11")]
        Item3291_11,
        
        /// <summary>
        /// <para>PROJECT AND PROGRAM ADMINISTRATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PROJECT AND PROGRAM ADMINISTRATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("3292")]
        Item3292,
        
        /// <summary>
        /// <para>Project or Program Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Project or Program Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("3292-11")]
        Item3292_11,
        
        /// <summary>
        /// <para>REAL ESTATE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REAL ESTATE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3293")]
        Item3293,
        
        /// <summary>
        /// <para>Real Estate Agency Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Agency Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3293-11")]
        Item3293_11,
        
        /// <summary>
        /// <para>Property Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3293-13")]
        Item3293_13,
        
        /// <summary>
        /// <para>Real Estate Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("3293-15")]
        Item3293_15,
        
        /// <summary>
        /// <para>COMPUTING SUPPORT TECHNICIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMPUTING SUPPORT TECHNICIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("3294")]
        Item3294,
        
        /// <summary>
        /// <para>Computing Support Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computing Support Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3294-11")]
        Item3294_11,
        
        /// <summary>
        /// <para>MANAGING SUPERVISORS (SALES AND SERVICE)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MANAGING SUPERVISORS (SALES AND SERVICE)")]
        [System.Xml.Serialization.XmlEnumAttribute("33")]
        Item33,
        
        /// <summary>
        /// <para>SHOP MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SHOP MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("331")]
        Item331,
        
        /// <summary>
        /// <para>SHOP MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SHOP MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3311")]
        Item3311,
        
        /// <summary>
        /// <para>Shop Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shop Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3311-11")]
        Item3311_11,
        
        /// <summary>
        /// <para>HOSPITALITY AND ACCOMMODATION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOSPITALITY AND ACCOMMODATION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("332")]
        Item332,
        
        /// <summary>
        /// <para>RESTAURANT AND CATERING MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RESTAURANT AND CATERING MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3321")]
        Item3321,
        
        /// <summary>
        /// <para>Restaurant and Catering Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Restaurant and Catering Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3321-11")]
        Item3321_11,
        
        /// <summary>
        /// <para>CHEFS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHEFS")]
        [System.Xml.Serialization.XmlEnumAttribute("3322")]
        Item3322,
        
        /// <summary>
        /// <para>Head Chef</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Head Chef")]
        [System.Xml.Serialization.XmlEnumAttribute("3322-01")]
        Item3322_01,
        
        /// <summary>
        /// <para>Chef</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chef")]
        [System.Xml.Serialization.XmlEnumAttribute("3322-11")]
        Item3322_11,
        
        /// <summary>
        /// <para>HOTEL AND MOTEL MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOTEL AND MOTEL MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3323")]
        Item3323,
        
        /// <summary>
        /// <para>Hotel or Motel Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hotel or Motel Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3323-11")]
        Item3323_11,
        
        /// <summary>
        /// <para>CLUB MANAGERS (LICENSED PREMISES)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLUB MANAGERS (LICENSED PREMISES)")]
        [System.Xml.Serialization.XmlEnumAttribute("3324")]
        Item3324,
        
        /// <summary>
        /// <para>Club Manager (Licensed Premises)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Club Manager (Licensed Premises)")]
        [System.Xml.Serialization.XmlEnumAttribute("3324-11")]
        Item3324_11,
        
        /// <summary>
        /// <para>CARAVAN PARK AND CAMPING GROUND MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CARAVAN PARK AND CAMPING GROUND MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3325")]
        Item3325,
        
        /// <summary>
        /// <para>Caravan Park and Camping Ground Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Caravan Park and Camping Ground Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3325-11")]
        Item3325_11,
        
        /// <summary>
        /// <para>OTHER HOSPITALITY AND ACCOMMODATION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER HOSPITALITY AND ACCOMMODATION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3329")]
        Item3329,
        
        /// <summary>
        /// <para>Other Hospitality and Accommodation Managers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Hospitality and Accommodation Managers")]
        [System.Xml.Serialization.XmlEnumAttribute("3329-11")]
        Item3329_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS MANAGING SUPERVISORS (SALES AND SERVICE)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS MANAGING SUPERVISORS (SALES AND SERVICE)")]
        [System.Xml.Serialization.XmlEnumAttribute("339")]
        Item339,
        
        /// <summary>
        /// <para>SPORT AND RECREATION MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPORT AND RECREATION MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3391")]
        Item3391,
        
        /// <summary>
        /// <para>Fitness Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitness Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3391-11")]
        Item3391_11,
        
        /// <summary>
        /// <para>Other Sports Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sports Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3391-13")]
        Item3391_13,
        
        /// <summary>
        /// <para>Amusement Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3391-15")]
        Item3391_15,
        
        /// <summary>
        /// <para>Sport and Recreation Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sport and Recreation Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3391-79")]
        Item3391_79,
        
        /// <summary>
        /// <para>CUSTOMER SERVICE MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CUSTOMER SERVICE MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3392")]
        Item3392,
        
        /// <summary>
        /// <para>Customer Service Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customer Service Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3392-11")]
        Item3392_11,
        
        /// <summary>
        /// <para>TRANSPORT COMPANY MANAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRANSPORT COMPANY MANAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3393")]
        Item3393,
        
        /// <summary>
        /// <para>Transport Company Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Company Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3393-11")]
        Item3393_11,
        
        /// <summary>
        /// <para>OTHER MANAGING SUPERVISORS (SALES AND SERVICE)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MANAGING SUPERVISORS (SALES AND SERVICE)")]
        [System.Xml.Serialization.XmlEnumAttribute("3399")]
        Item3399,
        
        /// <summary>
        /// <para>Post Office Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Post Office Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-11")]
        Item3399_11,
        
        /// <summary>
        /// <para>Railway Station Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Station Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-13")]
        Item3399_13,
        
        /// <summary>
        /// <para>Betting Agency Branch Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Agency Branch Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-15")]
        Item3399_15,
        
        /// <summary>
        /// <para>Hair and Beauty Salon Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hair and Beauty Salon Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-17")]
        Item3399_17,
        
        /// <summary>
        /// <para>Car Rental Agency Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Rental Agency Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-19")]
        Item3399_19,
        
        /// <summary>
        /// <para>Fleet Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fleet Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-21")]
        Item3399_21,
        
        /// <summary>
        /// <para>Stock and Station Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stock and Station Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-23")]
        Item3399_23,
        
        /// <summary>
        /// <para>Travel Agency Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Agency Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-25")]
        Item3399_25,
        
        /// <summary>
        /// <para>Theatre or Cinema Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Theatre or Cinema Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-27")]
        Item3399_27,
        
        /// <summary>
        /// <para>Funeral Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funeral Director")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-29")]
        Item3399_29,
        
        /// <summary>
        /// <para>Managing Supervisors (Sales and Service) nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Managing Supervisors (Sales and Service) nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3399-79")]
        Item3399_79,
        
        /// <summary>
        /// <para>HEALTH AND WELFARE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HEALTH AND WELFARE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("34")]
        Item34,
        
        /// <summary>
        /// <para>ENROLLED NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENROLLED NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("341")]
        Item341,
        
        /// <summary>
        /// <para>ENROLLED NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENROLLED NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("3411")]
        Item3411,
        
        /// <summary>
        /// <para>Enrolled Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Enrolled Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("3411-11")]
        Item3411_11,
        
        /// <summary>
        /// <para>WELFARE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WELFARE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("342")]
        Item342,
        
        /// <summary>
        /// <para>WELFARE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WELFARE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3421")]
        Item3421,
        
        /// <summary>
        /// <para>Parole or Probation Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parole or Probation Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3421-11")]
        Item3421_11,
        
        /// <summary>
        /// <para>Youth Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Youth Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("3421-13")]
        Item3421_13,
        
        /// <summary>
        /// <para>Residential Care Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Residential Care Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3421-15")]
        Item3421_15,
        
        /// <summary>
        /// <para>Disabilities Services Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Disabilities Services Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3421-17")]
        Item3421_17,
        
        /// <summary>
        /// <para>Family Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("3421-19")]
        Item3421_19,
        
        /// <summary>
        /// <para>MISCELLANEOUS HEALTH AND WELFARE ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS HEALTH AND WELFARE ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("349")]
        Item349,
        
        /// <summary>
        /// <para>AMBULANCE OFFICERS AND PARAMEDICS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AMBULANCE OFFICERS AND PARAMEDICS")]
        [System.Xml.Serialization.XmlEnumAttribute("3491")]
        Item3491,
        
        /// <summary>
        /// <para>Ambulance Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ambulance Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3491-11")]
        Item3491_11,
        
        /// <summary>
        /// <para>Intensive Care Ambulance Paramedic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intensive Care Ambulance Paramedic")]
        [System.Xml.Serialization.XmlEnumAttribute("3491-13")]
        Item3491_13,
        
        /// <summary>
        /// <para>DENTAL ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DENTAL ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3492")]
        Item3492,
        
        /// <summary>
        /// <para>Dental Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("3492-11")]
        Item3492_11,
        
        /// <summary>
        /// <para>Dental Hygienist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Hygienist")]
        [System.Xml.Serialization.XmlEnumAttribute("3492-13")]
        Item3492_13,
        
        /// <summary>
        /// <para>Dental Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3492-15")]
        Item3492_15,
        
        /// <summary>
        /// <para>ABORIGINAL AND TORRES STRAIT ISLANDER HEALTH WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ABORIGINAL AND TORRES STRAIT ISLANDER HEALTH WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3493")]
        Item3493,
        
        /// <summary>
        /// <para>Aboriginal and Torres Strait Islander Health Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aboriginal and Torres Strait Islander Health Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("3493-11")]
        Item3493_11,
        
        /// <summary>
        /// <para>MASSAGE THERAPISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MASSAGE THERAPISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("3494")]
        Item3494,
        
        /// <summary>
        /// <para>Massage Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Massage Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("3494-11")]
        Item3494_11,
        
        /// <summary>
        /// <para>OTHER ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("39")]
        Item39,
        
        /// <summary>
        /// <para>POLICE OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLICE OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("391")]
        Item391,
        
        /// <summary>
        /// <para>POLICE OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POLICE OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3911")]
        Item3911,
        
        /// <summary>
        /// <para>Supervisor, Police Officers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Police Officers")]
        [System.Xml.Serialization.XmlEnumAttribute("3911-01")]
        Item3911_01,
        
        /// <summary>
        /// <para>Police Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Police Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3911-11")]
        Item3911_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("399")]
        Item399,
        
        /// <summary>
        /// <para>PRIMARY PRODUCTS INSPECTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRIMARY PRODUCTS INSPECTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("3991")]
        Item3991,
        
        /// <summary>
        /// <para>Primary Products Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Products Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("3991-11")]
        Item3991_11,
        
        /// <summary>
        /// <para>SAFETY INSPECTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SAFETY INSPECTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("3992")]
        Item3992,
        
        /// <summary>
        /// <para>Safety Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Safety Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("3992-11")]
        Item3992_11,
        
        /// <summary>
        /// <para>SPORTSPERSONS, COACHES AND RELATED SUPPORT WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPORTSPERSONS, COACHES AND RELATED SUPPORT WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3993")]
        Item3993,
        
        /// <summary>
        /// <para>Jockey</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jockey")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-11")]
        Item3993_11,
        
        /// <summary>
        /// <para>Golfer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Golfer")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-13")]
        Item3993_13,
        
        /// <summary>
        /// <para>Footballer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footballer")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-15")]
        Item3993_15,
        
        /// <summary>
        /// <para>Other Sportsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sportsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-17")]
        Item3993_17,
        
        /// <summary>
        /// <para>Gymnastics Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gymnastics Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-19")]
        Item3993_19,
        
        /// <summary>
        /// <para>Tennis Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tennis Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-21")]
        Item3993_21,
        
        /// <summary>
        /// <para>Swimming Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Swimming Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-23")]
        Item3993_23,
        
        /// <summary>
        /// <para>Horseriding Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horseriding Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-25")]
        Item3993_25,
        
        /// <summary>
        /// <para>Other Sports Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sports Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-27")]
        Item3993_27,
        
        /// <summary>
        /// <para>Sports Development Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Development Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-29")]
        Item3993_29,
        
        /// <summary>
        /// <para>Sports Umpire</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Umpire")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-31")]
        Item3993_31,
        
        /// <summary>
        /// <para>Horse or Dog Racing Official</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse or Dog Racing Official")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-33")]
        Item3993_33,
        
        /// <summary>
        /// <para>Other Sports Official</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sports Official")]
        [System.Xml.Serialization.XmlEnumAttribute("3993-35")]
        Item3993_35,
        
        /// <summary>
        /// <para>SENIOR NON-COMMISSIONED DEFENCE FORCE OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SENIOR NON-COMMISSIONED DEFENCE FORCE OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3994")]
        Item3994,
        
        /// <summary>
        /// <para>Senior Non-Commissioned Defence Force Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Senior Non-Commissioned Defence Force Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("3994-11")]
        Item3994_11,
        
        /// <summary>
        /// <para>SENIOR FIRE FIGHTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SENIOR FIRE FIGHTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3995")]
        Item3995,
        
        /// <summary>
        /// <para>Senior Fire Fighter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Senior Fire Fighter")]
        [System.Xml.Serialization.XmlEnumAttribute("3995-11")]
        Item3995_11,
        
        /// <summary>
        /// <para>RETAIL BUYERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RETAIL BUYERS")]
        [System.Xml.Serialization.XmlEnumAttribute("3996")]
        Item3996,
        
        /// <summary>
        /// <para>Retail Buyer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Buyer")]
        [System.Xml.Serialization.XmlEnumAttribute("3996-11")]
        Item3996_11,
        
        /// <summary>
        /// <para>LIBRARY TECHNICIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBRARY TECHNICIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("3997")]
        Item3997,
        
        /// <summary>
        /// <para>Library Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Library Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3997-11")]
        Item3997_11,
        
        /// <summary>
        /// <para>OTHER MISCELLANEOUS ASSOCIATE PROFESSIONALS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MISCELLANEOUS ASSOCIATE PROFESSIONALS")]
        [System.Xml.Serialization.XmlEnumAttribute("3999")]
        Item3999,
        
        /// <summary>
        /// <para>Interior Decorator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interior Decorator")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-11")]
        Item3999_11,
        
        /// <summary>
        /// <para>Museum or Art Gallery Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Museum or Art Gallery Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-13")]
        Item3999_13,
        
        /// <summary>
        /// <para>Radio Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-15")]
        Item3999_15,
        
        /// <summary>
        /// <para>Private Investigator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Investigator")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-17")]
        Item3999_17,
        
        /// <summary>
        /// <para>Security Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-19")]
        Item3999_19,
        
        /// <summary>
        /// <para>Associate Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Associate Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("3999-79")]
        Item3999_79,
        
        /// <summary>
        /// <para>TRADESPERSONS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRADESPERSONS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <summary>
        /// <para>MECHANICAL AND FABRICATION ENGINEERING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MECHANICAL AND FABRICATION ENGINEERING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("41")]
        Item41,
        
        /// <summary>
        /// <para>MECHANICAL ENGINEERING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MECHANICAL ENGINEERING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("411")]
        Item411,
        
        /// <summary>
        /// <para>GENERAL MECHANICAL ENGINEERING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL MECHANICAL ENGINEERING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4111")]
        Item4111,
        
        /// <summary>
        /// <para>Supervisor, General Mechanical Engineering Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, General Mechanical Engineering Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4111-01")]
        Item4111_01,
        
        /// <summary>
        /// <para>General Mechanical Engineering Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Mechanical Engineering Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4111-11")]
        Item4111_11,
        
        /// <summary>
        /// <para>Apprentice General Mechanical Engineering Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice General Mechanical Engineering Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4111-81")]
        Item4111_81,
        
        /// <summary>
        /// <para>METAL FITTERS AND MACHINISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("METAL FITTERS AND MACHINISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("4112")]
        Item4112,
        
        /// <summary>
        /// <para>Supervisor, Metal Fitters and Machinists</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Metal Fitters and Machinists")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-01")]
        Item4112_01,
        
        /// <summary>
        /// <para>Fitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitter")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-11")]
        Item4112_11,
        
        /// <summary>
        /// <para>Metal Machinist (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Machinist (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-13")]
        Item4112_13,
        
        /// <summary>
        /// <para>Textile, Clothing or Footwear Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile, Clothing or Footwear Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-15")]
        Item4112_15,
        
        /// <summary>
        /// <para>Apprentice Fitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Fitter")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-81")]
        Item4112_81,
        
        /// <summary>
        /// <para>Apprentice Metal Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Metal Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-83")]
        Item4112_83,
        
        /// <summary>
        /// <para>Apprentice Textile, Clothing or Footwear Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Textile, Clothing or Footwear Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4112-85")]
        Item4112_85,
        
        /// <summary>
        /// <para>TOOLMAKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TOOLMAKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4113")]
        Item4113,
        
        /// <summary>
        /// <para>Supervisor, Toolmakers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Toolmakers")]
        [System.Xml.Serialization.XmlEnumAttribute("4113-01")]
        Item4113_01,
        
        /// <summary>
        /// <para>Toolmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toolmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4113-11")]
        Item4113_11,
        
        /// <summary>
        /// <para>Apprentice Toolmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Toolmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4113-81")]
        Item4113_81,
        
        /// <summary>
        /// <para>AIRCRAFT MAINTENANCE ENGINEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AIRCRAFT MAINTENANCE ENGINEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4114")]
        Item4114,
        
        /// <summary>
        /// <para>Supervisor, Aircraft Maintenance Engineers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Aircraft Maintenance Engineers")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-01")]
        Item4114_01,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Mechanical)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Mechanical)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-11")]
        Item4114_11,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Structures)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Structures)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-13")]
        Item4114_13,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Avionics)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Avionics)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-15")]
        Item4114_15,
        
        /// <summary>
        /// <para>Apprentice Aircraft Maintenance Engineer (Mechanical)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Aircraft Maintenance Engineer (Mechanical)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-81")]
        Item4114_81,
        
        /// <summary>
        /// <para>Apprentice Aircraft Maintenance Engineer (Structures)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Aircraft Maintenance Engineer (Structures)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-83")]
        Item4114_83,
        
        /// <summary>
        /// <para>Apprentice Aircraft Maintenance Engineer (Avionics)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Aircraft Maintenance Engineer (Avionics)")]
        [System.Xml.Serialization.XmlEnumAttribute("4114-85")]
        Item4114_85,
        
        /// <summary>
        /// <para>PRECISION METAL TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRECISION METAL TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4115")]
        Item4115,
        
        /// <summary>
        /// <para>Supervisor, Precision Metal Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Precision Metal Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-01")]
        Item4115_01,
        
        /// <summary>
        /// <para>Precision Instrument Maker and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Precision Instrument Maker and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-11")]
        Item4115_11,
        
        /// <summary>
        /// <para>Watch and Clock Maker and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Watch and Clock Maker and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-13")]
        Item4115_13,
        
        /// <summary>
        /// <para>Locksmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Locksmith")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-15")]
        Item4115_15,
        
        /// <summary>
        /// <para>Saw Maker and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saw Maker and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-17")]
        Item4115_17,
        
        /// <summary>
        /// <para>Gunsmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gunsmith")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-19")]
        Item4115_19,
        
        /// <summary>
        /// <para>Engraver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engraver")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-21")]
        Item4115_21,
        
        /// <summary>
        /// <para>Apprentice Precision Metal Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Precision Metal Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4115-81")]
        Item4115_81,
        
        /// <summary>
        /// <para>FABRICATION ENGINEERING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FABRICATION ENGINEERING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("412")]
        Item412,
        
        /// <summary>
        /// <para>GENERAL FABRICATION ENGINEERING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL FABRICATION ENGINEERING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4121")]
        Item4121,
        
        /// <summary>
        /// <para>Supervisor, General Fabrication Engineering Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, General Fabrication Engineering Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4121-01")]
        Item4121_01,
        
        /// <summary>
        /// <para>General Fabrication Engineering Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Fabrication Engineering Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4121-11")]
        Item4121_11,
        
        /// <summary>
        /// <para>Apprentice General Fabrication Engineering Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice General Fabrication Engineering Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4121-81")]
        Item4121_81,
        
        /// <summary>
        /// <para>STRUCTURAL STEEL AND WELDING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STRUCTURAL STEEL AND WELDING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4122")]
        Item4122,
        
        /// <summary>
        /// <para>Supervisor, Structural Steel and Welding Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Structural Steel and Welding Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-01")]
        Item4122_01,
        
        /// <summary>
        /// <para>Metal Fabricator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Fabricator")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-11")]
        Item4122_11,
        
        /// <summary>
        /// <para>Pressure Welder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pressure Welder")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-13")]
        Item4122_13,
        
        /// <summary>
        /// <para>Welder (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welder (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-15")]
        Item4122_15,
        
        /// <summary>
        /// <para>Apprentice Metal Fabricator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Metal Fabricator")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-81")]
        Item4122_81,
        
        /// <summary>
        /// <para>Apprentice Welder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Welder")]
        [System.Xml.Serialization.XmlEnumAttribute("4122-83")]
        Item4122_83,
        
        /// <summary>
        /// <para>FORGING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FORGING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4123")]
        Item4123,
        
        /// <summary>
        /// <para>Supervisor, Forging Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Forging Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4123-01")]
        Item4123_01,
        
        /// <summary>
        /// <para>Blacksmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Blacksmith")]
        [System.Xml.Serialization.XmlEnumAttribute("4123-11")]
        Item4123_11,
        
        /// <summary>
        /// <para>Farrier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farrier")]
        [System.Xml.Serialization.XmlEnumAttribute("4123-13")]
        Item4123_13,
        
        /// <summary>
        /// <para>Apprentice Blacksmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Blacksmith")]
        [System.Xml.Serialization.XmlEnumAttribute("4123-81")]
        Item4123_81,
        
        /// <summary>
        /// <para>Apprentice Farrier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Farrier")]
        [System.Xml.Serialization.XmlEnumAttribute("4123-83")]
        Item4123_83,
        
        /// <summary>
        /// <para>SHEETMETAL TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SHEETMETAL TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4124")]
        Item4124,
        
        /// <summary>
        /// <para>Supervisor, Sheetmetal Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Sheetmetal Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4124-01")]
        Item4124_01,
        
        /// <summary>
        /// <para>Sheetmetal Worker (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheetmetal Worker (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4124-11")]
        Item4124_11,
        
        /// <summary>
        /// <para>Apprentice Sheetmetal Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Sheetmetal Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("4124-81")]
        Item4124_81,
        
        /// <summary>
        /// <para>METAL CASTING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("METAL CASTING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4125")]
        Item4125,
        
        /// <summary>
        /// <para>Supervisor, Metal Casting Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Metal Casting Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4125-01")]
        Item4125_01,
        
        /// <summary>
        /// <para>Metal Casting Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Casting Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4125-11")]
        Item4125_11,
        
        /// <summary>
        /// <para>Apprentice Metal Casting Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Metal Casting Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4125-81")]
        Item4125_81,
        
        /// <summary>
        /// <para>METAL FINISHING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("METAL FINISHING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4126")]
        Item4126,
        
        /// <summary>
        /// <para>Supervisor, Metal Finishing Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Metal Finishing Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4126-01")]
        Item4126_01,
        
        /// <summary>
        /// <para>Metal Polisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Polisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4126-11")]
        Item4126_11,
        
        /// <summary>
        /// <para>Electroplater (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electroplater (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4126-13")]
        Item4126_13,
        
        /// <summary>
        /// <para>Apprentice Metal Polisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Metal Polisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4126-81")]
        Item4126_81,
        
        /// <summary>
        /// <para>Apprentice Electroplater</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Electroplater")]
        [System.Xml.Serialization.XmlEnumAttribute("4126-83")]
        Item4126_83,
        
        /// <summary>
        /// <para>AUTOMOTIVE TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUTOMOTIVE TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("42")]
        Item42,
        
        /// <summary>
        /// <para>AUTOMOTIVE TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUTOMOTIVE TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("421")]
        Item421,
        
        /// <summary>
        /// <para>MOTOR MECHANICS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOTOR MECHANICS")]
        [System.Xml.Serialization.XmlEnumAttribute("4211")]
        Item4211,
        
        /// <summary>
        /// <para>Supervisor, Motor Mechanics</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Motor Mechanics")]
        [System.Xml.Serialization.XmlEnumAttribute("4211-01")]
        Item4211_01,
        
        /// <summary>
        /// <para>Motor Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4211-11")]
        Item4211_11,
        
        /// <summary>
        /// <para>Apprentice Motor Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Motor Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4211-81")]
        Item4211_81,
        
        /// <summary>
        /// <para>AUTOMOTIVE ELECTRICIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUTOMOTIVE ELECTRICIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("4212")]
        Item4212,
        
        /// <summary>
        /// <para>Supervisor, Automotive Electricians</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Automotive Electricians")]
        [System.Xml.Serialization.XmlEnumAttribute("4212-01")]
        Item4212_01,
        
        /// <summary>
        /// <para>Automotive Electrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Electrician")]
        [System.Xml.Serialization.XmlEnumAttribute("4212-11")]
        Item4212_11,
        
        /// <summary>
        /// <para>Apprentice Automotive Electrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Automotive Electrician")]
        [System.Xml.Serialization.XmlEnumAttribute("4212-81")]
        Item4212_81,
        
        /// <summary>
        /// <para>PANEL BEATERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PANEL BEATERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4213")]
        Item4213,
        
        /// <summary>
        /// <para>Supervisor, Panel Beaters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Panel Beaters")]
        [System.Xml.Serialization.XmlEnumAttribute("4213-01")]
        Item4213_01,
        
        /// <summary>
        /// <para>Panel Beater</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Panel Beater")]
        [System.Xml.Serialization.XmlEnumAttribute("4213-11")]
        Item4213_11,
        
        /// <summary>
        /// <para>Apprentice Panel Beater</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Panel Beater")]
        [System.Xml.Serialization.XmlEnumAttribute("4213-81")]
        Item4213_81,
        
        /// <summary>
        /// <para>VEHICLE PAINTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VEHICLE PAINTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4214")]
        Item4214,
        
        /// <summary>
        /// <para>Supervisor, Vehicle Painters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Vehicle Painters")]
        [System.Xml.Serialization.XmlEnumAttribute("4214-01")]
        Item4214_01,
        
        /// <summary>
        /// <para>Vehicle Painter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Painter")]
        [System.Xml.Serialization.XmlEnumAttribute("4214-11")]
        Item4214_11,
        
        /// <summary>
        /// <para>Apprentice Vehicle Painter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Vehicle Painter")]
        [System.Xml.Serialization.XmlEnumAttribute("4214-81")]
        Item4214_81,
        
        /// <summary>
        /// <para>VEHICLE BODY MAKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VEHICLE BODY MAKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4215")]
        Item4215,
        
        /// <summary>
        /// <para>Supervisor, Vehicle Body Makers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Vehicle Body Makers")]
        [System.Xml.Serialization.XmlEnumAttribute("4215-01")]
        Item4215_01,
        
        /// <summary>
        /// <para>Vehicle Body Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Body Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4215-11")]
        Item4215_11,
        
        /// <summary>
        /// <para>Apprentice Vehicle Body Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Vehicle Body Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4215-81")]
        Item4215_81,
        
        /// <summary>
        /// <para>VEHICLE TRIMMERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VEHICLE TRIMMERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4216")]
        Item4216,
        
        /// <summary>
        /// <para>Supervisor, Vehicle Trimmers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Vehicle Trimmers")]
        [System.Xml.Serialization.XmlEnumAttribute("4216-01")]
        Item4216_01,
        
        /// <summary>
        /// <para>Vehicle Trimmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Trimmer")]
        [System.Xml.Serialization.XmlEnumAttribute("4216-11")]
        Item4216_11,
        
        /// <summary>
        /// <para>Apprentice Vehicle Trimmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Vehicle Trimmer")]
        [System.Xml.Serialization.XmlEnumAttribute("4216-81")]
        Item4216_81,
        
        /// <summary>
        /// <para>ELECTRICAL AND ELECTRONICS TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL AND ELECTRONICS TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("43")]
        Item43,
        
        /// <summary>
        /// <para>ELECTRICAL AND ELECTRONICS TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL AND ELECTRONICS TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("431")]
        Item431,
        
        /// <summary>
        /// <para>ELECTRICIANS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICIANS")]
        [System.Xml.Serialization.XmlEnumAttribute("4311")]
        Item4311,
        
        /// <summary>
        /// <para>Supervisor, Electricians</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Electricians")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-01")]
        Item4311_01,
        
        /// <summary>
        /// <para>General Electrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Electrician")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-11")]
        Item4311_11,
        
        /// <summary>
        /// <para>Electrician (Special Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrician (Special Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-13")]
        Item4311_13,
        
        /// <summary>
        /// <para>Lift Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lift Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-15")]
        Item4311_15,
        
        /// <summary>
        /// <para>Apprentice Electrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Electrician")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-81")]
        Item4311_81,
        
        /// <summary>
        /// <para>Apprentice Lift Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Lift Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4311-83")]
        Item4311_83,
        
        /// <summary>
        /// <para>REFRIGERATION AND AIRCONDITIONING MECHANICS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REFRIGERATION AND AIRCONDITIONING MECHANICS")]
        [System.Xml.Serialization.XmlEnumAttribute("4312")]
        Item4312,
        
        /// <summary>
        /// <para>Supervisor, Refrigeration and Airconditioning Mechanics</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Refrigeration and Airconditioning Mechanics")]
        [System.Xml.Serialization.XmlEnumAttribute("4312-01")]
        Item4312_01,
        
        /// <summary>
        /// <para>Refrigeration and Airconditioning Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refrigeration and Airconditioning Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4312-11")]
        Item4312_11,
        
        /// <summary>
        /// <para>Apprentice Refrigeration and Airconditioning Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Refrigeration and Airconditioning Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4312-81")]
        Item4312_81,
        
        /// <summary>
        /// <para>ELECTRICAL DISTRIBUTION TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL DISTRIBUTION TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4313")]
        Item4313,
        
        /// <summary>
        /// <para>Supervisor, Electrical Distribution Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Electrical Distribution Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4313-01")]
        Item4313_01,
        
        /// <summary>
        /// <para>Electrical Powerline Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Powerline Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4313-11")]
        Item4313_11,
        
        /// <summary>
        /// <para>Cable Jointer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cable Jointer")]
        [System.Xml.Serialization.XmlEnumAttribute("4313-13")]
        Item4313_13,
        
        /// <summary>
        /// <para>Apprentice Electrical Powerline Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Electrical Powerline Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4313-81")]
        Item4313_81,
        
        /// <summary>
        /// <para>Apprentice Cable Jointer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Cable Jointer")]
        [System.Xml.Serialization.XmlEnumAttribute("4313-83")]
        Item4313_83,
        
        /// <summary>
        /// <para>ELECTRONIC INSTRUMENT TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRONIC INSTRUMENT TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4314")]
        Item4314,
        
        /// <summary>
        /// <para>Supervisor, Electronic Instrument Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Electronic Instrument Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4314-01")]
        Item4314_01,
        
        /// <summary>
        /// <para>General Electronic Instrument Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Electronic Instrument Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4314-11")]
        Item4314_11,
        
        /// <summary>
        /// <para>Electronic Instrument Tradesperson (Special Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Instrument Tradesperson (Special Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("4314-13")]
        Item4314_13,
        
        /// <summary>
        /// <para>Apprentice Electronic Instrument Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Electronic Instrument Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4314-81")]
        Item4314_81,
        
        /// <summary>
        /// <para>ELECTRONIC AND OFFICE EQUIPMENT TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRONIC AND OFFICE EQUIPMENT TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4315")]
        Item4315,
        
        /// <summary>
        /// <para>Supervisor, Electronic and Office Equipment Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Electronic and Office Equipment Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4315-01")]
        Item4315_01,
        
        /// <summary>
        /// <para>Electronic Equipment Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Equipment Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4315-11")]
        Item4315_11,
        
        /// <summary>
        /// <para>Business Machine Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business Machine Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4315-13")]
        Item4315_13,
        
        /// <summary>
        /// <para>Apprentice Electronic Equipment Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Electronic Equipment Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4315-81")]
        Item4315_81,
        
        /// <summary>
        /// <para>Apprentice Business Machine Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Business Machine Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4315-83")]
        Item4315_83,
        
        /// <summary>
        /// <para>COMMUNICATIONS TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COMMUNICATIONS TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4316")]
        Item4316,
        
        /// <summary>
        /// <para>Supervisor, Communications Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Communications Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4316-01")]
        Item4316_01,
        
        /// <summary>
        /// <para>General Communications Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Communications Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4316-11")]
        Item4316_11,
        
        /// <summary>
        /// <para>Communications Linesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Communications Linesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4316-13")]
        Item4316_13,
        
        /// <summary>
        /// <para>Apprentice General Communications Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice General Communications Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4316-81")]
        Item4316_81,
        
        /// <summary>
        /// <para>Apprentice Communications Linesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Communications Linesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4316-83")]
        Item4316_83,
        
        /// <summary>
        /// <para>CONSTRUCTION TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CONSTRUCTION TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("44")]
        Item44,
        
        /// <summary>
        /// <para>STRUCTURAL CONSTRUCTION TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STRUCTURAL CONSTRUCTION TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("441")]
        Item441,
        
        /// <summary>
        /// <para>CARPENTRY AND JOINERY TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CARPENTRY AND JOINERY TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4411")]
        Item4411,
        
        /// <summary>
        /// <para>Supervisor, Carpentry and Joinery Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Carpentry and Joinery Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-01")]
        Item4411_01,
        
        /// <summary>
        /// <para>Carpenter and Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpenter and Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-11")]
        Item4411_11,
        
        /// <summary>
        /// <para>Carpenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpenter")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-13")]
        Item4411_13,
        
        /// <summary>
        /// <para>Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-15")]
        Item4411_15,
        
        /// <summary>
        /// <para>Apprentice Carpenter and Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Carpenter and Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-81")]
        Item4411_81,
        
        /// <summary>
        /// <para>Apprentice Carpenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Carpenter")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-83")]
        Item4411_83,
        
        /// <summary>
        /// <para>Apprentice Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("4411-85")]
        Item4411_85,
        
        /// <summary>
        /// <para>FIBROUS PLASTERERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIBROUS PLASTERERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4412")]
        Item4412,
        
        /// <summary>
        /// <para>Supervisor, Fibrous Plasterers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Fibrous Plasterers")]
        [System.Xml.Serialization.XmlEnumAttribute("4412-01")]
        Item4412_01,
        
        /// <summary>
        /// <para>Fibrous Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fibrous Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("4412-11")]
        Item4412_11,
        
        /// <summary>
        /// <para>Apprentice Fibrous Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Fibrous Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("4412-81")]
        Item4412_81,
        
        /// <summary>
        /// <para>ROOF SLATERS AND TILERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROOF SLATERS AND TILERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4413")]
        Item4413,
        
        /// <summary>
        /// <para>Supervisor, Roof Slaters and Tilers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Roof Slaters and Tilers")]
        [System.Xml.Serialization.XmlEnumAttribute("4413-01")]
        Item4413_01,
        
        /// <summary>
        /// <para>Roof Slater and Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roof Slater and Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("4413-11")]
        Item4413_11,
        
        /// <summary>
        /// <para>Apprentice Roof Slater and Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Roof Slater and Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("4413-81")]
        Item4413_81,
        
        /// <summary>
        /// <para>BRICKLAYERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BRICKLAYERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4414")]
        Item4414,
        
        /// <summary>
        /// <para>Supervisor, Bricklayers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Bricklayers")]
        [System.Xml.Serialization.XmlEnumAttribute("4414-01")]
        Item4414_01,
        
        /// <summary>
        /// <para>Bricklayer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bricklayer")]
        [System.Xml.Serialization.XmlEnumAttribute("4414-11")]
        Item4414_11,
        
        /// <summary>
        /// <para>Apprentice Bricklayer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Bricklayer")]
        [System.Xml.Serialization.XmlEnumAttribute("4414-81")]
        Item4414_81,
        
        /// <summary>
        /// <para>SOLID PLASTERERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SOLID PLASTERERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4415")]
        Item4415,
        
        /// <summary>
        /// <para>Supervisor, Solid Plasterers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Solid Plasterers")]
        [System.Xml.Serialization.XmlEnumAttribute("4415-01")]
        Item4415_01,
        
        /// <summary>
        /// <para>Solid Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solid Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("4415-11")]
        Item4415_11,
        
        /// <summary>
        /// <para>Apprentice Solid Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Solid Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("4415-81")]
        Item4415_81,
        
        /// <summary>
        /// <para>WALL AND FLOOR TILERS AND STONEMASONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WALL AND FLOOR TILERS AND STONEMASONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4416")]
        Item4416,
        
        /// <summary>
        /// <para>Supervisor, Wall and Floor Tilers and Stonemasons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Wall and Floor Tilers and Stonemasons")]
        [System.Xml.Serialization.XmlEnumAttribute("4416-01")]
        Item4416_01,
        
        /// <summary>
        /// <para>Wall and Floor Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wall and Floor Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("4416-11")]
        Item4416_11,
        
        /// <summary>
        /// <para>Stonemason</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stonemason")]
        [System.Xml.Serialization.XmlEnumAttribute("4416-13")]
        Item4416_13,
        
        /// <summary>
        /// <para>Apprentice Wall and Floor Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Wall and Floor Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("4416-81")]
        Item4416_81,
        
        /// <summary>
        /// <para>Apprentice Stonemason</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Stonemason")]
        [System.Xml.Serialization.XmlEnumAttribute("4416-83")]
        Item4416_83,
        
        /// <summary>
        /// <para>FINAL FINISHES CONSTRUCTION TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FINAL FINISHES CONSTRUCTION TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("442")]
        Item442,
        
        /// <summary>
        /// <para>PAINTERS AND DECORATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAINTERS AND DECORATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("4421")]
        Item4421,
        
        /// <summary>
        /// <para>Supervisor, Painters and Decorators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Painters and Decorators")]
        [System.Xml.Serialization.XmlEnumAttribute("4421-01")]
        Item4421_01,
        
        /// <summary>
        /// <para>Painter and Decorator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Painter and Decorator")]
        [System.Xml.Serialization.XmlEnumAttribute("4421-11")]
        Item4421_11,
        
        /// <summary>
        /// <para>Apprentice Painter and Decorator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Painter and Decorator")]
        [System.Xml.Serialization.XmlEnumAttribute("4421-81")]
        Item4421_81,
        
        /// <summary>
        /// <para>SIGNWRITERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SIGNWRITERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4422")]
        Item4422,
        
        /// <summary>
        /// <para>Supervisor, Signwriters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Signwriters")]
        [System.Xml.Serialization.XmlEnumAttribute("4422-01")]
        Item4422_01,
        
        /// <summary>
        /// <para>Signwriter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Signwriter")]
        [System.Xml.Serialization.XmlEnumAttribute("4422-11")]
        Item4422_11,
        
        /// <summary>
        /// <para>Apprentice Signwriter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Signwriter")]
        [System.Xml.Serialization.XmlEnumAttribute("4422-81")]
        Item4422_81,
        
        /// <summary>
        /// <para>FLOOR FINISHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FLOOR FINISHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4423")]
        Item4423,
        
        /// <summary>
        /// <para>Supervisor, Floor Finishers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Floor Finishers")]
        [System.Xml.Serialization.XmlEnumAttribute("4423-01")]
        Item4423_01,
        
        /// <summary>
        /// <para>Floor Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floor Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4423-11")]
        Item4423_11,
        
        /// <summary>
        /// <para>Apprentice Floor Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Floor Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4423-81")]
        Item4423_81,
        
        /// <summary>
        /// <para>PLUMBERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PLUMBERS")]
        [System.Xml.Serialization.XmlEnumAttribute("443")]
        Item443,
        
        /// <summary>
        /// <para>PLUMBERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PLUMBERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4431")]
        Item4431,
        
        /// <summary>
        /// <para>Supervisor, Plumbers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Plumbers")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-01")]
        Item4431_01,
        
        /// <summary>
        /// <para>General Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-11")]
        Item4431_11,
        
        /// <summary>
        /// <para>Gasfitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gasfitter")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-13")]
        Item4431_13,
        
        /// <summary>
        /// <para>Drainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drainer")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-15")]
        Item4431_15,
        
        /// <summary>
        /// <para>Roof Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roof Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-17")]
        Item4431_17,
        
        /// <summary>
        /// <para>Mechanical Services and Airconditioning Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Services and Airconditioning Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-19")]
        Item4431_19,
        
        /// <summary>
        /// <para>Apprentice General Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice General Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-81")]
        Item4431_81,
        
        /// <summary>
        /// <para>Apprentice Gasfitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Gasfitter")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-83")]
        Item4431_83,
        
        /// <summary>
        /// <para>Apprentice Drainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Drainer")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-85")]
        Item4431_85,
        
        /// <summary>
        /// <para>Apprentice Roof Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Roof Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-87")]
        Item4431_87,
        
        /// <summary>
        /// <para>Apprentice Mechanical Services and Airconditioning Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Mechanical Services and Airconditioning Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("4431-89")]
        Item4431_89,
        
        /// <summary>
        /// <para>FOOD TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FOOD TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("45")]
        Item45,
        
        /// <summary>
        /// <para>FOOD TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FOOD TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("451")]
        Item451,
        
        /// <summary>
        /// <para>MEAT TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEAT TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4511")]
        Item4511,
        
        /// <summary>
        /// <para>Supervisor, Meat Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Meat Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-01")]
        Item4511_01,
        
        /// <summary>
        /// <para>Butcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Butcher")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-11")]
        Item4511_11,
        
        /// <summary>
        /// <para>Smallgoods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Smallgoods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-13")]
        Item4511_13,
        
        /// <summary>
        /// <para>Slaughterperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Slaughterperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-15")]
        Item4511_15,
        
        /// <summary>
        /// <para>Apprentice Butcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Butcher")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-81")]
        Item4511_81,
        
        /// <summary>
        /// <para>Apprentice Smallgoods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Smallgoods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-83")]
        Item4511_83,
        
        /// <summary>
        /// <para>Apprentice Slaughterperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Slaughterperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4511-85")]
        Item4511_85,
        
        /// <summary>
        /// <para>BAKERS AND PASTRYCOOKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAKERS AND PASTRYCOOKS")]
        [System.Xml.Serialization.XmlEnumAttribute("4512")]
        Item4512,
        
        /// <summary>
        /// <para>Supervisor, Bakers and Pastrycooks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Bakers and Pastrycooks")]
        [System.Xml.Serialization.XmlEnumAttribute("4512-01")]
        Item4512_01,
        
        /// <summary>
        /// <para>Baker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Baker")]
        [System.Xml.Serialization.XmlEnumAttribute("4512-11")]
        Item4512_11,
        
        /// <summary>
        /// <para>Pastrycook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pastrycook")]
        [System.Xml.Serialization.XmlEnumAttribute("4512-13")]
        Item4512_13,
        
        /// <summary>
        /// <para>Apprentice Baker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Baker")]
        [System.Xml.Serialization.XmlEnumAttribute("4512-81")]
        Item4512_81,
        
        /// <summary>
        /// <para>Apprentice Pastrycook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Pastrycook")]
        [System.Xml.Serialization.XmlEnumAttribute("4512-83")]
        Item4512_83,
        
        /// <summary>
        /// <para>COOKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COOKS")]
        [System.Xml.Serialization.XmlEnumAttribute("4513")]
        Item4513,
        
        /// <summary>
        /// <para>Cook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cook")]
        [System.Xml.Serialization.XmlEnumAttribute("4513-11")]
        Item4513_11,
        
        /// <summary>
        /// <para>Apprentice Cook or Chef</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Cook or Chef")]
        [System.Xml.Serialization.XmlEnumAttribute("4513-81")]
        Item4513_81,
        
        /// <summary>
        /// <para>OTHER FOOD TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER FOOD TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4519")]
        Item4519,
        
        /// <summary>
        /// <para>Miller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miller")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-11")]
        Item4519_11,
        
        /// <summary>
        /// <para>Buttermaker or Cheesemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Buttermaker or Cheesemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-13")]
        Item4519_13,
        
        /// <summary>
        /// <para>Confectioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Confectioner")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-15")]
        Item4519_15,
        
        /// <summary>
        /// <para>Apprentice Miller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Miller")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-81")]
        Item4519_81,
        
        /// <summary>
        /// <para>Apprentice Buttermaker or Cheesemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Buttermaker or Cheesemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-83")]
        Item4519_83,
        
        /// <summary>
        /// <para>Apprentice Confectioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Confectioner")]
        [System.Xml.Serialization.XmlEnumAttribute("4519-85")]
        Item4519_85,
        
        /// <summary>
        /// <para>SKILLED AGRICULTURAL AND HORTICULTURAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SKILLED AGRICULTURAL AND HORTICULTURAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("46")]
        Item46,
        
        /// <summary>
        /// <para>SKILLED AGRICULTURAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SKILLED AGRICULTURAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("461")]
        Item461,
        
        /// <summary>
        /// <para>FARM OVERSEERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FARM OVERSEERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4611")]
        Item4611,
        
        /// <summary>
        /// <para>Farm Overseer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farm Overseer")]
        [System.Xml.Serialization.XmlEnumAttribute("4611-11")]
        Item4611_11,
        
        /// <summary>
        /// <para>SHEARERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SHEARERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4612")]
        Item4612,
        
        /// <summary>
        /// <para>Shearer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shearer")]
        [System.Xml.Serialization.XmlEnumAttribute("4612-11")]
        Item4612_11,
        
        /// <summary>
        /// <para>WOOL, HIDE AND SKIN CLASSERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WOOL, HIDE AND SKIN CLASSERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4613")]
        Item4613,
        
        /// <summary>
        /// <para>Wool Classer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Classer")]
        [System.Xml.Serialization.XmlEnumAttribute("4613-11")]
        Item4613_11,
        
        /// <summary>
        /// <para>Hide and Skin Classer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hide and Skin Classer")]
        [System.Xml.Serialization.XmlEnumAttribute("4613-13")]
        Item4613_13,
        
        /// <summary>
        /// <para>ANIMAL TRAINERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ANIMAL TRAINERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4614")]
        Item4614,
        
        /// <summary>
        /// <para>Horse Trainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Trainer")]
        [System.Xml.Serialization.XmlEnumAttribute("4614-11")]
        Item4614_11,
        
        /// <summary>
        /// <para>Animal Trainers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Animal Trainers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4614-79")]
        Item4614_79,
        
        /// <summary>
        /// <para>HORTICULTURAL TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HORTICULTURAL TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("462")]
        Item462,
        
        /// <summary>
        /// <para>NURSERYPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NURSERYPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4621")]
        Item4621,
        
        /// <summary>
        /// <para>Nurseryperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurseryperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4621-11")]
        Item4621_11,
        
        /// <summary>
        /// <para>Apprentice Nurseryperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Nurseryperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4621-81")]
        Item4621_81,
        
        /// <summary>
        /// <para>GREENKEEPERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GREENKEEPERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4622")]
        Item4622,
        
        /// <summary>
        /// <para>Greenkeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Greenkeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("4622-11")]
        Item4622_11,
        
        /// <summary>
        /// <para>Apprentice Greenkeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Greenkeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("4622-81")]
        Item4622_81,
        
        /// <summary>
        /// <para>GARDENERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GARDENERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4623")]
        Item4623,
        
        /// <summary>
        /// <para>Head Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Head Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-01")]
        Item4623_01,
        
        /// <summary>
        /// <para>General Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-11")]
        Item4623_11,
        
        /// <summary>
        /// <para>Landscape Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landscape Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-13")]
        Item4623_13,
        
        /// <summary>
        /// <para>Tree Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tree Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-15")]
        Item4623_15,
        
        /// <summary>
        /// <para>Apprentice General Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice General Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-81")]
        Item4623_81,
        
        /// <summary>
        /// <para>Apprentice Landscape Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Landscape Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-83")]
        Item4623_83,
        
        /// <summary>
        /// <para>Apprentice Tree Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Tree Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("4623-85")]
        Item4623_85,
        
        /// <summary>
        /// <para>OTHER TRADESPERSONS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER TRADESPERSONS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("49")]
        Item49,
        
        /// <summary>
        /// <para>PRINTING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRINTING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("491")]
        Item491,
        
        /// <summary>
        /// <para>GRAPHIC PRE-PRESS TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GRAPHIC PRE-PRESS TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4911")]
        Item4911,
        
        /// <summary>
        /// <para>Graphic Pre-Press Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Graphic Pre-Press Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4911-11")]
        Item4911_11,
        
        /// <summary>
        /// <para>Apprentice Graphic Pre-Press Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Graphic Pre-Press Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4911-81")]
        Item4911_81,
        
        /// <summary>
        /// <para>PRINTING MACHINISTS AND SMALL OFFSET PRINTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRINTING MACHINISTS AND SMALL OFFSET PRINTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4912")]
        Item4912,
        
        /// <summary>
        /// <para>Printing Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("4912-11")]
        Item4912_11,
        
        /// <summary>
        /// <para>Small Offset Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Small Offset Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("4912-13")]
        Item4912_13,
        
        /// <summary>
        /// <para>Apprentice Printing Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Printing Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("4912-81")]
        Item4912_81,
        
        /// <summary>
        /// <para>Apprentice Small Offset Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Small Offset Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("4912-83")]
        Item4912_83,
        
        /// <summary>
        /// <para>BINDERS AND FINISHERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BINDERS AND FINISHERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4913")]
        Item4913,
        
        /// <summary>
        /// <para>Binder and Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Binder and Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4913-11")]
        Item4913_11,
        
        /// <summary>
        /// <para>Apprentice Binder and Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Binder and Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4913-81")]
        Item4913_81,
        
        /// <summary>
        /// <para>SCREEN PRINTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SCREEN PRINTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4914")]
        Item4914,
        
        /// <summary>
        /// <para>Screen Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Screen Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("4914-11")]
        Item4914_11,
        
        /// <summary>
        /// <para>Apprentice Screen Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Screen Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("4914-81")]
        Item4914_81,
        
        /// <summary>
        /// <para>WOOD TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WOOD TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("492")]
        Item492,
        
        /// <summary>
        /// <para>WOOD MACHINISTS AND TURNERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WOOD MACHINISTS AND TURNERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4921")]
        Item4921,
        
        /// <summary>
        /// <para>Wood Machinist (A-Grade)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Machinist (A-Grade)")]
        [System.Xml.Serialization.XmlEnumAttribute("4921-11")]
        Item4921_11,
        
        /// <summary>
        /// <para>Wood Turner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Turner")]
        [System.Xml.Serialization.XmlEnumAttribute("4921-13")]
        Item4921_13,
        
        /// <summary>
        /// <para>Apprentice Wood Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Wood Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("4921-81")]
        Item4921_81,
        
        /// <summary>
        /// <para>Apprentice Wood Turner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Wood Turner")]
        [System.Xml.Serialization.XmlEnumAttribute("4921-83")]
        Item4921_83,
        
        /// <summary>
        /// <para>CABINETMAKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CABINETMAKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4922")]
        Item4922,
        
        /// <summary>
        /// <para>Supervisor, Cabinetmakers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Cabinetmakers")]
        [System.Xml.Serialization.XmlEnumAttribute("4922-01")]
        Item4922_01,
        
        /// <summary>
        /// <para>Cabinetmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cabinetmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4922-11")]
        Item4922_11,
        
        /// <summary>
        /// <para>Apprentice Cabinetmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Cabinetmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4922-81")]
        Item4922_81,
        
        /// <summary>
        /// <para>OTHER WOOD TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER WOOD TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4929")]
        Item4929,
        
        /// <summary>
        /// <para>Picture Framer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Picture Framer")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-11")]
        Item4929_11,
        
        /// <summary>
        /// <para>Furniture Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-13")]
        Item4929_13,
        
        /// <summary>
        /// <para>Wood Tradespersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Tradespersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-79")]
        Item4929_79,
        
        /// <summary>
        /// <para>Apprentice Picture Framer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Picture Framer")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-81")]
        Item4929_81,
        
        /// <summary>
        /// <para>Apprentice Furniture Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Furniture Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-83")]
        Item4929_83,
        
        /// <summary>
        /// <para>Apprentice Wood Tradespersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Wood Tradespersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4929-99")]
        Item4929_99,
        
        /// <summary>
        /// <para>HAIRDRESSERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAIRDRESSERS")]
        [System.Xml.Serialization.XmlEnumAttribute("493")]
        Item493,
        
        /// <summary>
        /// <para>HAIRDRESSERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAIRDRESSERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4931")]
        Item4931,
        
        /// <summary>
        /// <para>Supervisor, Hairdressers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Hairdressers")]
        [System.Xml.Serialization.XmlEnumAttribute("4931-01")]
        Item4931_01,
        
        /// <summary>
        /// <para>Hairdresser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hairdresser")]
        [System.Xml.Serialization.XmlEnumAttribute("4931-11")]
        Item4931_11,
        
        /// <summary>
        /// <para>Apprentice Hairdresser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Hairdresser")]
        [System.Xml.Serialization.XmlEnumAttribute("4931-81")]
        Item4931_81,
        
        /// <summary>
        /// <para>TEXTILE, CLOTHING AND RELATED TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TEXTILE, CLOTHING AND RELATED TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("494")]
        Item494,
        
        /// <summary>
        /// <para>CLOTHING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLOTHING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4941")]
        Item4941,
        
        /// <summary>
        /// <para>General Clothing Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Clothing Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-11")]
        Item4941_11,
        
        /// <summary>
        /// <para>Tailor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tailor")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-13")]
        Item4941_13,
        
        /// <summary>
        /// <para>Dressmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dressmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-15")]
        Item4941_15,
        
        /// <summary>
        /// <para>Apparel Cutter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apparel Cutter")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-17")]
        Item4941_17,
        
        /// <summary>
        /// <para>Patternmaker-Grader (Clothing)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Patternmaker-Grader (Clothing)")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-19")]
        Item4941_19,
        
        /// <summary>
        /// <para>Clothing Tradespersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Tradespersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-79")]
        Item4941_79,
        
        /// <summary>
        /// <para>Apprentice Clothing Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Clothing Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4941-81")]
        Item4941_81,
        
        /// <summary>
        /// <para>UPHOLSTERERS AND BEDDING TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UPHOLSTERERS AND BEDDING TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4942")]
        Item4942,
        
        /// <summary>
        /// <para>Furniture Upholsterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Upholsterer")]
        [System.Xml.Serialization.XmlEnumAttribute("4942-11")]
        Item4942_11,
        
        /// <summary>
        /// <para>Upholsterers and Bedding Tradespersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upholsterers and Bedding Tradespersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4942-79")]
        Item4942_79,
        
        /// <summary>
        /// <para>Apprentice Upholsterer or Bedding Tradespersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Upholsterer or Bedding Tradespersons")]
        [System.Xml.Serialization.XmlEnumAttribute("4942-81")]
        Item4942_81,
        
        /// <summary>
        /// <para>FOOTWEAR TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FOOTWEAR TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4943")]
        Item4943,
        
        /// <summary>
        /// <para>Shoemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shoemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4943-11")]
        Item4943_11,
        
        /// <summary>
        /// <para>Medical Grade Shoemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Grade Shoemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4943-13")]
        Item4943_13,
        
        /// <summary>
        /// <para>Apprentice Shoemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Shoemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("4943-81")]
        Item4943_81,
        
        /// <summary>
        /// <para>LEATHER GOODS, CANVAS GOODS AND SAIL MAKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LEATHER GOODS, CANVAS GOODS AND SAIL MAKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4944")]
        Item4944,
        
        /// <summary>
        /// <para>Leather Goods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leather Goods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4944-11")]
        Item4944_11,
        
        /// <summary>
        /// <para>Canvas Goods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Canvas Goods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4944-13")]
        Item4944_13,
        
        /// <summary>
        /// <para>Sail Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sail Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4944-15")]
        Item4944_15,
        
        /// <summary>
        /// <para>Apprentice Leather Goods, Canvas Goods or Sail Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Leather Goods, Canvas Goods or Sail Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("4944-81")]
        Item4944_81,
        
        /// <summary>
        /// <para>MISCELLANEOUS TRADESPERSONS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS TRADESPERSONS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("498")]
        Item498,
        
        /// <summary>
        /// <para>MARINE CONSTRUCTION TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MARINE CONSTRUCTION TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4981")]
        Item4981,
        
        /// <summary>
        /// <para>Shipwright</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shipwright")]
        [System.Xml.Serialization.XmlEnumAttribute("4981-11")]
        Item4981_11,
        
        /// <summary>
        /// <para>Boat Builder and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boat Builder and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("4981-13")]
        Item4981_13,
        
        /// <summary>
        /// <para>Apprentice Shipwright</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Shipwright")]
        [System.Xml.Serialization.XmlEnumAttribute("4981-81")]
        Item4981_81,
        
        /// <summary>
        /// <para>Apprentice Boat Builder and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Boat Builder and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("4981-83")]
        Item4981_83,
        
        /// <summary>
        /// <para>GLASS TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GLASS TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4982")]
        Item4982,
        
        /// <summary>
        /// <para>Flat Glass Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flat Glass Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4982-11")]
        Item4982_11,
        
        /// <summary>
        /// <para>Glass Blower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass Blower")]
        [System.Xml.Serialization.XmlEnumAttribute("4982-13")]
        Item4982_13,
        
        /// <summary>
        /// <para>Apprentice Flat Glass Tradesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Flat Glass Tradesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("4982-81")]
        Item4982_81,
        
        /// <summary>
        /// <para>Apprentice Glass Blower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Glass Blower")]
        [System.Xml.Serialization.XmlEnumAttribute("4982-83")]
        Item4982_83,
        
        /// <summary>
        /// <para>JEWELLERS AND RELATED TRADESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("JEWELLERS AND RELATED TRADESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("4983")]
        Item4983,
        
        /// <summary>
        /// <para>Jeweller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeweller")]
        [System.Xml.Serialization.XmlEnumAttribute("4983-11")]
        Item4983_11,
        
        /// <summary>
        /// <para>Gem Cutter and Polisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gem Cutter and Polisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4983-13")]
        Item4983_13,
        
        /// <summary>
        /// <para>Apprentice Jeweller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Jeweller")]
        [System.Xml.Serialization.XmlEnumAttribute("4983-81")]
        Item4983_81,
        
        /// <summary>
        /// <para>Apprentice Gem Cutter and Polisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apprentice Gem Cutter and Polisher")]
        [System.Xml.Serialization.XmlEnumAttribute("4983-83")]
        Item4983_83,
        
        /// <summary>
        /// <para>FLORISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FLORISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("4984")]
        Item4984,
        
        /// <summary>
        /// <para>Florist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Florist")]
        [System.Xml.Serialization.XmlEnumAttribute("4984-11")]
        Item4984_11,
        
        /// <summary>
        /// <para>FIRE FIGHTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FIRE FIGHTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4985")]
        Item4985,
        
        /// <summary>
        /// <para>Fire Fighter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire Fighter")]
        [System.Xml.Serialization.XmlEnumAttribute("4985-11")]
        Item4985_11,
        
        /// <summary>
        /// <para>DRILLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DRILLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4986")]
        Item4986,
        
        /// <summary>
        /// <para>Supervisor, Drillers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Drillers")]
        [System.Xml.Serialization.XmlEnumAttribute("4986-01")]
        Item4986_01,
        
        /// <summary>
        /// <para>Driller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driller")]
        [System.Xml.Serialization.XmlEnumAttribute("4986-11")]
        Item4986_11,
        
        /// <summary>
        /// <para>CHEMICAL, PETROLEUM AND GAS PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHEMICAL, PETROLEUM AND GAS PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("4987")]
        Item4987,
        
        /// <summary>
        /// <para>Supervisor, Chemical, Petroleum and Gas Plant Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Chemical, Petroleum and Gas Plant Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("4987-01")]
        Item4987_01,
        
        /// <summary>
        /// <para>Chemical Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("4987-11")]
        Item4987_11,
        
        /// <summary>
        /// <para>Petroleum and Gas Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum and Gas Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("4987-13")]
        Item4987_13,
        
        /// <summary>
        /// <para>POWER GENERATION PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("POWER GENERATION PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("4988")]
        Item4988,
        
        /// <summary>
        /// <para>Supervisor, Power Generation Plant Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Power Generation Plant Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("4988-01")]
        Item4988_01,
        
        /// <summary>
        /// <para>Power Generation Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Power Generation Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("4988-11")]
        Item4988_11,
        
        /// <summary>
        /// <para>DEFENCE FORCE MEMBERS NOT ELSEWHERE INCLUDED</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DEFENCE FORCE MEMBERS NOT ELSEWHERE INCLUDED")]
        [System.Xml.Serialization.XmlEnumAttribute("4991")]
        Item4991,
        
        /// <summary>
        /// <para>Defence Force Member Not Elsewhere Included</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defence Force Member Not Elsewhere Included")]
        [System.Xml.Serialization.XmlEnumAttribute("4991-11")]
        Item4991_11,
        
        /// <summary>
        /// <para>Trainee Defence Force Member Not Elsewhere Included</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trainee Defence Force Member Not Elsewhere Included")]
        [System.Xml.Serialization.XmlEnumAttribute("4991-81")]
        Item4991_81,
        
        /// <summary>
        /// <para>PERFORMING ARTS SUPPORT WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERFORMING ARTS SUPPORT WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4992")]
        Item4992,
        
        /// <summary>
        /// <para>Sound Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sound Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-11")]
        Item4992_11,
        
        /// <summary>
        /// <para>Camera Operator (Film, Television or Video)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Camera Operator (Film, Television or Video)")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-13")]
        Item4992_13,
        
        /// <summary>
        /// <para>Television Equipment Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Equipment Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-15")]
        Item4992_15,
        
        /// <summary>
        /// <para>Broadcast Transmitter Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Broadcast Transmitter Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-17")]
        Item4992_17,
        
        /// <summary>
        /// <para>Motion Picture Projectionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture Projectionist")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-19")]
        Item4992_19,
        
        /// <summary>
        /// <para>Light Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Light Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-21")]
        Item4992_21,
        
        /// <summary>
        /// <para>Production Assistant (Film, Television or Radio)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Assistant (Film, Television or Radio)")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-23")]
        Item4992_23,
        
        /// <summary>
        /// <para>Production Assistant (Theatre)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Assistant (Theatre)")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-25")]
        Item4992_25,
        
        /// <summary>
        /// <para>Make Up Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Make Up Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-27")]
        Item4992_27,
        
        /// <summary>
        /// <para>Performing Arts Support Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Performing Arts Support Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4992-79")]
        Item4992_79,
        
        /// <summary>
        /// <para>OTHER MISCELLANEOUS TRADESPERSONS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MISCELLANEOUS TRADESPERSONS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("4999")]
        Item4999,
        
        /// <summary>
        /// <para>Optical Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optical Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("4999-11")]
        Item4999_11,
        
        /// <summary>
        /// <para>Diver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diver")]
        [System.Xml.Serialization.XmlEnumAttribute("4999-13")]
        Item4999_13,
        
        /// <summary>
        /// <para>Aircraft Safety Equipment Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Safety Equipment Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("4999-15")]
        Item4999_15,
        
        /// <summary>
        /// <para>Piano Tuner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Piano Tuner")]
        [System.Xml.Serialization.XmlEnumAttribute("4999-17")]
        Item4999_17,
        
        /// <summary>
        /// <para>Tradespersons and Related Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tradespersons and Related Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("4999-79")]
        Item4999_79,
        
        /// <summary>
        /// <para>ADVANCED CLERICAL AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ADVANCED CLERICAL AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <summary>
        /// <para>SECRETARIES AND PERSONAL ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SECRETARIES AND PERSONAL ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("51")]
        Item51,
        
        /// <summary>
        /// <para>SECRETARIES AND PERSONAL ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SECRETARIES AND PERSONAL ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("511")]
        Item511,
        
        /// <summary>
        /// <para>SECRETARIES AND PERSONAL ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SECRETARIES AND PERSONAL ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("5111")]
        Item5111,
        
        /// <summary>
        /// <para>Secretary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secretary")]
        [System.Xml.Serialization.XmlEnumAttribute("5111-11")]
        Item5111_11,
        
        /// <summary>
        /// <para>Personal Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("5111-13")]
        Item5111_13,
        
        /// <summary>
        /// <para>OTHER ADVANCED CLERICAL AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER ADVANCED CLERICAL AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("59")]
        Item59,
        
        /// <summary>
        /// <para>ADVANCED NUMERICAL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ADVANCED NUMERICAL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("591")]
        Item591,
        
        /// <summary>
        /// <para>BOOKKEEPERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BOOKKEEPERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5911")]
        Item5911,
        
        /// <summary>
        /// <para>Bookkeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookkeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("5911-11")]
        Item5911_11,
        
        /// <summary>
        /// <para>CREDIT AND LOANS OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CREDIT AND LOANS OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5912")]
        Item5912,
        
        /// <summary>
        /// <para>Credit and Loans Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit and Loans Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("5912-11")]
        Item5912_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS ADVANCED CLERICAL AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS ADVANCED CLERICAL AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("599")]
        Item599,
        
        /// <summary>
        /// <para>ADVANCED LEGAL AND RELATED CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ADVANCED LEGAL AND RELATED CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("5991")]
        Item5991,
        
        /// <summary>
        /// <para>Clerk of Court</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerk of Court")]
        [System.Xml.Serialization.XmlEnumAttribute("5991-11")]
        Item5991_11,
        
        /// <summary>
        /// <para>Law Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Law Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("5991-13")]
        Item5991_13,
        
        /// <summary>
        /// <para>Trust Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trust Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("5991-15")]
        Item5991_15,
        
        /// <summary>
        /// <para>COURT AND HANSARD REPORTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("COURT AND HANSARD REPORTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5992")]
        Item5992,
        
        /// <summary>
        /// <para>Court or Hansard Reporter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court or Hansard Reporter")]
        [System.Xml.Serialization.XmlEnumAttribute("5992-11")]
        Item5992_11,
        
        /// <summary>
        /// <para>INSURANCE AGENTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INSURANCE AGENTS")]
        [System.Xml.Serialization.XmlEnumAttribute("5993")]
        Item5993,
        
        /// <summary>
        /// <para>Insurance Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("5993-11")]
        Item5993_11,
        
        /// <summary>
        /// <para>INSURANCE RISK SURVEYORS, INVESTIGATORS AND LOSS ADJUSTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INSURANCE RISK SURVEYORS, INVESTIGATORS AND LOSS ADJUSTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5994")]
        Item5994,
        
        /// <summary>
        /// <para>Insurance Risk Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Risk Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("5994-11")]
        Item5994_11,
        
        /// <summary>
        /// <para>Insurance Investigator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Investigator")]
        [System.Xml.Serialization.XmlEnumAttribute("5994-13")]
        Item5994_13,
        
        /// <summary>
        /// <para>Insurance Loss Adjuster</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Loss Adjuster")]
        [System.Xml.Serialization.XmlEnumAttribute("5994-15")]
        Item5994_15,
        
        /// <summary>
        /// <para>DESKTOP PUBLISHING OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DESKTOP PUBLISHING OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("5995")]
        Item5995,
        
        /// <summary>
        /// <para>Desktop Publishing Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Desktop Publishing Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("5995-11")]
        Item5995_11,
        
        /// <summary>
        /// <para>TRAVEL ATTENDANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRAVEL ATTENDANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("5996")]
        Item5996,
        
        /// <summary>
        /// <para>Flight Service Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flight Service Director")]
        [System.Xml.Serialization.XmlEnumAttribute("5996-11")]
        Item5996_11,
        
        /// <summary>
        /// <para>Flight Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flight Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("5996-13")]
        Item5996_13,
        
        /// <summary>
        /// <para>Travel Attendants nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Attendants nec")]
        [System.Xml.Serialization.XmlEnumAttribute("5996-79")]
        Item5996_79,
        
        /// <summary>
        /// <para>OTHER MISCELLANEOUS ADVANCED CLERICAL AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MISCELLANEOUS ADVANCED CLERICAL AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("5999")]
        Item5999,
        
        /// <summary>
        /// <para>Radio Despatcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Despatcher")]
        [System.Xml.Serialization.XmlEnumAttribute("5999-11")]
        Item5999_11,
        
        /// <summary>
        /// <para>Auctioneer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auctioneer")]
        [System.Xml.Serialization.XmlEnumAttribute("5999-13")]
        Item5999_13,
        
        /// <summary>
        /// <para>Visual Merchandiser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visual Merchandiser")]
        [System.Xml.Serialization.XmlEnumAttribute("5999-15")]
        Item5999_15,
        
        /// <summary>
        /// <para>Photographer's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographer\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("5999-17")]
        Item5999_17,
        
        /// <summary>
        /// <para>INTERMEDIATE CLERICAL, SALES AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE CLERICAL, SALES AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <summary>
        /// <para>INTERMEDIATE CLERICAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE CLERICAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("61")]
        Item61,
        
        /// <summary>
        /// <para>GENERAL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("611")]
        Item611,
        
        /// <summary>
        /// <para>GENERAL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GENERAL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6111")]
        Item6111,
        
        /// <summary>
        /// <para>General Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6111-11")]
        Item6111_11,
        
        /// <summary>
        /// <para>KEYBOARD OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KEYBOARD OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("612")]
        Item612,
        
        /// <summary>
        /// <para>KEYBOARD OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KEYBOARD OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("6121")]
        Item6121,
        
        /// <summary>
        /// <para>Typist and Word Processing Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Typist and Word Processing Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("6121-11")]
        Item6121_11,
        
        /// <summary>
        /// <para>Data Entry Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data Entry Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("6121-13")]
        Item6121_13,
        
        /// <summary>
        /// <para>RECEPTIONISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RECEPTIONISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("613")]
        Item613,
        
        /// <summary>
        /// <para>RECEPTIONISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RECEPTIONISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6131")]
        Item6131,
        
        /// <summary>
        /// <para>Receptionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Receptionist")]
        [System.Xml.Serialization.XmlEnumAttribute("6131-11")]
        Item6131_11,
        
        /// <summary>
        /// <para>INTERMEDIATE NUMERICAL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE NUMERICAL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("614")]
        Item614,
        
        /// <summary>
        /// <para>ACCOUNTING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ACCOUNTING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6141")]
        Item6141,
        
        /// <summary>
        /// <para>Supervisor, Accounting Clerks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Accounting Clerks")]
        [System.Xml.Serialization.XmlEnumAttribute("6141-01")]
        Item6141_01,
        
        /// <summary>
        /// <para>Accounts Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounts Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6141-11")]
        Item6141_11,
        
        /// <summary>
        /// <para>Credit Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6141-13")]
        Item6141_13,
        
        /// <summary>
        /// <para>Cost Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cost Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6141-15")]
        Item6141_15,
        
        /// <summary>
        /// <para>PAYROLL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAYROLL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6142")]
        Item6142,
        
        /// <summary>
        /// <para>Payroll Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payroll Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6142-11")]
        Item6142_11,
        
        /// <summary>
        /// <para>BANK WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BANK WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6143")]
        Item6143,
        
        /// <summary>
        /// <para>Supervisor, Bank Workers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Bank Workers")]
        [System.Xml.Serialization.XmlEnumAttribute("6143-01")]
        Item6143_01,
        
        /// <summary>
        /// <para>Bank Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("6143-11")]
        Item6143_11,
        
        /// <summary>
        /// <para>INSURANCE CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INSURANCE CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6144")]
        Item6144,
        
        /// <summary>
        /// <para>Supervisor, Insurance Clerks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Insurance Clerks")]
        [System.Xml.Serialization.XmlEnumAttribute("6144-01")]
        Item6144_01,
        
        /// <summary>
        /// <para>Insurance Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6144-11")]
        Item6144_11,
        
        /// <summary>
        /// <para>MONEY MARKET AND STATISTICAL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MONEY MARKET AND STATISTICAL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6145")]
        Item6145,
        
        /// <summary>
        /// <para>Supervisor, Money Market and Statistical Clerks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Money Market and Statistical Clerks")]
        [System.Xml.Serialization.XmlEnumAttribute("6145-01")]
        Item6145_01,
        
        /// <summary>
        /// <para>Money Market Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Money Market Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6145-11")]
        Item6145_11,
        
        /// <summary>
        /// <para>Statistical Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Statistical Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6145-13")]
        Item6145_13,
        
        /// <summary>
        /// <para>MATERIAL RECORDING AND DESPATCHING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MATERIAL RECORDING AND DESPATCHING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("615")]
        Item615,
        
        /// <summary>
        /// <para>PRODUCTION RECORDING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRODUCTION RECORDING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6151")]
        Item6151,
        
        /// <summary>
        /// <para>Production Recording Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Recording Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6151-11")]
        Item6151_11,
        
        /// <summary>
        /// <para>TRANSPORT AND DESPATCHING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRANSPORT AND DESPATCHING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6152")]
        Item6152,
        
        /// <summary>
        /// <para>Supervisor, Transport and Despatching Clerks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Transport and Despatching Clerks")]
        [System.Xml.Serialization.XmlEnumAttribute("6152-01")]
        Item6152_01,
        
        /// <summary>
        /// <para>Receiving and Despatching Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Receiving and Despatching Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6152-11")]
        Item6152_11,
        
        /// <summary>
        /// <para>Import-Export Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Import-Export Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6152-13")]
        Item6152_13,
        
        /// <summary>
        /// <para>STOCK AND PURCHASING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STOCK AND PURCHASING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6153")]
        Item6153,
        
        /// <summary>
        /// <para>Supervisor, Stock and Purchasing Clerks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Stock and Purchasing Clerks")]
        [System.Xml.Serialization.XmlEnumAttribute("6153-01")]
        Item6153_01,
        
        /// <summary>
        /// <para>Stock Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stock Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6153-11")]
        Item6153_11,
        
        /// <summary>
        /// <para>Purchasing Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchasing Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("6153-13")]
        Item6153_13,
        
        /// <summary>
        /// <para>Order Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Order Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6153-15")]
        Item6153_15,
        
        /// <summary>
        /// <para>Sales Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6153-17")]
        Item6153_17,
        
        /// <summary>
        /// <para>MISCELLANEOUS INTERMEDIATE CLERICAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS INTERMEDIATE CLERICAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("619")]
        Item619,
        
        /// <summary>
        /// <para>INQUIRY AND ADMISSIONS CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INQUIRY AND ADMISSIONS CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6191")]
        Item6191,
        
        /// <summary>
        /// <para>Inquiry Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inquiry Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6191-11")]
        Item6191_11,
        
        /// <summary>
        /// <para>Admissions Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Admissions Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6191-13")]
        Item6191_13,
        
        /// <summary>
        /// <para>LIBRARY ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LIBRARY ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6192")]
        Item6192,
        
        /// <summary>
        /// <para>Library Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Library Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("6192-11")]
        Item6192_11,
        
        /// <summary>
        /// <para>PERSONNEL CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERSONNEL CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("6193")]
        Item6193,
        
        /// <summary>
        /// <para>Personnel Records Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personnel Records Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6193-11")]
        Item6193_11,
        
        /// <summary>
        /// <para>Employment Office Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Employment Office Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6193-13")]
        Item6193_13,
        
        /// <summary>
        /// <para>INTERMEDIATE INSPECTORS AND EXAMINERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE INSPECTORS AND EXAMINERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6194")]
        Item6194,
        
        /// <summary>
        /// <para>Customs Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customs Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-11")]
        Item6194_11,
        
        /// <summary>
        /// <para>Taxation Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taxation Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-13")]
        Item6194_13,
        
        /// <summary>
        /// <para>Social Security Assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Security Assessor")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-15")]
        Item6194_15,
        
        /// <summary>
        /// <para>Motor Vehicle Licence Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Licence Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-17")]
        Item6194_17,
        
        /// <summary>
        /// <para>Transport Operations Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Operations Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-19")]
        Item6194_19,
        
        /// <summary>
        /// <para>Train Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-21")]
        Item6194_21,
        
        /// <summary>
        /// <para>Water Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-23")]
        Item6194_23,
        
        /// <summary>
        /// <para>Intermediate Inspectors and Examiners nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intermediate Inspectors and Examiners nec")]
        [System.Xml.Serialization.XmlEnumAttribute("6194-79")]
        Item6194_79,
        
        /// <summary>
        /// <para>OTHER INTERMEDIATE CLERICAL WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER INTERMEDIATE CLERICAL WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6199")]
        Item6199,
        
        /// <summary>
        /// <para>Proof Reader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Proof Reader")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-11")]
        Item6199_11,
        
        /// <summary>
        /// <para>Debt Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debt Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-13")]
        Item6199_13,
        
        /// <summary>
        /// <para>Mail Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mail Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-15")]
        Item6199_15,
        
        /// <summary>
        /// <para>Court Orderly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court Orderly")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-17")]
        Item6199_17,
        
        /// <summary>
        /// <para>Bailiff or Sheriff</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bailiff or Sheriff")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-19")]
        Item6199_19,
        
        /// <summary>
        /// <para>Coding Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Coding Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-21")]
        Item6199_21,
        
        /// <summary>
        /// <para>Intermediate Clerical Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intermediate Clerical Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("6199-79")]
        Item6199_79,
        
        /// <summary>
        /// <para>INTERMEDIATE SALES AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE SALES AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("62")]
        Item62,
        
        /// <summary>
        /// <para>INTERMEDIATE SALES AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE SALES AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("621")]
        Item621,
        
        /// <summary>
        /// <para>SALES REPRESENTATIVES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES REPRESENTATIVES")]
        [System.Xml.Serialization.XmlEnumAttribute("6211")]
        Item6211,
        
        /// <summary>
        /// <para>Sales Representative (Personal and Household Goods)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Personal and Household Goods)")]
        [System.Xml.Serialization.XmlEnumAttribute("6211-11")]
        Item6211_11,
        
        /// <summary>
        /// <para>Sales Representative (Business Services)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Business Services)")]
        [System.Xml.Serialization.XmlEnumAttribute("6211-13")]
        Item6211_13,
        
        /// <summary>
        /// <para>Sales Representative (Builder's and Plumber's Supplies)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Builder\'s and Plumber\'s Supplies)")]
        [System.Xml.Serialization.XmlEnumAttribute("6211-15")]
        Item6211_15,
        
        /// <summary>
        /// <para>Sales Representative (Motor Vehicle Parts and Accessories)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Motor Vehicle Parts and Accessories)")]
        [System.Xml.Serialization.XmlEnumAttribute("6211-17")]
        Item6211_17,
        
        /// <summary>
        /// <para>Sales Representatives nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representatives nec")]
        [System.Xml.Serialization.XmlEnumAttribute("6211-79")]
        Item6211_79,
        
        /// <summary>
        /// <para>MOTOR VEHICLE AND RELATED PRODUCTS SALESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOTOR VEHICLE AND RELATED PRODUCTS SALESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("6212")]
        Item6212,
        
        /// <summary>
        /// <para>Motor Vehicle and Caravan Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Caravan Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("6212-11")]
        Item6212_11,
        
        /// <summary>
        /// <para>Motor Vehicle Parts Interpreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts Interpreter")]
        [System.Xml.Serialization.XmlEnumAttribute("6212-13")]
        Item6212_13,
        
        /// <summary>
        /// <para>RETAIL AND CHECKOUT SUPERVISORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RETAIL AND CHECKOUT SUPERVISORS")]
        [System.Xml.Serialization.XmlEnumAttribute("6213")]
        Item6213,
        
        /// <summary>
        /// <para>Retail Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("6213-11")]
        Item6213_11,
        
        /// <summary>
        /// <para>Checkout Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Checkout Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("6213-13")]
        Item6213_13,
        
        /// <summary>
        /// <para>INTERMEDIATE SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("63")]
        Item63,
        
        /// <summary>
        /// <para>CARERS AND AIDES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CARERS AND AIDES")]
        [System.Xml.Serialization.XmlEnumAttribute("631")]
        Item631,
        
        /// <summary>
        /// <para>EDUCATION AIDES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EDUCATION AIDES")]
        [System.Xml.Serialization.XmlEnumAttribute("6311")]
        Item6311,
        
        /// <summary>
        /// <para>Pre-School Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pre-School Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("6311-11")]
        Item6311_11,
        
        /// <summary>
        /// <para>Integration Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Integration Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("6311-13")]
        Item6311_13,
        
        /// <summary>
        /// <para>Teachers' Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teachers\' Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("6311-15")]
        Item6311_15,
        
        /// <summary>
        /// <para>Aboriginal and Torres Strait Islander Education Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aboriginal and Torres Strait Islander Education Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("6311-17")]
        Item6311_17,
        
        /// <summary>
        /// <para>CHILDREN'S CARE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHILDREN\'S CARE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6312")]
        Item6312,
        
        /// <summary>
        /// <para>Child Care Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Care Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("6312-11")]
        Item6312_11,
        
        /// <summary>
        /// <para>Family Day Care Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Day Care Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("6312-13")]
        Item6312_13,
        
        /// <summary>
        /// <para>Nanny</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nanny")]
        [System.Xml.Serialization.XmlEnumAttribute("6312-15")]
        Item6312_15,
        
        /// <summary>
        /// <para>SPECIAL CARE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SPECIAL CARE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6313")]
        Item6313,
        
        /// <summary>
        /// <para>Hostel Parent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hostel Parent")]
        [System.Xml.Serialization.XmlEnumAttribute("6313-11")]
        Item6313_11,
        
        /// <summary>
        /// <para>Child or Youth Residential Care Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child or Youth Residential Care Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("6313-13")]
        Item6313_13,
        
        /// <summary>
        /// <para>Refuge Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refuge Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("6313-15")]
        Item6313_15,
        
        /// <summary>
        /// <para>Aged or Disabled Person Carer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aged or Disabled Person Carer")]
        [System.Xml.Serialization.XmlEnumAttribute("6313-17")]
        Item6313_17,
        
        /// <summary>
        /// <para>Therapy Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Therapy Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("6313-19")]
        Item6313_19,
        
        /// <summary>
        /// <para>PERSONAL CARE AND NURSING ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERSONAL CARE AND NURSING ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6314")]
        Item6314,
        
        /// <summary>
        /// <para>Personal Care Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Care Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("6314-11")]
        Item6314_11,
        
        /// <summary>
        /// <para>Nursing Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursing Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("6314-13")]
        Item6314_13,
        
        /// <summary>
        /// <para>HOSPITALITY WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOSPITALITY WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("632")]
        Item632,
        
        /// <summary>
        /// <para>HOTEL SERVICE SUPERVISORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOTEL SERVICE SUPERVISORS")]
        [System.Xml.Serialization.XmlEnumAttribute("6321")]
        Item6321,
        
        /// <summary>
        /// <para>Hotel Service Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hotel Service Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("6321-11")]
        Item6321_11,
        
        /// <summary>
        /// <para>BAR ATTENDANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BAR ATTENDANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6322")]
        Item6322,
        
        /// <summary>
        /// <para>Supervisor, Bar Attendants</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Bar Attendants")]
        [System.Xml.Serialization.XmlEnumAttribute("6322-01")]
        Item6322_01,
        
        /// <summary>
        /// <para>Bar Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bar Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("6322-11")]
        Item6322_11,
        
        /// <summary>
        /// <para>WAITERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WAITERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6323")]
        Item6323,
        
        /// <summary>
        /// <para>Supervisor, Waiters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Waiters")]
        [System.Xml.Serialization.XmlEnumAttribute("6323-01")]
        Item6323_01,
        
        /// <summary>
        /// <para>General Waiter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Waiter")]
        [System.Xml.Serialization.XmlEnumAttribute("6323-11")]
        Item6323_11,
        
        /// <summary>
        /// <para>Drink Waiter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drink Waiter")]
        [System.Xml.Serialization.XmlEnumAttribute("6323-13")]
        Item6323_13,
        
        /// <summary>
        /// <para>HOSPITALITY TRAINEES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HOSPITALITY TRAINEES")]
        [System.Xml.Serialization.XmlEnumAttribute("6324")]
        Item6324,
        
        /// <summary>
        /// <para>Hospitality Trainee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality Trainee")]
        [System.Xml.Serialization.XmlEnumAttribute("6324-11")]
        Item6324_11,
        
        /// <summary>
        /// <para>MISCELLANEOUS INTERMEDIATE SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS INTERMEDIATE SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("639")]
        Item639,
        
        /// <summary>
        /// <para>DENTAL ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DENTAL ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6391")]
        Item6391,
        
        /// <summary>
        /// <para>Dental Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("6391-11")]
        Item6391_11,
        
        /// <summary>
        /// <para>VETERINARY NURSES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VETERINARY NURSES")]
        [System.Xml.Serialization.XmlEnumAttribute("6392")]
        Item6392,
        
        /// <summary>
        /// <para>Veterinary Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinary Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("6392-11")]
        Item6392_11,
        
        /// <summary>
        /// <para>PRISON OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRISON OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6393")]
        Item6393,
        
        /// <summary>
        /// <para>Prison Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prison Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("6393-11")]
        Item6393_11,
        
        /// <summary>
        /// <para>GAMING WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GAMING WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6394")]
        Item6394,
        
        /// <summary>
        /// <para>Gaming Pit Boss</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming Pit Boss")]
        [System.Xml.Serialization.XmlEnumAttribute("6394-11")]
        Item6394_11,
        
        /// <summary>
        /// <para>Gaming Table Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming Table Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("6394-13")]
        Item6394_13,
        
        /// <summary>
        /// <para>Gaming Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("6394-15")]
        Item6394_15,
        
        /// <summary>
        /// <para>PERSONAL CARE CONSULTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PERSONAL CARE CONSULTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6395")]
        Item6395,
        
        /// <summary>
        /// <para>Beauty Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beauty Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("6395-11")]
        Item6395_11,
        
        /// <summary>
        /// <para>Natural Remedy Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural Remedy Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("6395-13")]
        Item6395_13,
        
        /// <summary>
        /// <para>Weight Loss Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weight Loss Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("6395-15")]
        Item6395_15,
        
        /// <summary>
        /// <para>FITNESS INSTRUCTORS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FITNESS INSTRUCTORS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6396")]
        Item6396,
        
        /// <summary>
        /// <para>Fitness Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitness Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("6396-11")]
        Item6396_11,
        
        /// <summary>
        /// <para>Outdoor Adventure Leader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outdoor Adventure Leader")]
        [System.Xml.Serialization.XmlEnumAttribute("6396-13")]
        Item6396_13,
        
        /// <summary>
        /// <para>TRAVEL AND TOURISM AGENTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRAVEL AND TOURISM AGENTS")]
        [System.Xml.Serialization.XmlEnumAttribute("6397")]
        Item6397,
        
        /// <summary>
        /// <para>Travel Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("6397-11")]
        Item6397_11,
        
        /// <summary>
        /// <para>Tourist Information Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tourist Information Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("6397-13")]
        Item6397_13,
        
        /// <summary>
        /// <para>Tour Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tour Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("6397-15")]
        Item6397_15,
        
        /// <summary>
        /// <para>OTHER INTERMEDIATE SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER INTERMEDIATE SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("6399")]
        Item6399,
        
        /// <summary>
        /// <para>Museum or Gallery Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Museum or Gallery Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("6399-11")]
        Item6399_11,
        
        /// <summary>
        /// <para>Driving Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driving Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("6399-13")]
        Item6399_13,
        
        /// <summary>
        /// <para>Animal Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Animal Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("6399-15")]
        Item6399_15,
        
        /// <summary>
        /// <para>Pest and Weed Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pest and Weed Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("6399-17")]
        Item6399_17,
        
        /// <summary>
        /// <para>Intermediate Service Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intermediate Service Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("6399-79")]
        Item6399_79,
        
        /// <summary>
        /// <para>INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <summary>
        /// <para>INTERMEDIATE PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("71")]
        Item71,
        
        /// <summary>
        /// <para>MOBILE PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOBILE PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("711")]
        Item711,
        
        /// <summary>
        /// <para>MOBILE CONSTRUCTION PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOBILE CONSTRUCTION PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7111")]
        Item7111,
        
        /// <summary>
        /// <para>General Construction Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Construction Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-11")]
        Item7111_11,
        
        /// <summary>
        /// <para>Bulldozer Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulldozer Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-13")]
        Item7111_13,
        
        /// <summary>
        /// <para>Backhoe Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Backhoe Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-15")]
        Item7111_15,
        
        /// <summary>
        /// <para>Loader Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loader Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-17")]
        Item7111_17,
        
        /// <summary>
        /// <para>Grader Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grader Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-19")]
        Item7111_19,
        
        /// <summary>
        /// <para>Excavator Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excavator Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-21")]
        Item7111_21,
        
        /// <summary>
        /// <para>Paving Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paving Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-23")]
        Item7111_23,
        
        /// <summary>
        /// <para>Road Roller Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Roller Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7111-25")]
        Item7111_25,
        
        /// <summary>
        /// <para>FORKLIFT DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FORKLIFT DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7112")]
        Item7112,
        
        /// <summary>
        /// <para>Forklift Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forklift Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7112-11")]
        Item7112_11,
        
        /// <summary>
        /// <para>OTHER MOBILE PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MOBILE PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7119")]
        Item7119,
        
        /// <summary>
        /// <para>Agricultural and Horticultural Mobile Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural and Horticultural Mobile Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7119-11")]
        Item7119_11,
        
        /// <summary>
        /// <para>Railway Track Repair Mobile Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Track Repair Mobile Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7119-13")]
        Item7119_13,
        
        /// <summary>
        /// <para>Streetsweeper Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Streetsweeper Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7119-15")]
        Item7119_15,
        
        /// <summary>
        /// <para>Logging Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logging Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7119-17")]
        Item7119_17,
        
        /// <summary>
        /// <para>Mobile Plant Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile Plant Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7119-79")]
        Item7119_79,
        
        /// <summary>
        /// <para>INTERMEDIATE STATIONARY PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE STATIONARY PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("712")]
        Item712,
        
        /// <summary>
        /// <para>ENGINE AND BOILER OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINE AND BOILER OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7121")]
        Item7121,
        
        /// <summary>
        /// <para>Engine or Boiler Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engine or Boiler Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7121-11")]
        Item7121_11,
        
        /// <summary>
        /// <para>CRANE, HOIST AND LIFT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CRANE, HOIST AND LIFT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7122")]
        Item7122,
        
        /// <summary>
        /// <para>Crane, Hoist or Lift Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crane, Hoist or Lift Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7122-11")]
        Item7122_11,
        
        /// <summary>
        /// <para>ENGINEERING PRODUCTION SYSTEMS WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINEERING PRODUCTION SYSTEMS WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7123")]
        Item7123,
        
        /// <summary>
        /// <para>Supervisor, Engineering Production Systems Workers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Engineering Production Systems Workers")]
        [System.Xml.Serialization.XmlEnumAttribute("7123-01")]
        Item7123_01,
        
        /// <summary>
        /// <para>Engineering Production Systems Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Production Systems Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("7123-11")]
        Item7123_11,
        
        /// <summary>
        /// <para>PULP AND PAPER MILL OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PULP AND PAPER MILL OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7124")]
        Item7124,
        
        /// <summary>
        /// <para>Pulp Mill Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pulp Mill Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7124-11")]
        Item7124_11,
        
        /// <summary>
        /// <para>Paper Mill Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Mill Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7124-13")]
        Item7124_13,
        
        /// <summary>
        /// <para>OTHER INTERMEDIATE STATIONARY PLANT OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER INTERMEDIATE STATIONARY PLANT OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7129")]
        Item7129,
        
        /// <summary>
        /// <para>Supervisor, Other Intermediate Stationary Plant Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Other Intermediate Stationary Plant Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-01")]
        Item7129_01,
        
        /// <summary>
        /// <para>Railway Signal Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Signal Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-11")]
        Item7129_11,
        
        /// <summary>
        /// <para>Train Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-13")]
        Item7129_13,
        
        /// <summary>
        /// <para>Concrete Pump Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Pump Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-15")]
        Item7129_15,
        
        /// <summary>
        /// <para>Cement Production Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement Production Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-17")]
        Item7129_17,
        
        /// <summary>
        /// <para>Concrete Batching Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Batching Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-19")]
        Item7129_19,
        
        /// <summary>
        /// <para>Water and Waste Water Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water and Waste Water Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-21")]
        Item7129_21,
        
        /// <summary>
        /// <para>Bulk Materials Handling Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulk Materials Handling Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-23")]
        Item7129_23,
        
        /// <summary>
        /// <para>Intermediate Stationary Plant Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intermediate Stationary Plant Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7129-79")]
        Item7129_79,
        
        /// <summary>
        /// <para>INTERMEDIATE MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("72")]
        Item72,
        
        /// <summary>
        /// <para>INTERMEDIATE TEXTILE, CLOTHING AND RELATED MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE TEXTILE, CLOTHING AND RELATED MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("721")]
        Item721,
        
        /// <summary>
        /// <para>SEWING MACHINISTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SEWING MACHINISTS")]
        [System.Xml.Serialization.XmlEnumAttribute("7211")]
        Item7211,
        
        /// <summary>
        /// <para>Supervisor, Sewing Machinists</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Sewing Machinists")]
        [System.Xml.Serialization.XmlEnumAttribute("7211-01")]
        Item7211_01,
        
        /// <summary>
        /// <para>Sewing Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sewing Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("7211-11")]
        Item7211_11,
        
        /// <summary>
        /// <para>TEXTILE AND FOOTWEAR PRODUCTION MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TEXTILE AND FOOTWEAR PRODUCTION MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7212")]
        Item7212,
        
        /// <summary>
        /// <para>Supervisor, Textile and Footwear Production Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Textile and Footwear Production Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-01")]
        Item7212_01,
        
        /// <summary>
        /// <para>Yarn Carding and Spinning Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yarn Carding and Spinning Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-11")]
        Item7212_11,
        
        /// <summary>
        /// <para>Weaving Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weaving Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-13")]
        Item7212_13,
        
        /// <summary>
        /// <para>Knitting Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Knitting Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-15")]
        Item7212_15,
        
        /// <summary>
        /// <para>Textile Dyeing and Finishing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Dyeing and Finishing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-17")]
        Item7212_17,
        
        /// <summary>
        /// <para>Hide and Skin Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hide and Skin Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-19")]
        Item7212_19,
        
        /// <summary>
        /// <para>Footwear Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-21")]
        Item7212_21,
        
        /// <summary>
        /// <para>Textile and Footwear Production Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile and Footwear Production Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7212-79")]
        Item7212_79,
        
        /// <summary>
        /// <para>MISCELLANEOUS INTERMEDIATE MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS INTERMEDIATE MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("729")]
        Item729,
        
        /// <summary>
        /// <para>PLASTICS PRODUCTION MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PLASTICS PRODUCTION MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7291")]
        Item7291,
        
        /// <summary>
        /// <para>Supervisor, Plastics Production Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Plastics Production Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-01")]
        Item7291_01,
        
        /// <summary>
        /// <para>General Plastics Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Plastics Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-11")]
        Item7291_11,
        
        /// <summary>
        /// <para>Plastics Compounding and Reclamation Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Compounding and Reclamation Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-13")]
        Item7291_13,
        
        /// <summary>
        /// <para>Reinforced Plastic and Composite Production Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reinforced Plastic and Composite Production Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-15")]
        Item7291_15,
        
        /// <summary>
        /// <para>Plastic Cablemaking Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastic Cablemaking Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-17")]
        Item7291_17,
        
        /// <summary>
        /// <para>Plastics Production Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Production Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7291-79")]
        Item7291_79,
        
        /// <summary>
        /// <para>RUBBER PRODUCTION MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RUBBER PRODUCTION MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7292")]
        Item7292,
        
        /// <summary>
        /// <para>Supervisor, Rubber Production Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Rubber Production Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7292-01")]
        Item7292_01,
        
        /// <summary>
        /// <para>Tyre Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tyre Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7292-11")]
        Item7292_11,
        
        /// <summary>
        /// <para>Rubber Production Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rubber Production Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7292-79")]
        Item7292_79,
        
        /// <summary>
        /// <para>CHEMICAL PRODUCTION MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHEMICAL PRODUCTION MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7293")]
        Item7293,
        
        /// <summary>
        /// <para>Supervisor, Chemical Production Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Chemical Production Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7293-01")]
        Item7293_01,
        
        /// <summary>
        /// <para>Chemical Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7293-11")]
        Item7293_11,
        
        /// <summary>
        /// <para>WOOD PROCESSING MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WOOD PROCESSING MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7294")]
        Item7294,
        
        /// <summary>
        /// <para>Supervisor, Wood Processing Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Wood Processing Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7294-01")]
        Item7294_01,
        
        /// <summary>
        /// <para>Wood Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7294-11")]
        Item7294_11,
        
        /// <summary>
        /// <para>PAPER PRODUCTS MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAPER PRODUCTS MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7295")]
        Item7295,
        
        /// <summary>
        /// <para>Paper Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7295-11")]
        Item7295_11,
        
        /// <summary>
        /// <para>GLASS PRODUCTION MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GLASS PRODUCTION MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7296")]
        Item7296,
        
        /// <summary>
        /// <para>Supervisor, Glass Production Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Glass Production Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7296-01")]
        Item7296_01,
        
        /// <summary>
        /// <para>Glass Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7296-11")]
        Item7296_11,
        
        /// <summary>
        /// <para>CLAY, STONE AND CONCRETE PROCESSING MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLAY, STONE AND CONCRETE PROCESSING MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7297")]
        Item7297,
        
        /// <summary>
        /// <para>Supervisor, Clay, Stone and Concrete Processing Machine Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Clay, Stone and Concrete Processing Machine Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("7297-01")]
        Item7297_01,
        
        /// <summary>
        /// <para>Clay Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7297-11")]
        Item7297_11,
        
        /// <summary>
        /// <para>Stone Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stone Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7297-13")]
        Item7297_13,
        
        /// <summary>
        /// <para>Concrete Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("7297-15")]
        Item7297_15,
        
        /// <summary>
        /// <para>Clay, Stone and Concrete Processing Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay, Stone and Concrete Processing Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7297-79")]
        Item7297_79,
        
        /// <summary>
        /// <para>PHOTOGRAPHIC DEVELOPERS AND PRINTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PHOTOGRAPHIC DEVELOPERS AND PRINTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7298")]
        Item7298,
        
        /// <summary>
        /// <para>Photographic Developer and Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic Developer and Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("7298-11")]
        Item7298_11,
        
        /// <summary>
        /// <para>OTHER INTERMEDIATE MACHINE OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER INTERMEDIATE MACHINE OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("7299")]
        Item7299,
        
        /// <summary>
        /// <para>Industrial Spray Painter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Spray Painter")]
        [System.Xml.Serialization.XmlEnumAttribute("7299-11")]
        Item7299_11,
        
        /// <summary>
        /// <para>Intermediate Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intermediate Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("7299-79")]
        Item7299_79,
        
        /// <summary>
        /// <para>ROAD AND RAIL TRANSPORT DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROAD AND RAIL TRANSPORT DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("73")]
        Item73,
        
        /// <summary>
        /// <para>ROAD AND RAIL TRANSPORT DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ROAD AND RAIL TRANSPORT DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("731")]
        Item731,
        
        /// <summary>
        /// <para>TRUCK DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRUCK DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7311")]
        Item7311,
        
        /// <summary>
        /// <para>Heavy Truck Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heavy Truck Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7311-11")]
        Item7311_11,
        
        /// <summary>
        /// <para>Furniture Removalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Removalist")]
        [System.Xml.Serialization.XmlEnumAttribute("7311-13")]
        Item7311_13,
        
        /// <summary>
        /// <para>BUS AND TRAM DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BUS AND TRAM DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7312")]
        Item7312,
        
        /// <summary>
        /// <para>Bus Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bus Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7312-11")]
        Item7312_11,
        
        /// <summary>
        /// <para>Tram Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tram Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7312-13")]
        Item7312_13,
        
        /// <summary>
        /// <para>AUTOMOBILE DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AUTOMOBILE DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7313")]
        Item7313,
        
        /// <summary>
        /// <para>Automobile Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automobile Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7313-11")]
        Item7313_11,
        
        /// <summary>
        /// <para>DELIVERY DRIVERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DELIVERY DRIVERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7314")]
        Item7314,
        
        /// <summary>
        /// <para>Delivery Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Delivery Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7314-11")]
        Item7314_11,
        
        /// <summary>
        /// <para>TRAIN DRIVERS AND ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TRAIN DRIVERS AND ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("7315")]
        Item7315,
        
        /// <summary>
        /// <para>Train Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("7315-11")]
        Item7315_11,
        
        /// <summary>
        /// <para>Train Driver's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Driver\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("7315-13")]
        Item7315_13,
        
        /// <summary>
        /// <para>OTHER INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("79")]
        Item79,
        
        /// <summary>
        /// <para>INTERMEDIATE MINING AND CONSTRUCTION WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INTERMEDIATE MINING AND CONSTRUCTION WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("791")]
        Item791,
        
        /// <summary>
        /// <para>MINERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7911")]
        Item7911,
        
        /// <summary>
        /// <para>Miner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miner")]
        [System.Xml.Serialization.XmlEnumAttribute("7911-11")]
        Item7911_11,
        
        /// <summary>
        /// <para>BLASTING WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BLASTING WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7912")]
        Item7912,
        
        /// <summary>
        /// <para>Blasting Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Blasting Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("7912-11")]
        Item7912_11,
        
        /// <summary>
        /// <para>STRUCTURAL STEEL CONSTRUCTION WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STRUCTURAL STEEL CONSTRUCTION WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7913")]
        Item7913,
        
        /// <summary>
        /// <para>Scaffolder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scaffolder")]
        [System.Xml.Serialization.XmlEnumAttribute("7913-11")]
        Item7913_11,
        
        /// <summary>
        /// <para>Steel Fixer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Steel Fixer")]
        [System.Xml.Serialization.XmlEnumAttribute("7913-13")]
        Item7913_13,
        
        /// <summary>
        /// <para>Structural Steel Erector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel Erector")]
        [System.Xml.Serialization.XmlEnumAttribute("7913-15")]
        Item7913_15,
        
        /// <summary>
        /// <para>Construction Rigger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Rigger")]
        [System.Xml.Serialization.XmlEnumAttribute("7913-17")]
        Item7913_17,
        
        /// <summary>
        /// <para>INSULATION AND HOME IMPROVEMENTS INSTALLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("INSULATION AND HOME IMPROVEMENTS INSTALLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7914")]
        Item7914,
        
        /// <summary>
        /// <para>Building Insulation Installer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Insulation Installer")]
        [System.Xml.Serialization.XmlEnumAttribute("7914-11")]
        Item7914_11,
        
        /// <summary>
        /// <para>Home Improvements Installer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Improvements Installer")]
        [System.Xml.Serialization.XmlEnumAttribute("7914-13")]
        Item7914_13,
        
        /// <summary>
        /// <para>MISCELLANEOUS INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS INTERMEDIATE PRODUCTION AND TRANSPORT WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("799")]
        Item799,
        
        /// <summary>
        /// <para>MOTOR VEHICLE PARTS AND ACCESSORIES FITTERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MOTOR VEHICLE PARTS AND ACCESSORIES FITTERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7991")]
        Item7991,
        
        /// <summary>
        /// <para>Motor Vehicle Parts and Accessories Fitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts and Accessories Fitter")]
        [System.Xml.Serialization.XmlEnumAttribute("7991-11")]
        Item7991_11,
        
        /// <summary>
        /// <para>PRODUCT QUALITY CONTROLLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRODUCT QUALITY CONTROLLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7992")]
        Item7992,
        
        /// <summary>
        /// <para>Product Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("7992-11")]
        Item7992_11,
        
        /// <summary>
        /// <para>Product Grader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Grader")]
        [System.Xml.Serialization.XmlEnumAttribute("7992-13")]
        Item7992_13,
        
        /// <summary>
        /// <para>Product Tester</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Tester")]
        [System.Xml.Serialization.XmlEnumAttribute("7992-15")]
        Item7992_15,
        
        /// <summary>
        /// <para>STOREPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STOREPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("7993")]
        Item7993,
        
        /// <summary>
        /// <para>Supervisor, Storepersons</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Storepersons")]
        [System.Xml.Serialization.XmlEnumAttribute("7993-01")]
        Item7993_01,
        
        /// <summary>
        /// <para>Storeperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Storeperson")]
        [System.Xml.Serialization.XmlEnumAttribute("7993-11")]
        Item7993_11,
        
        /// <summary>
        /// <para>SEAFARERS AND FISHING HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SEAFARERS AND FISHING HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("7994")]
        Item7994,
        
        /// <summary>
        /// <para>Seafarer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seafarer")]
        [System.Xml.Serialization.XmlEnumAttribute("7994-11")]
        Item7994_11,
        
        /// <summary>
        /// <para>Fishing Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fishing Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("7994-13")]
        Item7994_13,
        
        /// <summary>
        /// <para>FORESTRY AND LOGGING WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FORESTRY AND LOGGING WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("7995")]
        Item7995,
        
        /// <summary>
        /// <para>Supervisor, Forestry and Logging Workers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supervisor, Forestry and Logging Workers")]
        [System.Xml.Serialization.XmlEnumAttribute("7995-01")]
        Item7995_01,
        
        /// <summary>
        /// <para>Tree Faller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tree Faller")]
        [System.Xml.Serialization.XmlEnumAttribute("7995-11")]
        Item7995_11,
        
        /// <summary>
        /// <para>Forestry Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("7995-13")]
        Item7995_13,
        
        /// <summary>
        /// <para>Logging Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logging Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("7995-15")]
        Item7995_15,
        
        /// <summary>
        /// <para>PRINTING HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRINTING HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("7996")]
        Item7996,
        
        /// <summary>
        /// <para>Printing Table Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Table Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("7996-11")]
        Item7996_11,
        
        /// <summary>
        /// <para>Printer's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printer\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("7996-13")]
        Item7996_13,
        
        /// <summary>
        /// <para>ELEMENTARY CLERICAL, SALES AND SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY CLERICAL, SALES AND SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <summary>
        /// <para>ELEMENTARY CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("81")]
        Item81,
        
        /// <summary>
        /// <para>ELEMENTARY CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("811")]
        Item811,
        
        /// <summary>
        /// <para>REGISTRY AND FILING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("REGISTRY AND FILING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("8111")]
        Item8111,
        
        /// <summary>
        /// <para>Registry or Filing Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registry or Filing Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8111-11")]
        Item8111_11,
        
        /// <summary>
        /// <para>MAIL SORTING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MAIL SORTING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("8112")]
        Item8112,
        
        /// <summary>
        /// <para>Mail Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mail Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8112-11")]
        Item8112_11,
        
        /// <summary>
        /// <para>Postal Sorting Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal Sorting Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("8112-13")]
        Item8112_13,
        
        /// <summary>
        /// <para>SWITCHBOARD OPERATORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SWITCHBOARD OPERATORS")]
        [System.Xml.Serialization.XmlEnumAttribute("8113")]
        Item8113,
        
        /// <summary>
        /// <para>Switchboard Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Switchboard Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("8113-11")]
        Item8113_11,
        
        /// <summary>
        /// <para>MESSENGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MESSENGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8114")]
        Item8114,
        
        /// <summary>
        /// <para>Courier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Courier")]
        [System.Xml.Serialization.XmlEnumAttribute("8114-11")]
        Item8114_11,
        
        /// <summary>
        /// <para>Postal Delivery Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal Delivery Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("8114-13")]
        Item8114_13,
        
        /// <summary>
        /// <para>BETTING CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("BETTING CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("8115")]
        Item8115,
        
        /// <summary>
        /// <para>Betting Agency Counter Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Agency Counter Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8115-11")]
        Item8115_11,
        
        /// <summary>
        /// <para>Telephone Betting Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telephone Betting Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8115-13")]
        Item8115_13,
        
        /// <summary>
        /// <para>Bookmaker's Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookmaker\'s Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8115-15")]
        Item8115_15,
        
        /// <summary>
        /// <para>Betting Clerks nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Clerks nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8115-79")]
        Item8115_79,
        
        /// <summary>
        /// <para>OFFICE TRAINEES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OFFICE TRAINEES")]
        [System.Xml.Serialization.XmlEnumAttribute("8116")]
        Item8116,
        
        /// <summary>
        /// <para>Office Trainee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Trainee")]
        [System.Xml.Serialization.XmlEnumAttribute("8116-11")]
        Item8116_11,
        
        /// <summary>
        /// <para>OTHER ELEMENTARY CLERKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER ELEMENTARY CLERKS")]
        [System.Xml.Serialization.XmlEnumAttribute("8119")]
        Item8119,
        
        /// <summary>
        /// <para>Meter Reader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meter Reader")]
        [System.Xml.Serialization.XmlEnumAttribute("8119-11")]
        Item8119_11,
        
        /// <summary>
        /// <para>Classified Advertising Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Classified Advertising Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("8119-13")]
        Item8119_13,
        
        /// <summary>
        /// <para>Interviewer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interviewer")]
        [System.Xml.Serialization.XmlEnumAttribute("8119-15")]
        Item8119_15,
        
        /// <summary>
        /// <para>Parking Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parking Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("8119-17")]
        Item8119_17,
        
        /// <summary>
        /// <para>Elementary Clerks nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Elementary Clerks nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8119-79")]
        Item8119_79,
        
        /// <summary>
        /// <para>ELEMENTARY SALES WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY SALES WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("82")]
        Item82,
        
        /// <summary>
        /// <para>SALES ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("821")]
        Item821,
        
        /// <summary>
        /// <para>SALES ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("8211")]
        Item8211,
        
        /// <summary>
        /// <para>Sales Assistant (Food and Drink Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistant (Food and Drink Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("8211-11")]
        Item8211_11,
        
        /// <summary>
        /// <para>Sales Assistant (Fabric, Clothing and Footwear)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistant (Fabric, Clothing and Footwear)")]
        [System.Xml.Serialization.XmlEnumAttribute("8211-13")]
        Item8211_13,
        
        /// <summary>
        /// <para>Sales Assistant (Other Personal and Household Goods)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistant (Other Personal and Household Goods)")]
        [System.Xml.Serialization.XmlEnumAttribute("8211-15")]
        Item8211_15,
        
        /// <summary>
        /// <para>Sales Assistant (Postal Services)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistant (Postal Services)")]
        [System.Xml.Serialization.XmlEnumAttribute("8211-17")]
        Item8211_17,
        
        /// <summary>
        /// <para>Sales Assistants nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistants nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8211-79")]
        Item8211_79,
        
        /// <summary>
        /// <para>MISCELLANEOUS ELEMENTARY SALES WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS ELEMENTARY SALES WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("829")]
        Item829,
        
        /// <summary>
        /// <para>CHECKOUT OPERATORS AND CASHIERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CHECKOUT OPERATORS AND CASHIERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8291")]
        Item8291,
        
        /// <summary>
        /// <para>Checkout Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Checkout Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("8291-11")]
        Item8291_11,
        
        /// <summary>
        /// <para>Office Cashier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Cashier")]
        [System.Xml.Serialization.XmlEnumAttribute("8291-13")]
        Item8291_13,
        
        /// <summary>
        /// <para>TICKET SALESPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TICKET SALESPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("8292")]
        Item8292,
        
        /// <summary>
        /// <para>Ticket Seller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ticket Seller")]
        [System.Xml.Serialization.XmlEnumAttribute("8292-11")]
        Item8292_11,
        
        /// <summary>
        /// <para>Transport Conductor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Conductor")]
        [System.Xml.Serialization.XmlEnumAttribute("8292-13")]
        Item8292_13,
        
        /// <summary>
        /// <para>STREET VENDORS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("STREET VENDORS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8293")]
        Item8293,
        
        /// <summary>
        /// <para>Street Vendor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Street Vendor")]
        [System.Xml.Serialization.XmlEnumAttribute("8293-11")]
        Item8293_11,
        
        /// <summary>
        /// <para>Cash Van Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cash Van Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("8293-13")]
        Item8293_13,
        
        /// <summary>
        /// <para>Door-to-Door Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Door-to-Door Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("8293-15")]
        Item8293_15,
        
        /// <summary>
        /// <para>TELEMARKETERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TELEMARKETERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8294")]
        Item8294,
        
        /// <summary>
        /// <para>Telemarketer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telemarketer")]
        [System.Xml.Serialization.XmlEnumAttribute("8294-11")]
        Item8294_11,
        
        /// <summary>
        /// <para>SALES DEMONSTRATORS AND MODELS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES DEMONSTRATORS AND MODELS")]
        [System.Xml.Serialization.XmlEnumAttribute("8295")]
        Item8295,
        
        /// <summary>
        /// <para>Sales Demonstrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Demonstrator")]
        [System.Xml.Serialization.XmlEnumAttribute("8295-11")]
        Item8295_11,
        
        /// <summary>
        /// <para>Model</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Model")]
        [System.Xml.Serialization.XmlEnumAttribute("8295-13")]
        Item8295_13,
        
        /// <summary>
        /// <para>SERVICE STATION ATTENDANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SERVICE STATION ATTENDANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("8296")]
        Item8296,
        
        /// <summary>
        /// <para>Service Station Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Service Station Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("8296-11")]
        Item8296_11,
        
        /// <summary>
        /// <para>SALES AND SERVICE TRAINEES</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SALES AND SERVICE TRAINEES")]
        [System.Xml.Serialization.XmlEnumAttribute("8297")]
        Item8297,
        
        /// <summary>
        /// <para>Sales and Service Trainee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales and Service Trainee")]
        [System.Xml.Serialization.XmlEnumAttribute("8297-11")]
        Item8297_11,
        
        /// <summary>
        /// <para>OTHER ELEMENTARY SALES WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER ELEMENTARY SALES WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8299")]
        Item8299,
        
        /// <summary>
        /// <para>Rental Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rental Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("8299-11")]
        Item8299_11,
        
        /// <summary>
        /// <para>Materials Recycler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Recycler")]
        [System.Xml.Serialization.XmlEnumAttribute("8299-13")]
        Item8299_13,
        
        /// <summary>
        /// <para>Elementary Sales Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Elementary Sales Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8299-79")]
        Item8299_79,
        
        /// <summary>
        /// <para>ELEMENTARY SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("83")]
        Item83,
        
        /// <summary>
        /// <para>ELEMENTARY SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("831")]
        Item831,
        
        /// <summary>
        /// <para>GUARDS AND SECURITY OFFICERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GUARDS AND SECURITY OFFICERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8311")]
        Item8311,
        
        /// <summary>
        /// <para>Security Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("8311-11")]
        Item8311_11,
        
        /// <summary>
        /// <para>Armoured Car Escort</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Armoured Car Escort")]
        [System.Xml.Serialization.XmlEnumAttribute("8311-13")]
        Item8311_13,
        
        /// <summary>
        /// <para>Guards and Security Officers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guards and Security Officers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8311-79")]
        Item8311_79,
        
        /// <summary>
        /// <para>USHERS, PORTERS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("USHERS, PORTERS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8312")]
        Item8312,
        
        /// <summary>
        /// <para>Ticket Collector or Usher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ticket Collector or Usher")]
        [System.Xml.Serialization.XmlEnumAttribute("8312-11")]
        Item8312_11,
        
        /// <summary>
        /// <para>Luggage Porter or Doorperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Luggage Porter or Doorperson")]
        [System.Xml.Serialization.XmlEnumAttribute("8312-13")]
        Item8312_13,
        
        /// <summary>
        /// <para>DOMESTIC HOUSEKEEPERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DOMESTIC HOUSEKEEPERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8313")]
        Item8313,
        
        /// <summary>
        /// <para>Domestic Housekeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Housekeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("8313-11")]
        Item8313_11,
        
        /// <summary>
        /// <para>CARETAKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CARETAKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8314")]
        Item8314,
        
        /// <summary>
        /// <para>Caretaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Caretaker")]
        [System.Xml.Serialization.XmlEnumAttribute("8314-11")]
        Item8314_11,
        
        /// <summary>
        /// <para>LAUNDRY WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LAUNDRY WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8315")]
        Item8315,
        
        /// <summary>
        /// <para>Laundry Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laundry Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("8315-11")]
        Item8315_11,
        
        /// <summary>
        /// <para>OTHER ELEMENTARY SERVICE WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER ELEMENTARY SERVICE WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("8319")]
        Item8319,
        
        /// <summary>
        /// <para>Railways Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railways Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-11")]
        Item8319_11,
        
        /// <summary>
        /// <para>Hair and Beauty Salon Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hair and Beauty Salon Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-13")]
        Item8319_13,
        
        /// <summary>
        /// <para>Sterilisation Technology Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sterilisation Technology Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-15")]
        Item8319_15,
        
        /// <summary>
        /// <para>Car Park Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Park Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-17")]
        Item8319_17,
        
        /// <summary>
        /// <para>Crossing Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crossing Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-19")]
        Item8319_19,
        
        /// <summary>
        /// <para>Trolley Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trolley Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-21")]
        Item8319_21,
        
        /// <summary>
        /// <para>Leaflet and Newspaper Deliverer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leaflet and Newspaper Deliverer")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-23")]
        Item8319_23,
        
        /// <summary>
        /// <para>Examination Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Examination Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-25")]
        Item8319_25,
        
        /// <summary>
        /// <para>Prostitute or Escort</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prostitute or Escort")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-27")]
        Item8319_27,
        
        /// <summary>
        /// <para>Elementary Service Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Elementary Service Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("8319-79")]
        Item8319_79,
        
        /// <summary>
        /// <para>LABOURERS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LABOURERS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <summary>
        /// <para>CLEANERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLEANERS")]
        [System.Xml.Serialization.XmlEnumAttribute("91")]
        Item91,
        
        /// <summary>
        /// <para>CLEANERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLEANERS")]
        [System.Xml.Serialization.XmlEnumAttribute("911")]
        Item911,
        
        /// <summary>
        /// <para>CLEANERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CLEANERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9111")]
        Item9111,
        
        /// <summary>
        /// <para>Commercial Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-11")]
        Item9111_11,
        
        /// <summary>
        /// <para>Domestic Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-13")]
        Item9111_13,
        
        /// <summary>
        /// <para>Carpet Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpet Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-15")]
        Item9111_15,
        
        /// <summary>
        /// <para>Vehicle Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-17")]
        Item9111_17,
        
        /// <summary>
        /// <para>Window Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Window Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-19")]
        Item9111_19,
        
        /// <summary>
        /// <para>Cleaners nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaners nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9111-79")]
        Item9111_79,
        
        /// <summary>
        /// <para>FACTORY LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FACTORY LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("92")]
        Item92,
        
        /// <summary>
        /// <para>PROCESS WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PROCESS WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("921")]
        Item921,
        
        /// <summary>
        /// <para>ENGINEERING PRODUCTION PROCESS WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ENGINEERING PRODUCTION PROCESS WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9211")]
        Item9211,
        
        /// <summary>
        /// <para>Engineering Production Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Production Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("9211-11")]
        Item9211_11,
        
        /// <summary>
        /// <para>PRODUCT ASSEMBLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRODUCT ASSEMBLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9212")]
        Item9212,
        
        /// <summary>
        /// <para>Product Assembler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Assembler")]
        [System.Xml.Serialization.XmlEnumAttribute("9212-11")]
        Item9212_11,
        
        /// <summary>
        /// <para>MEAT AND FISH PROCESS WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MEAT AND FISH PROCESS WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9213")]
        Item9213,
        
        /// <summary>
        /// <para>Meatworks Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meatworks Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9213-11")]
        Item9213_11,
        
        /// <summary>
        /// <para>Meat Boner and Slicer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Boner and Slicer")]
        [System.Xml.Serialization.XmlEnumAttribute("9213-13")]
        Item9213_13,
        
        /// <summary>
        /// <para>Poultry Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("9213-15")]
        Item9213_15,
        
        /// <summary>
        /// <para>Fish Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fish Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("9213-17")]
        Item9213_17,
        
        /// <summary>
        /// <para>OTHER FOOD FACTORY HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER FOOD FACTORY HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("9214")]
        Item9214,
        
        /// <summary>
        /// <para>Food and Drink Processing Machine Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food and Drink Processing Machine Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-11")]
        Item9214_11,
        
        /// <summary>
        /// <para>Baking Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Baking Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-13")]
        Item9214_13,
        
        /// <summary>
        /// <para>Dairy Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-15")]
        Item9214_15,
        
        /// <summary>
        /// <para>Fruit and Vegetable Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-17")]
        Item9214_17,
        
        /// <summary>
        /// <para>Food Products Millhand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Products Millhand")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-19")]
        Item9214_19,
        
        /// <summary>
        /// <para>Food Factory Hands nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Factory Hands nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9214-79")]
        Item9214_79,
        
        /// <summary>
        /// <para>WOOD PRODUCTS FACTORY HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WOOD PRODUCTS FACTORY HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("9215")]
        Item9215,
        
        /// <summary>
        /// <para>Sawmill Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sawmill Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9215-11")]
        Item9215_11,
        
        /// <summary>
        /// <para>Timberyard Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timberyard Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9215-13")]
        Item9215_13,
        
        /// <summary>
        /// <para>Wood and Wood Products Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood and Wood Products Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9215-15")]
        Item9215_15,
        
        /// <summary>
        /// <para>Pulp and Paper Mill General Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pulp and Paper Mill General Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9215-17")]
        Item9215_17,
        
        /// <summary>
        /// <para>OTHER PROCESS WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER PROCESS WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9219")]
        Item9219,
        
        /// <summary>
        /// <para>Cement and Concrete Plant Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement and Concrete Plant Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-11")]
        Item9219_11,
        
        /// <summary>
        /// <para>Clay Processing Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay Processing Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-13")]
        Item9219_13,
        
        /// <summary>
        /// <para>Chemical Plant Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Plant Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-15")]
        Item9219_15,
        
        /// <summary>
        /// <para>Rubber and Plastics Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rubber and Plastics Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-17")]
        Item9219_17,
        
        /// <summary>
        /// <para>Hide and Skin Processing Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hide and Skin Processing Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-19")]
        Item9219_19,
        
        /// <summary>
        /// <para>Glass Processing Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass Processing Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-21")]
        Item9219_21,
        
        /// <summary>
        /// <para>Fabric and Textile Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fabric and Textile Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-23")]
        Item9219_23,
        
        /// <summary>
        /// <para>Footwear Factory Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Factory Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-25")]
        Item9219_25,
        
        /// <summary>
        /// <para>Process Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Process Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9219-79")]
        Item9219_79,
        
        /// <summary>
        /// <para>PRODUCT PACKAGERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PRODUCT PACKAGERS")]
        [System.Xml.Serialization.XmlEnumAttribute("922")]
        Item922,
        
        /// <summary>
        /// <para>HAND PACKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HAND PACKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9221")]
        Item9221,
        
        /// <summary>
        /// <para>Hand Packer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hand Packer")]
        [System.Xml.Serialization.XmlEnumAttribute("9221-11")]
        Item9221_11,
        
        /// <summary>
        /// <para>PACKAGERS AND CONTAINER FILLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PACKAGERS AND CONTAINER FILLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9222")]
        Item9222,
        
        /// <summary>
        /// <para>Packager and Container Filler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Packager and Container Filler")]
        [System.Xml.Serialization.XmlEnumAttribute("9222-11")]
        Item9222_11,
        
        /// <summary>
        /// <para>OTHER LABOURERS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER LABOURERS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("99")]
        Item99,
        
        /// <summary>
        /// <para>MINING, CONSTRUCTION AND RELATED LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINING, CONSTRUCTION AND RELATED LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("991")]
        Item991,
        
        /// <summary>
        /// <para>MINING SUPPORT WORKERS AND DRILLER'S ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MINING SUPPORT WORKERS AND DRILLER\'S ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("9911")]
        Item9911,
        
        /// <summary>
        /// <para>Mining Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("9911-11")]
        Item9911_11,
        
        /// <summary>
        /// <para>Driller's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driller\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9911-13")]
        Item9911_13,
        
        /// <summary>
        /// <para>EARTHMOVING LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("EARTHMOVING LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9912")]
        Item9912,
        
        /// <summary>
        /// <para>Earthmoving Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earthmoving Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9912-11")]
        Item9912_11,
        
        /// <summary>
        /// <para>PAVING AND SURFACING LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("PAVING AND SURFACING LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9913")]
        Item9913,
        
        /// <summary>
        /// <para>Paving and Surfacing Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paving and Surfacing Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9913-11")]
        Item9913_11,
        
        /// <summary>
        /// <para>SURVEY HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SURVEY HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("9914")]
        Item9914,
        
        /// <summary>
        /// <para>Survey Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Survey Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9914-11")]
        Item9914_11,
        
        /// <summary>
        /// <para>RAILWAY LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RAILWAY LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9915")]
        Item9915,
        
        /// <summary>
        /// <para>Railway Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9915-11")]
        Item9915_11,
        
        /// <summary>
        /// <para>CONSTRUCTION AND PLUMBER'S ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CONSTRUCTION AND PLUMBER\'S ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("9916")]
        Item9916,
        
        /// <summary>
        /// <para>Construction Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9916-11")]
        Item9916_11,
        
        /// <summary>
        /// <para>Plumber's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumber\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9916-13")]
        Item9916_13,
        
        /// <summary>
        /// <para>CONCRETERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CONCRETERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9917")]
        Item9917,
        
        /// <summary>
        /// <para>Concreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concreter")]
        [System.Xml.Serialization.XmlEnumAttribute("9917-11")]
        Item9917_11,
        
        /// <summary>
        /// <para>ELECTRICAL AND TELECOMMUNICATIONS TRADES ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELECTRICAL AND TELECOMMUNICATIONS TRADES ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("9918")]
        Item9918,
        
        /// <summary>
        /// <para>Electrical or Telecommunications Trades Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical or Telecommunications Trades Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9918-11")]
        Item9918_11,
        
        /// <summary>
        /// <para>OTHER MINING, CONSTRUCTION AND RELATED LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MINING, CONSTRUCTION AND RELATED LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9919")]
        Item9919,
        
        /// <summary>
        /// <para>Lagger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lagger")]
        [System.Xml.Serialization.XmlEnumAttribute("9919-11")]
        Item9919_11,
        
        /// <summary>
        /// <para>Crane Chaser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crane Chaser")]
        [System.Xml.Serialization.XmlEnumAttribute("9919-13")]
        Item9919_13,
        
        /// <summary>
        /// <para>Fence Erector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fence Erector")]
        [System.Xml.Serialization.XmlEnumAttribute("9919-15")]
        Item9919_15,
        
        /// <summary>
        /// <para>AGRICULTURAL AND HORTICULTURAL LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AGRICULTURAL AND HORTICULTURAL LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("992")]
        Item992,
        
        /// <summary>
        /// <para>FARM HANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FARM HANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("9921")]
        Item9921,
        
        /// <summary>
        /// <para>General Farm Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Farm Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9921-11")]
        Item9921_11,
        
        /// <summary>
        /// <para>Fruit, Vegetable or Nut Farm Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit, Vegetable or Nut Farm Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9921-13")]
        Item9921_13,
        
        /// <summary>
        /// <para>Stud Hand or Stable Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stud Hand or Stable Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9921-15")]
        Item9921_15,
        
        /// <summary>
        /// <para>Shearing Shed Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shearing Shed Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("9921-17")]
        Item9921_17,
        
        /// <summary>
        /// <para>Farm Hands nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farm Hands nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9921-79")]
        Item9921_79,
        
        /// <summary>
        /// <para>NURSERY AND GARDEN LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NURSERY AND GARDEN LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9922")]
        Item9922,
        
        /// <summary>
        /// <para>Horticultural Nursery Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horticultural Nursery Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9922-11")]
        Item9922_11,
        
        /// <summary>
        /// <para>Garden Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9922-13")]
        Item9922_13,
        
        /// <summary>
        /// <para>OTHER AGRICULTURAL AND HORTICULTURAL LABOURERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER AGRICULTURAL AND HORTICULTURAL LABOURERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9929")]
        Item9929,
        
        /// <summary>
        /// <para>Shooter-Trapper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shooter-Trapper")]
        [System.Xml.Serialization.XmlEnumAttribute("9929-11")]
        Item9929_11,
        
        /// <summary>
        /// <para>Rural Trainee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rural Trainee")]
        [System.Xml.Serialization.XmlEnumAttribute("9929-13")]
        Item9929_13,
        
        /// <summary>
        /// <para>Agricultural and Horticultural Labourers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural and Horticultural Labourers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9929-79")]
        Item9929_79,
        
        /// <summary>
        /// <para>ELEMENTARY FOOD PREPARATION AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ELEMENTARY FOOD PREPARATION AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("993")]
        Item993,
        
        /// <summary>
        /// <para>KITCHENHANDS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("KITCHENHANDS")]
        [System.Xml.Serialization.XmlEnumAttribute("9931")]
        Item9931,
        
        /// <summary>
        /// <para>Kitchenhand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kitchenhand")]
        [System.Xml.Serialization.XmlEnumAttribute("9931-11")]
        Item9931_11,
        
        /// <summary>
        /// <para>FAST FOOD COOKS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FAST FOOD COOKS")]
        [System.Xml.Serialization.XmlEnumAttribute("9932")]
        Item9932,
        
        /// <summary>
        /// <para>Fast Food Cook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fast Food Cook")]
        [System.Xml.Serialization.XmlEnumAttribute("9932-11")]
        Item9932_11,
        
        /// <summary>
        /// <para>FOOD TRADES ASSISTANTS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FOOD TRADES ASSISTANTS")]
        [System.Xml.Serialization.XmlEnumAttribute("9933")]
        Item9933,
        
        /// <summary>
        /// <para>Pastrycook's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pastrycook\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9933-11")]
        Item9933_11,
        
        /// <summary>
        /// <para>Food Trades Assistants nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Trades Assistants nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9933-79")]
        Item9933_79,
        
        /// <summary>
        /// <para>MISCELLANEOUS LABOURERS AND RELATED WORKERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MISCELLANEOUS LABOURERS AND RELATED WORKERS")]
        [System.Xml.Serialization.XmlEnumAttribute("999")]
        Item999,
        
        /// <summary>
        /// <para>GARBAGE COLLECTORS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GARBAGE COLLECTORS")]
        [System.Xml.Serialization.XmlEnumAttribute("9991")]
        Item9991,
        
        /// <summary>
        /// <para>Garbage Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garbage Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("9991-11")]
        Item9991_11,
        
        /// <summary>
        /// <para>FREIGHT AND FURNITURE HANDLERS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FREIGHT AND FURNITURE HANDLERS")]
        [System.Xml.Serialization.XmlEnumAttribute("9992")]
        Item9992,
        
        /// <summary>
        /// <para>Freight Handler (Road and Rail)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight Handler (Road and Rail)")]
        [System.Xml.Serialization.XmlEnumAttribute("9992-11")]
        Item9992_11,
        
        /// <summary>
        /// <para>Waterside Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waterside Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("9992-13")]
        Item9992_13,
        
        /// <summary>
        /// <para>Truck Driver's Offsider</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Truck Driver\'s Offsider")]
        [System.Xml.Serialization.XmlEnumAttribute("9992-15")]
        Item9992_15,
        
        /// <summary>
        /// <para>HANDYPERSONS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HANDYPERSONS")]
        [System.Xml.Serialization.XmlEnumAttribute("9993")]
        Item9993,
        
        /// <summary>
        /// <para>Handyperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Handyperson")]
        [System.Xml.Serialization.XmlEnumAttribute("9993-11")]
        Item9993_11,
        
        /// <summary>
        /// <para>OTHER MISCELLANEOUS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("OTHER MISCELLANEOUS")]
        [System.Xml.Serialization.XmlEnumAttribute("9999")]
        Item9999,
        
        /// <summary>
        /// <para>Vending Machine Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vending Machine Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("9999-11")]
        Item9999_11,
        
        /// <summary>
        /// <para>Sign Erector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sign Erector")]
        [System.Xml.Serialization.XmlEnumAttribute("9999-13")]
        Item9999_13,
        
        /// <summary>
        /// <para>Mechanic's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanic\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("9999-15")]
        Item9999_15,
        
        /// <summary>
        /// <para>Stormwater, Drainage and Sewerage System Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stormwater, Drainage and Sewerage System Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("9999-17")]
        Item9999_17,
        
        /// <summary>
        /// <para>Labourers and Related Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Labourers and Related Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("9999-79")]
        Item9999_79,
    }
    
    /// <summary>
    /// <para>agriculturalAssetTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("agriculturalAssetTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("agriculturalAssetTypeList", Namespace="")]
    public enum AgriculturalAssetTypeList
    {
        
        /// <summary>
        /// <para>All Terrain Vehicle</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All Terrain Vehicle")]
        [System.Xml.Serialization.XmlEnumAttribute("All Terrain Vehicle")]
        All_Terrain_Vehicle,
        
        /// <summary>
        /// <para>Crops / Hay</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crops / Hay")]
        [System.Xml.Serialization.XmlEnumAttribute("Crops / Hay")]
        Crops_Slash_Hay,
        
        /// <summary>
        /// <para>Fencing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fencing")]
        Fencing,
        
        /// <summary>
        /// <para>Fertiliser / Slurry</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fertiliser / Slurry")]
        [System.Xml.Serialization.XmlEnumAttribute("Fertiliser / Slurry")]
        Fertiliser_Slash_Slurry,
        
        /// <summary>
        /// <para>GPS / Laser / Levelling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GPS / Laser / Levelling")]
        [System.Xml.Serialization.XmlEnumAttribute("GPS / Laser / Levelling")]
        GPS_Slash_Laser_Slash_Levelling,
        
        /// <summary>
        /// <para>Handling / Storage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Handling / Storage")]
        [System.Xml.Serialization.XmlEnumAttribute("Handling / Storage")]
        Handling_Slash_Storage,
        
        /// <summary>
        /// <para>Harvester / Header</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Harvester / Header")]
        [System.Xml.Serialization.XmlEnumAttribute("Harvester / Header")]
        Harvester_Slash_Header,
        
        /// <summary>
        /// <para>Irrigation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Irrigation")]
        Irrigation,
        
        /// <summary>
        /// <para>Livestock</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock")]
        Livestock,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Seeding / Planting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seeding / Planting")]
        [System.Xml.Serialization.XmlEnumAttribute("Seeding / Planting")]
        Seeding_Slash_Planting,
        
        /// <summary>
        /// <para>Sprayer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sprayer")]
        Sprayer,
        
        /// <summary>
        /// <para>Storage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Storage")]
        Storage,
        
        /// <summary>
        /// <para>Tillage Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tillage Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Tillage Equipment")]
        Tillage_Equipment,
        
        /// <summary>
        /// <para>Tractor - Tracked</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tractor - Tracked")]
        [System.Xml.Serialization.XmlEnumAttribute("Tractor - Tracked")]
        Tractor_Tracked,
        
        /// <summary>
        /// <para>Tractor - Wheeled</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tractor - Wheeled")]
        [System.Xml.Serialization.XmlEnumAttribute("Tractor - Wheeled")]
        Tractor_Wheeled,
        
        /// <summary>
        /// <para>Tractor Front Attachments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tractor Front Attachments")]
        [System.Xml.Serialization.XmlEnumAttribute("Tractor Front Attachments")]
        Tractor_Front_Attachments,
    }
    
    /// <summary>
    /// <para>aircraftTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("aircraftTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("aircraftTypeList", Namespace="")]
    public enum AircraftTypeList
    {
        
        /// <summary>
        /// <para>Engine</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engine")]
        Engine,
        
        /// <summary>
        /// <para>Fixed Wing - Cylinder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed Wing - Cylinder")]
        [System.Xml.Serialization.XmlEnumAttribute("Fixed Wing - Cylinder")]
        Fixed_Wing_Cylinder,
        
        /// <summary>
        /// <para>Fixed Wing - Jet</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed Wing - Jet")]
        [System.Xml.Serialization.XmlEnumAttribute("Fixed Wing - Jet")]
        Fixed_Wing_Jet,
        
        /// <summary>
        /// <para>Fixed Wing - Turbo Prop</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed Wing - Turbo Prop")]
        [System.Xml.Serialization.XmlEnumAttribute("Fixed Wing - Turbo Prop")]
        Fixed_Wing_Turbo_Prop,
        
        /// <summary>
        /// <para>Helicopter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Helicopter")]
        Helicopter,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Ultra Light</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ultra Light")]
        [System.Xml.Serialization.XmlEnumAttribute("Ultra Light")]
        Ultra_Light,
    }
    
    /// <summary>
    /// <para>annotationTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("annotationTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("annotationTypeList", Namespace="")]
    public enum AnnotationTypeList
    {
        
        /// <summary>
        /// <para>Code</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code")]
        Code,
        
        /// <summary>
        /// <para>End User Message</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("End User Message")]
        [System.Xml.Serialization.XmlEnumAttribute("End User Message")]
        End_User_Message,
        
        /// <summary>
        /// <para>Message</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Message")]
        Message,
        
        /// <summary>
        /// <para>Technical</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical")]
        Technical,
    }
    
    /// <summary>
    /// <para>The list of Occupation Codes defined by the Australian and New Zealand Standard Classification of Occupations, 2013, Version 1.2, Released at 11:30 AM (CANBERRA TIME) 26/06/2013. This list of classifications (ANZSCO Version 1.2) builds on a review conducted in 2009 (ANZSCO First Edition, Revision 1) following the classification's introduction in 2006.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"The list of Occupation Codes defined by the Australian and New Zealand Standard Classification of Occupations, 2013, Version 1.2, Released at 11:30 AM (CANBERRA TIME) 26/06/2013. This list of classifications (ANZSCO Version 1.2) builds on a review conducted in 2009 (ANZSCO First Edition, Revision 1) following the classification's introduction in 2006.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("anzscoOccupationCodeList", Namespace="")]
    public enum AnzscoOccupationCodeList
    {
        
        /// <summary>
        /// <para>Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("100000")]
        Item100000,
        
        /// <summary>
        /// <para>Chief Executives, General Managers and Legislators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chief Executives, General Managers and Legislators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("111000")]
        Item111000,
        
        /// <summary>
        /// <para>Chief Executive or Managing Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chief Executive or Managing Director")]
        [System.Xml.Serialization.XmlEnumAttribute("111111")]
        Item111111,
        
        /// <summary>
        /// <para>General Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("111200")]
        Item111200,
        
        /// <summary>
        /// <para>Corporate General Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corporate General Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("111211")]
        Item111211,
        
        /// <summary>
        /// <para>Defence Force Senior Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defence Force Senior Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("111212")]
        Item111212,
        
        /// <summary>
        /// <para>Legislators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legislators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("111300")]
        Item111300,
        
        /// <summary>
        /// <para>Local Government Legislator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Local Government Legislator")]
        [System.Xml.Serialization.XmlEnumAttribute("111311")]
        Item111311,
        
        /// <summary>
        /// <para>Member of Parliament</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Member of Parliament")]
        [System.Xml.Serialization.XmlEnumAttribute("111312")]
        Item111312,
        
        /// <summary>
        /// <para>Legislators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legislators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("111399")]
        Item111399,
        
        /// <summary>
        /// <para>Farmers and Farm Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farmers and Farm Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("121000")]
        Item121000,
        
        /// <summary>
        /// <para>Aquaculture Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aquaculture Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121111")]
        Item121111,
        
        /// <summary>
        /// <para>Crop Farmers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crop Farmers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("121200")]
        Item121200,
        
        /// <summary>
        /// <para>Cotton Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cotton Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121211")]
        Item121211,
        
        /// <summary>
        /// <para>Flower Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flower Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121212")]
        Item121212,
        
        /// <summary>
        /// <para>Fruit or Nut Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit or Nut Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121213")]
        Item121213,
        
        /// <summary>
        /// <para>Grain, Oilseed or Pasture Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain, Oilseed or Pasture Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121214")]
        Item121214,
        
        /// <summary>
        /// <para>Grape Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grape Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121215")]
        Item121215,
        
        /// <summary>
        /// <para>Mixed Crop Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Crop Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121216")]
        Item121216,
        
        /// <summary>
        /// <para>Sugar Cane Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar Cane Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121217")]
        Item121217,
        
        /// <summary>
        /// <para>Turf Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turf Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121218")]
        Item121218,
        
        /// <summary>
        /// <para>Vegetable Grower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Grower")]
        [System.Xml.Serialization.XmlEnumAttribute("121221")]
        Item121221,
        
        /// <summary>
        /// <para>Crop Farmers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crop Farmers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("121299")]
        Item121299,
        
        /// <summary>
        /// <para>Livestock Farmers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock Farmers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("121300")]
        Item121300,
        
        /// <summary>
        /// <para>Apiarist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apiarist")]
        [System.Xml.Serialization.XmlEnumAttribute("121311")]
        Item121311,
        
        /// <summary>
        /// <para>Beef Cattle Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beef Cattle Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121312")]
        Item121312,
        
        /// <summary>
        /// <para>Dairy Cattle Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Cattle Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121313")]
        Item121313,
        
        /// <summary>
        /// <para>Deer Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deer Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121314")]
        Item121314,
        
        /// <summary>
        /// <para>Goat Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Goat Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121315")]
        Item121315,
        
        /// <summary>
        /// <para>Horse Breeder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Breeder")]
        [System.Xml.Serialization.XmlEnumAttribute("121316")]
        Item121316,
        
        /// <summary>
        /// <para>Mixed Livestock Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Livestock Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121317")]
        Item121317,
        
        /// <summary>
        /// <para>Pig Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pig Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121318")]
        Item121318,
        
        /// <summary>
        /// <para>Poultry Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121321")]
        Item121321,
        
        /// <summary>
        /// <para>Sheep Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121322")]
        Item121322,
        
        /// <summary>
        /// <para>Livestock Farmers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock Farmers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("121399")]
        Item121399,
        
        /// <summary>
        /// <para>Mixed Crop and Livestock Farmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Crop and Livestock Farmer")]
        [System.Xml.Serialization.XmlEnumAttribute("121411")]
        Item121411,
        
        /// <summary>
        /// <para>Specialist Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("130000")]
        Item130000,
        
        /// <summary>
        /// <para>Advertising, Public Relations and Sales Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising, Public Relations and Sales Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("131100")]
        Item131100,
        
        /// <summary>
        /// <para>Sales and Marketing Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales and Marketing Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("131112")]
        Item131112,
        
        /// <summary>
        /// <para>Advertising Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("131113")]
        Item131113,
        
        /// <summary>
        /// <para>Public Relations Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Relations Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("131114")]
        Item131114,
        
        /// <summary>
        /// <para>Business Administration Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business Administration Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("132000")]
        Item132000,
        
        /// <summary>
        /// <para>Corporate Services Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corporate Services Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("132111")]
        Item132111,
        
        /// <summary>
        /// <para>Finance Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Finance Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("132211")]
        Item132211,
        
        /// <summary>
        /// <para>Human Resource Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resource Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("132311")]
        Item132311,
        
        /// <summary>
        /// <para>Policy and Planning Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Policy and Planning Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("132411")]
        Item132411,
        
        /// <summary>
        /// <para>Research and Development Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Research and Development Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("132511")]
        Item132511,
        
        /// <summary>
        /// <para>Construction, Distribution and Production Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction, Distribution and Production Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("133000")]
        Item133000,
        
        /// <summary>
        /// <para>Construction Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("133100")]
        Item133100,
        
        /// <summary>
        /// <para>Construction Project Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Project Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("133111")]
        Item133111,
        
        /// <summary>
        /// <para>Project Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Project Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("133112")]
        Item133112,
        
        /// <summary>
        /// <para>Engineering Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("133211")]
        Item133211,
        
        /// <summary>
        /// <para>Importers, Exporters and Wholesalers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Importers, Exporters and Wholesalers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("133300")]
        Item133300,
        
        /// <summary>
        /// <para>Importer or Exporter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Importer or Exporter")]
        [System.Xml.Serialization.XmlEnumAttribute("133311")]
        Item133311,
        
        /// <summary>
        /// <para>Wholesaler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wholesaler")]
        [System.Xml.Serialization.XmlEnumAttribute("133312")]
        Item133312,
        
        /// <summary>
        /// <para>Manufacturer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Manufacturer")]
        [System.Xml.Serialization.XmlEnumAttribute("133411")]
        Item133411,
        
        /// <summary>
        /// <para>Production Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("133500")]
        Item133500,
        
        /// <summary>
        /// <para>Production Manager (Forestry)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Manager (Forestry)")]
        [System.Xml.Serialization.XmlEnumAttribute("133511")]
        Item133511,
        
        /// <summary>
        /// <para>Production Manager (Manufacturing)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Manager (Manufacturing)")]
        [System.Xml.Serialization.XmlEnumAttribute("133512")]
        Item133512,
        
        /// <summary>
        /// <para>Production Manager (Mining)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Manager (Mining)")]
        [System.Xml.Serialization.XmlEnumAttribute("133513")]
        Item133513,
        
        /// <summary>
        /// <para>Supply and Distribution Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supply and Distribution Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("133611")]
        Item133611,
        
        /// <summary>
        /// <para>Procurement Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Procurement Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("133612")]
        Item133612,
        
        /// <summary>
        /// <para>Education, Health and Welfare Services Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education, Health and Welfare Services Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("134000")]
        Item134000,
        
        /// <summary>
        /// <para>Child Care Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Care Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("134111")]
        Item134111,
        
        /// <summary>
        /// <para>Health and Welfare Services Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health and Welfare Services Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("134200")]
        Item134200,
        
        /// <summary>
        /// <para>Medical Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("134211")]
        Item134211,
        
        /// <summary>
        /// <para>Nursing Clinical Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursing Clinical Director")]
        [System.Xml.Serialization.XmlEnumAttribute("134212")]
        Item134212,
        
        /// <summary>
        /// <para>Primary Health Organisation Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Health Organisation Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("134213")]
        Item134213,
        
        /// <summary>
        /// <para>Welfare Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("134214")]
        Item134214,
        
        /// <summary>
        /// <para>Health and Welfare Services Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health and Welfare Services Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("134299")]
        Item134299,
        
        /// <summary>
        /// <para>School Principal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("School Principal")]
        [System.Xml.Serialization.XmlEnumAttribute("134311")]
        Item134311,
        
        /// <summary>
        /// <para>Other Education Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Education Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("134400")]
        Item134400,
        
        /// <summary>
        /// <para>Faculty Head</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Faculty Head")]
        [System.Xml.Serialization.XmlEnumAttribute("134411")]
        Item134411,
        
        /// <summary>
        /// <para>Regional Education Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Regional Education Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("134412")]
        Item134412,
        
        /// <summary>
        /// <para>Education Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("134499")]
        Item134499,
        
        /// <summary>
        /// <para>ICT Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("135100")]
        Item135100,
        
        /// <summary>
        /// <para>Chief Information Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chief Information Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("135111")]
        Item135111,
        
        /// <summary>
        /// <para>ICT Project Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Project Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("135112")]
        Item135112,
        
        /// <summary>
        /// <para>ICT Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("135199")]
        Item135199,
        
        /// <summary>
        /// <para>Miscellaneous Specialist Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Specialist Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("139000")]
        Item139000,
        
        /// <summary>
        /// <para>Commissioned Officers (Management) nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Officers (Management) nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("139100")]
        Item139100,
        
        /// <summary>
        /// <para>Commissioned Defence Force Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Defence Force Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("139111")]
        Item139111,
        
        /// <summary>
        /// <para>Commissioned Fire Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Fire Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("139112")]
        Item139112,
        
        /// <summary>
        /// <para>Commissioned Police Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commissioned Police Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("139113")]
        Item139113,
        
        /// <summary>
        /// <para>Senior Non-commissioned Defence Force Member</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Senior Non-commissioned Defence Force Member")]
        [System.Xml.Serialization.XmlEnumAttribute("139211")]
        Item139211,
        
        /// <summary>
        /// <para>Other Specialist Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Specialist Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("139900")]
        Item139900,
        
        /// <summary>
        /// <para>Arts Administrator or Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arts Administrator or Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("139911")]
        Item139911,
        
        /// <summary>
        /// <para>Environmental Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("139912")]
        Item139912,
        
        /// <summary>
        /// <para>Laboratory Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laboratory Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("139913")]
        Item139913,
        
        /// <summary>
        /// <para>Quality Assurance Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quality Assurance Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("139914")]
        Item139914,
        
        /// <summary>
        /// <para>Sports Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("139915")]
        Item139915,
        
        /// <summary>
        /// <para>Specialist Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("139999")]
        Item139999,
        
        /// <summary>
        /// <para>Hospitality, Retail and Service Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality, Retail and Service Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("140000")]
        Item140000,
        
        /// <summary>
        /// <para>Accommodation and Hospitality Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accommodation and Hospitality Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("141000")]
        Item141000,
        
        /// <summary>
        /// <para>Cafe or Restaurant Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cafe or Restaurant Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("141111")]
        Item141111,
        
        /// <summary>
        /// <para>Caravan Park and Camping Ground Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Caravan Park and Camping Ground Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("141211")]
        Item141211,
        
        /// <summary>
        /// <para>Hotel or Motel Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hotel or Motel Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("141311")]
        Item141311,
        
        /// <summary>
        /// <para>Licensed Club Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Licensed Club Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("141411")]
        Item141411,
        
        /// <summary>
        /// <para>Other Accommodation and Hospitality Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Accommodation and Hospitality Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("141900")]
        Item141900,
        
        /// <summary>
        /// <para>Bed and Breakfast Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bed and Breakfast Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("141911")]
        Item141911,
        
        /// <summary>
        /// <para>Retirement Village Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retirement Village Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("141912")]
        Item141912,
        
        /// <summary>
        /// <para>Accommodation and Hospitality Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accommodation and Hospitality Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("141999")]
        Item141999,
        
        /// <summary>
        /// <para>Retail Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("142100")]
        Item142100,
        
        /// <summary>
        /// <para>Retail Manager (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Manager (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("142111")]
        Item142111,
        
        /// <summary>
        /// <para>Antique Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Antique Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("142112")]
        Item142112,
        
        /// <summary>
        /// <para>Betting Agency Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Agency Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("142113")]
        Item142113,
        
        /// <summary>
        /// <para>Hair or Beauty Salon Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hair or Beauty Salon Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("142114")]
        Item142114,
        
        /// <summary>
        /// <para>Post Office Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Post Office Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("142115")]
        Item142115,
        
        /// <summary>
        /// <para>Travel Agency Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Agency Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("142116")]
        Item142116,
        
        /// <summary>
        /// <para>Miscellaneous Hospitality, Retail and Service Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Hospitality, Retail and Service Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("149000")]
        Item149000,
        
        /// <summary>
        /// <para>Amusement, Fitness and Sports Centre Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement, Fitness and Sports Centre Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("149100")]
        Item149100,
        
        /// <summary>
        /// <para>Amusement Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149111")]
        Item149111,
        
        /// <summary>
        /// <para>Fitness Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitness Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149112")]
        Item149112,
        
        /// <summary>
        /// <para>Sports Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149113")]
        Item149113,
        
        /// <summary>
        /// <para>Call or Contact Centre and Customer Service Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre and Customer Service Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("149200")]
        Item149200,
        
        /// <summary>
        /// <para>Call or Contact Centre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149211")]
        Item149211,
        
        /// <summary>
        /// <para>Customer Service Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customer Service Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149212")]
        Item149212,
        
        /// <summary>
        /// <para>Conference and Event Organiser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conference and Event Organiser")]
        [System.Xml.Serialization.XmlEnumAttribute("149311")]
        Item149311,
        
        /// <summary>
        /// <para>Transport Services Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Services Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("149400")]
        Item149400,
        
        /// <summary>
        /// <para>Fleet Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fleet Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149411")]
        Item149411,
        
        /// <summary>
        /// <para>Railway Station Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Station Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149412")]
        Item149412,
        
        /// <summary>
        /// <para>Transport Company Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Company Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149413")]
        Item149413,
        
        /// <summary>
        /// <para>Other Hospitality, Retail and Service Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Hospitality, Retail and Service Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("149900")]
        Item149900,
        
        /// <summary>
        /// <para>Boarding Kennel or Cattery Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boarding Kennel or Cattery Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("149911")]
        Item149911,
        
        /// <summary>
        /// <para>Cinema or Theatre Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cinema or Theatre Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149912")]
        Item149912,
        
        /// <summary>
        /// <para>Facilities Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Facilities Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149913")]
        Item149913,
        
        /// <summary>
        /// <para>Financial Institution Branch Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Institution Branch Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149914")]
        Item149914,
        
        /// <summary>
        /// <para>Equipment Hire Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equipment Hire Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("149915")]
        Item149915,
        
        /// <summary>
        /// <para>Hospitality, Retail and Service Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality, Retail and Service Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("149999")]
        Item149999,
        
        /// <summary>
        /// <para>Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("200000")]
        Item200000,
        
        /// <summary>
        /// <para>Arts and Media Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arts and Media Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("210000")]
        Item210000,
        
        /// <summary>
        /// <para>Arts Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arts Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("211000")]
        Item211000,
        
        /// <summary>
        /// <para>Actors, Dancers and Other Entertainers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actors, Dancers and Other Entertainers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("211100")]
        Item211100,
        
        /// <summary>
        /// <para>Actor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actor")]
        [System.Xml.Serialization.XmlEnumAttribute("211111")]
        Item211111,
        
        /// <summary>
        /// <para>Dancer or Choreographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dancer or Choreographer")]
        [System.Xml.Serialization.XmlEnumAttribute("211112")]
        Item211112,
        
        /// <summary>
        /// <para>Entertainer or Variety Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Entertainer or Variety Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("211113")]
        Item211113,
        
        /// <summary>
        /// <para>Actors, Dancers and Other Entertainers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actors, Dancers and Other Entertainers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("211199")]
        Item211199,
        
        /// <summary>
        /// <para>Music Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("211200")]
        Item211200,
        
        /// <summary>
        /// <para>Composer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Composer")]
        [System.Xml.Serialization.XmlEnumAttribute("211211")]
        Item211211,
        
        /// <summary>
        /// <para>Music Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Director")]
        [System.Xml.Serialization.XmlEnumAttribute("211212")]
        Item211212,
        
        /// <summary>
        /// <para>Musician (Instrumental)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Musician (Instrumental)")]
        [System.Xml.Serialization.XmlEnumAttribute("211213")]
        Item211213,
        
        /// <summary>
        /// <para>Singer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Singer")]
        [System.Xml.Serialization.XmlEnumAttribute("211214")]
        Item211214,
        
        /// <summary>
        /// <para>Music Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("211299")]
        Item211299,
        
        /// <summary>
        /// <para>Photographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographer")]
        [System.Xml.Serialization.XmlEnumAttribute("211311")]
        Item211311,
        
        /// <summary>
        /// <para>Visual Arts and Crafts Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visual Arts and Crafts Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("211400")]
        Item211400,
        
        /// <summary>
        /// <para>Painter (Visual Arts)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Painter (Visual Arts)")]
        [System.Xml.Serialization.XmlEnumAttribute("211411")]
        Item211411,
        
        /// <summary>
        /// <para>Potter or Ceramic Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Potter or Ceramic Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("211412")]
        Item211412,
        
        /// <summary>
        /// <para>Sculptor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sculptor")]
        [System.Xml.Serialization.XmlEnumAttribute("211413")]
        Item211413,
        
        /// <summary>
        /// <para>Visual Arts and Crafts Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visual Arts and Crafts Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("211499")]
        Item211499,
        
        /// <summary>
        /// <para>Media Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Media Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("212000")]
        Item212000,
        
        /// <summary>
        /// <para>Artistic Directors, and Media Producers and Presenters nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Artistic Directors, and Media Producers and Presenters nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("212100")]
        Item212100,
        
        /// <summary>
        /// <para>Artistic Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Artistic Director")]
        [System.Xml.Serialization.XmlEnumAttribute("212111")]
        Item212111,
        
        /// <summary>
        /// <para>Media Producer (excluding Video)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Media Producer (excluding Video)")]
        [System.Xml.Serialization.XmlEnumAttribute("212112")]
        Item212112,
        
        /// <summary>
        /// <para>Radio Presenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Presenter")]
        [System.Xml.Serialization.XmlEnumAttribute("212113")]
        Item212113,
        
        /// <summary>
        /// <para>Television Presenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Presenter")]
        [System.Xml.Serialization.XmlEnumAttribute("212114")]
        Item212114,
        
        /// <summary>
        /// <para>Authors, and Book and Script Editors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Authors, and Book and Script Editors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("212200")]
        Item212200,
        
        /// <summary>
        /// <para>Author</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author")]
        [System.Xml.Serialization.XmlEnumAttribute("212211")]
        Item212211,
        
        /// <summary>
        /// <para>Book or Script Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Book or Script Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("212212")]
        Item212212,
        
        /// <summary>
        /// <para>Film, Television, Radio and Stage Directors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Film, Television, Radio and Stage Directors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("212300")]
        Item212300,
        
        /// <summary>
        /// <para>Art Director (Film, Television or Stage)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Art Director (Film, Television or Stage)")]
        [System.Xml.Serialization.XmlEnumAttribute("212311")]
        Item212311,
        
        /// <summary>
        /// <para>Director (Film, Television, Radio or Stage)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Director (Film, Television, Radio or Stage)")]
        [System.Xml.Serialization.XmlEnumAttribute("212312")]
        Item212312,
        
        /// <summary>
        /// <para>Director of Photography</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Director of Photography")]
        [System.Xml.Serialization.XmlEnumAttribute("212313")]
        Item212313,
        
        /// <summary>
        /// <para>Film and Video Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Film and Video Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("212314")]
        Item212314,
        
        /// <summary>
        /// <para>Program Director (Television or Radio)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Program Director (Television or Radio)")]
        [System.Xml.Serialization.XmlEnumAttribute("212315")]
        Item212315,
        
        /// <summary>
        /// <para>Stage Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stage Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("212316")]
        Item212316,
        
        /// <summary>
        /// <para>Technical Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Director")]
        [System.Xml.Serialization.XmlEnumAttribute("212317")]
        Item212317,
        
        /// <summary>
        /// <para>Video Producer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Video Producer")]
        [System.Xml.Serialization.XmlEnumAttribute("212318")]
        Item212318,
        
        /// <summary>
        /// <para>Film, Television, Radio and Stage Directors nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Film, Television, Radio and Stage Directors nec")]
        [System.Xml.Serialization.XmlEnumAttribute("212399")]
        Item212399,
        
        /// <summary>
        /// <para>Journalists and Other Writers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Journalists and Other Writers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("212400")]
        Item212400,
        
        /// <summary>
        /// <para>Copywriter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Copywriter")]
        [System.Xml.Serialization.XmlEnumAttribute("212411")]
        Item212411,
        
        /// <summary>
        /// <para>Newspaper or Periodical Editor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Newspaper or Periodical Editor")]
        [System.Xml.Serialization.XmlEnumAttribute("212412")]
        Item212412,
        
        /// <summary>
        /// <para>Print Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Print Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("212413")]
        Item212413,
        
        /// <summary>
        /// <para>Radio Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("212414")]
        Item212414,
        
        /// <summary>
        /// <para>Technical Writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Writer")]
        [System.Xml.Serialization.XmlEnumAttribute("212415")]
        Item212415,
        
        /// <summary>
        /// <para>Television Journalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Journalist")]
        [System.Xml.Serialization.XmlEnumAttribute("212416")]
        Item212416,
        
        /// <summary>
        /// <para>Journalists and Other Writers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Journalists and Other Writers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("212499")]
        Item212499,
        
        /// <summary>
        /// <para>Business, Human Resource and Marketing Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business, Human Resource and Marketing Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("220000")]
        Item220000,
        
        /// <summary>
        /// <para>Accountants, Auditors and Company Secretaries nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountants, Auditors and Company Secretaries nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("221000")]
        Item221000,
        
        /// <summary>
        /// <para>Accountants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("221100")]
        Item221100,
        
        /// <summary>
        /// <para>Accountant (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountant (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("221111")]
        Item221111,
        
        /// <summary>
        /// <para>Management Accountant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management Accountant")]
        [System.Xml.Serialization.XmlEnumAttribute("221112")]
        Item221112,
        
        /// <summary>
        /// <para>Taxation Accountant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taxation Accountant")]
        [System.Xml.Serialization.XmlEnumAttribute("221113")]
        Item221113,
        
        /// <summary>
        /// <para>Auditors, Company Secretaries and Corporate Treasurers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auditors, Company Secretaries and Corporate Treasurers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("221200")]
        Item221200,
        
        /// <summary>
        /// <para>Company Secretary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Company Secretary")]
        [System.Xml.Serialization.XmlEnumAttribute("221211")]
        Item221211,
        
        /// <summary>
        /// <para>Corporate Treasurer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corporate Treasurer")]
        [System.Xml.Serialization.XmlEnumAttribute("221212")]
        Item221212,
        
        /// <summary>
        /// <para>External Auditor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("External Auditor")]
        [System.Xml.Serialization.XmlEnumAttribute("221213")]
        Item221213,
        
        /// <summary>
        /// <para>Internal Auditor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internal Auditor")]
        [System.Xml.Serialization.XmlEnumAttribute("221214")]
        Item221214,
        
        /// <summary>
        /// <para>Financial Brokers and Dealers, and Investment Advisers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Brokers and Dealers, and Investment Advisers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("222000")]
        Item222000,
        
        /// <summary>
        /// <para>Financial Brokers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Brokers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("222100")]
        Item222100,
        
        /// <summary>
        /// <para>Commodities Trader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commodities Trader")]
        [System.Xml.Serialization.XmlEnumAttribute("222111")]
        Item222111,
        
        /// <summary>
        /// <para>Finance Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Finance Broker")]
        [System.Xml.Serialization.XmlEnumAttribute("222112")]
        Item222112,
        
        /// <summary>
        /// <para>Insurance Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Broker")]
        [System.Xml.Serialization.XmlEnumAttribute("222113")]
        Item222113,
        
        /// <summary>
        /// <para>Financial Brokers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Brokers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("222199")]
        Item222199,
        
        /// <summary>
        /// <para>Financial Dealers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Dealers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("222200")]
        Item222200,
        
        /// <summary>
        /// <para>Financial Market Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Market Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("222211")]
        Item222211,
        
        /// <summary>
        /// <para>Futures Trader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Futures Trader")]
        [System.Xml.Serialization.XmlEnumAttribute("222212")]
        Item222212,
        
        /// <summary>
        /// <para>Stockbroking Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stockbroking Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("222213")]
        Item222213,
        
        /// <summary>
        /// <para>Financial Dealers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Dealers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("222299")]
        Item222299,
        
        /// <summary>
        /// <para>Financial Investment Advisers and Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Investment Advisers and Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("222300")]
        Item222300,
        
        /// <summary>
        /// <para>Financial Investment Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Investment Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("222311")]
        Item222311,
        
        /// <summary>
        /// <para>Financial Investment Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Investment Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("222312")]
        Item222312,
        
        /// <summary>
        /// <para>Human Resource and Training Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resource and Training Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("223000")]
        Item223000,
        
        /// <summary>
        /// <para>Human Resource Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resource Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("223100")]
        Item223100,
        
        /// <summary>
        /// <para>Human Resource Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resource Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("223111")]
        Item223111,
        
        /// <summary>
        /// <para>Recruitment Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recruitment Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("223112")]
        Item223112,
        
        /// <summary>
        /// <para>Workplace Relations Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Workplace Relations Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("223113")]
        Item223113,
        
        /// <summary>
        /// <para>ICT Trainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Trainer")]
        [System.Xml.Serialization.XmlEnumAttribute("223211")]
        Item223211,
        
        /// <summary>
        /// <para>Training and Development Professional</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Training and Development Professional")]
        [System.Xml.Serialization.XmlEnumAttribute("223311")]
        Item223311,
        
        /// <summary>
        /// <para>Information and Organisation Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information and Organisation Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224000")]
        Item224000,
        
        /// <summary>
        /// <para>Actuaries, Mathematicians and Statisticians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actuaries, Mathematicians and Statisticians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224100")]
        Item224100,
        
        /// <summary>
        /// <para>Actuary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Actuary")]
        [System.Xml.Serialization.XmlEnumAttribute("224111")]
        Item224111,
        
        /// <summary>
        /// <para>Mathematician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mathematician")]
        [System.Xml.Serialization.XmlEnumAttribute("224112")]
        Item224112,
        
        /// <summary>
        /// <para>Statistician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Statistician")]
        [System.Xml.Serialization.XmlEnumAttribute("224113")]
        Item224113,
        
        /// <summary>
        /// <para>Archivists, Curators and Records Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Archivists, Curators and Records Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224200")]
        Item224200,
        
        /// <summary>
        /// <para>Archivist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Archivist")]
        [System.Xml.Serialization.XmlEnumAttribute("224211")]
        Item224211,
        
        /// <summary>
        /// <para>Gallery or Museum Curator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gallery or Museum Curator")]
        [System.Xml.Serialization.XmlEnumAttribute("224212")]
        Item224212,
        
        /// <summary>
        /// <para>Health Information Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Information Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("224213")]
        Item224213,
        
        /// <summary>
        /// <para>Records Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Records Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("224214")]
        Item224214,
        
        /// <summary>
        /// <para>Economist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Economist")]
        [System.Xml.Serialization.XmlEnumAttribute("224311")]
        Item224311,
        
        /// <summary>
        /// <para>Intelligence and Policy Analysts nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intelligence and Policy Analysts nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224400")]
        Item224400,
        
        /// <summary>
        /// <para>Intelligence Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intelligence Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("224411")]
        Item224411,
        
        /// <summary>
        /// <para>Policy Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Policy Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("224412")]
        Item224412,
        
        /// <summary>
        /// <para>Land Economists and Valuers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land Economists and Valuers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224500")]
        Item224500,
        
        /// <summary>
        /// <para>Land Economist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land Economist")]
        [System.Xml.Serialization.XmlEnumAttribute("224511")]
        Item224511,
        
        /// <summary>
        /// <para>Valuer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valuer")]
        [System.Xml.Serialization.XmlEnumAttribute("224512")]
        Item224512,
        
        /// <summary>
        /// <para>Librarian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Librarian")]
        [System.Xml.Serialization.XmlEnumAttribute("224611")]
        Item224611,
        
        /// <summary>
        /// <para>Management and Organisation Analysts nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management and Organisation Analysts nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224700")]
        Item224700,
        
        /// <summary>
        /// <para>Management Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("224711")]
        Item224711,
        
        /// <summary>
        /// <para>Organisation and Methods Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Organisation and Methods Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("224712")]
        Item224712,
        
        /// <summary>
        /// <para>Other Information and Organisation Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Information and Organisation Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("224900")]
        Item224900,
        
        /// <summary>
        /// <para>Electorate Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electorate Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("224911")]
        Item224911,
        
        /// <summary>
        /// <para>Liaison Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liaison Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("224912")]
        Item224912,
        
        /// <summary>
        /// <para>Migration Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Migration Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("224913")]
        Item224913,
        
        /// <summary>
        /// <para>Patents Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Patents Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("224914")]
        Item224914,
        
        /// <summary>
        /// <para>Information and Organisation Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information and Organisation Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("224999")]
        Item224999,
        
        /// <summary>
        /// <para>Sales, Marketing and Public Relations Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales, Marketing and Public Relations Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("225000")]
        Item225000,
        
        /// <summary>
        /// <para>Advertising and Marketing Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising and Marketing Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("225100")]
        Item225100,
        
        /// <summary>
        /// <para>Advertising Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("225111")]
        Item225111,
        
        /// <summary>
        /// <para>Market Research Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Market Research Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("225112")]
        Item225112,
        
        /// <summary>
        /// <para>Marketing Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marketing Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("225113")]
        Item225113,
        
        /// <summary>
        /// <para>ICT Sales Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Sales Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("225200")]
        Item225200,
        
        /// <summary>
        /// <para>ICT Account Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Account Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("225211")]
        Item225211,
        
        /// <summary>
        /// <para>ICT Business Development Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Business Development Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("225212")]
        Item225212,
        
        /// <summary>
        /// <para>ICT Sales Representative</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Sales Representative")]
        [System.Xml.Serialization.XmlEnumAttribute("225213")]
        Item225213,
        
        /// <summary>
        /// <para>Public Relations Professional</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Relations Professional")]
        [System.Xml.Serialization.XmlEnumAttribute("225311")]
        Item225311,
        
        /// <summary>
        /// <para>Technical Sales Representatives nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Sales Representatives nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("225400")]
        Item225400,
        
        /// <summary>
        /// <para>Sales Representative (Industrial Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Industrial Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("225411")]
        Item225411,
        
        /// <summary>
        /// <para>Sales Representative (Medical and Pharmaceutical Products)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Medical and Pharmaceutical Products)")]
        [System.Xml.Serialization.XmlEnumAttribute("225412")]
        Item225412,
        
        /// <summary>
        /// <para>Technical Sales Representatives nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Sales Representatives nec")]
        [System.Xml.Serialization.XmlEnumAttribute("225499")]
        Item225499,
        
        /// <summary>
        /// <para>Design, Engineering, Science and Transport Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Design, Engineering, Science and Transport Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("230000")]
        Item230000,
        
        /// <summary>
        /// <para>Air and Marine Transport Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air and Marine Transport Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("231000")]
        Item231000,
        
        /// <summary>
        /// <para>Air Transport Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Transport Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("231100")]
        Item231100,
        
        /// <summary>
        /// <para>Aeroplane Pilot</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aeroplane Pilot")]
        [System.Xml.Serialization.XmlEnumAttribute("231111")]
        Item231111,
        
        /// <summary>
        /// <para>Air Traffic Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Traffic Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("231112")]
        Item231112,
        
        /// <summary>
        /// <para>Flying Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flying Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("231113")]
        Item231113,
        
        /// <summary>
        /// <para>Helicopter Pilot</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Helicopter Pilot")]
        [System.Xml.Serialization.XmlEnumAttribute("231114")]
        Item231114,
        
        /// <summary>
        /// <para>Air Transport Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Transport Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("231199")]
        Item231199,
        
        /// <summary>
        /// <para>Marine Transport Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Transport Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("231200")]
        Item231200,
        
        /// <summary>
        /// <para>Master Fisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Master Fisher")]
        [System.Xml.Serialization.XmlEnumAttribute("231211")]
        Item231211,
        
        /// <summary>
        /// <para>Ship's Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("231212")]
        Item231212,
        
        /// <summary>
        /// <para>Ship's Master</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Master")]
        [System.Xml.Serialization.XmlEnumAttribute("231213")]
        Item231213,
        
        /// <summary>
        /// <para>Ship's Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ship\'s Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("231214")]
        Item231214,
        
        /// <summary>
        /// <para>Marine Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("231215")]
        Item231215,
        
        /// <summary>
        /// <para>Marine Transport Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Transport Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("231299")]
        Item231299,
        
        /// <summary>
        /// <para>Architects, Designers, Planners and Surveyors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architects, Designers, Planners and Surveyors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("232000")]
        Item232000,
        
        /// <summary>
        /// <para>Architects and Landscape Architects nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architects and Landscape Architects nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("232100")]
        Item232100,
        
        /// <summary>
        /// <para>Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("232111")]
        Item232111,
        
        /// <summary>
        /// <para>Landscape Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landscape Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("232112")]
        Item232112,
        
        /// <summary>
        /// <para>Surveyors and Spatial Scientists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveyors and Spatial Scientists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("232200")]
        Item232200,
        
        /// <summary>
        /// <para>Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("232212")]
        Item232212,
        
        /// <summary>
        /// <para>Cartographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cartographer")]
        [System.Xml.Serialization.XmlEnumAttribute("232213")]
        Item232213,
        
        /// <summary>
        /// <para>Other Spatial Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Spatial Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("232214")]
        Item232214,
        
        /// <summary>
        /// <para>Fashion, Industrial and Jewellery Designers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fashion, Industrial and Jewellery Designers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("232300")]
        Item232300,
        
        /// <summary>
        /// <para>Fashion Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fashion Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232311")]
        Item232311,
        
        /// <summary>
        /// <para>Industrial Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232312")]
        Item232312,
        
        /// <summary>
        /// <para>Jewellery Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jewellery Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232313")]
        Item232313,
        
        /// <summary>
        /// <para>Graphic and Web Designers, and Illustrators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Graphic and Web Designers, and Illustrators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("232400")]
        Item232400,
        
        /// <summary>
        /// <para>Graphic Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Graphic Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232411")]
        Item232411,
        
        /// <summary>
        /// <para>Illustrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Illustrator")]
        [System.Xml.Serialization.XmlEnumAttribute("232412")]
        Item232412,
        
        /// <summary>
        /// <para>Multimedia Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Multimedia Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232413")]
        Item232413,
        
        /// <summary>
        /// <para>Web Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Web Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232414")]
        Item232414,
        
        /// <summary>
        /// <para>Interior Designer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interior Designer")]
        [System.Xml.Serialization.XmlEnumAttribute("232511")]
        Item232511,
        
        /// <summary>
        /// <para>Urban and Regional Planner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Urban and Regional Planner")]
        [System.Xml.Serialization.XmlEnumAttribute("232611")]
        Item232611,
        
        /// <summary>
        /// <para>Engineering Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233000")]
        Item233000,
        
        /// <summary>
        /// <para>Chemical and Materials Engineers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical and Materials Engineers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233100")]
        Item233100,
        
        /// <summary>
        /// <para>Chemical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233111")]
        Item233111,
        
        /// <summary>
        /// <para>Materials Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233112")]
        Item233112,
        
        /// <summary>
        /// <para>Civil Engineering Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233200")]
        Item233200,
        
        /// <summary>
        /// <para>Civil Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233211")]
        Item233211,
        
        /// <summary>
        /// <para>Geotechnical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geotechnical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233212")]
        Item233212,
        
        /// <summary>
        /// <para>Quantity Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("233213")]
        Item233213,
        
        /// <summary>
        /// <para>Structural Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233214")]
        Item233214,
        
        /// <summary>
        /// <para>Transport Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233215")]
        Item233215,
        
        /// <summary>
        /// <para>Electrical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233311")]
        Item233311,
        
        /// <summary>
        /// <para>Electronics Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronics Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233411")]
        Item233411,
        
        /// <summary>
        /// <para>Industrial, Mechanical and Production Engineers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial, Mechanical and Production Engineers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233500")]
        Item233500,
        
        /// <summary>
        /// <para>Industrial Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233511")]
        Item233511,
        
        /// <summary>
        /// <para>Mechanical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233512")]
        Item233512,
        
        /// <summary>
        /// <para>Production or Plant Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production or Plant Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233513")]
        Item233513,
        
        /// <summary>
        /// <para>Mining Engineers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining Engineers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233600")]
        Item233600,
        
        /// <summary>
        /// <para>Mining Engineer (excluding Petroleum)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining Engineer (excluding Petroleum)")]
        [System.Xml.Serialization.XmlEnumAttribute("233611")]
        Item233611,
        
        /// <summary>
        /// <para>Petroleum Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233612")]
        Item233612,
        
        /// <summary>
        /// <para>Other Engineering Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Engineering Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("233900")]
        Item233900,
        
        /// <summary>
        /// <para>Aeronautical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aeronautical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233911")]
        Item233911,
        
        /// <summary>
        /// <para>Agricultural Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233912")]
        Item233912,
        
        /// <summary>
        /// <para>Biomedical Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biomedical Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233913")]
        Item233913,
        
        /// <summary>
        /// <para>Engineering Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("233914")]
        Item233914,
        
        /// <summary>
        /// <para>Environmental Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("233915")]
        Item233915,
        
        /// <summary>
        /// <para>Naval Architect</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Naval Architect")]
        [System.Xml.Serialization.XmlEnumAttribute("233916")]
        Item233916,
        
        /// <summary>
        /// <para>Engineering Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("233999")]
        Item233999,
        
        /// <summary>
        /// <para>Natural and Physical Science Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural and Physical Science Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234000")]
        Item234000,
        
        /// <summary>
        /// <para>Agricultural and Forestry Scientists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural and Forestry Scientists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234100")]
        Item234100,
        
        /// <summary>
        /// <para>Agricultural Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("234111")]
        Item234111,
        
        /// <summary>
        /// <para>Agricultural Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("234112")]
        Item234112,
        
        /// <summary>
        /// <para>Forester</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forester")]
        [System.Xml.Serialization.XmlEnumAttribute("234113")]
        Item234113,
        
        /// <summary>
        /// <para>Chemists, and Food and Wine Scientists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemists, and Food and Wine Scientists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234200")]
        Item234200,
        
        /// <summary>
        /// <para>Chemist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemist")]
        [System.Xml.Serialization.XmlEnumAttribute("234211")]
        Item234211,
        
        /// <summary>
        /// <para>Food Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234212")]
        Item234212,
        
        /// <summary>
        /// <para>Wine Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wine Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("234213")]
        Item234213,
        
        /// <summary>
        /// <para>Environmental Scientists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Scientists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234300")]
        Item234300,
        
        /// <summary>
        /// <para>Conservation Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conservation Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("234311")]
        Item234311,
        
        /// <summary>
        /// <para>Environmental Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("234312")]
        Item234312,
        
        /// <summary>
        /// <para>Environmental Research Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Research Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("234313")]
        Item234313,
        
        /// <summary>
        /// <para>Park Ranger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Park Ranger")]
        [System.Xml.Serialization.XmlEnumAttribute("234314")]
        Item234314,
        
        /// <summary>
        /// <para>Environmental Scientists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Scientists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("234399")]
        Item234399,
        
        /// <summary>
        /// <para>Geologists, Geophysicists and Hydrogeologists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geologists, Geophysicists and Hydrogeologists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234400")]
        Item234400,
        
        /// <summary>
        /// <para>Geologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234411")]
        Item234411,
        
        /// <summary>
        /// <para>Geophysicist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Geophysicist")]
        [System.Xml.Serialization.XmlEnumAttribute("234412")]
        Item234412,
        
        /// <summary>
        /// <para>Hydrogeologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hydrogeologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234413")]
        Item234413,
        
        /// <summary>
        /// <para>Life Scientists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Scientists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234500")]
        Item234500,
        
        /// <summary>
        /// <para>Life Scientist (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Scientist (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("234511")]
        Item234511,
        
        /// <summary>
        /// <para>Biochemist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biochemist")]
        [System.Xml.Serialization.XmlEnumAttribute("234513")]
        Item234513,
        
        /// <summary>
        /// <para>Biotechnologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biotechnologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234514")]
        Item234514,
        
        /// <summary>
        /// <para>Botanist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Botanist")]
        [System.Xml.Serialization.XmlEnumAttribute("234515")]
        Item234515,
        
        /// <summary>
        /// <para>Marine Biologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Biologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234516")]
        Item234516,
        
        /// <summary>
        /// <para>Microbiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Microbiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234517")]
        Item234517,
        
        /// <summary>
        /// <para>Zoologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zoologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234518")]
        Item234518,
        
        /// <summary>
        /// <para>Life Scientists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Scientists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("234599")]
        Item234599,
        
        /// <summary>
        /// <para>Medical Laboratory Scientist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Laboratory Scientist")]
        [System.Xml.Serialization.XmlEnumAttribute("234611")]
        Item234611,
        
        /// <summary>
        /// <para>Veterinarian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinarian")]
        [System.Xml.Serialization.XmlEnumAttribute("234711")]
        Item234711,
        
        /// <summary>
        /// <para>Other Natural and Physical Science Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Natural and Physical Science Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("234900")]
        Item234900,
        
        /// <summary>
        /// <para>Conservator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conservator")]
        [System.Xml.Serialization.XmlEnumAttribute("234911")]
        Item234911,
        
        /// <summary>
        /// <para>Metallurgist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metallurgist")]
        [System.Xml.Serialization.XmlEnumAttribute("234912")]
        Item234912,
        
        /// <summary>
        /// <para>Meteorologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meteorologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234913")]
        Item234913,
        
        /// <summary>
        /// <para>Physicist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physicist")]
        [System.Xml.Serialization.XmlEnumAttribute("234914")]
        Item234914,
        
        /// <summary>
        /// <para>Exercise Physiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Exercise Physiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("234915")]
        Item234915,
        
        /// <summary>
        /// <para>Natural and Physical Science Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural and Physical Science Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("234999")]
        Item234999,
        
        /// <summary>
        /// <para>Education Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("240000")]
        Item240000,
        
        /// <summary>
        /// <para>School Teachers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("School Teachers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("241000")]
        Item241000,
        
        /// <summary>
        /// <para>Early Childhood (Pre-primary School) Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Early Childhood (Pre-primary School) Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("241111")]
        Item241111,
        
        /// <summary>
        /// <para>Primary School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("241213")]
        Item241213,
        
        /// <summary>
        /// <para>Middle School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Middle School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("241311")]
        Item241311,
        
        /// <summary>
        /// <para>Secondary School Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secondary School Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("241411")]
        Item241411,
        
        /// <summary>
        /// <para>Special Education Teachers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Education Teachers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("241500")]
        Item241500,
        
        /// <summary>
        /// <para>Special Needs Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Needs Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("241511")]
        Item241511,
        
        /// <summary>
        /// <para>Teacher of the Hearing Impaired</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teacher of the Hearing Impaired")]
        [System.Xml.Serialization.XmlEnumAttribute("241512")]
        Item241512,
        
        /// <summary>
        /// <para>Teacher of the Sight Impaired</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teacher of the Sight Impaired")]
        [System.Xml.Serialization.XmlEnumAttribute("241513")]
        Item241513,
        
        /// <summary>
        /// <para>Special Education Teachers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Education Teachers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("241599")]
        Item241599,
        
        /// <summary>
        /// <para>Tertiary Education Teachers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tertiary Education Teachers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("242000")]
        Item242000,
        
        /// <summary>
        /// <para>University Lecturers and Tutors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("University Lecturers and Tutors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("242100")]
        Item242100,
        
        /// <summary>
        /// <para>University Lecturer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("University Lecturer")]
        [System.Xml.Serialization.XmlEnumAttribute("242111")]
        Item242111,
        
        /// <summary>
        /// <para>University Tutor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("University Tutor")]
        [System.Xml.Serialization.XmlEnumAttribute("242112")]
        Item242112,
        
        /// <summary>
        /// <para>Vocational Education Teacher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vocational Education Teacher")]
        [System.Xml.Serialization.XmlEnumAttribute("242211")]
        Item242211,
        
        /// <summary>
        /// <para>Miscellaneous Education Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Education Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("249000")]
        Item249000,
        
        /// <summary>
        /// <para>Education Advisers and Reviewers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Advisers and Reviewers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("249100")]
        Item249100,
        
        /// <summary>
        /// <para>Education Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("249111")]
        Item249111,
        
        /// <summary>
        /// <para>Education Reviewer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Reviewer")]
        [System.Xml.Serialization.XmlEnumAttribute("249112")]
        Item249112,
        
        /// <summary>
        /// <para>Private Tutors and Teachers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Tutors and Teachers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("249200")]
        Item249200,
        
        /// <summary>
        /// <para>Art Teacher (Private Tuition)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Art Teacher (Private Tuition)")]
        [System.Xml.Serialization.XmlEnumAttribute("249211")]
        Item249211,
        
        /// <summary>
        /// <para>Dance Teacher (Private Tuition)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dance Teacher (Private Tuition)")]
        [System.Xml.Serialization.XmlEnumAttribute("249212")]
        Item249212,
        
        /// <summary>
        /// <para>Drama Teacher (Private Tuition)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drama Teacher (Private Tuition)")]
        [System.Xml.Serialization.XmlEnumAttribute("249213")]
        Item249213,
        
        /// <summary>
        /// <para>Music Teacher (Private Tuition)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Teacher (Private Tuition)")]
        [System.Xml.Serialization.XmlEnumAttribute("249214")]
        Item249214,
        
        /// <summary>
        /// <para>Private Tutors and Teachers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Tutors and Teachers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("249299")]
        Item249299,
        
        /// <summary>
        /// <para>Teacher of English to Speakers of Other Languages</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teacher of English to Speakers of Other Languages")]
        [System.Xml.Serialization.XmlEnumAttribute("249311")]
        Item249311,
        
        /// <summary>
        /// <para>Health Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("250000")]
        Item250000,
        
        /// <summary>
        /// <para>Health Diagnostic and Promotion Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Diagnostic and Promotion Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251000")]
        Item251000,
        
        /// <summary>
        /// <para>Nutrition Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nutrition Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251100")]
        Item251100,
        
        /// <summary>
        /// <para>Dietitian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dietitian")]
        [System.Xml.Serialization.XmlEnumAttribute("251111")]
        Item251111,
        
        /// <summary>
        /// <para>Nutritionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nutritionist")]
        [System.Xml.Serialization.XmlEnumAttribute("251112")]
        Item251112,
        
        /// <summary>
        /// <para>Medical Imaging Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Imaging Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251200")]
        Item251200,
        
        /// <summary>
        /// <para>Medical Diagnostic Radiographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Diagnostic Radiographer")]
        [System.Xml.Serialization.XmlEnumAttribute("251211")]
        Item251211,
        
        /// <summary>
        /// <para>Medical Radiation Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Radiation Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("251212")]
        Item251212,
        
        /// <summary>
        /// <para>Nuclear Medicine Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nuclear Medicine Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("251213")]
        Item251213,
        
        /// <summary>
        /// <para>Sonographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sonographer")]
        [System.Xml.Serialization.XmlEnumAttribute("251214")]
        Item251214,
        
        /// <summary>
        /// <para>Occupational and Environmental Health Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupational and Environmental Health Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251300")]
        Item251300,
        
        /// <summary>
        /// <para>Environmental Health Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Environmental Health Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("251311")]
        Item251311,
        
        /// <summary>
        /// <para>Occupational Health and Safety Adviser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupational Health and Safety Adviser")]
        [System.Xml.Serialization.XmlEnumAttribute("251312")]
        Item251312,
        
        /// <summary>
        /// <para>Optometrists and Orthoptists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optometrists and Orthoptists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251400")]
        Item251400,
        
        /// <summary>
        /// <para>Optometrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optometrist")]
        [System.Xml.Serialization.XmlEnumAttribute("251411")]
        Item251411,
        
        /// <summary>
        /// <para>Orthoptist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Orthoptist")]
        [System.Xml.Serialization.XmlEnumAttribute("251412")]
        Item251412,
        
        /// <summary>
        /// <para>Pharmacists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmacists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251500")]
        Item251500,
        
        /// <summary>
        /// <para>Hospital Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospital Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("251511")]
        Item251511,
        
        /// <summary>
        /// <para>Industrial Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("251512")]
        Item251512,
        
        /// <summary>
        /// <para>Retail Pharmacist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Pharmacist")]
        [System.Xml.Serialization.XmlEnumAttribute("251513")]
        Item251513,
        
        /// <summary>
        /// <para>Other Health Diagnostic and Promotion Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Health Diagnostic and Promotion Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("251900")]
        Item251900,
        
        /// <summary>
        /// <para>Health Promotion Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Promotion Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("251911")]
        Item251911,
        
        /// <summary>
        /// <para>Orthotist or Prosthetist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Orthotist or Prosthetist")]
        [System.Xml.Serialization.XmlEnumAttribute("251912")]
        Item251912,
        
        /// <summary>
        /// <para>Health Diagnostic and Promotion Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Diagnostic and Promotion Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("251999")]
        Item251999,
        
        /// <summary>
        /// <para>Health Therapy Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Therapy Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("252000")]
        Item252000,
        
        /// <summary>
        /// <para>Chiropractors and Osteopaths nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chiropractors and Osteopaths nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("252100")]
        Item252100,
        
        /// <summary>
        /// <para>Chiropractor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chiropractor")]
        [System.Xml.Serialization.XmlEnumAttribute("252111")]
        Item252111,
        
        /// <summary>
        /// <para>Osteopath</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Osteopath")]
        [System.Xml.Serialization.XmlEnumAttribute("252112")]
        Item252112,
        
        /// <summary>
        /// <para>Complementary Health Therapists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Complementary Health Therapists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("252200")]
        Item252200,
        
        /// <summary>
        /// <para>Acupuncturist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Acupuncturist")]
        [System.Xml.Serialization.XmlEnumAttribute("252211")]
        Item252211,
        
        /// <summary>
        /// <para>Homoeopath</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Homoeopath")]
        [System.Xml.Serialization.XmlEnumAttribute("252212")]
        Item252212,
        
        /// <summary>
        /// <para>Naturopath</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Naturopath")]
        [System.Xml.Serialization.XmlEnumAttribute("252213")]
        Item252213,
        
        /// <summary>
        /// <para>Traditional Chinese Medicine Practitioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Traditional Chinese Medicine Practitioner")]
        [System.Xml.Serialization.XmlEnumAttribute("252214")]
        Item252214,
        
        /// <summary>
        /// <para>Complementary Health Therapists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Complementary Health Therapists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("252299")]
        Item252299,
        
        /// <summary>
        /// <para>Dental Practitioners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Practitioners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("252300")]
        Item252300,
        
        /// <summary>
        /// <para>Dental Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("252311")]
        Item252311,
        
        /// <summary>
        /// <para>Dentist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dentist")]
        [System.Xml.Serialization.XmlEnumAttribute("252312")]
        Item252312,
        
        /// <summary>
        /// <para>Occupational Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupational Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("252411")]
        Item252411,
        
        /// <summary>
        /// <para>Physiotherapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physiotherapist")]
        [System.Xml.Serialization.XmlEnumAttribute("252511")]
        Item252511,
        
        /// <summary>
        /// <para>Podiatrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Podiatrist")]
        [System.Xml.Serialization.XmlEnumAttribute("252611")]
        Item252611,
        
        /// <summary>
        /// <para>Audiologists and Speech Pathologists \ Therapists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Audiologists and Speech Pathologists \\ Therapists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("252700")]
        Item252700,
        
        /// <summary>
        /// <para>Audiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Audiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("252711")]
        Item252711,
        
        /// <summary>
        /// <para>Speech Pathologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Speech Pathologist")]
        [System.Xml.Serialization.XmlEnumAttribute("252712")]
        Item252712,
        
        /// <summary>
        /// <para>Medical Practitioners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Practitioners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("253000")]
        Item253000,
        
        /// <summary>
        /// <para>General Practitioners and Resident Medical Officers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Practitioners and Resident Medical Officers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("253100")]
        Item253100,
        
        /// <summary>
        /// <para>General Practitioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Practitioner")]
        [System.Xml.Serialization.XmlEnumAttribute("253111")]
        Item253111,
        
        /// <summary>
        /// <para>Resident Medical Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Resident Medical Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("253112")]
        Item253112,
        
        /// <summary>
        /// <para>Anaesthetist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anaesthetist")]
        [System.Xml.Serialization.XmlEnumAttribute("253211")]
        Item253211,
        
        /// <summary>
        /// <para>Specialist Physicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Physicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("253300")]
        Item253300,
        
        /// <summary>
        /// <para>Specialist Physician (General Medicine)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Physician (General Medicine)")]
        [System.Xml.Serialization.XmlEnumAttribute("253311")]
        Item253311,
        
        /// <summary>
        /// <para>Cardiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cardiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253312")]
        Item253312,
        
        /// <summary>
        /// <para>Clinical Haematologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clinical Haematologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253313")]
        Item253313,
        
        /// <summary>
        /// <para>Medical Oncologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Oncologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253314")]
        Item253314,
        
        /// <summary>
        /// <para>Endocrinologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Endocrinologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253315")]
        Item253315,
        
        /// <summary>
        /// <para>Gastroenterologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gastroenterologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253316")]
        Item253316,
        
        /// <summary>
        /// <para>Intensive Care Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intensive Care Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("253317")]
        Item253317,
        
        /// <summary>
        /// <para>Neurologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Neurologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253318")]
        Item253318,
        
        /// <summary>
        /// <para>Paediatrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paediatrician")]
        [System.Xml.Serialization.XmlEnumAttribute("253321")]
        Item253321,
        
        /// <summary>
        /// <para>Renal Medicine Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Renal Medicine Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("253322")]
        Item253322,
        
        /// <summary>
        /// <para>Rheumatologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rheumatologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253323")]
        Item253323,
        
        /// <summary>
        /// <para>Thoracic Medicine Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Thoracic Medicine Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("253324")]
        Item253324,
        
        /// <summary>
        /// <para>Specialist Physicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Physicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("253399")]
        Item253399,
        
        /// <summary>
        /// <para>Psychiatrist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychiatrist")]
        [System.Xml.Serialization.XmlEnumAttribute("253411")]
        Item253411,
        
        /// <summary>
        /// <para>Surgeons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surgeons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("253500")]
        Item253500,
        
        /// <summary>
        /// <para>Surgeon (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surgeon (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("253511")]
        Item253511,
        
        /// <summary>
        /// <para>Cardiothoracic Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cardiothoracic Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253512")]
        Item253512,
        
        /// <summary>
        /// <para>Neurosurgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Neurosurgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253513")]
        Item253513,
        
        /// <summary>
        /// <para>Orthopaedic Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Orthopaedic Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253514")]
        Item253514,
        
        /// <summary>
        /// <para>Otorhinolaryngologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Otorhinolaryngologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253515")]
        Item253515,
        
        /// <summary>
        /// <para>Paediatric Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paediatric Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253516")]
        Item253516,
        
        /// <summary>
        /// <para>Plastic and Reconstructive Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastic and Reconstructive Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253517")]
        Item253517,
        
        /// <summary>
        /// <para>Urologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Urologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253518")]
        Item253518,
        
        /// <summary>
        /// <para>Vascular Surgeon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vascular Surgeon")]
        [System.Xml.Serialization.XmlEnumAttribute("253521")]
        Item253521,
        
        /// <summary>
        /// <para>Other Medical Practitioners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Medical Practitioners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("253900")]
        Item253900,
        
        /// <summary>
        /// <para>Dermatologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dermatologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253911")]
        Item253911,
        
        /// <summary>
        /// <para>Emergency Medicine Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Emergency Medicine Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("253912")]
        Item253912,
        
        /// <summary>
        /// <para>Obstetrician and Gynaecologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Obstetrician and Gynaecologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253913")]
        Item253913,
        
        /// <summary>
        /// <para>Ophthalmologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ophthalmologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253914")]
        Item253914,
        
        /// <summary>
        /// <para>Pathologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pathologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253915")]
        Item253915,
        
        /// <summary>
        /// <para>Diagnostic and Interventional Radiologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diagnostic and Interventional Radiologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253917")]
        Item253917,
        
        /// <summary>
        /// <para>Radiation Oncologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radiation Oncologist")]
        [System.Xml.Serialization.XmlEnumAttribute("253918")]
        Item253918,
        
        /// <summary>
        /// <para>Medical Practitioners nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Practitioners nec")]
        [System.Xml.Serialization.XmlEnumAttribute("253999")]
        Item253999,
        
        /// <summary>
        /// <para>Midwifery and Nursing Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Midwifery and Nursing Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("254000")]
        Item254000,
        
        /// <summary>
        /// <para>Midwife</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Midwife")]
        [System.Xml.Serialization.XmlEnumAttribute("254111")]
        Item254111,
        
        /// <summary>
        /// <para>Nurse Educators and Researchers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Educators and Researchers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("254200")]
        Item254200,
        
        /// <summary>
        /// <para>Nurse Educator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Educator")]
        [System.Xml.Serialization.XmlEnumAttribute("254211")]
        Item254211,
        
        /// <summary>
        /// <para>Nurse Researcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Researcher")]
        [System.Xml.Serialization.XmlEnumAttribute("254212")]
        Item254212,
        
        /// <summary>
        /// <para>Nurse Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("254311")]
        Item254311,
        
        /// <summary>
        /// <para>Registered Nurses nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurses nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("254400")]
        Item254400,
        
        /// <summary>
        /// <para>Nurse Practitioner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurse Practitioner")]
        [System.Xml.Serialization.XmlEnumAttribute("254411")]
        Item254411,
        
        /// <summary>
        /// <para>Registered Nurse (Aged Care)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Aged Care)")]
        [System.Xml.Serialization.XmlEnumAttribute("254412")]
        Item254412,
        
        /// <summary>
        /// <para>Registered Nurse (Child and Family Health)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Child and Family Health)")]
        [System.Xml.Serialization.XmlEnumAttribute("254413")]
        Item254413,
        
        /// <summary>
        /// <para>Registered Nurse (Community Health)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Community Health)")]
        [System.Xml.Serialization.XmlEnumAttribute("254414")]
        Item254414,
        
        /// <summary>
        /// <para>Registered Nurse (Critical Care and Emergency)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Critical Care and Emergency)")]
        [System.Xml.Serialization.XmlEnumAttribute("254415")]
        Item254415,
        
        /// <summary>
        /// <para>Registered Nurse (Developmental Disability)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Developmental Disability)")]
        [System.Xml.Serialization.XmlEnumAttribute("254416")]
        Item254416,
        
        /// <summary>
        /// <para>Registered Nurse (Disability and Rehabilitation)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Disability and Rehabilitation)")]
        [System.Xml.Serialization.XmlEnumAttribute("254417")]
        Item254417,
        
        /// <summary>
        /// <para>Registered Nurse (Medical)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Medical)")]
        [System.Xml.Serialization.XmlEnumAttribute("254418")]
        Item254418,
        
        /// <summary>
        /// <para>Registered Nurse (Medical Practice)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Medical Practice)")]
        [System.Xml.Serialization.XmlEnumAttribute("254421")]
        Item254421,
        
        /// <summary>
        /// <para>Registered Nurse (Mental Health)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Mental Health)")]
        [System.Xml.Serialization.XmlEnumAttribute("254422")]
        Item254422,
        
        /// <summary>
        /// <para>Registered Nurse (Perioperative)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Perioperative)")]
        [System.Xml.Serialization.XmlEnumAttribute("254423")]
        Item254423,
        
        /// <summary>
        /// <para>Registered Nurse (Surgical)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Surgical)")]
        [System.Xml.Serialization.XmlEnumAttribute("254424")]
        Item254424,
        
        /// <summary>
        /// <para>Registered Nurse (Paediatrics)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurse (Paediatrics)")]
        [System.Xml.Serialization.XmlEnumAttribute("254425")]
        Item254425,
        
        /// <summary>
        /// <para>Registered Nurses nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Nurses nec")]
        [System.Xml.Serialization.XmlEnumAttribute("254499")]
        Item254499,
        
        /// <summary>
        /// <para>ICT Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("260000")]
        Item260000,
        
        /// <summary>
        /// <para>Business and Systems Analysts, and Programmers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business and Systems Analysts, and Programmers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("261000")]
        Item261000,
        
        /// <summary>
        /// <para>ICT Business and Systems Analysts nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Business and Systems Analysts nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("261100")]
        Item261100,
        
        /// <summary>
        /// <para>ICT Business Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Business Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("261111")]
        Item261111,
        
        /// <summary>
        /// <para>Systems Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("261112")]
        Item261112,
        
        /// <summary>
        /// <para>Multimedia Specialists and Web Developers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Multimedia Specialists and Web Developers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("261200")]
        Item261200,
        
        /// <summary>
        /// <para>Multimedia Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Multimedia Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("261211")]
        Item261211,
        
        /// <summary>
        /// <para>Web Developer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Web Developer")]
        [System.Xml.Serialization.XmlEnumAttribute("261212")]
        Item261212,
        
        /// <summary>
        /// <para>Software and Applications Programmers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software and Applications Programmers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("261300")]
        Item261300,
        
        /// <summary>
        /// <para>Analyst Programmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Analyst Programmer")]
        [System.Xml.Serialization.XmlEnumAttribute("261311")]
        Item261311,
        
        /// <summary>
        /// <para>Developer Programmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Developer Programmer")]
        [System.Xml.Serialization.XmlEnumAttribute("261312")]
        Item261312,
        
        /// <summary>
        /// <para>Software Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("261313")]
        Item261313,
        
        /// <summary>
        /// <para>Software Tester</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software Tester")]
        [System.Xml.Serialization.XmlEnumAttribute("261314")]
        Item261314,
        
        /// <summary>
        /// <para>Software and Applications Programmers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software and Applications Programmers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("261399")]
        Item261399,
        
        /// <summary>
        /// <para>Database and Systems Administrators, and ICT Security Specialists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Database and Systems Administrators, and ICT Security Specialists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("262100")]
        Item262100,
        
        /// <summary>
        /// <para>Database Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Database Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("262111")]
        Item262111,
        
        /// <summary>
        /// <para>ICT Security Specialist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Security Specialist")]
        [System.Xml.Serialization.XmlEnumAttribute("262112")]
        Item262112,
        
        /// <summary>
        /// <para>Systems Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Systems Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("262113")]
        Item262113,
        
        /// <summary>
        /// <para>ICT Network and Support Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Network and Support Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("263000")]
        Item263000,
        
        /// <summary>
        /// <para>Computer Network Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer Network Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("263100")]
        Item263100,
        
        /// <summary>
        /// <para>Computer Network and Systems Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer Network and Systems Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263111")]
        Item263111,
        
        /// <summary>
        /// <para>Network Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Network Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("263112")]
        Item263112,
        
        /// <summary>
        /// <para>Network Analyst</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Network Analyst")]
        [System.Xml.Serialization.XmlEnumAttribute("263113")]
        Item263113,
        
        /// <summary>
        /// <para>ICT Support and Test Engineers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Support and Test Engineers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("263200")]
        Item263200,
        
        /// <summary>
        /// <para>ICT Quality Assurance Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Quality Assurance Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263211")]
        Item263211,
        
        /// <summary>
        /// <para>ICT Support Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Support Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263212")]
        Item263212,
        
        /// <summary>
        /// <para>ICT Systems Test Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Systems Test Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263213")]
        Item263213,
        
        /// <summary>
        /// <para>ICT Support and Test Engineers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Support and Test Engineers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("263299")]
        Item263299,
        
        /// <summary>
        /// <para>Telecommunications Engineering Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Engineering Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("263300")]
        Item263300,
        
        /// <summary>
        /// <para>Telecommunications Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263311")]
        Item263311,
        
        /// <summary>
        /// <para>Telecommunications Network Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Network Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("263312")]
        Item263312,
        
        /// <summary>
        /// <para>Legal, Social and Welfare Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal, Social and Welfare Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("270000")]
        Item270000,
        
        /// <summary>
        /// <para>Legal Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("271000")]
        Item271000,
        
        /// <summary>
        /// <para>Barrister</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Barrister")]
        [System.Xml.Serialization.XmlEnumAttribute("271111")]
        Item271111,
        
        /// <summary>
        /// <para>Judicial and Other Legal Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Judicial and Other Legal Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("271200")]
        Item271200,
        
        /// <summary>
        /// <para>Judge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Judge")]
        [System.Xml.Serialization.XmlEnumAttribute("271211")]
        Item271211,
        
        /// <summary>
        /// <para>Magistrate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Magistrate")]
        [System.Xml.Serialization.XmlEnumAttribute("271212")]
        Item271212,
        
        /// <summary>
        /// <para>Tribunal Member</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tribunal Member")]
        [System.Xml.Serialization.XmlEnumAttribute("271213")]
        Item271213,
        
        /// <summary>
        /// <para>Intellectual Property Lawyer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intellectual Property Lawyer")]
        [System.Xml.Serialization.XmlEnumAttribute("271214")]
        Item271214,
        
        /// <summary>
        /// <para>Judicial and Other Legal Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Judicial and Other Legal Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("271299")]
        Item271299,
        
        /// <summary>
        /// <para>Solicitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solicitor")]
        [System.Xml.Serialization.XmlEnumAttribute("271311")]
        Item271311,
        
        /// <summary>
        /// <para>Social and Welfare Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social and Welfare Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("272000")]
        Item272000,
        
        /// <summary>
        /// <para>Counsellors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Counsellors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("272100")]
        Item272100,
        
        /// <summary>
        /// <para>Careers Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Careers Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("272111")]
        Item272111,
        
        /// <summary>
        /// <para>Drug and Alcohol Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drug and Alcohol Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("272112")]
        Item272112,
        
        /// <summary>
        /// <para>Family and Marriage Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family and Marriage Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("272113")]
        Item272113,
        
        /// <summary>
        /// <para>Rehabilitation Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rehabilitation Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("272114")]
        Item272114,
        
        /// <summary>
        /// <para>Student Counsellor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Student Counsellor")]
        [System.Xml.Serialization.XmlEnumAttribute("272115")]
        Item272115,
        
        /// <summary>
        /// <para>Counsellors nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Counsellors nec")]
        [System.Xml.Serialization.XmlEnumAttribute("272199")]
        Item272199,
        
        /// <summary>
        /// <para>Minister of Religion</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Minister of Religion")]
        [System.Xml.Serialization.XmlEnumAttribute("272211")]
        Item272211,
        
        /// <summary>
        /// <para>Psychologists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychologists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("272300")]
        Item272300,
        
        /// <summary>
        /// <para>Clinical Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clinical Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("272311")]
        Item272311,
        
        /// <summary>
        /// <para>Educational Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Educational Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("272312")]
        Item272312,
        
        /// <summary>
        /// <para>Organisational Psychologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Organisational Psychologist")]
        [System.Xml.Serialization.XmlEnumAttribute("272313")]
        Item272313,
        
        /// <summary>
        /// <para>Psychotherapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychotherapist")]
        [System.Xml.Serialization.XmlEnumAttribute("272314")]
        Item272314,
        
        /// <summary>
        /// <para>Psychologists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychologists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("272399")]
        Item272399,
        
        /// <summary>
        /// <para>Social Professionals nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Professionals nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("272400")]
        Item272400,
        
        /// <summary>
        /// <para>Historian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Historian")]
        [System.Xml.Serialization.XmlEnumAttribute("272411")]
        Item272411,
        
        /// <summary>
        /// <para>Interpreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interpreter")]
        [System.Xml.Serialization.XmlEnumAttribute("272412")]
        Item272412,
        
        /// <summary>
        /// <para>Translator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Translator")]
        [System.Xml.Serialization.XmlEnumAttribute("272413")]
        Item272413,
        
        /// <summary>
        /// <para>Archaeologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Archaeologist")]
        [System.Xml.Serialization.XmlEnumAttribute("272414")]
        Item272414,
        
        /// <summary>
        /// <para>Social Professionals nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Professionals nec")]
        [System.Xml.Serialization.XmlEnumAttribute("272499")]
        Item272499,
        
        /// <summary>
        /// <para>Social Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("272511")]
        Item272511,
        
        /// <summary>
        /// <para>Welfare, Recreation and Community Arts Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare, Recreation and Community Arts Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("272600")]
        Item272600,
        
        /// <summary>
        /// <para>Community Arts Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Arts Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("272611")]
        Item272611,
        
        /// <summary>
        /// <para>Recreation Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recreation Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("272612")]
        Item272612,
        
        /// <summary>
        /// <para>Welfare Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("272613")]
        Item272613,
        
        /// <summary>
        /// <para>Technicians and Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technicians and Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("300000")]
        Item300000,
        
        /// <summary>
        /// <para>Engineering, ICT and Science Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering, ICT and Science Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("310000")]
        Item310000,
        
        /// <summary>
        /// <para>Agricultural, Medical and Science Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural, Medical and Science Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("311000")]
        Item311000,
        
        /// <summary>
        /// <para>Agricultural Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311111")]
        Item311111,
        
        /// <summary>
        /// <para>Medical Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("311200")]
        Item311200,
        
        /// <summary>
        /// <para>Anaesthetic Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Anaesthetic Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311211")]
        Item311211,
        
        /// <summary>
        /// <para>Cardiac Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cardiac Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311212")]
        Item311212,
        
        /// <summary>
        /// <para>Medical Laboratory Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Laboratory Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311213")]
        Item311213,
        
        /// <summary>
        /// <para>Operating Theatre Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Operating Theatre Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311214")]
        Item311214,
        
        /// <summary>
        /// <para>Pharmacy Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmacy Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311215")]
        Item311215,
        
        /// <summary>
        /// <para>Pathology Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pathology Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("311216")]
        Item311216,
        
        /// <summary>
        /// <para>Medical Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("311299")]
        Item311299,
        
        /// <summary>
        /// <para>Primary Products Inspectors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Products Inspectors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("311300")]
        Item311300,
        
        /// <summary>
        /// <para>Fisheries Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fisheries Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("311311")]
        Item311311,
        
        /// <summary>
        /// <para>Meat Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("311312")]
        Item311312,
        
        /// <summary>
        /// <para>Quarantine Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quarantine Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("311313")]
        Item311313,
        
        /// <summary>
        /// <para>Primary Products Inspectors nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Products Inspectors nec")]
        [System.Xml.Serialization.XmlEnumAttribute("311399")]
        Item311399,
        
        /// <summary>
        /// <para>Science Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Science Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("311400")]
        Item311400,
        
        /// <summary>
        /// <para>Chemistry Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemistry Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311411")]
        Item311411,
        
        /// <summary>
        /// <para>Earth Science Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earth Science Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311412")]
        Item311412,
        
        /// <summary>
        /// <para>Life Science Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Science Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311413")]
        Item311413,
        
        /// <summary>
        /// <para>School Laboratory Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("School Laboratory Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("311414")]
        Item311414,
        
        /// <summary>
        /// <para>Hydrographer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hydrographer")]
        [System.Xml.Serialization.XmlEnumAttribute("311415")]
        Item311415,
        
        /// <summary>
        /// <para>Science Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Science Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("311499")]
        Item311499,
        
        /// <summary>
        /// <para>Building and Engineering Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Engineering Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312000")]
        Item312000,
        
        /// <summary>
        /// <para>Architectural, Building and Surveying Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural, Building and Surveying Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312100")]
        Item312100,
        
        /// <summary>
        /// <para>Architectural Draftsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural Draftsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("312111")]
        Item312111,
        
        /// <summary>
        /// <para>Building Associate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Associate")]
        [System.Xml.Serialization.XmlEnumAttribute("312112")]
        Item312112,
        
        /// <summary>
        /// <para>Building Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("312113")]
        Item312113,
        
        /// <summary>
        /// <para>Construction Estimator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Estimator")]
        [System.Xml.Serialization.XmlEnumAttribute("312114")]
        Item312114,
        
        /// <summary>
        /// <para>Plumbing Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbing Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("312115")]
        Item312115,
        
        /// <summary>
        /// <para>Surveying or Spatial Science Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveying or Spatial Science Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312116")]
        Item312116,
        
        /// <summary>
        /// <para>Architectural, Building and Surveying Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural, Building and Surveying Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("312199")]
        Item312199,
        
        /// <summary>
        /// <para>Civil Engineering Draftspersons and Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Draftspersons and Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312200")]
        Item312200,
        
        /// <summary>
        /// <para>Civil Engineering Draftsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Draftsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("312211")]
        Item312211,
        
        /// <summary>
        /// <para>Civil Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312212")]
        Item312212,
        
        /// <summary>
        /// <para>Electrical Engineering Draftspersons and Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineering Draftspersons and Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312300")]
        Item312300,
        
        /// <summary>
        /// <para>Electrical Engineering Draftsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineering Draftsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("312311")]
        Item312311,
        
        /// <summary>
        /// <para>Electrical Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312312")]
        Item312312,
        
        /// <summary>
        /// <para>Electronic Engineering Draftspersons and Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Engineering Draftspersons and Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312400")]
        Item312400,
        
        /// <summary>
        /// <para>Electronic Engineering Draftsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Engineering Draftsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("312411")]
        Item312411,
        
        /// <summary>
        /// <para>Electronic Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312412")]
        Item312412,
        
        /// <summary>
        /// <para>Mechanical Engineering Draftspersons and Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Draftspersons and Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312500")]
        Item312500,
        
        /// <summary>
        /// <para>Mechanical Engineering Draftsperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Draftsperson")]
        [System.Xml.Serialization.XmlEnumAttribute("312511")]
        Item312511,
        
        /// <summary>
        /// <para>Mechanical Engineering Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312512")]
        Item312512,
        
        /// <summary>
        /// <para>Safety Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Safety Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("312611")]
        Item312611,
        
        /// <summary>
        /// <para>Other Building and Engineering Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Building and Engineering Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("312900")]
        Item312900,
        
        /// <summary>
        /// <para>Maintenance Planner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Maintenance Planner")]
        [System.Xml.Serialization.XmlEnumAttribute("312911")]
        Item312911,
        
        /// <summary>
        /// <para>Metallurgical or Materials Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metallurgical or Materials Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("312912")]
        Item312912,
        
        /// <summary>
        /// <para>Mine Deputy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mine Deputy")]
        [System.Xml.Serialization.XmlEnumAttribute("312913")]
        Item312913,
        
        /// <summary>
        /// <para>Building and Engineering Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Engineering Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("312999")]
        Item312999,
        
        /// <summary>
        /// <para>ICT and Telecommunications Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT and Telecommunications Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("313000")]
        Item313000,
        
        /// <summary>
        /// <para>ICT Support Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Support Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("313100")]
        Item313100,
        
        /// <summary>
        /// <para>Hardware Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hardware Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("313111")]
        Item313111,
        
        /// <summary>
        /// <para>ICT Customer Support Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Customer Support Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("313112")]
        Item313112,
        
        /// <summary>
        /// <para>Web Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Web Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("313113")]
        Item313113,
        
        /// <summary>
        /// <para>ICT Support Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Support Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("313199")]
        Item313199,
        
        /// <summary>
        /// <para>Telecommunications Technical Specialists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Technical Specialists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("313200")]
        Item313200,
        
        /// <summary>
        /// <para>Radiocommunications Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radiocommunications Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("313211")]
        Item313211,
        
        /// <summary>
        /// <para>Telecommunications Field Engineer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Field Engineer")]
        [System.Xml.Serialization.XmlEnumAttribute("313212")]
        Item313212,
        
        /// <summary>
        /// <para>Telecommunications Network Planner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Network Planner")]
        [System.Xml.Serialization.XmlEnumAttribute("313213")]
        Item313213,
        
        /// <summary>
        /// <para>Telecommunications Technical Officer or Technologist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Technical Officer or Technologist")]
        [System.Xml.Serialization.XmlEnumAttribute("313214")]
        Item313214,
        
        /// <summary>
        /// <para>Automotive and Engineering Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive and Engineering Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("320000")]
        Item320000,
        
        /// <summary>
        /// <para>Automotive Electricians and Mechanics nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Electricians and Mechanics nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("321000")]
        Item321000,
        
        /// <summary>
        /// <para>Automotive Electrician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Electrician")]
        [System.Xml.Serialization.XmlEnumAttribute("321111")]
        Item321111,
        
        /// <summary>
        /// <para>Motor Mechanics nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Mechanics nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("321200")]
        Item321200,
        
        /// <summary>
        /// <para>Motor Mechanic (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Mechanic (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("321211")]
        Item321211,
        
        /// <summary>
        /// <para>Diesel Motor Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diesel Motor Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("321212")]
        Item321212,
        
        /// <summary>
        /// <para>Motorcycle Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motorcycle Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("321213")]
        Item321213,
        
        /// <summary>
        /// <para>Small Engine Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Small Engine Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("321214")]
        Item321214,
        
        /// <summary>
        /// <para>Fabrication Engineering Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fabrication Engineering Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("322000")]
        Item322000,
        
        /// <summary>
        /// <para>Metal Casting, Forging and Finishing Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Casting, Forging and Finishing Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("322100")]
        Item322100,
        
        /// <summary>
        /// <para>Blacksmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Blacksmith")]
        [System.Xml.Serialization.XmlEnumAttribute("322111")]
        Item322111,
        
        /// <summary>
        /// <para>Electroplater</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electroplater")]
        [System.Xml.Serialization.XmlEnumAttribute("322112")]
        Item322112,
        
        /// <summary>
        /// <para>Farrier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farrier")]
        [System.Xml.Serialization.XmlEnumAttribute("322113")]
        Item322113,
        
        /// <summary>
        /// <para>Metal Casting Trades Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Casting Trades Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("322114")]
        Item322114,
        
        /// <summary>
        /// <para>Metal Polisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Polisher")]
        [System.Xml.Serialization.XmlEnumAttribute("322115")]
        Item322115,
        
        /// <summary>
        /// <para>Sheetmetal Trades Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheetmetal Trades Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("322211")]
        Item322211,
        
        /// <summary>
        /// <para>Structural Steel and Welding Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel and Welding Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("322300")]
        Item322300,
        
        /// <summary>
        /// <para>Metal Fabricator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Fabricator")]
        [System.Xml.Serialization.XmlEnumAttribute("322311")]
        Item322311,
        
        /// <summary>
        /// <para>Pressure Welder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pressure Welder")]
        [System.Xml.Serialization.XmlEnumAttribute("322312")]
        Item322312,
        
        /// <summary>
        /// <para>Welder (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welder (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("322313")]
        Item322313,
        
        /// <summary>
        /// <para>Mechanical Engineering Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanical Engineering Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("323000")]
        Item323000,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("323100")]
        Item323100,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Avionics)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Avionics)")]
        [System.Xml.Serialization.XmlEnumAttribute("323111")]
        Item323111,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Mechanical)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Mechanical)")]
        [System.Xml.Serialization.XmlEnumAttribute("323112")]
        Item323112,
        
        /// <summary>
        /// <para>Aircraft Maintenance Engineer (Structures)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Maintenance Engineer (Structures)")]
        [System.Xml.Serialization.XmlEnumAttribute("323113")]
        Item323113,
        
        /// <summary>
        /// <para>Metal Fitters and Machinists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Fitters and Machinists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("323200")]
        Item323200,
        
        /// <summary>
        /// <para>Fitter (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitter (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("323211")]
        Item323211,
        
        /// <summary>
        /// <para>Fitter and Turner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitter and Turner")]
        [System.Xml.Serialization.XmlEnumAttribute("323212")]
        Item323212,
        
        /// <summary>
        /// <para>Fitter-Welder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitter-Welder")]
        [System.Xml.Serialization.XmlEnumAttribute("323213")]
        Item323213,
        
        /// <summary>
        /// <para>Metal Machinist (First Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Machinist (First Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("323214")]
        Item323214,
        
        /// <summary>
        /// <para>Textile, Clothing and Footwear Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile, Clothing and Footwear Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("323215")]
        Item323215,
        
        /// <summary>
        /// <para>Metal Fitters and Machinists nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Fitters and Machinists nec")]
        [System.Xml.Serialization.XmlEnumAttribute("323299")]
        Item323299,
        
        /// <summary>
        /// <para>Precision Metal Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Precision Metal Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("323300")]
        Item323300,
        
        /// <summary>
        /// <para>Engraver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engraver")]
        [System.Xml.Serialization.XmlEnumAttribute("323311")]
        Item323311,
        
        /// <summary>
        /// <para>Gunsmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gunsmith")]
        [System.Xml.Serialization.XmlEnumAttribute("323312")]
        Item323312,
        
        /// <summary>
        /// <para>Locksmith</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Locksmith")]
        [System.Xml.Serialization.XmlEnumAttribute("323313")]
        Item323313,
        
        /// <summary>
        /// <para>Precision Instrument Maker and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Precision Instrument Maker and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("323314")]
        Item323314,
        
        /// <summary>
        /// <para>Saw Doctor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saw Doctor")]
        [System.Xml.Serialization.XmlEnumAttribute("323315")]
        Item323315,
        
        /// <summary>
        /// <para>Watch and Clock Maker and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Watch and Clock Maker and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("323316")]
        Item323316,
        
        /// <summary>
        /// <para>Toolmakers and Engineering Patternmakers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toolmakers and Engineering Patternmakers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("323400")]
        Item323400,
        
        /// <summary>
        /// <para>Engineering Patternmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Patternmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("323411")]
        Item323411,
        
        /// <summary>
        /// <para>Toolmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toolmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("323412")]
        Item323412,
        
        /// <summary>
        /// <para>Panelbeaters, and Vehicle Body Builders, Trimmers and Painters nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Panelbeaters, and Vehicle Body Builders, Trimmers and Painters nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("324000")]
        Item324000,
        
        /// <summary>
        /// <para>Panelbeater</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Panelbeater")]
        [System.Xml.Serialization.XmlEnumAttribute("324111")]
        Item324111,
        
        /// <summary>
        /// <para>Vehicle Body Builders and Trimmers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Body Builders and Trimmers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("324200")]
        Item324200,
        
        /// <summary>
        /// <para>Vehicle Body Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Body Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("324211")]
        Item324211,
        
        /// <summary>
        /// <para>Vehicle Trimmer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Trimmer")]
        [System.Xml.Serialization.XmlEnumAttribute("324212")]
        Item324212,
        
        /// <summary>
        /// <para>Vehicle Painter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle Painter")]
        [System.Xml.Serialization.XmlEnumAttribute("324311")]
        Item324311,
        
        /// <summary>
        /// <para>Construction Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("330000")]
        Item330000,
        
        /// <summary>
        /// <para>Bricklayers, and Carpenters and Joiners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bricklayers, and Carpenters and Joiners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("331000")]
        Item331000,
        
        /// <summary>
        /// <para>Bricklayers and Stonemasons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bricklayers and Stonemasons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("331100")]
        Item331100,
        
        /// <summary>
        /// <para>Bricklayer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bricklayer")]
        [System.Xml.Serialization.XmlEnumAttribute("331111")]
        Item331111,
        
        /// <summary>
        /// <para>Stonemason</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stonemason")]
        [System.Xml.Serialization.XmlEnumAttribute("331112")]
        Item331112,
        
        /// <summary>
        /// <para>Carpenter and Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpenter and Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("331211")]
        Item331211,
        
        /// <summary>
        /// <para>Carpenter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpenter")]
        [System.Xml.Serialization.XmlEnumAttribute("331212")]
        Item331212,
        
        /// <summary>
        /// <para>Joiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Joiner")]
        [System.Xml.Serialization.XmlEnumAttribute("331213")]
        Item331213,
        
        /// <summary>
        /// <para>Floor Finishers and Painting Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floor Finishers and Painting Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("332000")]
        Item332000,
        
        /// <summary>
        /// <para>Floor Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floor Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("332111")]
        Item332111,
        
        /// <summary>
        /// <para>Painting Trades Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Painting Trades Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("332211")]
        Item332211,
        
        /// <summary>
        /// <para>Glaziers, Plasterers and Tilers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glaziers, Plasterers and Tilers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("333000")]
        Item333000,
        
        /// <summary>
        /// <para>Glazier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glazier")]
        [System.Xml.Serialization.XmlEnumAttribute("333111")]
        Item333111,
        
        /// <summary>
        /// <para>Plasterers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plasterers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("333200")]
        Item333200,
        
        /// <summary>
        /// <para>Fibrous Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fibrous Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("333211")]
        Item333211,
        
        /// <summary>
        /// <para>Solid Plasterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solid Plasterer")]
        [System.Xml.Serialization.XmlEnumAttribute("333212")]
        Item333212,
        
        /// <summary>
        /// <para>Roof Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roof Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("333311")]
        Item333311,
        
        /// <summary>
        /// <para>Wall and Floor Tiler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wall and Floor Tiler")]
        [System.Xml.Serialization.XmlEnumAttribute("333411")]
        Item333411,
        
        /// <summary>
        /// <para>Plumbers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("334100")]
        Item334100,
        
        /// <summary>
        /// <para>Plumber (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumber (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("334111")]
        Item334111,
        
        /// <summary>
        /// <para>Airconditioning and Mechanical Services Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Airconditioning and Mechanical Services Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("334112")]
        Item334112,
        
        /// <summary>
        /// <para>Drainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drainer")]
        [System.Xml.Serialization.XmlEnumAttribute("334113")]
        Item334113,
        
        /// <summary>
        /// <para>Gasfitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gasfitter")]
        [System.Xml.Serialization.XmlEnumAttribute("334114")]
        Item334114,
        
        /// <summary>
        /// <para>Roof Plumber</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roof Plumber")]
        [System.Xml.Serialization.XmlEnumAttribute("334115")]
        Item334115,
        
        /// <summary>
        /// <para>Electrotechnology and Telecommunications Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrotechnology and Telecommunications Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("340000")]
        Item340000,
        
        /// <summary>
        /// <para>Electricians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("341100")]
        Item341100,
        
        /// <summary>
        /// <para>Electrician (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrician (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("341111")]
        Item341111,
        
        /// <summary>
        /// <para>Electrician (Special Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrician (Special Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("341112")]
        Item341112,
        
        /// <summary>
        /// <para>Lift Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lift Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("341113")]
        Item341113,
        
        /// <summary>
        /// <para>Electronics and Telecommunications Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronics and Telecommunications Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("342000")]
        Item342000,
        
        /// <summary>
        /// <para>Airconditioning and Refrigeration Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Airconditioning and Refrigeration Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("342111")]
        Item342111,
        
        /// <summary>
        /// <para>Electrical Distribution Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Distribution Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("342200")]
        Item342200,
        
        /// <summary>
        /// <para>Electrical Linesworker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Linesworker")]
        [System.Xml.Serialization.XmlEnumAttribute("342211")]
        Item342211,
        
        /// <summary>
        /// <para>Technical Cable Jointer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical Cable Jointer")]
        [System.Xml.Serialization.XmlEnumAttribute("342212")]
        Item342212,
        
        /// <summary>
        /// <para>Electronics Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronics Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("342300")]
        Item342300,
        
        /// <summary>
        /// <para>Business Machine Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business Machine Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("342311")]
        Item342311,
        
        /// <summary>
        /// <para>Communications Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Communications Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("342312")]
        Item342312,
        
        /// <summary>
        /// <para>Electronic Equipment Trades Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Equipment Trades Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("342313")]
        Item342313,
        
        /// <summary>
        /// <para>Electronic Instrument Trades Worker (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Instrument Trades Worker (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("342314")]
        Item342314,
        
        /// <summary>
        /// <para>Electronic Instrument Trades Worker (Special Class)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Instrument Trades Worker (Special Class)")]
        [System.Xml.Serialization.XmlEnumAttribute("342315")]
        Item342315,
        
        /// <summary>
        /// <para>Telecommunications Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("342400")]
        Item342400,
        
        /// <summary>
        /// <para>Cabler (Data and Telecommunications)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cabler (Data and Telecommunications)")]
        [System.Xml.Serialization.XmlEnumAttribute("342411")]
        Item342411,
        
        /// <summary>
        /// <para>Telecommunications Cable Jointer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Cable Jointer")]
        [System.Xml.Serialization.XmlEnumAttribute("342412")]
        Item342412,
        
        /// <summary>
        /// <para>Telecommunications Linesworker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Linesworker")]
        [System.Xml.Serialization.XmlEnumAttribute("342413")]
        Item342413,
        
        /// <summary>
        /// <para>Telecommunications Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("342414")]
        Item342414,
        
        /// <summary>
        /// <para>Food Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("351000")]
        Item351000,
        
        /// <summary>
        /// <para>Bakers and Pastrycooks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bakers and Pastrycooks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("351100")]
        Item351100,
        
        /// <summary>
        /// <para>Baker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Baker")]
        [System.Xml.Serialization.XmlEnumAttribute("351111")]
        Item351111,
        
        /// <summary>
        /// <para>Pastrycook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pastrycook")]
        [System.Xml.Serialization.XmlEnumAttribute("351112")]
        Item351112,
        
        /// <summary>
        /// <para>Butcher or Smallgoods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Butcher or Smallgoods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("351211")]
        Item351211,
        
        /// <summary>
        /// <para>Chef</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chef")]
        [System.Xml.Serialization.XmlEnumAttribute("351311")]
        Item351311,
        
        /// <summary>
        /// <para>Cook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cook")]
        [System.Xml.Serialization.XmlEnumAttribute("351411")]
        Item351411,
        
        /// <summary>
        /// <para>Skilled Animal and Horticultural Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skilled Animal and Horticultural Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("360000")]
        Item360000,
        
        /// <summary>
        /// <para>Animal Attendants and Trainers, and Shearers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Animal Attendants and Trainers, and Shearers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("361000")]
        Item361000,
        
        /// <summary>
        /// <para>Animal Attendants and Trainers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Animal Attendants and Trainers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("361100")]
        Item361100,
        
        /// <summary>
        /// <para>Dog Handler or Trainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dog Handler or Trainer")]
        [System.Xml.Serialization.XmlEnumAttribute("361111")]
        Item361111,
        
        /// <summary>
        /// <para>Horse Trainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Trainer")]
        [System.Xml.Serialization.XmlEnumAttribute("361112")]
        Item361112,
        
        /// <summary>
        /// <para>Pet Groomer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pet Groomer")]
        [System.Xml.Serialization.XmlEnumAttribute("361113")]
        Item361113,
        
        /// <summary>
        /// <para>Zookeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zookeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("361114")]
        Item361114,
        
        /// <summary>
        /// <para>Kennel Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kennel Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("361115")]
        Item361115,
        
        /// <summary>
        /// <para>Animal Attendants and Trainers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Animal Attendants and Trainers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("361199")]
        Item361199,
        
        /// <summary>
        /// <para>Shearer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shearer")]
        [System.Xml.Serialization.XmlEnumAttribute("361211")]
        Item361211,
        
        /// <summary>
        /// <para>Veterinary Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinary Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("361311")]
        Item361311,
        
        /// <summary>
        /// <para>Horticultural Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horticultural Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("362000")]
        Item362000,
        
        /// <summary>
        /// <para>Florist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Florist")]
        [System.Xml.Serialization.XmlEnumAttribute("362111")]
        Item362111,
        
        /// <summary>
        /// <para>Gardeners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gardeners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("362200")]
        Item362200,
        
        /// <summary>
        /// <para>Gardener (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gardener (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("362211")]
        Item362211,
        
        /// <summary>
        /// <para>Arborist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arborist")]
        [System.Xml.Serialization.XmlEnumAttribute("362212")]
        Item362212,
        
        /// <summary>
        /// <para>Landscape Gardener</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landscape Gardener")]
        [System.Xml.Serialization.XmlEnumAttribute("362213")]
        Item362213,
        
        /// <summary>
        /// <para>Greenkeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Greenkeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("362311")]
        Item362311,
        
        /// <summary>
        /// <para>Nurseryperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nurseryperson")]
        [System.Xml.Serialization.XmlEnumAttribute("362411")]
        Item362411,
        
        /// <summary>
        /// <para>Other Technicians and Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Technicians and Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("390000")]
        Item390000,
        
        /// <summary>
        /// <para>Hairdresser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hairdresser")]
        [System.Xml.Serialization.XmlEnumAttribute("391111")]
        Item391111,
        
        /// <summary>
        /// <para>Printing Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("392000")]
        Item392000,
        
        /// <summary>
        /// <para>Print Finishers and Screen Printers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Print Finishers and Screen Printers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("392100")]
        Item392100,
        
        /// <summary>
        /// <para>Print Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Print Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("392111")]
        Item392111,
        
        /// <summary>
        /// <para>Screen Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Screen Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("392112")]
        Item392112,
        
        /// <summary>
        /// <para>Graphic Pre-press Trades Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Graphic Pre-press Trades Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("392211")]
        Item392211,
        
        /// <summary>
        /// <para>Printers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("392300")]
        Item392300,
        
        /// <summary>
        /// <para>Printing Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("392311")]
        Item392311,
        
        /// <summary>
        /// <para>Small Offset Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Small Offset Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("392312")]
        Item392312,
        
        /// <summary>
        /// <para>Textile, Clothing and Footwear Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile, Clothing and Footwear Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("393000")]
        Item393000,
        
        /// <summary>
        /// <para>Canvas and Leather Goods Makers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Canvas and Leather Goods Makers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("393100")]
        Item393100,
        
        /// <summary>
        /// <para>Canvas Goods Fabricator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Canvas Goods Fabricator")]
        [System.Xml.Serialization.XmlEnumAttribute("393111")]
        Item393111,
        
        /// <summary>
        /// <para>Leather Goods Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leather Goods Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("393112")]
        Item393112,
        
        /// <summary>
        /// <para>Sail Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sail Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("393113")]
        Item393113,
        
        /// <summary>
        /// <para>Shoemaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shoemaker")]
        [System.Xml.Serialization.XmlEnumAttribute("393114")]
        Item393114,
        
        /// <summary>
        /// <para>Clothing Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("393200")]
        Item393200,
        
        /// <summary>
        /// <para>Apparel Cutter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apparel Cutter")]
        [System.Xml.Serialization.XmlEnumAttribute("393211")]
        Item393211,
        
        /// <summary>
        /// <para>Clothing Patternmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Patternmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("393212")]
        Item393212,
        
        /// <summary>
        /// <para>Dressmaker or Tailor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dressmaker or Tailor")]
        [System.Xml.Serialization.XmlEnumAttribute("393213")]
        Item393213,
        
        /// <summary>
        /// <para>Clothing Trades Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Trades Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("393299")]
        Item393299,
        
        /// <summary>
        /// <para>Upholsterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upholsterer")]
        [System.Xml.Serialization.XmlEnumAttribute("393311")]
        Item393311,
        
        /// <summary>
        /// <para>Wood Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("394000")]
        Item394000,
        
        /// <summary>
        /// <para>Cabinetmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cabinetmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("394111")]
        Item394111,
        
        /// <summary>
        /// <para>Wood Machinists and Other Wood Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Machinists and Other Wood Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("394200")]
        Item394200,
        
        /// <summary>
        /// <para>Furniture Finisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Finisher")]
        [System.Xml.Serialization.XmlEnumAttribute("394211")]
        Item394211,
        
        /// <summary>
        /// <para>Picture Framer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Picture Framer")]
        [System.Xml.Serialization.XmlEnumAttribute("394212")]
        Item394212,
        
        /// <summary>
        /// <para>Wood Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("394213")]
        Item394213,
        
        /// <summary>
        /// <para>Wood Turner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Turner")]
        [System.Xml.Serialization.XmlEnumAttribute("394214")]
        Item394214,
        
        /// <summary>
        /// <para>Wood Machinists and Other Wood Trades Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Machinists and Other Wood Trades Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("394299")]
        Item394299,
        
        /// <summary>
        /// <para>Miscellaneous Technicians and Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Technicians and Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399000")]
        Item399000,
        
        /// <summary>
        /// <para>Boat Builders and Shipwrights nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boat Builders and Shipwrights nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399100")]
        Item399100,
        
        /// <summary>
        /// <para>Boat Builder and Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boat Builder and Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("399111")]
        Item399111,
        
        /// <summary>
        /// <para>Shipwright</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shipwright")]
        [System.Xml.Serialization.XmlEnumAttribute("399112")]
        Item399112,
        
        /// <summary>
        /// <para>Chemical, Gas, Petroleum and Power Generation Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical, Gas, Petroleum and Power Generation Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399200")]
        Item399200,
        
        /// <summary>
        /// <para>Chemical Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("399211")]
        Item399211,
        
        /// <summary>
        /// <para>Gas or Petroleum Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gas or Petroleum Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("399212")]
        Item399212,
        
        /// <summary>
        /// <para>Power Generation Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Power Generation Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("399213")]
        Item399213,
        
        /// <summary>
        /// <para>Gallery, Library and Museum Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gallery, Library and Museum Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399300")]
        Item399300,
        
        /// <summary>
        /// <para>Gallery or Museum Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gallery or Museum Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399311")]
        Item399311,
        
        /// <summary>
        /// <para>Library Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Library Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399312")]
        Item399312,
        
        /// <summary>
        /// <para>Jeweller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jeweller")]
        [System.Xml.Serialization.XmlEnumAttribute("399411")]
        Item399411,
        
        /// <summary>
        /// <para>Performing Arts Technicians nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Performing Arts Technicians nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399500")]
        Item399500,
        
        /// <summary>
        /// <para>Broadcast Transmitter Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Broadcast Transmitter Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("399511")]
        Item399511,
        
        /// <summary>
        /// <para>Camera Operator (Film, Television or Video)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Camera Operator (Film, Television or Video)")]
        [System.Xml.Serialization.XmlEnumAttribute("399512")]
        Item399512,
        
        /// <summary>
        /// <para>Light Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Light Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399513")]
        Item399513,
        
        /// <summary>
        /// <para>Make Up Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Make Up Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("399514")]
        Item399514,
        
        /// <summary>
        /// <para>Musical Instrument Maker or Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Musical Instrument Maker or Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("399515")]
        Item399515,
        
        /// <summary>
        /// <para>Sound Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sound Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399516")]
        Item399516,
        
        /// <summary>
        /// <para>Television Equipment Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Equipment Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("399517")]
        Item399517,
        
        /// <summary>
        /// <para>Performing Arts Technicians nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Performing Arts Technicians nec")]
        [System.Xml.Serialization.XmlEnumAttribute("399599")]
        Item399599,
        
        /// <summary>
        /// <para>Signwriter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Signwriter")]
        [System.Xml.Serialization.XmlEnumAttribute("399611")]
        Item399611,
        
        /// <summary>
        /// <para>Other Miscellaneous Technicians and Trades Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Miscellaneous Technicians and Trades Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("399900")]
        Item399900,
        
        /// <summary>
        /// <para>Diver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diver")]
        [System.Xml.Serialization.XmlEnumAttribute("399911")]
        Item399911,
        
        /// <summary>
        /// <para>Interior Decorator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interior Decorator")]
        [System.Xml.Serialization.XmlEnumAttribute("399912")]
        Item399912,
        
        /// <summary>
        /// <para>Optical Dispenser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optical Dispenser")]
        [System.Xml.Serialization.XmlEnumAttribute("399913")]
        Item399913,
        
        /// <summary>
        /// <para>Optical Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optical Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("399914")]
        Item399914,
        
        /// <summary>
        /// <para>Photographer's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographer\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("399915")]
        Item399915,
        
        /// <summary>
        /// <para>Plastics Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399916")]
        Item399916,
        
        /// <summary>
        /// <para>Wool Classer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Classer")]
        [System.Xml.Serialization.XmlEnumAttribute("399917")]
        Item399917,
        
        /// <summary>
        /// <para>Fire Protection Equipment Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire Protection Equipment Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("399918")]
        Item399918,
        
        /// <summary>
        /// <para>Technicians and Trades Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technicians and Trades Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("399999")]
        Item399999,
        
        /// <summary>
        /// <para>Community and Personal Service Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community and Personal Service Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("400000")]
        Item400000,
        
        /// <summary>
        /// <para>Health and Welfare Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health and Welfare Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("411000")]
        Item411000,
        
        /// <summary>
        /// <para>Ambulance Officers and Paramedics nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ambulance Officers and Paramedics nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("411100")]
        Item411100,
        
        /// <summary>
        /// <para>Ambulance Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ambulance Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("411111")]
        Item411111,
        
        /// <summary>
        /// <para>Intensive Care Ambulance Paramedic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intensive Care Ambulance Paramedic")]
        [System.Xml.Serialization.XmlEnumAttribute("411112")]
        Item411112,
        
        /// <summary>
        /// <para>Dental Hygienists, Technicians and Therapists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Hygienists, Technicians and Therapists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("411200")]
        Item411200,
        
        /// <summary>
        /// <para>Dental Hygienist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Hygienist")]
        [System.Xml.Serialization.XmlEnumAttribute("411211")]
        Item411211,
        
        /// <summary>
        /// <para>Dental Prosthetist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Prosthetist")]
        [System.Xml.Serialization.XmlEnumAttribute("411212")]
        Item411212,
        
        /// <summary>
        /// <para>Dental Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("411213")]
        Item411213,
        
        /// <summary>
        /// <para>Dental Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("411214")]
        Item411214,
        
        /// <summary>
        /// <para>Diversional Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diversional Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("411311")]
        Item411311,
        
        /// <summary>
        /// <para>Enrolled and Mothercraft Nurses nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Enrolled and Mothercraft Nurses nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("411400")]
        Item411400,
        
        /// <summary>
        /// <para>Enrolled Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Enrolled Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("411411")]
        Item411411,
        
        /// <summary>
        /// <para>Mothercraft Nurse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mothercraft Nurse")]
        [System.Xml.Serialization.XmlEnumAttribute("411412")]
        Item411412,
        
        /// <summary>
        /// <para>Aboriginal and Torres Strait Islander Health Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aboriginal and Torres Strait Islander Health Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("411511")]
        Item411511,
        
        /// <summary>
        /// <para>Massage Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Massage Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("411611")]
        Item411611,
        
        /// <summary>
        /// <para>Welfare Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Welfare Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("411700")]
        Item411700,
        
        /// <summary>
        /// <para>Community Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("411711")]
        Item411711,
        
        /// <summary>
        /// <para>Disabilities Services Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Disabilities Services Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("411712")]
        Item411712,
        
        /// <summary>
        /// <para>Family Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("411713")]
        Item411713,
        
        /// <summary>
        /// <para>Parole or Probation Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parole or Probation Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("411714")]
        Item411714,
        
        /// <summary>
        /// <para>Residential Care Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Residential Care Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("411715")]
        Item411715,
        
        /// <summary>
        /// <para>Youth Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Youth Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("411716")]
        Item411716,
        
        /// <summary>
        /// <para>Carers and Aides nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carers and Aides nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("420000")]
        Item420000,
        
        /// <summary>
        /// <para>Child Carers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Carers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("421100")]
        Item421100,
        
        /// <summary>
        /// <para>Child Care Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Care Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("421111")]
        Item421111,
        
        /// <summary>
        /// <para>Family Day Care Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Day Care Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("421112")]
        Item421112,
        
        /// <summary>
        /// <para>Nanny</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nanny")]
        [System.Xml.Serialization.XmlEnumAttribute("421113")]
        Item421113,
        
        /// <summary>
        /// <para>Out of School Hours Care Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Out of School Hours Care Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("421114")]
        Item421114,
        
        /// <summary>
        /// <para>Education Aides nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education Aides nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("422100")]
        Item422100,
        
        /// <summary>
        /// <para>Aboriginal and Torres Strait Islander Education Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aboriginal and Torres Strait Islander Education Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("422111")]
        Item422111,
        
        /// <summary>
        /// <para>Integration Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Integration Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("422112")]
        Item422112,
        
        /// <summary>
        /// <para>Preschool Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preschool Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("422115")]
        Item422115,
        
        /// <summary>
        /// <para>Teachers' Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Teachers\' Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("422116")]
        Item422116,
        
        /// <summary>
        /// <para>Personal Carers and Assistants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Carers and Assistants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("423000")]
        Item423000,
        
        /// <summary>
        /// <para>Aged or Disabled Carer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aged or Disabled Carer")]
        [System.Xml.Serialization.XmlEnumAttribute("423111")]
        Item423111,
        
        /// <summary>
        /// <para>Dental Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("423211")]
        Item423211,
        
        /// <summary>
        /// <para>Nursing Support and Personal Care Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursing Support and Personal Care Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("423300")]
        Item423300,
        
        /// <summary>
        /// <para>Hospital Orderly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospital Orderly")]
        [System.Xml.Serialization.XmlEnumAttribute("423311")]
        Item423311,
        
        /// <summary>
        /// <para>Nursing Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursing Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("423312")]
        Item423312,
        
        /// <summary>
        /// <para>Personal Care Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Care Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("423313")]
        Item423313,
        
        /// <summary>
        /// <para>Therapy Aide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Therapy Aide")]
        [System.Xml.Serialization.XmlEnumAttribute("423314")]
        Item423314,
        
        /// <summary>
        /// <para>Special Care Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special Care Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("423400")]
        Item423400,
        
        /// <summary>
        /// <para>Child or Youth Residential Care Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child or Youth Residential Care Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("423411")]
        Item423411,
        
        /// <summary>
        /// <para>Hostel Parent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hostel Parent")]
        [System.Xml.Serialization.XmlEnumAttribute("423412")]
        Item423412,
        
        /// <summary>
        /// <para>Refuge Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refuge Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("423413")]
        Item423413,
        
        /// <summary>
        /// <para>Hospitality Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("431000")]
        Item431000,
        
        /// <summary>
        /// <para>Bar Attendants and Baristas nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bar Attendants and Baristas nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("431100")]
        Item431100,
        
        /// <summary>
        /// <para>Bar Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bar Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("431111")]
        Item431111,
        
        /// <summary>
        /// <para>Barista</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Barista")]
        [System.Xml.Serialization.XmlEnumAttribute("431112")]
        Item431112,
        
        /// <summary>
        /// <para>Cafe Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cafe Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("431211")]
        Item431211,
        
        /// <summary>
        /// <para>Gaming Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("431311")]
        Item431311,
        
        /// <summary>
        /// <para>Hotel Service Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hotel Service Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("431411")]
        Item431411,
        
        /// <summary>
        /// <para>Waiter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waiter")]
        [System.Xml.Serialization.XmlEnumAttribute("431511")]
        Item431511,
        
        /// <summary>
        /// <para>Other Hospitality Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Hospitality Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("431900")]
        Item431900,
        
        /// <summary>
        /// <para>Bar Useful or Busser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bar Useful or Busser")]
        [System.Xml.Serialization.XmlEnumAttribute("431911")]
        Item431911,
        
        /// <summary>
        /// <para>Doorperson or Luggage Porter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Doorperson or Luggage Porter")]
        [System.Xml.Serialization.XmlEnumAttribute("431912")]
        Item431912,
        
        /// <summary>
        /// <para>Hospitality Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("431999")]
        Item431999,
        
        /// <summary>
        /// <para>Protective Service Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Protective Service Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("440000")]
        Item440000,
        
        /// <summary>
        /// <para>Defence Force Members, Fire Fighters and Police nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defence Force Members, Fire Fighters and Police nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("441000")]
        Item441000,
        
        /// <summary>
        /// <para>Defence Force Member - Other Ranks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defence Force Member - Other Ranks")]
        [System.Xml.Serialization.XmlEnumAttribute("441111")]
        Item441111,
        
        /// <summary>
        /// <para>Fire and Emergency Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire and Emergency Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("441200")]
        Item441200,
        
        /// <summary>
        /// <para>Emergency Service Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Emergency Service Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("441211")]
        Item441211,
        
        /// <summary>
        /// <para>Fire Fighter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire Fighter")]
        [System.Xml.Serialization.XmlEnumAttribute("441212")]
        Item441212,
        
        /// <summary>
        /// <para>Police nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Police nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("441300")]
        Item441300,
        
        /// <summary>
        /// <para>Detective</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Detective")]
        [System.Xml.Serialization.XmlEnumAttribute("441311")]
        Item441311,
        
        /// <summary>
        /// <para>Police Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Police Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("441312")]
        Item441312,
        
        /// <summary>
        /// <para>Prison and Security Officers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prison and Security Officers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("442000")]
        Item442000,
        
        /// <summary>
        /// <para>Prison Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prison Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("442111")]
        Item442111,
        
        /// <summary>
        /// <para>Security Officers and Guards nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Officers and Guards nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("442200")]
        Item442200,
        
        /// <summary>
        /// <para>Alarm, Security or Surveillance Monitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alarm, Security or Surveillance Monitor")]
        [System.Xml.Serialization.XmlEnumAttribute("442211")]
        Item442211,
        
        /// <summary>
        /// <para>Armoured Car Escort</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Armoured Car Escort")]
        [System.Xml.Serialization.XmlEnumAttribute("442212")]
        Item442212,
        
        /// <summary>
        /// <para>Crowd Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crowd Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("442213")]
        Item442213,
        
        /// <summary>
        /// <para>Private Investigator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Investigator")]
        [System.Xml.Serialization.XmlEnumAttribute("442214")]
        Item442214,
        
        /// <summary>
        /// <para>Retail Loss Prevention Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Loss Prevention Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("442215")]
        Item442215,
        
        /// <summary>
        /// <para>Security Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("442216")]
        Item442216,
        
        /// <summary>
        /// <para>Security Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("442217")]
        Item442217,
        
        /// <summary>
        /// <para>Security Officers and Guards nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Officers and Guards nec")]
        [System.Xml.Serialization.XmlEnumAttribute("442299")]
        Item442299,
        
        /// <summary>
        /// <para>Sports and Personal Service Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Personal Service Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("450000")]
        Item450000,
        
        /// <summary>
        /// <para>Personal Service and Travel Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Service and Travel Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451000")]
        Item451000,
        
        /// <summary>
        /// <para>Beauty Therapist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beauty Therapist")]
        [System.Xml.Serialization.XmlEnumAttribute("451111")]
        Item451111,
        
        /// <summary>
        /// <para>Driving Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driving Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("451211")]
        Item451211,
        
        /// <summary>
        /// <para>Funeral Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funeral Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451300")]
        Item451300,
        
        /// <summary>
        /// <para>Funeral Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funeral Director")]
        [System.Xml.Serialization.XmlEnumAttribute("451311")]
        Item451311,
        
        /// <summary>
        /// <para>Funeral Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funeral Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("451399")]
        Item451399,
        
        /// <summary>
        /// <para>Gallery, Museum and Tour Guides nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gallery, Museum and Tour Guides nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451400")]
        Item451400,
        
        /// <summary>
        /// <para>Gallery or Museum Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gallery or Museum Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("451411")]
        Item451411,
        
        /// <summary>
        /// <para>Tour Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tour Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("451412")]
        Item451412,
        
        /// <summary>
        /// <para>Personal Care Consultants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Care Consultants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451500")]
        Item451500,
        
        /// <summary>
        /// <para>Natural Remedy Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural Remedy Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("451511")]
        Item451511,
        
        /// <summary>
        /// <para>Weight Loss Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weight Loss Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("451512")]
        Item451512,
        
        /// <summary>
        /// <para>Herbalist (Western)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Herbalist (Western)")]
        [System.Xml.Serialization.XmlEnumAttribute("451513")]
        Item451513,
        
        /// <summary>
        /// <para>Tourism and Travel Advisers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tourism and Travel Advisers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451600")]
        Item451600,
        
        /// <summary>
        /// <para>Tourist Information Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tourist Information Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("451611")]
        Item451611,
        
        /// <summary>
        /// <para>Travel Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("451612")]
        Item451612,
        
        /// <summary>
        /// <para>Travel Attendants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Attendants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451700")]
        Item451700,
        
        /// <summary>
        /// <para>Flight Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flight Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("451711")]
        Item451711,
        
        /// <summary>
        /// <para>Travel Attendants nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Attendants nec")]
        [System.Xml.Serialization.XmlEnumAttribute("451799")]
        Item451799,
        
        /// <summary>
        /// <para>Other Personal Service Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Personal Service Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("451800")]
        Item451800,
        
        /// <summary>
        /// <para>Civil Celebrant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civil Celebrant")]
        [System.Xml.Serialization.XmlEnumAttribute("451811")]
        Item451811,
        
        /// <summary>
        /// <para>Hair or Beauty Salon Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hair or Beauty Salon Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("451812")]
        Item451812,
        
        /// <summary>
        /// <para>Sex Worker or Escort</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sex Worker or Escort")]
        [System.Xml.Serialization.XmlEnumAttribute("451813")]
        Item451813,
        
        /// <summary>
        /// <para>Body Artist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Body Artist")]
        [System.Xml.Serialization.XmlEnumAttribute("451814")]
        Item451814,
        
        /// <summary>
        /// <para>First Aid Trainer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("First Aid Trainer")]
        [System.Xml.Serialization.XmlEnumAttribute("451815")]
        Item451815,
        
        /// <summary>
        /// <para>Religious Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Religious Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("451816")]
        Item451816,
        
        /// <summary>
        /// <para>Personal Service Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Service Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("451899")]
        Item451899,
        
        /// <summary>
        /// <para>Sports and Fitness Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Fitness Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("452000")]
        Item452000,
        
        /// <summary>
        /// <para>Fitness Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fitness Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452111")]
        Item452111,
        
        /// <summary>
        /// <para>Outdoor Adventure Guides nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outdoor Adventure Guides nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("452200")]
        Item452200,
        
        /// <summary>
        /// <para>Bungy Jump Master</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bungy Jump Master")]
        [System.Xml.Serialization.XmlEnumAttribute("452211")]
        Item452211,
        
        /// <summary>
        /// <para>Fishing Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fishing Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("452212")]
        Item452212,
        
        /// <summary>
        /// <para>Hunting Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hunting Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("452213")]
        Item452213,
        
        /// <summary>
        /// <para>Mountain or Glacier Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mountain or Glacier Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("452214")]
        Item452214,
        
        /// <summary>
        /// <para>Outdoor Adventure Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outdoor Adventure Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452215")]
        Item452215,
        
        /// <summary>
        /// <para>Trekking Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trekking Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("452216")]
        Item452216,
        
        /// <summary>
        /// <para>Whitewater Rafting Guide</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whitewater Rafting Guide")]
        [System.Xml.Serialization.XmlEnumAttribute("452217")]
        Item452217,
        
        /// <summary>
        /// <para>Outdoor Adventure Guides nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outdoor Adventure Guides nec")]
        [System.Xml.Serialization.XmlEnumAttribute("452299")]
        Item452299,
        
        /// <summary>
        /// <para>Sports Coaches, Instructors and Officials nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Coaches, Instructors and Officials nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("452300")]
        Item452300,
        
        /// <summary>
        /// <para>Diving Instructor (Open Water)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diving Instructor (Open Water)")]
        [System.Xml.Serialization.XmlEnumAttribute("452311")]
        Item452311,
        
        /// <summary>
        /// <para>Gymnastics Coach or Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gymnastics Coach or Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452312")]
        Item452312,
        
        /// <summary>
        /// <para>Horse Riding Coach or Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Riding Coach or Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452313")]
        Item452313,
        
        /// <summary>
        /// <para>Snowsport Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Snowsport Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452314")]
        Item452314,
        
        /// <summary>
        /// <para>Swimming Coach or Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Swimming Coach or Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452315")]
        Item452315,
        
        /// <summary>
        /// <para>Tennis Coach</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tennis Coach")]
        [System.Xml.Serialization.XmlEnumAttribute("452316")]
        Item452316,
        
        /// <summary>
        /// <para>Other Sports Coach or Instructor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sports Coach or Instructor")]
        [System.Xml.Serialization.XmlEnumAttribute("452317")]
        Item452317,
        
        /// <summary>
        /// <para>Dog or Horse Racing Official</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dog or Horse Racing Official")]
        [System.Xml.Serialization.XmlEnumAttribute("452318")]
        Item452318,
        
        /// <summary>
        /// <para>Sports Development Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Development Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("452321")]
        Item452321,
        
        /// <summary>
        /// <para>Sports Umpire</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports Umpire")]
        [System.Xml.Serialization.XmlEnumAttribute("452322")]
        Item452322,
        
        /// <summary>
        /// <para>Other Sports Official</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sports Official")]
        [System.Xml.Serialization.XmlEnumAttribute("452323")]
        Item452323,
        
        /// <summary>
        /// <para>Sportspersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sportspersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("452400")]
        Item452400,
        
        /// <summary>
        /// <para>Footballer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footballer")]
        [System.Xml.Serialization.XmlEnumAttribute("452411")]
        Item452411,
        
        /// <summary>
        /// <para>Golfer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Golfer")]
        [System.Xml.Serialization.XmlEnumAttribute("452412")]
        Item452412,
        
        /// <summary>
        /// <para>Jockey</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jockey")]
        [System.Xml.Serialization.XmlEnumAttribute("452413")]
        Item452413,
        
        /// <summary>
        /// <para>Lifeguard</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lifeguard")]
        [System.Xml.Serialization.XmlEnumAttribute("452414")]
        Item452414,
        
        /// <summary>
        /// <para>Sportspersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sportspersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("452499")]
        Item452499,
        
        /// <summary>
        /// <para>Clerical and Administrative Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerical and Administrative Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("500000")]
        Item500000,
        
        /// <summary>
        /// <para>Office Managers and Program Administrators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Managers and Program Administrators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("510000")]
        Item510000,
        
        /// <summary>
        /// <para>Contract, Program and Project Administrators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contract, Program and Project Administrators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("511100")]
        Item511100,
        
        /// <summary>
        /// <para>Contract Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contract Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("511111")]
        Item511111,
        
        /// <summary>
        /// <para>Program or Project Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Program or Project Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("511112")]
        Item511112,
        
        /// <summary>
        /// <para>Office and Practice Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office and Practice Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("512000")]
        Item512000,
        
        /// <summary>
        /// <para>Office Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("512111")]
        Item512111,
        
        /// <summary>
        /// <para>Practice Managers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Practice Managers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("512200")]
        Item512200,
        
        /// <summary>
        /// <para>Health Practice Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Practice Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("512211")]
        Item512211,
        
        /// <summary>
        /// <para>Practice Managers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Practice Managers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("512299")]
        Item512299,
        
        /// <summary>
        /// <para>Personal Assistants and Secretaries nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Assistants and Secretaries nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("521000")]
        Item521000,
        
        /// <summary>
        /// <para>Personal Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("521111")]
        Item521111,
        
        /// <summary>
        /// <para>Secretaries nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secretaries nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("521200")]
        Item521200,
        
        /// <summary>
        /// <para>Secretary (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secretary (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("521211")]
        Item521211,
        
        /// <summary>
        /// <para>Legal Secretary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Secretary")]
        [System.Xml.Serialization.XmlEnumAttribute("521212")]
        Item521212,
        
        /// <summary>
        /// <para>General Clerical Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Clerical Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("530000")]
        Item530000,
        
        /// <summary>
        /// <para>General Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("531111")]
        Item531111,
        
        /// <summary>
        /// <para>Keyboard Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Keyboard Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("532100")]
        Item532100,
        
        /// <summary>
        /// <para>Data Entry Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data Entry Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("532111")]
        Item532111,
        
        /// <summary>
        /// <para>Machine Shorthand Reporter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machine Shorthand Reporter")]
        [System.Xml.Serialization.XmlEnumAttribute("532112")]
        Item532112,
        
        /// <summary>
        /// <para>Word Processing Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Word Processing Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("532113")]
        Item532113,
        
        /// <summary>
        /// <para>Inquiry Clerks and Receptionists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inquiry Clerks and Receptionists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("540000")]
        Item540000,
        
        /// <summary>
        /// <para>Call or Contact Centre Information Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre Information Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("541000")]
        Item541000,
        
        /// <summary>
        /// <para>Call or Contact Centre Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("541100")]
        Item541100,
        
        /// <summary>
        /// <para>Call or Contact Centre Team Leader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre Team Leader")]
        [System.Xml.Serialization.XmlEnumAttribute("541111")]
        Item541111,
        
        /// <summary>
        /// <para>Call or Contact Centre Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call or Contact Centre Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("541112")]
        Item541112,
        
        /// <summary>
        /// <para>Information Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("541211")]
        Item541211,
        
        /// <summary>
        /// <para>Receptionists nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Receptionists nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("542100")]
        Item542100,
        
        /// <summary>
        /// <para>Receptionist (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Receptionist (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("542111")]
        Item542111,
        
        /// <summary>
        /// <para>Admissions Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Admissions Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("542112")]
        Item542112,
        
        /// <summary>
        /// <para>Hotel or Motel Receptionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hotel or Motel Receptionist")]
        [System.Xml.Serialization.XmlEnumAttribute("542113")]
        Item542113,
        
        /// <summary>
        /// <para>Medical Receptionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Receptionist")]
        [System.Xml.Serialization.XmlEnumAttribute("542114")]
        Item542114,
        
        /// <summary>
        /// <para>Numerical Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Numerical Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("550000")]
        Item550000,
        
        /// <summary>
        /// <para>Accounting Clerks and Bookkeepers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Clerks and Bookkeepers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("551000")]
        Item551000,
        
        /// <summary>
        /// <para>Accounting Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("551100")]
        Item551100,
        
        /// <summary>
        /// <para>Accounts Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounts Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("551111")]
        Item551111,
        
        /// <summary>
        /// <para>Cost Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cost Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("551112")]
        Item551112,
        
        /// <summary>
        /// <para>Bookkeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookkeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("551211")]
        Item551211,
        
        /// <summary>
        /// <para>Payroll Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payroll Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("551311")]
        Item551311,
        
        /// <summary>
        /// <para>Financial and Insurance Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial and Insurance Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("552000")]
        Item552000,
        
        /// <summary>
        /// <para>Bank Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("552111")]
        Item552111,
        
        /// <summary>
        /// <para>Credit or Loans Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit or Loans Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("552211")]
        Item552211,
        
        /// <summary>
        /// <para>Insurance, Money Market and Statistical Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance, Money Market and Statistical Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("552300")]
        Item552300,
        
        /// <summary>
        /// <para>Bookmaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookmaker")]
        [System.Xml.Serialization.XmlEnumAttribute("552311")]
        Item552311,
        
        /// <summary>
        /// <para>Insurance Consultant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Consultant")]
        [System.Xml.Serialization.XmlEnumAttribute("552312")]
        Item552312,
        
        /// <summary>
        /// <para>Money Market Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Money Market Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("552313")]
        Item552313,
        
        /// <summary>
        /// <para>Statistical Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Statistical Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("552314")]
        Item552314,
        
        /// <summary>
        /// <para>Clerical and Office Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerical and Office Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("561000")]
        Item561000,
        
        /// <summary>
        /// <para>Betting Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("561100")]
        Item561100,
        
        /// <summary>
        /// <para>Betting Agency Counter Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Agency Counter Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561111")]
        Item561111,
        
        /// <summary>
        /// <para>Bookmaker's Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bookmaker\'s Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561112")]
        Item561112,
        
        /// <summary>
        /// <para>Telephone Betting Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telephone Betting Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561113")]
        Item561113,
        
        /// <summary>
        /// <para>Betting Clerks nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Betting Clerks nec")]
        [System.Xml.Serialization.XmlEnumAttribute("561199")]
        Item561199,
        
        /// <summary>
        /// <para>Couriers and Postal Deliverers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Couriers and Postal Deliverers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("561200")]
        Item561200,
        
        /// <summary>
        /// <para>Courier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Courier")]
        [System.Xml.Serialization.XmlEnumAttribute("561211")]
        Item561211,
        
        /// <summary>
        /// <para>Postal Delivery Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal Delivery Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("561212")]
        Item561212,
        
        /// <summary>
        /// <para>Filing or Registry Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Filing or Registry Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561311")]
        Item561311,
        
        /// <summary>
        /// <para>Mail Sorters nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mail Sorters nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("561400")]
        Item561400,
        
        /// <summary>
        /// <para>Mail Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mail Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561411")]
        Item561411,
        
        /// <summary>
        /// <para>Postal Sorting Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal Sorting Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("561412")]
        Item561412,
        
        /// <summary>
        /// <para>Survey Interviewer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Survey Interviewer")]
        [System.Xml.Serialization.XmlEnumAttribute("561511")]
        Item561511,
        
        /// <summary>
        /// <para>Switchboard Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Switchboard Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("561611")]
        Item561611,
        
        /// <summary>
        /// <para>Other Clerical and Office Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Clerical and Office Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("561900")]
        Item561900,
        
        /// <summary>
        /// <para>Classified Advertising Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Classified Advertising Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("561911")]
        Item561911,
        
        /// <summary>
        /// <para>Meter Reader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meter Reader")]
        [System.Xml.Serialization.XmlEnumAttribute("561912")]
        Item561912,
        
        /// <summary>
        /// <para>Parking Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parking Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("561913")]
        Item561913,
        
        /// <summary>
        /// <para>Clerical and Office Support Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerical and Office Support Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("561999")]
        Item561999,
        
        /// <summary>
        /// <para>Other Clerical and Administrative Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Clerical and Administrative Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("590000")]
        Item590000,
        
        /// <summary>
        /// <para>Logistics Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logistics Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("591000")]
        Item591000,
        
        /// <summary>
        /// <para>Purchasing and Supply Logistics Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchasing and Supply Logistics Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("591100")]
        Item591100,
        
        /// <summary>
        /// <para>Production Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("591112")]
        Item591112,
        
        /// <summary>
        /// <para>Purchasing Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchasing Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("591113")]
        Item591113,
        
        /// <summary>
        /// <para>Stock Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stock Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("591115")]
        Item591115,
        
        /// <summary>
        /// <para>Warehouse Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warehouse Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("591116")]
        Item591116,
        
        /// <summary>
        /// <para>Order Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Order Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("591117")]
        Item591117,
        
        /// <summary>
        /// <para>Transport and Despatch Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport and Despatch Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("591200")]
        Item591200,
        
        /// <summary>
        /// <para>Despatching and Receiving Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Despatching and Receiving Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("591211")]
        Item591211,
        
        /// <summary>
        /// <para>Import-Export Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Import-Export Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("591212")]
        Item591212,
        
        /// <summary>
        /// <para>Miscellaneous Clerical and Administrative Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Clerical and Administrative Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599000")]
        Item599000,
        
        /// <summary>
        /// <para>Conveyancers and Legal Executives nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conveyancers and Legal Executives nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599100")]
        Item599100,
        
        /// <summary>
        /// <para>Conveyancer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conveyancer")]
        [System.Xml.Serialization.XmlEnumAttribute("599111")]
        Item599111,
        
        /// <summary>
        /// <para>Legal Executive</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Executive")]
        [System.Xml.Serialization.XmlEnumAttribute("599112")]
        Item599112,
        
        /// <summary>
        /// <para>Court and Legal Clerks nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court and Legal Clerks nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599200")]
        Item599200,
        
        /// <summary>
        /// <para>Clerk of Court</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerk of Court")]
        [System.Xml.Serialization.XmlEnumAttribute("599211")]
        Item599211,
        
        /// <summary>
        /// <para>Court Bailiff or Sheriff</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court Bailiff or Sheriff")]
        [System.Xml.Serialization.XmlEnumAttribute("599212")]
        Item599212,
        
        /// <summary>
        /// <para>Court Orderly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Court Orderly")]
        [System.Xml.Serialization.XmlEnumAttribute("599213")]
        Item599213,
        
        /// <summary>
        /// <para>Law Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Law Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("599214")]
        Item599214,
        
        /// <summary>
        /// <para>Trust Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trust Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("599215")]
        Item599215,
        
        /// <summary>
        /// <para>Debt Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debt Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("599311")]
        Item599311,
        
        /// <summary>
        /// <para>Human Resources Clerk</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Resources Clerk")]
        [System.Xml.Serialization.XmlEnumAttribute("599411")]
        Item599411,
        
        /// <summary>
        /// <para>Inspectors and Regulatory Officers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inspectors and Regulatory Officers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599500")]
        Item599500,
        
        /// <summary>
        /// <para>Customs Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customs Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("599511")]
        Item599511,
        
        /// <summary>
        /// <para>Immigration Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Immigration Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("599512")]
        Item599512,
        
        /// <summary>
        /// <para>Motor Vehicle Licence Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Licence Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("599513")]
        Item599513,
        
        /// <summary>
        /// <para>Noxious Weeds and Pest Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Noxious Weeds and Pest Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("599514")]
        Item599514,
        
        /// <summary>
        /// <para>Social Security Assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Security Assessor")]
        [System.Xml.Serialization.XmlEnumAttribute("599515")]
        Item599515,
        
        /// <summary>
        /// <para>Taxation Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taxation Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("599516")]
        Item599516,
        
        /// <summary>
        /// <para>Train Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("599517")]
        Item599517,
        
        /// <summary>
        /// <para>Transport Operations Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Operations Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("599518")]
        Item599518,
        
        /// <summary>
        /// <para>Water Inspector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Inspector")]
        [System.Xml.Serialization.XmlEnumAttribute("599521")]
        Item599521,
        
        /// <summary>
        /// <para>Inspectors and Regulatory Officers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inspectors and Regulatory Officers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("599599")]
        Item599599,
        
        /// <summary>
        /// <para>Insurance Investigators, Loss Adjusters and Risk Surveyors nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Investigators, Loss Adjusters and Risk Surveyors nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599600")]
        Item599600,
        
        /// <summary>
        /// <para>Insurance Investigator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Investigator")]
        [System.Xml.Serialization.XmlEnumAttribute("599611")]
        Item599611,
        
        /// <summary>
        /// <para>Insurance Loss Adjuster</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Loss Adjuster")]
        [System.Xml.Serialization.XmlEnumAttribute("599612")]
        Item599612,
        
        /// <summary>
        /// <para>Insurance Risk Surveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Risk Surveyor")]
        [System.Xml.Serialization.XmlEnumAttribute("599613")]
        Item599613,
        
        /// <summary>
        /// <para>Library Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Library Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("599711")]
        Item599711,
        
        /// <summary>
        /// <para>Other Miscellaneous Clerical and Administrative Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Miscellaneous Clerical and Administrative Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("599900")]
        Item599900,
        
        /// <summary>
        /// <para>Production Assistant (Film, Television, Radio or Stage)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Production Assistant (Film, Television, Radio or Stage)")]
        [System.Xml.Serialization.XmlEnumAttribute("599912")]
        Item599912,
        
        /// <summary>
        /// <para>Proof Reader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Proof Reader")]
        [System.Xml.Serialization.XmlEnumAttribute("599913")]
        Item599913,
        
        /// <summary>
        /// <para>Radio Despatcher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Despatcher")]
        [System.Xml.Serialization.XmlEnumAttribute("599914")]
        Item599914,
        
        /// <summary>
        /// <para>Clinical Coder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clinical Coder")]
        [System.Xml.Serialization.XmlEnumAttribute("599915")]
        Item599915,
        
        /// <summary>
        /// <para>Facilities Administrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Facilities Administrator")]
        [System.Xml.Serialization.XmlEnumAttribute("599916")]
        Item599916,
        
        /// <summary>
        /// <para>Clerical and Administrative Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clerical and Administrative Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("599999")]
        Item599999,
        
        /// <summary>
        /// <para>Sales Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("600000")]
        Item600000,
        
        /// <summary>
        /// <para>Sales Representatives and Agents nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representatives and Agents nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("610000")]
        Item610000,
        
        /// <summary>
        /// <para>Insurance Agents and Sales Representatives nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Agents and Sales Representatives nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("611000")]
        Item611000,
        
        /// <summary>
        /// <para>Auctioneers, and Stock and Station Agents nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auctioneers, and Stock and Station Agents nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("611100")]
        Item611100,
        
        /// <summary>
        /// <para>Auctioneer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auctioneer")]
        [System.Xml.Serialization.XmlEnumAttribute("611111")]
        Item611111,
        
        /// <summary>
        /// <para>Stock and Station Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stock and Station Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("611112")]
        Item611112,
        
        /// <summary>
        /// <para>Insurance Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("611211")]
        Item611211,
        
        /// <summary>
        /// <para>Sales Representatives nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representatives nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("611300")]
        Item611300,
        
        /// <summary>
        /// <para>Sales Representative (Building and Plumbing Supplies)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Building and Plumbing Supplies)")]
        [System.Xml.Serialization.XmlEnumAttribute("611311")]
        Item611311,
        
        /// <summary>
        /// <para>Sales Representative (Business Services)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Business Services)")]
        [System.Xml.Serialization.XmlEnumAttribute("611312")]
        Item611312,
        
        /// <summary>
        /// <para>Sales Representative (Motor Vehicle Parts and Accessories)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Motor Vehicle Parts and Accessories)")]
        [System.Xml.Serialization.XmlEnumAttribute("611313")]
        Item611313,
        
        /// <summary>
        /// <para>Sales Representative (Personal and Household Goods)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representative (Personal and Household Goods)")]
        [System.Xml.Serialization.XmlEnumAttribute("611314")]
        Item611314,
        
        /// <summary>
        /// <para>Sales Representatives nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Representatives nec")]
        [System.Xml.Serialization.XmlEnumAttribute("611399")]
        Item611399,
        
        /// <summary>
        /// <para>Real Estate Sales Agents nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Sales Agents nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("612100")]
        Item612100,
        
        /// <summary>
        /// <para>Business Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business Broker")]
        [System.Xml.Serialization.XmlEnumAttribute("612111")]
        Item612111,
        
        /// <summary>
        /// <para>Property Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("612112")]
        Item612112,
        
        /// <summary>
        /// <para>Real Estate Agency Principal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Agency Principal")]
        [System.Xml.Serialization.XmlEnumAttribute("612113")]
        Item612113,
        
        /// <summary>
        /// <para>Real Estate Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Agent")]
        [System.Xml.Serialization.XmlEnumAttribute("612114")]
        Item612114,
        
        /// <summary>
        /// <para>Real Estate Representative</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Representative")]
        [System.Xml.Serialization.XmlEnumAttribute("612115")]
        Item612115,
        
        /// <summary>
        /// <para>Sales Assistants and Salespersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistants and Salespersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("621000")]
        Item621000,
        
        /// <summary>
        /// <para>Sales Assistant (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistant (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("621111")]
        Item621111,
        
        /// <summary>
        /// <para>ICT Sales Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ICT Sales Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("621211")]
        Item621211,
        
        /// <summary>
        /// <para>Motor Vehicle and Vehicle Parts Salespersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Vehicle Parts Salespersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("621300")]
        Item621300,
        
        /// <summary>
        /// <para>Motor Vehicle or Caravan Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle or Caravan Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("621311")]
        Item621311,
        
        /// <summary>
        /// <para>Motor Vehicle Parts Interpreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts Interpreter")]
        [System.Xml.Serialization.XmlEnumAttribute("621312")]
        Item621312,
        
        /// <summary>
        /// <para>Pharmacy Sales Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmacy Sales Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("621411")]
        Item621411,
        
        /// <summary>
        /// <para>Retail Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("621511")]
        Item621511,
        
        /// <summary>
        /// <para>Service Station Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Service Station Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("621611")]
        Item621611,
        
        /// <summary>
        /// <para>Street Vendors and Related Salespersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Street Vendors and Related Salespersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("621700")]
        Item621700,
        
        /// <summary>
        /// <para>Cash Van Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cash Van Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("621711")]
        Item621711,
        
        /// <summary>
        /// <para>Door-to-door Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Door-to-door Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("621712")]
        Item621712,
        
        /// <summary>
        /// <para>Street Vendor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Street Vendor")]
        [System.Xml.Serialization.XmlEnumAttribute("621713")]
        Item621713,
        
        /// <summary>
        /// <para>Other Sales Assistants and Salespersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sales Assistants and Salespersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("621900")]
        Item621900,
        
        /// <summary>
        /// <para>Materials Recycler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Recycler")]
        [System.Xml.Serialization.XmlEnumAttribute("621911")]
        Item621911,
        
        /// <summary>
        /// <para>Rental Salesperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rental Salesperson")]
        [System.Xml.Serialization.XmlEnumAttribute("621912")]
        Item621912,
        
        /// <summary>
        /// <para>Sales Assistants and Salespersons nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Assistants and Salespersons nec")]
        [System.Xml.Serialization.XmlEnumAttribute("621999")]
        Item621999,
        
        /// <summary>
        /// <para>Sales Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("630000")]
        Item630000,
        
        /// <summary>
        /// <para>Checkout Operators and Office Cashiers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Checkout Operators and Office Cashiers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("631100")]
        Item631100,
        
        /// <summary>
        /// <para>Checkout Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Checkout Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("631111")]
        Item631111,
        
        /// <summary>
        /// <para>Office Cashier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Cashier")]
        [System.Xml.Serialization.XmlEnumAttribute("631112")]
        Item631112,
        
        /// <summary>
        /// <para>Miscellaneous Sales Support Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Sales Support Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("639000")]
        Item639000,
        
        /// <summary>
        /// <para>Models and Sales Demonstrators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Models and Sales Demonstrators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("639100")]
        Item639100,
        
        /// <summary>
        /// <para>Model</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Model")]
        [System.Xml.Serialization.XmlEnumAttribute("639111")]
        Item639111,
        
        /// <summary>
        /// <para>Sales Demonstrator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales Demonstrator")]
        [System.Xml.Serialization.XmlEnumAttribute("639112")]
        Item639112,
        
        /// <summary>
        /// <para>Retail and Wool Buyers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail and Wool Buyers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("639200")]
        Item639200,
        
        /// <summary>
        /// <para>Retail Buyer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Buyer")]
        [System.Xml.Serialization.XmlEnumAttribute("639211")]
        Item639211,
        
        /// <summary>
        /// <para>Wool Buyer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Buyer")]
        [System.Xml.Serialization.XmlEnumAttribute("639212")]
        Item639212,
        
        /// <summary>
        /// <para>Telemarketer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telemarketer")]
        [System.Xml.Serialization.XmlEnumAttribute("639311")]
        Item639311,
        
        /// <summary>
        /// <para>Ticket Salespersons nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ticket Salespersons nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("639400")]
        Item639400,
        
        /// <summary>
        /// <para>Ticket Seller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ticket Seller")]
        [System.Xml.Serialization.XmlEnumAttribute("639411")]
        Item639411,
        
        /// <summary>
        /// <para>Transport Conductor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Conductor")]
        [System.Xml.Serialization.XmlEnumAttribute("639412")]
        Item639412,
        
        /// <summary>
        /// <para>Visual Merchandiser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visual Merchandiser")]
        [System.Xml.Serialization.XmlEnumAttribute("639511")]
        Item639511,
        
        /// <summary>
        /// <para>Other Sales Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Sales Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("639911")]
        Item639911,
        
        /// <summary>
        /// <para>Machinery Operators and Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machinery Operators and Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("700000")]
        Item700000,
        
        /// <summary>
        /// <para>Machine and Stationary Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machine and Stationary Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("710000")]
        Item710000,
        
        /// <summary>
        /// <para>Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711000")]
        Item711000,
        
        /// <summary>
        /// <para>Clay, Concrete, Glass and Stone Processing Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay, Concrete, Glass and Stone Processing Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711100")]
        Item711100,
        
        /// <summary>
        /// <para>Clay Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711111")]
        Item711111,
        
        /// <summary>
        /// <para>Concrete Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711112")]
        Item711112,
        
        /// <summary>
        /// <para>Glass Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711113")]
        Item711113,
        
        /// <summary>
        /// <para>Stone Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stone Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711114")]
        Item711114,
        
        /// <summary>
        /// <para>Clay, Concrete, Glass and Stone Processing Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay, Concrete, Glass and Stone Processing Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("711199")]
        Item711199,
        
        /// <summary>
        /// <para>Industrial Spraypainter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Spraypainter")]
        [System.Xml.Serialization.XmlEnumAttribute("711211")]
        Item711211,
        
        /// <summary>
        /// <para>Paper and Wood Processing Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper and Wood Processing Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711300")]
        Item711300,
        
        /// <summary>
        /// <para>Paper Products Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Products Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711311")]
        Item711311,
        
        /// <summary>
        /// <para>Sawmilling Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sawmilling Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711313")]
        Item711313,
        
        /// <summary>
        /// <para>Other Wood Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Wood Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711314")]
        Item711314,
        
        /// <summary>
        /// <para>Photographic Developer and Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic Developer and Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("711411")]
        Item711411,
        
        /// <summary>
        /// <para>Plastics and Rubber Production Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics and Rubber Production Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711500")]
        Item711500,
        
        /// <summary>
        /// <para>Plastic Cablemaking Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastic Cablemaking Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711511")]
        Item711511,
        
        /// <summary>
        /// <para>Plastic Compounding and Reclamation Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastic Compounding and Reclamation Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711512")]
        Item711512,
        
        /// <summary>
        /// <para>Plastics Fabricator or Welder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Fabricator or Welder")]
        [System.Xml.Serialization.XmlEnumAttribute("711513")]
        Item711513,
        
        /// <summary>
        /// <para>Plastics Production Machine Operator (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Production Machine Operator (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("711514")]
        Item711514,
        
        /// <summary>
        /// <para>Reinforced Plastic and Composite Production Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reinforced Plastic and Composite Production Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("711515")]
        Item711515,
        
        /// <summary>
        /// <para>Rubber Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rubber Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711516")]
        Item711516,
        
        /// <summary>
        /// <para>Plastics and Rubber Production Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics and Rubber Production Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("711599")]
        Item711599,
        
        /// <summary>
        /// <para>Sewing Machinist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sewing Machinist")]
        [System.Xml.Serialization.XmlEnumAttribute("711611")]
        Item711611,
        
        /// <summary>
        /// <para>Textile and Footwear Production Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile and Footwear Production Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711700")]
        Item711700,
        
        /// <summary>
        /// <para>Footwear Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711711")]
        Item711711,
        
        /// <summary>
        /// <para>Hide and Skin Processing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hide and Skin Processing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711712")]
        Item711712,
        
        /// <summary>
        /// <para>Knitting Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Knitting Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711713")]
        Item711713,
        
        /// <summary>
        /// <para>Textile Dyeing and Finishing Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Dyeing and Finishing Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711714")]
        Item711714,
        
        /// <summary>
        /// <para>Weaving Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weaving Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711715")]
        Item711715,
        
        /// <summary>
        /// <para>Yarn Carding and Spinning Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yarn Carding and Spinning Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711716")]
        Item711716,
        
        /// <summary>
        /// <para>Textile and Footwear Production Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile and Footwear Production Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("711799")]
        Item711799,
        
        /// <summary>
        /// <para>Other Machine Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machine Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("711900")]
        Item711900,
        
        /// <summary>
        /// <para>Chemical Production Machine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Production Machine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("711911")]
        Item711911,
        
        /// <summary>
        /// <para>Motion Picture Projectionist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture Projectionist")]
        [System.Xml.Serialization.XmlEnumAttribute("711912")]
        Item711912,
        
        /// <summary>
        /// <para>Sand Blaster</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sand Blaster")]
        [System.Xml.Serialization.XmlEnumAttribute("711913")]
        Item711913,
        
        /// <summary>
        /// <para>Sterilisation Technician</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sterilisation Technician")]
        [System.Xml.Serialization.XmlEnumAttribute("711914")]
        Item711914,
        
        /// <summary>
        /// <para>Machine Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machine Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("711999")]
        Item711999,
        
        /// <summary>
        /// <para>Stationary Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stationary Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("712000")]
        Item712000,
        
        /// <summary>
        /// <para>Crane, Hoist or Lift Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crane, Hoist or Lift Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712111")]
        Item712111,
        
        /// <summary>
        /// <para>Drillers, Miners and Shot Firers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drillers, Miners and Shot Firers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("712200")]
        Item712200,
        
        /// <summary>
        /// <para>Driller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driller")]
        [System.Xml.Serialization.XmlEnumAttribute("712211")]
        Item712211,
        
        /// <summary>
        /// <para>Miner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miner")]
        [System.Xml.Serialization.XmlEnumAttribute("712212")]
        Item712212,
        
        /// <summary>
        /// <para>Shot Firer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shot Firer")]
        [System.Xml.Serialization.XmlEnumAttribute("712213")]
        Item712213,
        
        /// <summary>
        /// <para>Engineering Production Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Production Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("712311")]
        Item712311,
        
        /// <summary>
        /// <para>Other Stationary Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Stationary Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("712900")]
        Item712900,
        
        /// <summary>
        /// <para>Boiler or Engine Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boiler or Engine Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712911")]
        Item712911,
        
        /// <summary>
        /// <para>Bulk Materials Handling Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulk Materials Handling Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712912")]
        Item712912,
        
        /// <summary>
        /// <para>Cement Production Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement Production Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712913")]
        Item712913,
        
        /// <summary>
        /// <para>Concrete Batching Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Batching Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712914")]
        Item712914,
        
        /// <summary>
        /// <para>Concrete Pump Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Pump Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712915")]
        Item712915,
        
        /// <summary>
        /// <para>Paper and Pulp Mill Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper and Pulp Mill Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712916")]
        Item712916,
        
        /// <summary>
        /// <para>Railway Signal Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Signal Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712917")]
        Item712917,
        
        /// <summary>
        /// <para>Train Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("712918")]
        Item712918,
        
        /// <summary>
        /// <para>Waste Water or Water Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Water or Water Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712921")]
        Item712921,
        
        /// <summary>
        /// <para>Weighbridge Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weighbridge Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("712922")]
        Item712922,
        
        /// <summary>
        /// <para>Stationary Plant Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stationary Plant Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("712999")]
        Item712999,
        
        /// <summary>
        /// <para>Mobile Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("721000")]
        Item721000,
        
        /// <summary>
        /// <para>Agricultural, Forestry and Horticultural Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural, Forestry and Horticultural Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("721100")]
        Item721100,
        
        /// <summary>
        /// <para>Agricultural and Horticultural Mobile Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural and Horticultural Mobile Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721111")]
        Item721111,
        
        /// <summary>
        /// <para>Logging Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logging Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721112")]
        Item721112,
        
        /// <summary>
        /// <para>Earthmoving Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earthmoving Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("721200")]
        Item721200,
        
        /// <summary>
        /// <para>Earthmoving Plant Operator (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earthmoving Plant Operator (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("721211")]
        Item721211,
        
        /// <summary>
        /// <para>Backhoe Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Backhoe Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721212")]
        Item721212,
        
        /// <summary>
        /// <para>Bulldozer Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulldozer Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721213")]
        Item721213,
        
        /// <summary>
        /// <para>Excavator Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excavator Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721214")]
        Item721214,
        
        /// <summary>
        /// <para>Grader Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grader Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721215")]
        Item721215,
        
        /// <summary>
        /// <para>Loader Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loader Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721216")]
        Item721216,
        
        /// <summary>
        /// <para>Forklift Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forklift Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("721311")]
        Item721311,
        
        /// <summary>
        /// <para>Other Mobile Plant Operators nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Mobile Plant Operators nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("721900")]
        Item721900,
        
        /// <summary>
        /// <para>Aircraft Baggage Handler and Airline Ground Crew</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Baggage Handler and Airline Ground Crew")]
        [System.Xml.Serialization.XmlEnumAttribute("721911")]
        Item721911,
        
        /// <summary>
        /// <para>Linemarker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Linemarker")]
        [System.Xml.Serialization.XmlEnumAttribute("721912")]
        Item721912,
        
        /// <summary>
        /// <para>Paving Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paving Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721913")]
        Item721913,
        
        /// <summary>
        /// <para>Railway Track Plant Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Track Plant Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721914")]
        Item721914,
        
        /// <summary>
        /// <para>Road Roller Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Roller Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721915")]
        Item721915,
        
        /// <summary>
        /// <para>Streetsweeper Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Streetsweeper Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("721916")]
        Item721916,
        
        /// <summary>
        /// <para>Mobile Plant Operators nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile Plant Operators nec")]
        [System.Xml.Serialization.XmlEnumAttribute("721999")]
        Item721999,
        
        /// <summary>
        /// <para>Road and Rail Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road and Rail Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("730000")]
        Item730000,
        
        /// <summary>
        /// <para>Automobile, Bus and Rail Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automobile, Bus and Rail Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("731000")]
        Item731000,
        
        /// <summary>
        /// <para>Automobile Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automobile Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("731100")]
        Item731100,
        
        /// <summary>
        /// <para>Chauffeur</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chauffeur")]
        [System.Xml.Serialization.XmlEnumAttribute("731111")]
        Item731111,
        
        /// <summary>
        /// <para>Taxi Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taxi Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731112")]
        Item731112,
        
        /// <summary>
        /// <para>Automobile Drivers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automobile Drivers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("731199")]
        Item731199,
        
        /// <summary>
        /// <para>Bus and Coach Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bus and Coach Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("731200")]
        Item731200,
        
        /// <summary>
        /// <para>Bus Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bus Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731211")]
        Item731211,
        
        /// <summary>
        /// <para>Charter and Tour Bus Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Charter and Tour Bus Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731212")]
        Item731212,
        
        /// <summary>
        /// <para>Passenger Coach Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Passenger Coach Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731213")]
        Item731213,
        
        /// <summary>
        /// <para>Train and Tram Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train and Tram Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("731300")]
        Item731300,
        
        /// <summary>
        /// <para>Train Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Train Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731311")]
        Item731311,
        
        /// <summary>
        /// <para>Tram Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tram Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("731312")]
        Item731312,
        
        /// <summary>
        /// <para>Delivery Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Delivery Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("732111")]
        Item732111,
        
        /// <summary>
        /// <para>Truck Drivers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Truck Drivers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("733100")]
        Item733100,
        
        /// <summary>
        /// <para>Truck Driver (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Truck Driver (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("733111")]
        Item733111,
        
        /// <summary>
        /// <para>Aircraft Refueller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Refueller")]
        [System.Xml.Serialization.XmlEnumAttribute("733112")]
        Item733112,
        
        /// <summary>
        /// <para>Furniture Removalist</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Removalist")]
        [System.Xml.Serialization.XmlEnumAttribute("733113")]
        Item733113,
        
        /// <summary>
        /// <para>Tanker Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tanker Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("733114")]
        Item733114,
        
        /// <summary>
        /// <para>Tow Truck Driver</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tow Truck Driver")]
        [System.Xml.Serialization.XmlEnumAttribute("733115")]
        Item733115,
        
        /// <summary>
        /// <para>Storeperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Storeperson")]
        [System.Xml.Serialization.XmlEnumAttribute("741111")]
        Item741111,
        
        /// <summary>
        /// <para>Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("800000")]
        Item800000,
        
        /// <summary>
        /// <para>Cleaners and Laundry Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaners and Laundry Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("811000")]
        Item811000,
        
        /// <summary>
        /// <para>Car Detailer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Detailer")]
        [System.Xml.Serialization.XmlEnumAttribute("811111")]
        Item811111,
        
        /// <summary>
        /// <para>Commercial Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("811211")]
        Item811211,
        
        /// <summary>
        /// <para>Domestic Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("811311")]
        Item811311,
        
        /// <summary>
        /// <para>Housekeepers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Housekeepers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("811400")]
        Item811400,
        
        /// <summary>
        /// <para>Commercial Housekeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial Housekeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("811411")]
        Item811411,
        
        /// <summary>
        /// <para>Domestic Housekeeper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Housekeeper")]
        [System.Xml.Serialization.XmlEnumAttribute("811412")]
        Item811412,
        
        /// <summary>
        /// <para>Laundry Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laundry Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("811500")]
        Item811500,
        
        /// <summary>
        /// <para>Laundry Worker (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laundry Worker (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("811511")]
        Item811511,
        
        /// <summary>
        /// <para>Drycleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drycleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("811512")]
        Item811512,
        
        /// <summary>
        /// <para>Ironer or Presser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ironer or Presser")]
        [System.Xml.Serialization.XmlEnumAttribute("811513")]
        Item811513,
        
        /// <summary>
        /// <para>Other Cleaners nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Cleaners nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("811600")]
        Item811600,
        
        /// <summary>
        /// <para>Carpet Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpet Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("811611")]
        Item811611,
        
        /// <summary>
        /// <para>Window Cleaner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Window Cleaner")]
        [System.Xml.Serialization.XmlEnumAttribute("811612")]
        Item811612,
        
        /// <summary>
        /// <para>Cleaners nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaners nec")]
        [System.Xml.Serialization.XmlEnumAttribute("811699")]
        Item811699,
        
        /// <summary>
        /// <para>Construction and Mining Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction and Mining Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("821000")]
        Item821000,
        
        /// <summary>
        /// <para>Building and Plumbing Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Plumbing Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("821100")]
        Item821100,
        
        /// <summary>
        /// <para>Builder's Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Builder\'s Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("821111")]
        Item821111,
        
        /// <summary>
        /// <para>Drainage, Sewerage and Stormwater Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drainage, Sewerage and Stormwater Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("821112")]
        Item821112,
        
        /// <summary>
        /// <para>Earthmoving Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earthmoving Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("821113")]
        Item821113,
        
        /// <summary>
        /// <para>Plumber's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumber\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("821114")]
        Item821114,
        
        /// <summary>
        /// <para>Concreter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concreter")]
        [System.Xml.Serialization.XmlEnumAttribute("821211")]
        Item821211,
        
        /// <summary>
        /// <para>Fencer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fencer")]
        [System.Xml.Serialization.XmlEnumAttribute("821311")]
        Item821311,
        
        /// <summary>
        /// <para>Insulation and Home Improvement Installers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insulation and Home Improvement Installers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("821400")]
        Item821400,
        
        /// <summary>
        /// <para>Building Insulation Installer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Insulation Installer")]
        [System.Xml.Serialization.XmlEnumAttribute("821411")]
        Item821411,
        
        /// <summary>
        /// <para>Home Improvement Installer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Improvement Installer")]
        [System.Xml.Serialization.XmlEnumAttribute("821412")]
        Item821412,
        
        /// <summary>
        /// <para>Paving and Surfacing Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paving and Surfacing Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("821511")]
        Item821511,
        
        /// <summary>
        /// <para>Railway Track Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Track Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("821611")]
        Item821611,
        
        /// <summary>
        /// <para>Structural Steel Construction Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel Construction Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("821700")]
        Item821700,
        
        /// <summary>
        /// <para>Construction Rigger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Rigger")]
        [System.Xml.Serialization.XmlEnumAttribute("821711")]
        Item821711,
        
        /// <summary>
        /// <para>Scaffolder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scaffolder")]
        [System.Xml.Serialization.XmlEnumAttribute("821712")]
        Item821712,
        
        /// <summary>
        /// <para>Steel Fixer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Steel Fixer")]
        [System.Xml.Serialization.XmlEnumAttribute("821713")]
        Item821713,
        
        /// <summary>
        /// <para>Structural Steel Erector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel Erector")]
        [System.Xml.Serialization.XmlEnumAttribute("821714")]
        Item821714,
        
        /// <summary>
        /// <para>Other Construction and Mining Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Construction and Mining Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("821900")]
        Item821900,
        
        /// <summary>
        /// <para>Crane Chaser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crane Chaser")]
        [System.Xml.Serialization.XmlEnumAttribute("821911")]
        Item821911,
        
        /// <summary>
        /// <para>Driller's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Driller\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("821912")]
        Item821912,
        
        /// <summary>
        /// <para>Lagger</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lagger")]
        [System.Xml.Serialization.XmlEnumAttribute("821913")]
        Item821913,
        
        /// <summary>
        /// <para>Mining Support Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining Support Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("821914")]
        Item821914,
        
        /// <summary>
        /// <para>Surveyor's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveyor\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("821915")]
        Item821915,
        
        /// <summary>
        /// <para>Factory Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Factory Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("830000")]
        Item830000,
        
        /// <summary>
        /// <para>Food Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("831000")]
        Item831000,
        
        /// <summary>
        /// <para>Food and Drink Factory Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food and Drink Factory Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("831100")]
        Item831100,
        
        /// <summary>
        /// <para>Baking Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Baking Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831111")]
        Item831111,
        
        /// <summary>
        /// <para>Brewery Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brewery Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831112")]
        Item831112,
        
        /// <summary>
        /// <para>Confectionery Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Confectionery Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("831113")]
        Item831113,
        
        /// <summary>
        /// <para>Dairy Products Maker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Products Maker")]
        [System.Xml.Serialization.XmlEnumAttribute("831114")]
        Item831114,
        
        /// <summary>
        /// <para>Fruit and Vegetable Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831115")]
        Item831115,
        
        /// <summary>
        /// <para>Grain Mill Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain Mill Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831116")]
        Item831116,
        
        /// <summary>
        /// <para>Sugar Mill Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar Mill Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831117")]
        Item831117,
        
        /// <summary>
        /// <para>Winery Cellar Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Winery Cellar Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("831118")]
        Item831118,
        
        /// <summary>
        /// <para>Food and Drink Factory Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food and Drink Factory Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("831199")]
        Item831199,
        
        /// <summary>
        /// <para>Meat Boners and Slicers, and Slaughterers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Boners and Slicers, and Slaughterers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("831200")]
        Item831200,
        
        /// <summary>
        /// <para>Meat Boner and Slicer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Boner and Slicer")]
        [System.Xml.Serialization.XmlEnumAttribute("831211")]
        Item831211,
        
        /// <summary>
        /// <para>Slaughterer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Slaughterer")]
        [System.Xml.Serialization.XmlEnumAttribute("831212")]
        Item831212,
        
        /// <summary>
        /// <para>Meat, Poultry and Seafood Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat, Poultry and Seafood Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("831300")]
        Item831300,
        
        /// <summary>
        /// <para>Meat Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831311")]
        Item831311,
        
        /// <summary>
        /// <para>Poultry Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831312")]
        Item831312,
        
        /// <summary>
        /// <para>Seafood Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seafood Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("831313")]
        Item831313,
        
        /// <summary>
        /// <para>Packers and Product Assemblers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Packers and Product Assemblers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("832000")]
        Item832000,
        
        /// <summary>
        /// <para>Packers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Packers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("832100")]
        Item832100,
        
        /// <summary>
        /// <para>Chocolate Packer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chocolate Packer")]
        [System.Xml.Serialization.XmlEnumAttribute("832111")]
        Item832111,
        
        /// <summary>
        /// <para>Container Filler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container Filler")]
        [System.Xml.Serialization.XmlEnumAttribute("832112")]
        Item832112,
        
        /// <summary>
        /// <para>Fruit and Vegetable Packer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Packer")]
        [System.Xml.Serialization.XmlEnumAttribute("832113")]
        Item832113,
        
        /// <summary>
        /// <para>Meat Packer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Packer")]
        [System.Xml.Serialization.XmlEnumAttribute("832114")]
        Item832114,
        
        /// <summary>
        /// <para>Seafood Packer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seafood Packer")]
        [System.Xml.Serialization.XmlEnumAttribute("832115")]
        Item832115,
        
        /// <summary>
        /// <para>Packers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Packers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("832199")]
        Item832199,
        
        /// <summary>
        /// <para>Product Assembler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Assembler")]
        [System.Xml.Serialization.XmlEnumAttribute("832211")]
        Item832211,
        
        /// <summary>
        /// <para>Miscellaneous Factory Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Factory Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("839000")]
        Item839000,
        
        /// <summary>
        /// <para>Metal Engineering Process Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Engineering Process Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839111")]
        Item839111,
        
        /// <summary>
        /// <para>Plastics and Rubber Factory Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics and Rubber Factory Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("839200")]
        Item839200,
        
        /// <summary>
        /// <para>Plastics Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastics Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839211")]
        Item839211,
        
        /// <summary>
        /// <para>Rubber Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rubber Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839212")]
        Item839212,
        
        /// <summary>
        /// <para>Product Quality Controllers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Quality Controllers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("839300")]
        Item839300,
        
        /// <summary>
        /// <para>Product Examiner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Examiner")]
        [System.Xml.Serialization.XmlEnumAttribute("839311")]
        Item839311,
        
        /// <summary>
        /// <para>Product Grader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Grader")]
        [System.Xml.Serialization.XmlEnumAttribute("839312")]
        Item839312,
        
        /// <summary>
        /// <para>Product Tester</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product Tester")]
        [System.Xml.Serialization.XmlEnumAttribute("839313")]
        Item839313,
        
        /// <summary>
        /// <para>Timber and Wood Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timber and Wood Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("839400")]
        Item839400,
        
        /// <summary>
        /// <para>Paper and Pulp Mill Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper and Pulp Mill Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839411")]
        Item839411,
        
        /// <summary>
        /// <para>Sawmill or Timber Yard Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sawmill or Timber Yard Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839412")]
        Item839412,
        
        /// <summary>
        /// <para>Wood and Wood Products Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood and Wood Products Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839413")]
        Item839413,
        
        /// <summary>
        /// <para>Other Factory Process Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Factory Process Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("839900")]
        Item839900,
        
        /// <summary>
        /// <para>Cement and Concrete Plant Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement and Concrete Plant Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839911")]
        Item839911,
        
        /// <summary>
        /// <para>Chemical Plant Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chemical Plant Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839912")]
        Item839912,
        
        /// <summary>
        /// <para>Clay Processing Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay Processing Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839913")]
        Item839913,
        
        /// <summary>
        /// <para>Fabric and Textile Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fabric and Textile Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839914")]
        Item839914,
        
        /// <summary>
        /// <para>Footwear Factory Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Factory Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839915")]
        Item839915,
        
        /// <summary>
        /// <para>Glass Processing Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass Processing Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839916")]
        Item839916,
        
        /// <summary>
        /// <para>Hide and Skin Processing Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hide and Skin Processing Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839917")]
        Item839917,
        
        /// <summary>
        /// <para>Recycling Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recycling Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("839918")]
        Item839918,
        
        /// <summary>
        /// <para>Factory Process Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Factory Process Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("839999")]
        Item839999,
        
        /// <summary>
        /// <para>Farm, Forestry and Garden Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farm, Forestry and Garden Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841000")]
        Item841000,
        
        /// <summary>
        /// <para>Aquaculture Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aquaculture Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841111")]
        Item841111,
        
        /// <summary>
        /// <para>Crop Farm Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crop Farm Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841200")]
        Item841200,
        
        /// <summary>
        /// <para>Fruit or Nut Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit or Nut Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841211")]
        Item841211,
        
        /// <summary>
        /// <para>Fruit or Nut Picker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit or Nut Picker")]
        [System.Xml.Serialization.XmlEnumAttribute("841212")]
        Item841212,
        
        /// <summary>
        /// <para>Grain, Oilseed or Pasture Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain, Oilseed or Pasture Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841213")]
        Item841213,
        
        /// <summary>
        /// <para>Vegetable Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841214")]
        Item841214,
        
        /// <summary>
        /// <para>Vegetable Picker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Picker")]
        [System.Xml.Serialization.XmlEnumAttribute("841215")]
        Item841215,
        
        /// <summary>
        /// <para>Vineyard Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vineyard Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841216")]
        Item841216,
        
        /// <summary>
        /// <para>Mushroom Picker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mushroom Picker")]
        [System.Xml.Serialization.XmlEnumAttribute("841217")]
        Item841217,
        
        /// <summary>
        /// <para>Crop Farm Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crop Farm Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("841299")]
        Item841299,
        
        /// <summary>
        /// <para>Forestry and Logging Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry and Logging Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841300")]
        Item841300,
        
        /// <summary>
        /// <para>Forestry Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841311")]
        Item841311,
        
        /// <summary>
        /// <para>Logging Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logging Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("841312")]
        Item841312,
        
        /// <summary>
        /// <para>Tree Faller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tree Faller")]
        [System.Xml.Serialization.XmlEnumAttribute("841313")]
        Item841313,
        
        /// <summary>
        /// <para>Garden and Nursery Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden and Nursery Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841400")]
        Item841400,
        
        /// <summary>
        /// <para>Garden Labourer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden Labourer")]
        [System.Xml.Serialization.XmlEnumAttribute("841411")]
        Item841411,
        
        /// <summary>
        /// <para>Horticultural Nursery Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horticultural Nursery Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("841412")]
        Item841412,
        
        /// <summary>
        /// <para>Livestock Farm Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock Farm Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841500")]
        Item841500,
        
        /// <summary>
        /// <para>Beef Cattle Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beef Cattle Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841511")]
        Item841511,
        
        /// <summary>
        /// <para>Dairy Cattle Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Cattle Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841512")]
        Item841512,
        
        /// <summary>
        /// <para>Mixed Livestock Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Livestock Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841513")]
        Item841513,
        
        /// <summary>
        /// <para>Poultry Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841514")]
        Item841514,
        
        /// <summary>
        /// <para>Sheep Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841515")]
        Item841515,
        
        /// <summary>
        /// <para>Stablehand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stablehand")]
        [System.Xml.Serialization.XmlEnumAttribute("841516")]
        Item841516,
        
        /// <summary>
        /// <para>Wool Handler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Handler")]
        [System.Xml.Serialization.XmlEnumAttribute("841517")]
        Item841517,
        
        /// <summary>
        /// <para>Livestock Farm Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Livestock Farm Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("841599")]
        Item841599,
        
        /// <summary>
        /// <para>Mixed Crop and Livestock Farm Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Crop and Livestock Farm Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("841611")]
        Item841611,
        
        /// <summary>
        /// <para>Other Farm, Forestry and Garden Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Farm, Forestry and Garden Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("841900")]
        Item841900,
        
        /// <summary>
        /// <para>Hunter-Trapper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hunter-Trapper")]
        [System.Xml.Serialization.XmlEnumAttribute("841911")]
        Item841911,
        
        /// <summary>
        /// <para>Pest Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pest Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("841913")]
        Item841913,
        
        /// <summary>
        /// <para>Farm, Forestry and Garden Workers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farm, Forestry and Garden Workers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("841999")]
        Item841999,
        
        /// <summary>
        /// <para>Food Preparation Assistants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Preparation Assistants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("851000")]
        Item851000,
        
        /// <summary>
        /// <para>Fast Food Cook</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fast Food Cook")]
        [System.Xml.Serialization.XmlEnumAttribute("851111")]
        Item851111,
        
        /// <summary>
        /// <para>Food Trades Assistants nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Trades Assistants nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("851200")]
        Item851200,
        
        /// <summary>
        /// <para>Pastrycook's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pastrycook\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("851211")]
        Item851211,
        
        /// <summary>
        /// <para>Food Trades Assistants nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Trades Assistants nec")]
        [System.Xml.Serialization.XmlEnumAttribute("851299")]
        Item851299,
        
        /// <summary>
        /// <para>Kitchenhand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kitchenhand")]
        [System.Xml.Serialization.XmlEnumAttribute("851311")]
        Item851311,
        
        /// <summary>
        /// <para>Other Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("890000")]
        Item890000,
        
        /// <summary>
        /// <para>Freight Handlers and Shelf Fillers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight Handlers and Shelf Fillers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("891000")]
        Item891000,
        
        /// <summary>
        /// <para>Freight and Furniture Handlers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight and Furniture Handlers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("891100")]
        Item891100,
        
        /// <summary>
        /// <para>Freight Handler (Rail or Road)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight Handler (Rail or Road)")]
        [System.Xml.Serialization.XmlEnumAttribute("891111")]
        Item891111,
        
        /// <summary>
        /// <para>Truck Driver's Offsider</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Truck Driver\'s Offsider")]
        [System.Xml.Serialization.XmlEnumAttribute("891112")]
        Item891112,
        
        /// <summary>
        /// <para>Waterside Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waterside Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("891113")]
        Item891113,
        
        /// <summary>
        /// <para>Shelf Filler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shelf Filler")]
        [System.Xml.Serialization.XmlEnumAttribute("891211")]
        Item891211,
        
        /// <summary>
        /// <para>Miscellaneous Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Miscellaneous Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("899000")]
        Item899000,
        
        /// <summary>
        /// <para>Caretaker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Caretaker")]
        [System.Xml.Serialization.XmlEnumAttribute("899111")]
        Item899111,
        
        /// <summary>
        /// <para>Deck and Fishing Hands nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deck and Fishing Hands nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("899200")]
        Item899200,
        
        /// <summary>
        /// <para>Deck Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deck Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("899211")]
        Item899211,
        
        /// <summary>
        /// <para>Fishing Hand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fishing Hand")]
        [System.Xml.Serialization.XmlEnumAttribute("899212")]
        Item899212,
        
        /// <summary>
        /// <para>Handyperson</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Handyperson")]
        [System.Xml.Serialization.XmlEnumAttribute("899311")]
        Item899311,
        
        /// <summary>
        /// <para>Motor Vehicle Parts and Accessories Fitters nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts and Accessories Fitters nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("899400")]
        Item899400,
        
        /// <summary>
        /// <para>Motor Vehicle Parts and Accessories Fitter (General)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts and Accessories Fitter (General)")]
        [System.Xml.Serialization.XmlEnumAttribute("899411")]
        Item899411,
        
        /// <summary>
        /// <para>Autoglazier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Autoglazier")]
        [System.Xml.Serialization.XmlEnumAttribute("899412")]
        Item899412,
        
        /// <summary>
        /// <para>Exhaust and Muffler Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Exhaust and Muffler Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("899413")]
        Item899413,
        
        /// <summary>
        /// <para>Radiator Repairer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radiator Repairer")]
        [System.Xml.Serialization.XmlEnumAttribute("899414")]
        Item899414,
        
        /// <summary>
        /// <para>Tyre Fitter</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tyre Fitter")]
        [System.Xml.Serialization.XmlEnumAttribute("899415")]
        Item899415,
        
        /// <summary>
        /// <para>Printing Assistants and Table Workers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Assistants and Table Workers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("899500")]
        Item899500,
        
        /// <summary>
        /// <para>Printer's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printer\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("899511")]
        Item899511,
        
        /// <summary>
        /// <para>Printing Table Worker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Table Worker")]
        [System.Xml.Serialization.XmlEnumAttribute("899512")]
        Item899512,
        
        /// <summary>
        /// <para>Recycling or Rubbish Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recycling or Rubbish Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("899611")]
        Item899611,
        
        /// <summary>
        /// <para>Vending Machine Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vending Machine Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("899711")]
        Item899711,
        
        /// <summary>
        /// <para>Other Miscellaneous Labourers nfd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Miscellaneous Labourers nfd")]
        [System.Xml.Serialization.XmlEnumAttribute("899900")]
        Item899900,
        
        /// <summary>
        /// <para>Bicycle Mechanic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bicycle Mechanic")]
        [System.Xml.Serialization.XmlEnumAttribute("899911")]
        Item899911,
        
        /// <summary>
        /// <para>Car Park Attendant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Park Attendant")]
        [System.Xml.Serialization.XmlEnumAttribute("899912")]
        Item899912,
        
        /// <summary>
        /// <para>Crossing Supervisor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crossing Supervisor")]
        [System.Xml.Serialization.XmlEnumAttribute("899913")]
        Item899913,
        
        /// <summary>
        /// <para>Electrical or Telecommunications Trades Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical or Telecommunications Trades Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("899914")]
        Item899914,
        
        /// <summary>
        /// <para>Leaflet or Newspaper Deliverer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leaflet or Newspaper Deliverer")]
        [System.Xml.Serialization.XmlEnumAttribute("899915")]
        Item899915,
        
        /// <summary>
        /// <para>Mechanic's Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mechanic\'s Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("899916")]
        Item899916,
        
        /// <summary>
        /// <para>Railways Assistant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railways Assistant")]
        [System.Xml.Serialization.XmlEnumAttribute("899917")]
        Item899917,
        
        /// <summary>
        /// <para>Sign Erector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sign Erector")]
        [System.Xml.Serialization.XmlEnumAttribute("899918")]
        Item899918,
        
        /// <summary>
        /// <para>Ticket Collector or Usher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ticket Collector or Usher")]
        [System.Xml.Serialization.XmlEnumAttribute("899921")]
        Item899921,
        
        /// <summary>
        /// <para>Trolley Collector</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trolley Collector")]
        [System.Xml.Serialization.XmlEnumAttribute("899922")]
        Item899922,
        
        /// <summary>
        /// <para>Road Traffic Controller</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Traffic Controller")]
        [System.Xml.Serialization.XmlEnumAttribute("899923")]
        Item899923,
        
        /// <summary>
        /// <para>Labourers nec</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Labourers nec")]
        [System.Xml.Serialization.XmlEnumAttribute("899999")]
        Item899999,
    }
    
    /// <summary>
    /// <para>anzsicIndustryCodeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("anzsicIndustryCodeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("anzsicIndustryCodeList", Namespace="")]
    public enum AnzsicIndustryCodeList
    {
        
        /// <summary>
        /// <para>Agriculture</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agriculture")]
        [System.Xml.Serialization.XmlEnumAttribute("0100")]
        Item0100,
        
        /// <summary>
        /// <para>Nursery and Floriculture Production</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursery and Floriculture Production")]
        [System.Xml.Serialization.XmlEnumAttribute("0110")]
        Item0110,
        
        /// <summary>
        /// <para>Nursery Production (Under Cover)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursery Production (Under Cover)")]
        [System.Xml.Serialization.XmlEnumAttribute("0111")]
        Item0111,
        
        /// <summary>
        /// <para>Nursery Production (Outdoors)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nursery Production (Outdoors)")]
        [System.Xml.Serialization.XmlEnumAttribute("0112")]
        Item0112,
        
        /// <summary>
        /// <para>Turf Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turf Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0113")]
        Item0113,
        
        /// <summary>
        /// <para>Floriculture Production (Under Cover)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floriculture Production (Under Cover)")]
        [System.Xml.Serialization.XmlEnumAttribute("0114")]
        Item0114,
        
        /// <summary>
        /// <para>Floriculture Production (Outdoors)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floriculture Production (Outdoors)")]
        [System.Xml.Serialization.XmlEnumAttribute("0115")]
        Item0115,
        
        /// <summary>
        /// <para>Mushroom and Vegetable Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mushroom and Vegetable Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0120")]
        Item0120,
        
        /// <summary>
        /// <para>Mushroom Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mushroom Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0121")]
        Item0121,
        
        /// <summary>
        /// <para>Vegetable Growing (Under Cover)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Growing (Under Cover)")]
        [System.Xml.Serialization.XmlEnumAttribute("0122")]
        Item0122,
        
        /// <summary>
        /// <para>Vegetable Growing (Outdoors)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vegetable Growing (Outdoors)")]
        [System.Xml.Serialization.XmlEnumAttribute("0123")]
        Item0123,
        
        /// <summary>
        /// <para>Fruit and Tree Nut Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Tree Nut Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0130")]
        Item0130,
        
        /// <summary>
        /// <para>Grape Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grape Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0131")]
        Item0131,
        
        /// <summary>
        /// <para>Kiwifruit Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kiwifruit Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0132")]
        Item0132,
        
        /// <summary>
        /// <para>Berry Fruit Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Berry Fruit Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0133")]
        Item0133,
        
        /// <summary>
        /// <para>Apple and Pear Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Apple and Pear Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0134")]
        Item0134,
        
        /// <summary>
        /// <para>Stone Fruit Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stone Fruit Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0135")]
        Item0135,
        
        /// <summary>
        /// <para>Citrus Fruit Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Citrus Fruit Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0136")]
        Item0136,
        
        /// <summary>
        /// <para>Olive Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Olive Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0137")]
        Item0137,
        
        /// <summary>
        /// <para>Other Fruit and Tree Nut Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Fruit and Tree Nut Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0139")]
        Item0139,
        
        /// <summary>
        /// <para>Sheep, Beef Cattle and Grain Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep, Beef Cattle and Grain Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0140")]
        Item0140,
        
        /// <summary>
        /// <para>Sheep Farming (Specialised)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep Farming (Specialised)")]
        [System.Xml.Serialization.XmlEnumAttribute("0141")]
        Item0141,
        
        /// <summary>
        /// <para>Beef Cattle Farming (Specialised)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beef Cattle Farming (Specialised)")]
        [System.Xml.Serialization.XmlEnumAttribute("0142")]
        Item0142,
        
        /// <summary>
        /// <para>Beef Cattle Feedlots (Specialised)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beef Cattle Feedlots (Specialised)")]
        [System.Xml.Serialization.XmlEnumAttribute("0143")]
        Item0143,
        
        /// <summary>
        /// <para>Sheep-Beef Cattle Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheep-Beef Cattle Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0144")]
        Item0144,
        
        /// <summary>
        /// <para>Grain-Sheep or Grain-Beef Cattle Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain-Sheep or Grain-Beef Cattle Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0145")]
        Item0145,
        
        /// <summary>
        /// <para>Rice Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rice Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0146")]
        Item0146,
        
        /// <summary>
        /// <para>Other Grain Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Grain Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0149")]
        Item0149,
        
        /// <summary>
        /// <para>Other Crop Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Crop Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0150")]
        Item0150,
        
        /// <summary>
        /// <para>Sugar Cane Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar Cane Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0151")]
        Item0151,
        
        /// <summary>
        /// <para>Cotton Growing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cotton Growing")]
        [System.Xml.Serialization.XmlEnumAttribute("0152")]
        Item0152,
        
        /// <summary>
        /// <para>Other Crop Growing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Crop Growing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("0159")]
        Item0159,
        
        /// <summary>
        /// <para>Dairy Cattle Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Cattle Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0160")]
        Item0160,
        
        /// <summary>
        /// <para>Poultry Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0170")]
        Item0170,
        
        /// <summary>
        /// <para>Poultry Farming (Meat)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farming (Meat)")]
        [System.Xml.Serialization.XmlEnumAttribute("0171")]
        Item0171,
        
        /// <summary>
        /// <para>Poultry Farming (Eggs)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Farming (Eggs)")]
        [System.Xml.Serialization.XmlEnumAttribute("0172")]
        Item0172,
        
        /// <summary>
        /// <para>Deer Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deer Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0180")]
        Item0180,
        
        /// <summary>
        /// <para>Other Livestock Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Livestock Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0190")]
        Item0190,
        
        /// <summary>
        /// <para>Horse Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0191")]
        Item0191,
        
        /// <summary>
        /// <para>Pig Farming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pig Farming")]
        [System.Xml.Serialization.XmlEnumAttribute("0192")]
        Item0192,
        
        /// <summary>
        /// <para>Beekeeping</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beekeeping")]
        [System.Xml.Serialization.XmlEnumAttribute("0193")]
        Item0193,
        
        /// <summary>
        /// <para>Other Livestock Farming n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Livestock Farming n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("0199")]
        Item0199,
        
        /// <summary>
        /// <para>Aquaculture</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aquaculture")]
        [System.Xml.Serialization.XmlEnumAttribute("0200")]
        Item0200,
        
        /// <summary>
        /// <para>Offshore Longline and Rack Aquaculture</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offshore Longline and Rack Aquaculture")]
        [System.Xml.Serialization.XmlEnumAttribute("0201")]
        Item0201,
        
        /// <summary>
        /// <para>Offshore Caged Aquaculture</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offshore Caged Aquaculture")]
        [System.Xml.Serialization.XmlEnumAttribute("0202")]
        Item0202,
        
        /// <summary>
        /// <para>Onshore Aquaculture</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Onshore Aquaculture")]
        [System.Xml.Serialization.XmlEnumAttribute("0203")]
        Item0203,
        
        /// <summary>
        /// <para>Forestry and Logging</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry and Logging")]
        [System.Xml.Serialization.XmlEnumAttribute("0300")]
        Item0300,
        
        /// <summary>
        /// <para>Forestry</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry")]
        [System.Xml.Serialization.XmlEnumAttribute("0301")]
        Item0301,
        
        /// <summary>
        /// <para>Logging</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Logging")]
        [System.Xml.Serialization.XmlEnumAttribute("0302")]
        Item0302,
        
        /// <summary>
        /// <para>Fishing, Hunting and Trapping</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fishing, Hunting and Trapping")]
        [System.Xml.Serialization.XmlEnumAttribute("0400")]
        Item0400,
        
        /// <summary>
        /// <para>Fishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fishing")]
        [System.Xml.Serialization.XmlEnumAttribute("0410")]
        Item0410,
        
        /// <summary>
        /// <para>Rock Lobster and Crab Potting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rock Lobster and Crab Potting")]
        [System.Xml.Serialization.XmlEnumAttribute("0411")]
        Item0411,
        
        /// <summary>
        /// <para>Prawn Fishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prawn Fishing")]
        [System.Xml.Serialization.XmlEnumAttribute("0412")]
        Item0412,
        
        /// <summary>
        /// <para>Line Fishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line Fishing")]
        [System.Xml.Serialization.XmlEnumAttribute("0413")]
        Item0413,
        
        /// <summary>
        /// <para>Fish Trawling, Seining and Netting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fish Trawling, Seining and Netting")]
        [System.Xml.Serialization.XmlEnumAttribute("0414")]
        Item0414,
        
        /// <summary>
        /// <para>Other Fishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Fishing")]
        [System.Xml.Serialization.XmlEnumAttribute("0419")]
        Item0419,
        
        /// <summary>
        /// <para>Hunting and Trapping</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hunting and Trapping")]
        [System.Xml.Serialization.XmlEnumAttribute("0420")]
        Item0420,
        
        /// <summary>
        /// <para>Agriculture, Forestry and Fishing Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agriculture, Forestry and Fishing Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("0500")]
        Item0500,
        
        /// <summary>
        /// <para>Forestry Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("0510")]
        Item0510,
        
        /// <summary>
        /// <para>Agriculture and Fishing Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agriculture and Fishing Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("0520")]
        Item0520,
        
        /// <summary>
        /// <para>Cotton Ginning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cotton Ginning")]
        [System.Xml.Serialization.XmlEnumAttribute("0521")]
        Item0521,
        
        /// <summary>
        /// <para>Shearing Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shearing Services")]
        [System.Xml.Serialization.XmlEnumAttribute("0522")]
        Item0522,
        
        /// <summary>
        /// <para>Other Agriculture and Fishing Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Agriculture and Fishing Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("0529")]
        Item0529,
        
        /// <summary>
        /// <para>Coal Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Coal Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0600")]
        Item0600,
        
        /// <summary>
        /// <para>Oil and Gas Extraction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oil and Gas Extraction")]
        [System.Xml.Serialization.XmlEnumAttribute("0700")]
        Item0700,
        
        /// <summary>
        /// <para>Metal Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0800")]
        Item0800,
        
        /// <summary>
        /// <para>Iron Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iron Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0801")]
        Item0801,
        
        /// <summary>
        /// <para>Bauxite Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bauxite Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0802")]
        Item0802,
        
        /// <summary>
        /// <para>Copper Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Copper Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0803")]
        Item0803,
        
        /// <summary>
        /// <para>Gold Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gold Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0804")]
        Item0804,
        
        /// <summary>
        /// <para>Mineral Sand Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mineral Sand Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0805")]
        Item0805,
        
        /// <summary>
        /// <para>Nickel Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nickel Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0806")]
        Item0806,
        
        /// <summary>
        /// <para>Silver-Lead-Zinc Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Silver-Lead-Zinc Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0807")]
        Item0807,
        
        /// <summary>
        /// <para>Other Metal Ore Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Metal Ore Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0809")]
        Item0809,
        
        /// <summary>
        /// <para>Non-Metallic Mineral Mining and Quarrying</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Metallic Mineral Mining and Quarrying")]
        [System.Xml.Serialization.XmlEnumAttribute("0900")]
        Item0900,
        
        /// <summary>
        /// <para>Construction Material Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Material Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0910")]
        Item0910,
        
        /// <summary>
        /// <para>Gravel and Sand Quarrying</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gravel and Sand Quarrying")]
        [System.Xml.Serialization.XmlEnumAttribute("0911")]
        Item0911,
        
        /// <summary>
        /// <para>Other Construction Material Mining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Construction Material Mining")]
        [System.Xml.Serialization.XmlEnumAttribute("0919")]
        Item0919,
        
        /// <summary>
        /// <para>Other Non-Metallic Mineral Mining and Quarrying</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Non-Metallic Mineral Mining and Quarrying")]
        [System.Xml.Serialization.XmlEnumAttribute("0990")]
        Item0990,
        
        /// <summary>
        /// <para>Exploration and Other Mining Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Exploration and Other Mining Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("1000")]
        Item1000,
        
        /// <summary>
        /// <para>Exploration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Exploration")]
        [System.Xml.Serialization.XmlEnumAttribute("1010")]
        Item1010,
        
        /// <summary>
        /// <para>Petroleum Exploration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum Exploration")]
        [System.Xml.Serialization.XmlEnumAttribute("1011")]
        Item1011,
        
        /// <summary>
        /// <para>Mineral Exploration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mineral Exploration")]
        [System.Xml.Serialization.XmlEnumAttribute("1012")]
        Item1012,
        
        /// <summary>
        /// <para>Other Mining Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Mining Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("1090")]
        Item1090,
        
        /// <summary>
        /// <para>Food Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1100")]
        Item1100,
        
        /// <summary>
        /// <para>Meat and Meat Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat and Meat Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1110")]
        Item1110,
        
        /// <summary>
        /// <para>Meat Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("1111")]
        Item1111,
        
        /// <summary>
        /// <para>Poultry Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Poultry Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("1112")]
        Item1112,
        
        /// <summary>
        /// <para>Cured Meat and Smallgoods Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cured Meat and Smallgoods Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1113")]
        Item1113,
        
        /// <summary>
        /// <para>Seafood Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seafood Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("1120")]
        Item1120,
        
        /// <summary>
        /// <para>Dairy Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1130")]
        Item1130,
        
        /// <summary>
        /// <para>Milk and Cream Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Milk and Cream Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("1131")]
        Item1131,
        
        /// <summary>
        /// <para>Ice Cream Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ice Cream Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1132")]
        Item1132,
        
        /// <summary>
        /// <para>Cheese and Other Dairy Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cheese and Other Dairy Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1133")]
        Item1133,
        
        /// <summary>
        /// <para>Fruit and Vegetable Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("1140")]
        Item1140,
        
        /// <summary>
        /// <para>Oil and Fat Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Oil and Fat Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1150")]
        Item1150,
        
        /// <summary>
        /// <para>Grain Mill and Cereal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain Mill and Cereal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1160")]
        Item1160,
        
        /// <summary>
        /// <para>Grain Mill Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain Mill Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1161")]
        Item1161,
        
        /// <summary>
        /// <para>Cereal, Pasta and Baking Mix Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cereal, Pasta and Baking Mix Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1162")]
        Item1162,
        
        /// <summary>
        /// <para>Bakery Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bakery Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1170")]
        Item1170,
        
        /// <summary>
        /// <para>Bread Manufacturing (Factory based)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bread Manufacturing (Factory based)")]
        [System.Xml.Serialization.XmlEnumAttribute("1171")]
        Item1171,
        
        /// <summary>
        /// <para>Cake and Pastry Manufacturing (Factory based)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cake and Pastry Manufacturing (Factory based)")]
        [System.Xml.Serialization.XmlEnumAttribute("1172")]
        Item1172,
        
        /// <summary>
        /// <para>Biscuit Manufacturing (Factory based)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Biscuit Manufacturing (Factory based)")]
        [System.Xml.Serialization.XmlEnumAttribute("1173")]
        Item1173,
        
        /// <summary>
        /// <para>Bakery Product Manufacturing (Non-factory based)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bakery Product Manufacturing (Non-factory based)")]
        [System.Xml.Serialization.XmlEnumAttribute("1174")]
        Item1174,
        
        /// <summary>
        /// <para>Sugar and Confectionery Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar and Confectionery Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1180")]
        Item1180,
        
        /// <summary>
        /// <para>Sugar Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sugar Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1181")]
        Item1181,
        
        /// <summary>
        /// <para>Confectionery Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Confectionery Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1182")]
        Item1182,
        
        /// <summary>
        /// <para>Other Food Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Food Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1190")]
        Item1190,
        
        /// <summary>
        /// <para>Potato, Corn and Other Crisp Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Potato, Corn and Other Crisp Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1191")]
        Item1191,
        
        /// <summary>
        /// <para>Prepared Animal and Bird Feed Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prepared Animal and Bird Feed Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1192")]
        Item1192,
        
        /// <summary>
        /// <para>Other Food Product Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Food Product Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("1199")]
        Item1199,
        
        /// <summary>
        /// <para>Beverage and Tobacco Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beverage and Tobacco Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1200")]
        Item1200,
        
        /// <summary>
        /// <para>Beverage Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beverage Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1210")]
        Item1210,
        
        /// <summary>
        /// <para>Soft Drink, Cordial and Syrup Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Soft Drink, Cordial and Syrup Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1211")]
        Item1211,
        
        /// <summary>
        /// <para>Beer Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beer Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1212")]
        Item1212,
        
        /// <summary>
        /// <para>Spirit Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spirit Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1213")]
        Item1213,
        
        /// <summary>
        /// <para>Wine and Other Alcoholic Beverage Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wine and Other Alcoholic Beverage Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1214")]
        Item1214,
        
        /// <summary>
        /// <para>Cigarette and Tobacco Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cigarette and Tobacco Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1220")]
        Item1220,
        
        /// <summary>
        /// <para>Textile, Leather, Clothing and Footwear Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile, Leather, Clothing and Footwear Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1300")]
        Item1300,
        
        /// <summary>
        /// <para>Textile Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1310")]
        Item1310,
        
        /// <summary>
        /// <para>Wool Scouring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Scouring")]
        [System.Xml.Serialization.XmlEnumAttribute("1311")]
        Item1311,
        
        /// <summary>
        /// <para>Natural Textile Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural Textile Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1312")]
        Item1312,
        
        /// <summary>
        /// <para>Synthetic Textile Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Synthetic Textile Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1313")]
        Item1313,
        
        /// <summary>
        /// <para>Leather Tanning, Fur Dressing and Leather Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leather Tanning, Fur Dressing and Leather Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1320")]
        Item1320,
        
        /// <summary>
        /// <para>Textile Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1330")]
        Item1330,
        
        /// <summary>
        /// <para>Textile Floor Covering Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Floor Covering Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1331")]
        Item1331,
        
        /// <summary>
        /// <para>Rope, Cordage and Twine Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rope, Cordage and Twine Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1332")]
        Item1332,
        
        /// <summary>
        /// <para>Cut and Sewn Textile Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cut and Sewn Textile Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1333")]
        Item1333,
        
        /// <summary>
        /// <para>Textile Finishing and Other Textile Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Finishing and Other Textile Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1334")]
        Item1334,
        
        /// <summary>
        /// <para>Knitted Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Knitted Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1340")]
        Item1340,
        
        /// <summary>
        /// <para>Clothing and Footwear Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing and Footwear Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1350")]
        Item1350,
        
        /// <summary>
        /// <para>Clothing Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1351")]
        Item1351,
        
        /// <summary>
        /// <para>Footwear Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1352")]
        Item1352,
        
        /// <summary>
        /// <para>Wood Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1400")]
        Item1400,
        
        /// <summary>
        /// <para>Log Sawmilling and Timber Dressing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Log Sawmilling and Timber Dressing")]
        [System.Xml.Serialization.XmlEnumAttribute("1410")]
        Item1410,
        
        /// <summary>
        /// <para>Log Sawmilling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Log Sawmilling")]
        [System.Xml.Serialization.XmlEnumAttribute("1411")]
        Item1411,
        
        /// <summary>
        /// <para>Wood Chipping</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Chipping")]
        [System.Xml.Serialization.XmlEnumAttribute("1412")]
        Item1412,
        
        /// <summary>
        /// <para>Timber Resawing and Dressing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timber Resawing and Dressing")]
        [System.Xml.Serialization.XmlEnumAttribute("1413")]
        Item1413,
        
        /// <summary>
        /// <para>Other Wood Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Wood Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1490")]
        Item1490,
        
        /// <summary>
        /// <para>Prefabricated Wooden Building Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prefabricated Wooden Building Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1491")]
        Item1491,
        
        /// <summary>
        /// <para>Wooden Structural Fitting and Component Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wooden Structural Fitting and Component Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1492")]
        Item1492,
        
        /// <summary>
        /// <para>Veneer and Plywood Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veneer and Plywood Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1493")]
        Item1493,
        
        /// <summary>
        /// <para>Reconstituted Wood Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reconstituted Wood Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1494")]
        Item1494,
        
        /// <summary>
        /// <para>Other Wood Product Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Wood Product Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("1499")]
        Item1499,
        
        /// <summary>
        /// <para>Pulp, Paper and Converted Paper Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pulp, Paper and Converted Paper Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1500")]
        Item1500,
        
        /// <summary>
        /// <para>Pulp, Paper and Paperboard Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pulp, Paper and Paperboard Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1510")]
        Item1510,
        
        /// <summary>
        /// <para>Converted Paper Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Converted Paper Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1520")]
        Item1520,
        
        /// <summary>
        /// <para>Corrugated Paperboard and Paperboard Container Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corrugated Paperboard and Paperboard Container Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1521")]
        Item1521,
        
        /// <summary>
        /// <para>Paper Bag Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Bag Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1522")]
        Item1522,
        
        /// <summary>
        /// <para>Paper Stationery Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Stationery Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1523")]
        Item1523,
        
        /// <summary>
        /// <para>Sanitary Paper Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sanitary Paper Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1524")]
        Item1524,
        
        /// <summary>
        /// <para>Other Converted Paper Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Converted Paper Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1529")]
        Item1529,
        
        /// <summary>
        /// <para>Printing (including the Reproduction of Recorded Media)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing (including the Reproduction of Recorded Media)")]
        [System.Xml.Serialization.XmlEnumAttribute("1600")]
        Item1600,
        
        /// <summary>
        /// <para>Printing and Printing Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing and Printing Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("1610")]
        Item1610,
        
        /// <summary>
        /// <para>Printing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing")]
        [System.Xml.Serialization.XmlEnumAttribute("1611")]
        Item1611,
        
        /// <summary>
        /// <para>Printing Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("1612")]
        Item1612,
        
        /// <summary>
        /// <para>Reproduction of Recorded Media</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reproduction of Recorded Media")]
        [System.Xml.Serialization.XmlEnumAttribute("1620")]
        Item1620,
        
        /// <summary>
        /// <para>Petroleum and Coal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum and Coal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1700")]
        Item1700,
        
        /// <summary>
        /// <para>Petroleum Refining and Petroleum Fuel Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum Refining and Petroleum Fuel Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1701")]
        Item1701,
        
        /// <summary>
        /// <para>Other Petroleum and Coal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Petroleum and Coal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1709")]
        Item1709,
        
        /// <summary>
        /// <para>Basic Chemical and Chemical Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Chemical and Chemical Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1800")]
        Item1800,
        
        /// <summary>
        /// <para>Basic Chemical Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Chemical Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1810")]
        Item1810,
        
        /// <summary>
        /// <para>Industrial Gas Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial Gas Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1811")]
        Item1811,
        
        /// <summary>
        /// <para>Basic Organic Chemical Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Organic Chemical Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1812")]
        Item1812,
        
        /// <summary>
        /// <para>Basic Inorganic Chemical Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Inorganic Chemical Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1813")]
        Item1813,
        
        /// <summary>
        /// <para>Basic Polymer Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Polymer Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1820")]
        Item1820,
        
        /// <summary>
        /// <para>Synthetic Resin and Synthetic Rubber Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Synthetic Resin and Synthetic Rubber Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1821")]
        Item1821,
        
        /// <summary>
        /// <para>Other Basic Polymer Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Basic Polymer Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1829")]
        Item1829,
        
        /// <summary>
        /// <para>Fertiliser and Pesticide Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fertiliser and Pesticide Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1830")]
        Item1830,
        
        /// <summary>
        /// <para>Fertiliser Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fertiliser Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1831")]
        Item1831,
        
        /// <summary>
        /// <para>Pesticide Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pesticide Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1832")]
        Item1832,
        
        /// <summary>
        /// <para>Pharmaceutical and Medicinal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmaceutical and Medicinal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1840")]
        Item1840,
        
        /// <summary>
        /// <para>Human Pharmaceutical and Medicinal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Human Pharmaceutical and Medicinal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1841")]
        Item1841,
        
        /// <summary>
        /// <para>Veterinary Pharmaceutical and Medicinal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinary Pharmaceutical and Medicinal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1842")]
        Item1842,
        
        /// <summary>
        /// <para>Cleaning Compound and Toiletry Preparation Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaning Compound and Toiletry Preparation Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1850")]
        Item1850,
        
        /// <summary>
        /// <para>Cleaning Compound Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaning Compound Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1851")]
        Item1851,
        
        /// <summary>
        /// <para>Cosmetic and Toiletry Preparation Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cosmetic and Toiletry Preparation Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1852")]
        Item1852,
        
        /// <summary>
        /// <para>Other Basic Chemical Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Basic Chemical Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1890")]
        Item1890,
        
        /// <summary>
        /// <para>Photographic Chemical Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic Chemical Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1891")]
        Item1891,
        
        /// <summary>
        /// <para>Explosive Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Explosive Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1892")]
        Item1892,
        
        /// <summary>
        /// <para>Other Basic Chemical Product Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Basic Chemical Product Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("1899")]
        Item1899,
        
        /// <summary>
        /// <para>Polymer Product and Rubber Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Polymer Product and Rubber Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1900")]
        Item1900,
        
        /// <summary>
        /// <para>Polymer Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Polymer Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1910")]
        Item1910,
        
        /// <summary>
        /// <para>Polymer Film and Sheet Packaging Material Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Polymer Film and Sheet Packaging Material Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1911")]
        Item1911,
        
        /// <summary>
        /// <para>Rigid and Semi-Rigid Polymer Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rigid and Semi-Rigid Polymer Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1912")]
        Item1912,
        
        /// <summary>
        /// <para>Polymer Foam Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Polymer Foam Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1913")]
        Item1913,
        
        /// <summary>
        /// <para>Tyre Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tyre Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1914")]
        Item1914,
        
        /// <summary>
        /// <para>Adhesive Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adhesive Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1915")]
        Item1915,
        
        /// <summary>
        /// <para>Paint and Coatings Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paint and Coatings Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1916")]
        Item1916,
        
        /// <summary>
        /// <para>Other Polymer Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Polymer Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1919")]
        Item1919,
        
        /// <summary>
        /// <para>Natural Rubber Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Natural Rubber Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("1920")]
        Item1920,
        
        /// <summary>
        /// <para>Non-Metallic Mineral Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Metallic Mineral Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2000")]
        Item2000,
        
        /// <summary>
        /// <para>Glass and Glass Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glass and Glass Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2010")]
        Item2010,
        
        /// <summary>
        /// <para>Ceramic Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ceramic Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2020")]
        Item2020,
        
        /// <summary>
        /// <para>Clay Brick Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clay Brick Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2021")]
        Item2021,
        
        /// <summary>
        /// <para>Other Ceramic Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Ceramic Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2029")]
        Item2029,
        
        /// <summary>
        /// <para>Cement, Lime, Plaster and Concrete Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement, Lime, Plaster and Concrete Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2030")]
        Item2030,
        
        /// <summary>
        /// <para>Cement and Lime Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cement and Lime Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2031")]
        Item2031,
        
        /// <summary>
        /// <para>Plaster Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plaster Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2032")]
        Item2032,
        
        /// <summary>
        /// <para>Ready-Mixed Concrete Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ready-Mixed Concrete Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2033")]
        Item2033,
        
        /// <summary>
        /// <para>Concrete Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2034")]
        Item2034,
        
        /// <summary>
        /// <para>Other Non-Metallic Mineral Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Non-Metallic Mineral Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2090")]
        Item2090,
        
        /// <summary>
        /// <para>Primary Metal and Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Metal and Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2100")]
        Item2100,
        
        /// <summary>
        /// <para>Iron Smelting and Steel Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iron Smelting and Steel Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2110")]
        Item2110,
        
        /// <summary>
        /// <para>Basic Ferrous Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Ferrous Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2120")]
        Item2120,
        
        /// <summary>
        /// <para>Iron and Steel Casting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iron and Steel Casting")]
        [System.Xml.Serialization.XmlEnumAttribute("2121")]
        Item2121,
        
        /// <summary>
        /// <para>Steel Pipe and Tube Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Steel Pipe and Tube Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2122")]
        Item2122,
        
        /// <summary>
        /// <para>Basic Non-Ferrous Metal Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Non-Ferrous Metal Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2130")]
        Item2130,
        
        /// <summary>
        /// <para>Alumina Production</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alumina Production")]
        [System.Xml.Serialization.XmlEnumAttribute("2131")]
        Item2131,
        
        /// <summary>
        /// <para>Aluminium Smelting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aluminium Smelting")]
        [System.Xml.Serialization.XmlEnumAttribute("2132")]
        Item2132,
        
        /// <summary>
        /// <para>Copper, Silver, Lead and Zinc Smelting and Refining</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Copper, Silver, Lead and Zinc Smelting and Refining")]
        [System.Xml.Serialization.XmlEnumAttribute("2133")]
        Item2133,
        
        /// <summary>
        /// <para>Other Basic Non-Ferrous Metal Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Basic Non-Ferrous Metal Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2139")]
        Item2139,
        
        /// <summary>
        /// <para>Basic Non-Ferrous Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Non-Ferrous Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2140")]
        Item2140,
        
        /// <summary>
        /// <para>Non-Ferrous Metal Casting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Ferrous Metal Casting")]
        [System.Xml.Serialization.XmlEnumAttribute("2141")]
        Item2141,
        
        /// <summary>
        /// <para>Aluminium Rolling, Drawing, Extruding</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aluminium Rolling, Drawing, Extruding")]
        [System.Xml.Serialization.XmlEnumAttribute("2142")]
        Item2142,
        
        /// <summary>
        /// <para>Other Basic Non-Ferrous Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Basic Non-Ferrous Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2149")]
        Item2149,
        
        /// <summary>
        /// <para>Fabricated Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fabricated Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2200")]
        Item2200,
        
        /// <summary>
        /// <para>Iron and Steel Forging</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iron and Steel Forging")]
        [System.Xml.Serialization.XmlEnumAttribute("2210")]
        Item2210,
        
        /// <summary>
        /// <para>Structural Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2220")]
        Item2220,
        
        /// <summary>
        /// <para>Structural Steel Fabricating</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel Fabricating")]
        [System.Xml.Serialization.XmlEnumAttribute("2221")]
        Item2221,
        
        /// <summary>
        /// <para>Prefabricated Metal Building Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prefabricated Metal Building Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2222")]
        Item2222,
        
        /// <summary>
        /// <para>Architectural Aluminium Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural Aluminium Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2223")]
        Item2223,
        
        /// <summary>
        /// <para>Metal Roof and Guttering Manufacturing (except Aluminium)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Roof and Guttering Manufacturing (except Aluminium)")]
        [System.Xml.Serialization.XmlEnumAttribute("2224")]
        Item2224,
        
        /// <summary>
        /// <para>Other Structural Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Structural Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2229")]
        Item2229,
        
        /// <summary>
        /// <para>Metal Container Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Container Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2230")]
        Item2230,
        
        /// <summary>
        /// <para>Boiler, Tank and Other Heavy Gauge Metal Container Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boiler, Tank and Other Heavy Gauge Metal Container Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2231")]
        Item2231,
        
        /// <summary>
        /// <para>Other Metal Container Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Metal Container Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2239")]
        Item2239,
        
        /// <summary>
        /// <para>Sheet Metal Product Manufacturing (except Metal Structural and Container</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sheet Metal Product Manufacturing (except Metal Structural and Container")]
        [System.Xml.Serialization.XmlEnumAttribute("2240")]
        Item2240,
        
        /// <summary>
        /// <para>Other Fabricated Metal Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Fabricated Metal Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2290")]
        Item2290,
        
        /// <summary>
        /// <para>Spring and Wire Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spring and Wire Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2291")]
        Item2291,
        
        /// <summary>
        /// <para>Nut, Bolt, Screw and Rivet Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nut, Bolt, Screw and Rivet Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2292")]
        Item2292,
        
        /// <summary>
        /// <para>Metal Coating and Finishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Coating and Finishing")]
        [System.Xml.Serialization.XmlEnumAttribute("2293")]
        Item2293,
        
        /// <summary>
        /// <para>Other Fabricated Metal Product Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Fabricated Metal Product Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("2299")]
        Item2299,
        
        /// <summary>
        /// <para>Transport Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2300")]
        Item2300,
        
        /// <summary>
        /// <para>Motor Vehicle and Motor Vehicle Part Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Motor Vehicle Part Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2310")]
        Item2310,
        
        /// <summary>
        /// <para>Motor Vehicle Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2311")]
        Item2311,
        
        /// <summary>
        /// <para>Motor Vehicle Body and Trailer Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Body and Trailer Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2312")]
        Item2312,
        
        /// <summary>
        /// <para>Automotive Electrical Component Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Electrical Component Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2313")]
        Item2313,
        
        /// <summary>
        /// <para>Other Motor Vehicle Parts Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Motor Vehicle Parts Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2319")]
        Item2319,
        
        /// <summary>
        /// <para>Other Transport Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2390")]
        Item2390,
        
        /// <summary>
        /// <para>Shipbuilding and Repair Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shipbuilding and Repair Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2391")]
        Item2391,
        
        /// <summary>
        /// <para>Boatbuilding and Repair Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boatbuilding and Repair Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2392")]
        Item2392,
        
        /// <summary>
        /// <para>Railway Rolling Stock Manufacturing and Repair Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Railway Rolling Stock Manufacturing and Repair Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2393")]
        Item2393,
        
        /// <summary>
        /// <para>Aircraft Manufacturing and Repair Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft Manufacturing and Repair Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2394")]
        Item2394,
        
        /// <summary>
        /// <para>Other Transport Equipment Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport Equipment Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("2399")]
        Item2399,
        
        /// <summary>
        /// <para>Machinery and Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machinery and Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2400")]
        Item2400,
        
        /// <summary>
        /// <para>Professional and Scientific Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professional and Scientific Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2410")]
        Item2410,
        
        /// <summary>
        /// <para>Photographic, Optical and Ophthalmic Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic, Optical and Ophthalmic Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2411")]
        Item2411,
        
        /// <summary>
        /// <para>Medical and Surgical Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical and Surgical Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2412")]
        Item2412,
        
        /// <summary>
        /// <para>Other Professional and Scientific Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Professional and Scientific Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2419")]
        Item2419,
        
        /// <summary>
        /// <para>Computer and Electronic Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer and Electronic Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2420")]
        Item2420,
        
        /// <summary>
        /// <para>Computer and Electronic Office Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer and Electronic Office Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2421")]
        Item2421,
        
        /// <summary>
        /// <para>Communication Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Communication Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2422")]
        Item2422,
        
        /// <summary>
        /// <para>Other Electronic Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Electronic Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2429")]
        Item2429,
        
        /// <summary>
        /// <para>Electrical Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2430")]
        Item2430,
        
        /// <summary>
        /// <para>Electric Cable and Wire Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electric Cable and Wire Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2431")]
        Item2431,
        
        /// <summary>
        /// <para>Electric Lighting Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electric Lighting Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2432")]
        Item2432,
        
        /// <summary>
        /// <para>Other Electrical Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Electrical Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2439")]
        Item2439,
        
        /// <summary>
        /// <para>Domestic Appliance Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Appliance Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2440")]
        Item2440,
        
        /// <summary>
        /// <para>Whiteware Appliance Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whiteware Appliance Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2441")]
        Item2441,
        
        /// <summary>
        /// <para>Other Domestic Appliance Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Domestic Appliance Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2449")]
        Item2449,
        
        /// <summary>
        /// <para>Pump, Compressor, Heating and Ventilation Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pump, Compressor, Heating and Ventilation Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2450")]
        Item2450,
        
        /// <summary>
        /// <para>Pump and Compressor Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pump and Compressor Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2451")]
        Item2451,
        
        /// <summary>
        /// <para>Fixed Space Heating, Cooling and Ventilation Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed Space Heating, Cooling and Ventilation Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2452")]
        Item2452,
        
        /// <summary>
        /// <para>Specialised Machinery and Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialised Machinery and Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2460")]
        Item2460,
        
        /// <summary>
        /// <para>Agricultural Machinery and Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Machinery and Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2461")]
        Item2461,
        
        /// <summary>
        /// <para>Mining and Construction Machinery Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mining and Construction Machinery Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2462")]
        Item2462,
        
        /// <summary>
        /// <para>Machine Tool and Parts Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machine Tool and Parts Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2463")]
        Item2463,
        
        /// <summary>
        /// <para>Other Specialised Machinery and Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Specialised Machinery and Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2469")]
        Item2469,
        
        /// <summary>
        /// <para>Other Machinery and Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machinery and Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2490")]
        Item2490,
        
        /// <summary>
        /// <para>Lifting and Material Handling Equipment Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lifting and Material Handling Equipment Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2491")]
        Item2491,
        
        /// <summary>
        /// <para>Other Machinery and Equipment Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machinery and Equipment Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("2499")]
        Item2499,
        
        /// <summary>
        /// <para>Furniture and Other Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture and Other Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2500")]
        Item2500,
        
        /// <summary>
        /// <para>Furniture Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2510")]
        Item2510,
        
        /// <summary>
        /// <para>Wooden Furniture and Upholstered Seat Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wooden Furniture and Upholstered Seat Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2511")]
        Item2511,
        
        /// <summary>
        /// <para>Metal Furniture Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal Furniture Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2512")]
        Item2512,
        
        /// <summary>
        /// <para>Mattress Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mattress Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2513")]
        Item2513,
        
        /// <summary>
        /// <para>Other Furniture Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Furniture Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2519")]
        Item2519,
        
        /// <summary>
        /// <para>Other Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2590")]
        Item2590,
        
        /// <summary>
        /// <para>Jewellery and Silverware Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jewellery and Silverware Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2591")]
        Item2591,
        
        /// <summary>
        /// <para>Toy, Sporting and Recreational Product Manufacturing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toy, Sporting and Recreational Product Manufacturing")]
        [System.Xml.Serialization.XmlEnumAttribute("2592")]
        Item2592,
        
        /// <summary>
        /// <para>Other Manufacturing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Manufacturing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("2599")]
        Item2599,
        
        /// <summary>
        /// <para>Electricity Supply</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Supply")]
        [System.Xml.Serialization.XmlEnumAttribute("2600")]
        Item2600,
        
        /// <summary>
        /// <para>Electricity Generation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Generation")]
        [System.Xml.Serialization.XmlEnumAttribute("2610")]
        Item2610,
        
        /// <summary>
        /// <para>Fossil Fuel Electricity Generation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fossil Fuel Electricity Generation")]
        [System.Xml.Serialization.XmlEnumAttribute("2611")]
        Item2611,
        
        /// <summary>
        /// <para>Hydro-Electricity Generation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hydro-Electricity Generation")]
        [System.Xml.Serialization.XmlEnumAttribute("2612")]
        Item2612,
        
        /// <summary>
        /// <para>Other Electricity Generation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Electricity Generation")]
        [System.Xml.Serialization.XmlEnumAttribute("2619")]
        Item2619,
        
        /// <summary>
        /// <para>Electricity Transmission</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Transmission")]
        [System.Xml.Serialization.XmlEnumAttribute("2620")]
        Item2620,
        
        /// <summary>
        /// <para>Electricity Distribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Distribution")]
        [System.Xml.Serialization.XmlEnumAttribute("2630")]
        Item2630,
        
        /// <summary>
        /// <para>On Selling Electricity and Electricity Market Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Selling Electricity and Electricity Market Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("2640")]
        Item2640,
        
        /// <summary>
        /// <para>Gas Supply</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gas Supply")]
        [System.Xml.Serialization.XmlEnumAttribute("2700")]
        Item2700,
        
        /// <summary>
        /// <para>Water Supply, Sewerage and Drainage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Supply, Sewerage and Drainage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2800")]
        Item2800,
        
        /// <summary>
        /// <para>Water Supply, Sewerage and Drainage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Supply, Sewerage and Drainage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2810")]
        Item2810,
        
        /// <summary>
        /// <para>Water Supply</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Supply")]
        [System.Xml.Serialization.XmlEnumAttribute("2811")]
        Item2811,
        
        /// <summary>
        /// <para>Sewerage and Drainage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sewerage and Drainage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2812")]
        Item2812,
        
        /// <summary>
        /// <para>Waste Collection, Treatment and Disposal Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Collection, Treatment and Disposal Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2900")]
        Item2900,
        
        /// <summary>
        /// <para>Waste Collection Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Collection Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2910")]
        Item2910,
        
        /// <summary>
        /// <para>Solid Waste Collection Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solid Waste Collection Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2911")]
        Item2911,
        
        /// <summary>
        /// <para>Other Waste Collection Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Waste Collection Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2919")]
        Item2919,
        
        /// <summary>
        /// <para>Waste Treatment, Disposal and Remediation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Treatment, Disposal and Remediation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2920")]
        Item2920,
        
        /// <summary>
        /// <para>Waste Treatment and Disposal Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Treatment and Disposal Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2921")]
        Item2921,
        
        /// <summary>
        /// <para>Waste Remediation and Materials Recovery Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Remediation and Materials Recovery Services")]
        [System.Xml.Serialization.XmlEnumAttribute("2922")]
        Item2922,
        
        /// <summary>
        /// <para>Building Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3000")]
        Item3000,
        
        /// <summary>
        /// <para>Residential Building Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Residential Building Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3010")]
        Item3010,
        
        /// <summary>
        /// <para>House Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("House Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3011")]
        Item3011,
        
        /// <summary>
        /// <para>Other Residential Building Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Residential Building Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3019")]
        Item3019,
        
        /// <summary>
        /// <para>Non-Residential Building Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Residential Building Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3020")]
        Item3020,
        
        /// <summary>
        /// <para>Heavy and Civil Engineering Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heavy and Civil Engineering Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3100")]
        Item3100,
        
        /// <summary>
        /// <para>Road and Bridge Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road and Bridge Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3101")]
        Item3101,
        
        /// <summary>
        /// <para>Other Heavy and Civil Engineering Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Heavy and Civil Engineering Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("3109")]
        Item3109,
        
        /// <summary>
        /// <para>Construction Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Construction Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3200")]
        Item3200,
        
        /// <summary>
        /// <para>Land Development and Site Preparation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land Development and Site Preparation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3210")]
        Item3210,
        
        /// <summary>
        /// <para>Land Development and Subdivision</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land Development and Subdivision")]
        [System.Xml.Serialization.XmlEnumAttribute("3211")]
        Item3211,
        
        /// <summary>
        /// <para>Site Preparation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Site Preparation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3212")]
        Item3212,
        
        /// <summary>
        /// <para>Building Structure Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Structure Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3220")]
        Item3220,
        
        /// <summary>
        /// <para>Concreting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concreting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3221")]
        Item3221,
        
        /// <summary>
        /// <para>Bricklaying Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bricklaying Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3222")]
        Item3222,
        
        /// <summary>
        /// <para>Roofing Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roofing Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3223")]
        Item3223,
        
        /// <summary>
        /// <para>Structural Steel Erection Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Structural Steel Erection Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3224")]
        Item3224,
        
        /// <summary>
        /// <para>Building Installation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Installation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3230")]
        Item3230,
        
        /// <summary>
        /// <para>Plumbing Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbing Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3231")]
        Item3231,
        
        /// <summary>
        /// <para>Electrical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3232")]
        Item3232,
        
        /// <summary>
        /// <para>Air Conditioning and Heating Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Conditioning and Heating Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3233")]
        Item3233,
        
        /// <summary>
        /// <para>Fire and Security Alarm Installation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire and Security Alarm Installation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3234")]
        Item3234,
        
        /// <summary>
        /// <para>Other Building Installation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Building Installation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3239")]
        Item3239,
        
        /// <summary>
        /// <para>Building Completion Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Completion Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3240")]
        Item3240,
        
        /// <summary>
        /// <para>Plastering and Ceiling Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plastering and Ceiling Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3241")]
        Item3241,
        
        /// <summary>
        /// <para>Carpentry Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carpentry Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3242")]
        Item3242,
        
        /// <summary>
        /// <para>Tiling and Carpeting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tiling and Carpeting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3243")]
        Item3243,
        
        /// <summary>
        /// <para>Painting and Decorating Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Painting and Decorating Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3244")]
        Item3244,
        
        /// <summary>
        /// <para>Glazing Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Glazing Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3245")]
        Item3245,
        
        /// <summary>
        /// <para>Other Construction Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Construction Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3290")]
        Item3290,
        
        /// <summary>
        /// <para>Landscape Construction Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landscape Construction Services")]
        [System.Xml.Serialization.XmlEnumAttribute("3291")]
        Item3291,
        
        /// <summary>
        /// <para>Hire of Construction Machinery with Operator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hire of Construction Machinery with Operator")]
        [System.Xml.Serialization.XmlEnumAttribute("3292")]
        Item3292,
        
        /// <summary>
        /// <para>Other Construction Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Construction Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("3299")]
        Item3299,
        
        /// <summary>
        /// <para>Basic Material Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Material Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3300")]
        Item3300,
        
        /// <summary>
        /// <para>Agricultural Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3310")]
        Item3310,
        
        /// <summary>
        /// <para>Wool Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wool Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3311")]
        Item3311,
        
        /// <summary>
        /// <para>Cereal Grain Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cereal Grain Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3312")]
        Item3312,
        
        /// <summary>
        /// <para>Other Agricultural Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Agricultural Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3319")]
        Item3319,
        
        /// <summary>
        /// <para>Mineral, Metal and Chemical Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mineral, Metal and Chemical Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3320")]
        Item3320,
        
        /// <summary>
        /// <para>Petroleum Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Petroleum Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3321")]
        Item3321,
        
        /// <summary>
        /// <para>Metal and Mineral Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Metal and Mineral Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3322")]
        Item3322,
        
        /// <summary>
        /// <para>Industrial and Agricultural Chemical Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Industrial and Agricultural Chemical Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3323")]
        Item3323,
        
        /// <summary>
        /// <para>Timber and Hardware Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timber and Hardware Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3330")]
        Item3330,
        
        /// <summary>
        /// <para>Timber Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Timber Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3331")]
        Item3331,
        
        /// <summary>
        /// <para>Plumbing Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plumbing Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3332")]
        Item3332,
        
        /// <summary>
        /// <para>Other Hardware Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Hardware Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3339")]
        Item3339,
        
        /// <summary>
        /// <para>Machinery and Equipment Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machinery and Equipment Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3400")]
        Item3400,
        
        /// <summary>
        /// <para>Specialised Industrial Machinery and Equipment Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialised Industrial Machinery and Equipment Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3410")]
        Item3410,
        
        /// <summary>
        /// <para>Agricultural and Construction Machinery Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural and Construction Machinery Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3411")]
        Item3411,
        
        /// <summary>
        /// <para>Other Specialised Industrial Machinery and Equipment Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Specialised Industrial Machinery and Equipment Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3419")]
        Item3419,
        
        /// <summary>
        /// <para>Other Machinery and Equipment Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machinery and Equipment Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3490")]
        Item3490,
        
        /// <summary>
        /// <para>Professional and Scientific Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professional and Scientific Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3491")]
        Item3491,
        
        /// <summary>
        /// <para>Computer and Computer Peripheral Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer and Computer Peripheral Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3492")]
        Item3492,
        
        /// <summary>
        /// <para>Telecommunication Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunication Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3493")]
        Item3493,
        
        /// <summary>
        /// <para>Other Electrical and Electronic Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Electrical and Electronic Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3494")]
        Item3494,
        
        /// <summary>
        /// <para>Other Machinery and Equipment Wholesaling n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machinery and Equipment Wholesaling n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("3499")]
        Item3499,
        
        /// <summary>
        /// <para>Motor Vehicle and Motor Vehicle Parts Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Motor Vehicle Parts Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3500")]
        Item3500,
        
        /// <summary>
        /// <para>Car Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3501")]
        Item3501,
        
        /// <summary>
        /// <para>Commercial Vehicle Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial Vehicle Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3502")]
        Item3502,
        
        /// <summary>
        /// <para>Trailer and Other Motor Vehicle Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trailer and Other Motor Vehicle Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3503")]
        Item3503,
        
        /// <summary>
        /// <para>Motor Vehicle New Parts Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle New Parts Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3504")]
        Item3504,
        
        /// <summary>
        /// <para>Motor Vehicle Dismantling and Used Parts Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Dismantling and Used Parts Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3505")]
        Item3505,
        
        /// <summary>
        /// <para>Grocery, Liquor and Tobacco Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grocery, Liquor and Tobacco Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3600")]
        Item3600,
        
        /// <summary>
        /// <para>General Line Grocery Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Line Grocery Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3601")]
        Item3601,
        
        /// <summary>
        /// <para>Meat, Poultry and Smallgoods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Meat, Poultry and Smallgoods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3602")]
        Item3602,
        
        /// <summary>
        /// <para>Dairy Produce Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dairy Produce Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3603")]
        Item3603,
        
        /// <summary>
        /// <para>Fish and Seafood Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fish and Seafood Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3604")]
        Item3604,
        
        /// <summary>
        /// <para>Fruit and Vegetable Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3605")]
        Item3605,
        
        /// <summary>
        /// <para>Liquor and Tobacco Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liquor and Tobacco Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3606")]
        Item3606,
        
        /// <summary>
        /// <para>Other Grocery Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Grocery Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3609")]
        Item3609,
        
        /// <summary>
        /// <para>Other Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3700")]
        Item3700,
        
        /// <summary>
        /// <para>Textile, Clothing and Footwear Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile, Clothing and Footwear Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3710")]
        Item3710,
        
        /// <summary>
        /// <para>Textile Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Textile Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3711")]
        Item3711,
        
        /// <summary>
        /// <para>Clothing and Footwear Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing and Footwear Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3712")]
        Item3712,
        
        /// <summary>
        /// <para>Pharmaceutical and Toiletry Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmaceutical and Toiletry Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3720")]
        Item3720,
        
        /// <summary>
        /// <para>Furniture, Floor Covering and Other Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture, Floor Covering and Other Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3730")]
        Item3730,
        
        /// <summary>
        /// <para>Furniture and Floor Covering Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture and Floor Covering Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3731")]
        Item3731,
        
        /// <summary>
        /// <para>Jewellery and Watch Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jewellery and Watch Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3732")]
        Item3732,
        
        /// <summary>
        /// <para>Kitchen and Diningware Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kitchen and Diningware Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3733")]
        Item3733,
        
        /// <summary>
        /// <para>Toy and Sporting Goods Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toy and Sporting Goods Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3734")]
        Item3734,
        
        /// <summary>
        /// <para>Book and Magazine Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Book and Magazine Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3735")]
        Item3735,
        
        /// <summary>
        /// <para>Paper Product Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paper Product Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3736")]
        Item3736,
        
        /// <summary>
        /// <para>Other Goods Wholesaling n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Goods Wholesaling n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("3739")]
        Item3739,
        
        /// <summary>
        /// <para>Commission-Based Wholesaling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commission-Based Wholesaling")]
        [System.Xml.Serialization.XmlEnumAttribute("3800")]
        Item3800,
        
        /// <summary>
        /// <para>Motor Vehicle and Motor Vehicle Parts Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Motor Vehicle Parts Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3900")]
        Item3900,
        
        /// <summary>
        /// <para>Motor Vehicle Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3910")]
        Item3910,
        
        /// <summary>
        /// <para>Car Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3911")]
        Item3911,
        
        /// <summary>
        /// <para>Motor Cycle Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Cycle Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3912")]
        Item3912,
        
        /// <summary>
        /// <para>Trailer and Other Motor Vehicle Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trailer and Other Motor Vehicle Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3913")]
        Item3913,
        
        /// <summary>
        /// <para>Motor Vehicle Parts and Tyre Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts and Tyre Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3920")]
        Item3920,
        
        /// <summary>
        /// <para>Motor Vehicle Parts Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Parts Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3921")]
        Item3921,
        
        /// <summary>
        /// <para>Tyre Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tyre Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("3922")]
        Item3922,
        
        /// <summary>
        /// <para>Fuel Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fuel Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4000")]
        Item4000,
        
        /// <summary>
        /// <para>Food Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4100")]
        Item4100,
        
        /// <summary>
        /// <para>Supermarket and Grocery Stores</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Supermarket and Grocery Stores")]
        [System.Xml.Serialization.XmlEnumAttribute("4110")]
        Item4110,
        
        /// <summary>
        /// <para>Specialised Food Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialised Food Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4120")]
        Item4120,
        
        /// <summary>
        /// <para>Fresh Meat, Fish and Poultry Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fresh Meat, Fish and Poultry Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4121")]
        Item4121,
        
        /// <summary>
        /// <para>Fruit and Vegetable Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fruit and Vegetable Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4122")]
        Item4122,
        
        /// <summary>
        /// <para>Liquor Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liquor Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4123")]
        Item4123,
        
        /// <summary>
        /// <para>Other Specialised Food Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Specialised Food Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4129")]
        Item4129,
        
        /// <summary>
        /// <para>Other Store-Based Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Store-Based Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4200")]
        Item4200,
        
        /// <summary>
        /// <para>Furniture, Floor Coverings, Houseware and Textile Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture, Floor Coverings, Houseware and Textile Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4210")]
        Item4210,
        
        /// <summary>
        /// <para>Furniture Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Furniture Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4211")]
        Item4211,
        
        /// <summary>
        /// <para>Floor Coverings Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Floor Coverings Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4212")]
        Item4212,
        
        /// <summary>
        /// <para>Houseware Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Houseware Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4213")]
        Item4213,
        
        /// <summary>
        /// <para>Manchester and Other Textile Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Manchester and Other Textile Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4214")]
        Item4214,
        
        /// <summary>
        /// <para>Electrical and Electronic Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical and Electronic Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4220")]
        Item4220,
        
        /// <summary>
        /// <para>Electrical, Electronic and Gas Appliance Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electrical, Electronic and Gas Appliance Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4221")]
        Item4221,
        
        /// <summary>
        /// <para>Computer and Computer Peripheral Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer and Computer Peripheral Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4222")]
        Item4222,
        
        /// <summary>
        /// <para>Other Electrical and Electronic Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Electrical and Electronic Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4229")]
        Item4229,
        
        /// <summary>
        /// <para>Hardware, Building and Garden Supplies Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hardware, Building and Garden Supplies Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4230")]
        Item4230,
        
        /// <summary>
        /// <para>Hardware and Building Supplies Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hardware and Building Supplies Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4231")]
        Item4231,
        
        /// <summary>
        /// <para>Garden Supplies Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden Supplies Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4232")]
        Item4232,
        
        /// <summary>
        /// <para>Recreational Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recreational Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4240")]
        Item4240,
        
        /// <summary>
        /// <para>Sport and Camping Equipment Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sport and Camping Equipment Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4241")]
        Item4241,
        
        /// <summary>
        /// <para>Entertainment Media Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Entertainment Media Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4242")]
        Item4242,
        
        /// <summary>
        /// <para>Toy and Game Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Toy and Game Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4243")]
        Item4243,
        
        /// <summary>
        /// <para>Newspaper and Book Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Newspaper and Book Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4244")]
        Item4244,
        
        /// <summary>
        /// <para>Marine Equipment Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marine Equipment Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4245")]
        Item4245,
        
        /// <summary>
        /// <para>Clothing, Footwear and Personal Accessory Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing, Footwear and Personal Accessory Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4250")]
        Item4250,
        
        /// <summary>
        /// <para>Clothing Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4251")]
        Item4251,
        
        /// <summary>
        /// <para>Footwear Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Footwear Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4252")]
        Item4252,
        
        /// <summary>
        /// <para>Watch and Jewellery Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Watch and Jewellery Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4253")]
        Item4253,
        
        /// <summary>
        /// <para>Other Personal Accessory Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Personal Accessory Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4259")]
        Item4259,
        
        /// <summary>
        /// <para>Department Stores</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Department Stores")]
        [System.Xml.Serialization.XmlEnumAttribute("4260")]
        Item4260,
        
        /// <summary>
        /// <para>Pharmaceutical and Other Store-Based Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmaceutical and Other Store-Based Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4270")]
        Item4270,
        
        /// <summary>
        /// <para>Pharmaceutical, Cosmetic and Toiletry Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pharmaceutical, Cosmetic and Toiletry Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4271")]
        Item4271,
        
        /// <summary>
        /// <para>Stationery Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stationery Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4272")]
        Item4272,
        
        /// <summary>
        /// <para>Antique and Used Goods Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Antique and Used Goods Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4273")]
        Item4273,
        
        /// <summary>
        /// <para>Flower Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flower Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4274")]
        Item4274,
        
        /// <summary>
        /// <para>Other Store-Based Retailing n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Store-Based Retailing n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("4279")]
        Item4279,
        
        /// <summary>
        /// <para>Non-Store Retailing and Retail Commission-Based Buying and/or Selling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Store Retailing and Retail Commission-Based Buying and/or Selling")]
        [System.Xml.Serialization.XmlEnumAttribute("4300")]
        Item4300,
        
        /// <summary>
        /// <para>Non-Store Retailing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Store Retailing")]
        [System.Xml.Serialization.XmlEnumAttribute("4310")]
        Item4310,
        
        /// <summary>
        /// <para>Retail Commission-Based Buying and/or Selling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail Commission-Based Buying and/or Selling")]
        [System.Xml.Serialization.XmlEnumAttribute("4320")]
        Item4320,
        
        /// <summary>
        /// <para>Accommodation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accommodation")]
        [System.Xml.Serialization.XmlEnumAttribute("4400")]
        Item4400,
        
        /// <summary>
        /// <para>Food and Beverage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Food and Beverage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("4500")]
        Item4500,
        
        /// <summary>
        /// <para>Cafes, Restaurants and Takeaway Food Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cafes, Restaurants and Takeaway Food Services")]
        [System.Xml.Serialization.XmlEnumAttribute("4510")]
        Item4510,
        
        /// <summary>
        /// <para>Cafes and Restaurants</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cafes and Restaurants")]
        [System.Xml.Serialization.XmlEnumAttribute("4511")]
        Item4511,
        
        /// <summary>
        /// <para>Takeaway Food Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Takeaway Food Services")]
        [System.Xml.Serialization.XmlEnumAttribute("4512")]
        Item4512,
        
        /// <summary>
        /// <para>Catering Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Catering Services")]
        [System.Xml.Serialization.XmlEnumAttribute("4513")]
        Item4513,
        
        /// <summary>
        /// <para>Pubs, Taverns and Bars</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pubs, Taverns and Bars")]
        [System.Xml.Serialization.XmlEnumAttribute("4520")]
        Item4520,
        
        /// <summary>
        /// <para>Clubs (Hospitality)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clubs (Hospitality)")]
        [System.Xml.Serialization.XmlEnumAttribute("4530")]
        Item4530,
        
        /// <summary>
        /// <para>Road Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4600")]
        Item4600,
        
        /// <summary>
        /// <para>Road Freight Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Freight Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4610")]
        Item4610,
        
        /// <summary>
        /// <para>Road Passenger Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Passenger Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4620")]
        Item4620,
        
        /// <summary>
        /// <para>Interurban and Rural Bus Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interurban and Rural Bus Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4621")]
        Item4621,
        
        /// <summary>
        /// <para>Urban Bus Transport (Including Tramway)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Urban Bus Transport (Including Tramway)")]
        [System.Xml.Serialization.XmlEnumAttribute("4622")]
        Item4622,
        
        /// <summary>
        /// <para>Taxi and Other Road Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taxi and Other Road Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4623")]
        Item4623,
        
        /// <summary>
        /// <para>Rail Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rail Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4700")]
        Item4700,
        
        /// <summary>
        /// <para>Rail Freight Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rail Freight Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4710")]
        Item4710,
        
        /// <summary>
        /// <para>Rail Passenger Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rail Passenger Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4720")]
        Item4720,
        
        /// <summary>
        /// <para>Water Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4800")]
        Item4800,
        
        /// <summary>
        /// <para>Water Freight Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Freight Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4810")]
        Item4810,
        
        /// <summary>
        /// <para>Water Passenger Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Passenger Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4820")]
        Item4820,
        
        /// <summary>
        /// <para>Air and Space Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air and Space Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("4900")]
        Item4900,
        
        /// <summary>
        /// <para>Other Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("5000")]
        Item5000,
        
        /// <summary>
        /// <para>Scenic and Sightseeing Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scenic and Sightseeing Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("5010")]
        Item5010,
        
        /// <summary>
        /// <para>Pipeline and Other Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pipeline and Other Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("5020")]
        Item5020,
        
        /// <summary>
        /// <para>Pipeline Transport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pipeline Transport")]
        [System.Xml.Serialization.XmlEnumAttribute("5021")]
        Item5021,
        
        /// <summary>
        /// <para>Other Transport n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("5029")]
        Item5029,
        
        /// <summary>
        /// <para>Postal and Courier Pick-up and Delivery Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal and Courier Pick-up and Delivery Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5100")]
        Item5100,
        
        /// <summary>
        /// <para>Postal Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Postal Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5101")]
        Item5101,
        
        /// <summary>
        /// <para>Courier Pick-up and Delivery Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Courier Pick-up and Delivery Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5102")]
        Item5102,
        
        /// <summary>
        /// <para>Transport Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transport Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5200")]
        Item5200,
        
        /// <summary>
        /// <para>Water Transport Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Transport Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5210")]
        Item5210,
        
        /// <summary>
        /// <para>Stevedoring Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stevedoring Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5211")]
        Item5211,
        
        /// <summary>
        /// <para>Port and Water Transport Terminal Operations</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Port and Water Transport Terminal Operations")]
        [System.Xml.Serialization.XmlEnumAttribute("5212")]
        Item5212,
        
        /// <summary>
        /// <para>Other Water Transport Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Water Transport Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5219")]
        Item5219,
        
        /// <summary>
        /// <para>Airport Operations and Other Air Transport Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Airport Operations and Other Air Transport Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5220")]
        Item5220,
        
        /// <summary>
        /// <para>Other Transport Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5290")]
        Item5290,
        
        /// <summary>
        /// <para>Customs Agency Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Customs Agency Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5291")]
        Item5291,
        
        /// <summary>
        /// <para>Freight Forwarding Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight Forwarding Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5292")]
        Item5292,
        
        /// <summary>
        /// <para>Other Transport Support Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Transport Support Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("5299")]
        Item5299,
        
        /// <summary>
        /// <para>Warehousing and Storage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warehousing and Storage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5300")]
        Item5300,
        
        /// <summary>
        /// <para>Grain Storage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grain Storage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5301")]
        Item5301,
        
        /// <summary>
        /// <para>Other Warehousing and Storage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Warehousing and Storage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5309")]
        Item5309,
        
        /// <summary>
        /// <para>Publishing (except Internet and Music Publishing)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Publishing (except Internet and Music Publishing)")]
        [System.Xml.Serialization.XmlEnumAttribute("5400")]
        Item5400,
        
        /// <summary>
        /// <para>Newspaper, Periodical, Book and Directory Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Newspaper, Periodical, Book and Directory Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5410")]
        Item5410,
        
        /// <summary>
        /// <para>Newspaper Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Newspaper Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5411")]
        Item5411,
        
        /// <summary>
        /// <para>Magazine and Other Periodical Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Magazine and Other Periodical Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5412")]
        Item5412,
        
        /// <summary>
        /// <para>Book Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Book Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5413")]
        Item5413,
        
        /// <summary>
        /// <para>Directory and Mailing List Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Directory and Mailing List Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5414")]
        Item5414,
        
        /// <summary>
        /// <para>Other Publishing (except Software, Music and Internet)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Publishing (except Software, Music and Internet)")]
        [System.Xml.Serialization.XmlEnumAttribute("5419")]
        Item5419,
        
        /// <summary>
        /// <para>Software Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5420")]
        Item5420,
        
        /// <summary>
        /// <para>Motion Picture and Sound Recording Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture and Sound Recording Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("5500")]
        Item5500,
        
        /// <summary>
        /// <para>Motion Picture and Video Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture and Video Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("5510")]
        Item5510,
        
        /// <summary>
        /// <para>Motion Picture and Video Production</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture and Video Production")]
        [System.Xml.Serialization.XmlEnumAttribute("5511")]
        Item5511,
        
        /// <summary>
        /// <para>Motion Picture and Video Distribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture and Video Distribution")]
        [System.Xml.Serialization.XmlEnumAttribute("5512")]
        Item5512,
        
        /// <summary>
        /// <para>Motion Picture Exhibition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motion Picture Exhibition")]
        [System.Xml.Serialization.XmlEnumAttribute("5513")]
        Item5513,
        
        /// <summary>
        /// <para>Post-production Services and Other Motion Picture and Video Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Post-production Services and Other Motion Picture and Video Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("5514")]
        Item5514,
        
        /// <summary>
        /// <para>Sound Recording and Music Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sound Recording and Music Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5520")]
        Item5520,
        
        /// <summary>
        /// <para>Music Publishing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music Publishing")]
        [System.Xml.Serialization.XmlEnumAttribute("5521")]
        Item5521,
        
        /// <summary>
        /// <para>Music and Other Sound Recording Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Music and Other Sound Recording Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("5522")]
        Item5522,
        
        /// <summary>
        /// <para>Broadcasting (except Internet)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Broadcasting (except Internet)")]
        [System.Xml.Serialization.XmlEnumAttribute("5600")]
        Item5600,
        
        /// <summary>
        /// <para>Radio Broadcasting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Radio Broadcasting")]
        [System.Xml.Serialization.XmlEnumAttribute("5610")]
        Item5610,
        
        /// <summary>
        /// <para>Television Broadcasting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television Broadcasting")]
        [System.Xml.Serialization.XmlEnumAttribute("5620")]
        Item5620,
        
        /// <summary>
        /// <para>Free-to-Air Television Broadcasting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Free-to-Air Television Broadcasting")]
        [System.Xml.Serialization.XmlEnumAttribute("5621")]
        Item5621,
        
        /// <summary>
        /// <para>Cable and Other Subscription Broadcasting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cable and Other Subscription Broadcasting")]
        [System.Xml.Serialization.XmlEnumAttribute("5622")]
        Item5622,
        
        /// <summary>
        /// <para>Internet Publishing and Broadcasting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internet Publishing and Broadcasting")]
        [System.Xml.Serialization.XmlEnumAttribute("5700")]
        Item5700,
        
        /// <summary>
        /// <para>Telecommunications Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telecommunications Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5800")]
        Item5800,
        
        /// <summary>
        /// <para>Wired Telecommunications Network Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wired Telecommunications Network Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("5801")]
        Item5801,
        
        /// <summary>
        /// <para>Other Telecommunications Network Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Telecommunications Network Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("5802")]
        Item5802,
        
        /// <summary>
        /// <para>Other Telecommunications Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Telecommunications Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5809")]
        Item5809,
        
        /// <summary>
        /// <para>Internet Service Providers, Web Search Portals and Data Processing Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internet Service Providers, Web Search Portals and Data Processing Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5900")]
        Item5900,
        
        /// <summary>
        /// <para>Internet Service Providers and Web Search Portals</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internet Service Providers and Web Search Portals")]
        [System.Xml.Serialization.XmlEnumAttribute("5910")]
        Item5910,
        
        /// <summary>
        /// <para>Data Processing, Web Hosting and Electronic Information Storage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data Processing, Web Hosting and Electronic Information Storage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5920")]
        Item5920,
        
        /// <summary>
        /// <para>Data Processing and Web Hosting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data Processing and Web Hosting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5921")]
        Item5921,
        
        /// <summary>
        /// <para>Electronic Information Storage Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic Information Storage Services")]
        [System.Xml.Serialization.XmlEnumAttribute("5922")]
        Item5922,
        
        /// <summary>
        /// <para>Library and Other Information Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Library and Other Information Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6000")]
        Item6000,
        
        /// <summary>
        /// <para>Libraries and Archives</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Libraries and Archives")]
        [System.Xml.Serialization.XmlEnumAttribute("6010")]
        Item6010,
        
        /// <summary>
        /// <para>Other Information Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Information Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6020")]
        Item6020,
        
        /// <summary>
        /// <para>Finance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Finance")]
        [System.Xml.Serialization.XmlEnumAttribute("6200")]
        Item6200,
        
        /// <summary>
        /// <para>Central Banking</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Central Banking")]
        [System.Xml.Serialization.XmlEnumAttribute("6210")]
        Item6210,
        
        /// <summary>
        /// <para>Depository Financial Intermediation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depository Financial Intermediation")]
        [System.Xml.Serialization.XmlEnumAttribute("6220")]
        Item6220,
        
        /// <summary>
        /// <para>Banking</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Banking")]
        [System.Xml.Serialization.XmlEnumAttribute("6221")]
        Item6221,
        
        /// <summary>
        /// <para>Building Society Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Society Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("6222")]
        Item6222,
        
        /// <summary>
        /// <para>Credit Union Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Union Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("6223")]
        Item6223,
        
        /// <summary>
        /// <para>Other Depository Financial Intermediation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Depository Financial Intermediation")]
        [System.Xml.Serialization.XmlEnumAttribute("6229")]
        Item6229,
        
        /// <summary>
        /// <para>Non-Depository Financing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Depository Financing")]
        [System.Xml.Serialization.XmlEnumAttribute("6230")]
        Item6230,
        
        /// <summary>
        /// <para>Financial Asset Investing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Asset Investing")]
        [System.Xml.Serialization.XmlEnumAttribute("6240")]
        Item6240,
        
        /// <summary>
        /// <para>Insurance and Superannuation Funds</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance and Superannuation Funds")]
        [System.Xml.Serialization.XmlEnumAttribute("6300")]
        Item6300,
        
        /// <summary>
        /// <para>Life Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("6310")]
        Item6310,
        
        /// <summary>
        /// <para>Health and General Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health and General Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("6320")]
        Item6320,
        
        /// <summary>
        /// <para>Health Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("6321")]
        Item6321,
        
        /// <summary>
        /// <para>General Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("6322")]
        Item6322,
        
        /// <summary>
        /// <para>Superannuation Funds</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation Funds")]
        [System.Xml.Serialization.XmlEnumAttribute("6330")]
        Item6330,
        
        /// <summary>
        /// <para>Auxiliary Finance and Insurance Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auxiliary Finance and Insurance Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6400")]
        Item6400,
        
        /// <summary>
        /// <para>Auxiliary Finance and Investment Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auxiliary Finance and Investment Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6410")]
        Item6410,
        
        /// <summary>
        /// <para>Financial Asset Broking Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Asset Broking Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6411")]
        Item6411,
        
        /// <summary>
        /// <para>Other Auxiliary Finance and Investment Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Auxiliary Finance and Investment Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6419")]
        Item6419,
        
        /// <summary>
        /// <para>Auxiliary Insurance Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Auxiliary Insurance Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6420")]
        Item6420,
        
        /// <summary>
        /// <para>Rental and Hiring Services (except Real Estate)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rental and Hiring Services (except Real Estate)")]
        [System.Xml.Serialization.XmlEnumAttribute("6600")]
        Item6600,
        
        /// <summary>
        /// <para>Motor Vehicle and Transport Equipment Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle and Transport Equipment Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6610")]
        Item6610,
        
        /// <summary>
        /// <para>Passenger Car Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Passenger Car Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6611")]
        Item6611,
        
        /// <summary>
        /// <para>Other Motor Vehicle and Transport Equipment Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Motor Vehicle and Transport Equipment Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6619")]
        Item6619,
        
        /// <summary>
        /// <para>Farm Animal and Bloodstock Leasing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Farm Animal and Bloodstock Leasing")]
        [System.Xml.Serialization.XmlEnumAttribute("6620")]
        Item6620,
        
        /// <summary>
        /// <para>Other Goods and Equipment Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Goods and Equipment Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6630")]
        Item6630,
        
        /// <summary>
        /// <para>Heavy Machinery and Scaffolding Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heavy Machinery and Scaffolding Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6631")]
        Item6631,
        
        /// <summary>
        /// <para>Video and Other Electronic Media Rental and Hiring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Video and Other Electronic Media Rental and Hiring")]
        [System.Xml.Serialization.XmlEnumAttribute("6632")]
        Item6632,
        
        /// <summary>
        /// <para>Other Goods and Equipment Rental and Hiring n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Goods and Equipment Rental and Hiring n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("6639")]
        Item6639,
        
        /// <summary>
        /// <para>Non-Financial Intangible Assets (Except Copyrights) Leasing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Financial Intangible Assets (Except Copyrights) Leasing")]
        [System.Xml.Serialization.XmlEnumAttribute("6640")]
        Item6640,
        
        /// <summary>
        /// <para>Property Operators and Real Estate Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property Operators and Real Estate Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6700")]
        Item6700,
        
        /// <summary>
        /// <para>Property Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("6710")]
        Item6710,
        
        /// <summary>
        /// <para>Residential Property Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Residential Property Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("6711")]
        Item6711,
        
        /// <summary>
        /// <para>Non-Residential Property Operators</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-Residential Property Operators")]
        [System.Xml.Serialization.XmlEnumAttribute("6712")]
        Item6712,
        
        /// <summary>
        /// <para>Real Estate Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real Estate Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6720")]
        Item6720,
        
        /// <summary>
        /// <para>Professional, Scientific and Technical Services (Except Computer System Design and Related Services)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professional, Scientific and Technical Services (Except Computer System Design an" +
            "d Related Services)")]
        [System.Xml.Serialization.XmlEnumAttribute("6900")]
        Item6900,
        
        /// <summary>
        /// <para>Scientific Research Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scientific Research Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6910")]
        Item6910,
        
        /// <summary>
        /// <para>Architectural, Engineering and Technical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural, Engineering and Technical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6920")]
        Item6920,
        
        /// <summary>
        /// <para>Architectural Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Architectural Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6921")]
        Item6921,
        
        /// <summary>
        /// <para>Surveying and Mapping Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveying and Mapping Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6922")]
        Item6922,
        
        /// <summary>
        /// <para>Engineering Design and Engineering Consulting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Design and Engineering Consulting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6923")]
        Item6923,
        
        /// <summary>
        /// <para>Other Specialised Design Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Specialised Design Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6924")]
        Item6924,
        
        /// <summary>
        /// <para>Scientific Testing and Analysis Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scientific Testing and Analysis Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6925")]
        Item6925,
        
        /// <summary>
        /// <para>Legal and Accounting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal and Accounting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6930")]
        Item6930,
        
        /// <summary>
        /// <para>Legal Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6931")]
        Item6931,
        
        /// <summary>
        /// <para>Accounting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accounting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6932")]
        Item6932,
        
        /// <summary>
        /// <para>Advertising Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advertising Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6940")]
        Item6940,
        
        /// <summary>
        /// <para>Market Research and Statistical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Market Research and Statistical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6950")]
        Item6950,
        
        /// <summary>
        /// <para>Management and Related Consulting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management and Related Consulting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6960")]
        Item6960,
        
        /// <summary>
        /// <para>Corporate Head Office Management Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Corporate Head Office Management Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6961")]
        Item6961,
        
        /// <summary>
        /// <para>Management Advice and Related Consulting Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Management Advice and Related Consulting Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6962")]
        Item6962,
        
        /// <summary>
        /// <para>Veterinary Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veterinary Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6970")]
        Item6970,
        
        /// <summary>
        /// <para>Other Professional, Scientific and Technical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Professional, Scientific and Technical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6990")]
        Item6990,
        
        /// <summary>
        /// <para>Professional Photographic Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professional Photographic Services")]
        [System.Xml.Serialization.XmlEnumAttribute("6991")]
        Item6991,
        
        /// <summary>
        /// <para>Other Professional, Scientific and Technical Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Professional, Scientific and Technical Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("6999")]
        Item6999,
        
        /// <summary>
        /// <para>Computer System Design and Related Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Computer System Design and Related Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7000")]
        Item7000,
        
        /// <summary>
        /// <para>Administrative Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Administrative Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7200")]
        Item7200,
        
        /// <summary>
        /// <para>Employment Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Employment Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7210")]
        Item7210,
        
        /// <summary>
        /// <para>Employment Placement and Recruitment Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Employment Placement and Recruitment Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7211")]
        Item7211,
        
        /// <summary>
        /// <para>Labour Supply Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Labour Supply Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7212")]
        Item7212,
        
        /// <summary>
        /// <para>Travel Agency and Tour Arrangement Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Travel Agency and Tour Arrangement Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7220")]
        Item7220,
        
        /// <summary>
        /// <para>Other Administrative Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Administrative Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7290")]
        Item7290,
        
        /// <summary>
        /// <para>Office Administrative Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Administrative Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7291")]
        Item7291,
        
        /// <summary>
        /// <para>Document Preparation Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Document Preparation Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7292")]
        Item7292,
        
        /// <summary>
        /// <para>Credit Reporting and Debt Collection Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Reporting and Debt Collection Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7293")]
        Item7293,
        
        /// <summary>
        /// <para>Call Centre Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call Centre Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("7294")]
        Item7294,
        
        /// <summary>
        /// <para>Other Administrative Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Administrative Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("7299")]
        Item7299,
        
        /// <summary>
        /// <para>Building Cleaning, Pest Control and Other Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Cleaning, Pest Control and Other Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7300")]
        Item7300,
        
        /// <summary>
        /// <para>Building Cleaning, Pest Control and Gardening Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Cleaning, Pest Control and Gardening Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7310")]
        Item7310,
        
        /// <summary>
        /// <para>Building and Other Industrial Cleaning Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building and Other Industrial Cleaning Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7311")]
        Item7311,
        
        /// <summary>
        /// <para>Building Pest Control Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Pest Control Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7312")]
        Item7312,
        
        /// <summary>
        /// <para>Gardening Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gardening Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7313")]
        Item7313,
        
        /// <summary>
        /// <para>Packaging Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Packaging Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7320")]
        Item7320,
        
        /// <summary>
        /// <para>Public Administration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Administration")]
        [System.Xml.Serialization.XmlEnumAttribute("7500")]
        Item7500,
        
        /// <summary>
        /// <para>Central Government Administration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Central Government Administration")]
        [System.Xml.Serialization.XmlEnumAttribute("7510")]
        Item7510,
        
        /// <summary>
        /// <para>State Government Administration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("State Government Administration")]
        [System.Xml.Serialization.XmlEnumAttribute("7520")]
        Item7520,
        
        /// <summary>
        /// <para>Local Government Administration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Local Government Administration")]
        [System.Xml.Serialization.XmlEnumAttribute("7530")]
        Item7530,
        
        /// <summary>
        /// <para>Justice</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Justice")]
        [System.Xml.Serialization.XmlEnumAttribute("7540")]
        Item7540,
        
        /// <summary>
        /// <para>Government Representation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government Representation")]
        [System.Xml.Serialization.XmlEnumAttribute("7550")]
        Item7550,
        
        /// <summary>
        /// <para>Domestic Government Representation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Government Representation")]
        [System.Xml.Serialization.XmlEnumAttribute("7551")]
        Item7551,
        
        /// <summary>
        /// <para>Foreign Government Representation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Government Representation")]
        [System.Xml.Serialization.XmlEnumAttribute("7552")]
        Item7552,
        
        /// <summary>
        /// <para>Defence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defence")]
        [System.Xml.Serialization.XmlEnumAttribute("7600")]
        Item7600,
        
        /// <summary>
        /// <para>Public Order, Safety and Regulatory Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Order, Safety and Regulatory Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7700")]
        Item7700,
        
        /// <summary>
        /// <para>Public Order and Safety Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public Order and Safety Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7710")]
        Item7710,
        
        /// <summary>
        /// <para>Police Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Police Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7711")]
        Item7711,
        
        /// <summary>
        /// <para>Investigation and Security Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Investigation and Security Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7712")]
        Item7712,
        
        /// <summary>
        /// <para>Fire Protection and Other Emergency Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fire Protection and Other Emergency Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7713")]
        Item7713,
        
        /// <summary>
        /// <para>Correctional and Detention Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Correctional and Detention Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7714")]
        Item7714,
        
        /// <summary>
        /// <para>Other Public Order and Safety Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Public Order and Safety Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7719")]
        Item7719,
        
        /// <summary>
        /// <para>Regulatory Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Regulatory Services")]
        [System.Xml.Serialization.XmlEnumAttribute("7720")]
        Item7720,
        
        /// <summary>
        /// <para>Preschool and School Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preschool and School Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8000")]
        Item8000,
        
        /// <summary>
        /// <para>Preschool Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preschool Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8010")]
        Item8010,
        
        /// <summary>
        /// <para>School Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("School Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8020")]
        Item8020,
        
        /// <summary>
        /// <para>Primary Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8021")]
        Item8021,
        
        /// <summary>
        /// <para>Secondary Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secondary Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8022")]
        Item8022,
        
        /// <summary>
        /// <para>Combined Primary and Secondary Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Combined Primary and Secondary Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8023")]
        Item8023,
        
        /// <summary>
        /// <para>Special School Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Special School Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8024")]
        Item8024,
        
        /// <summary>
        /// <para>Tertiary Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tertiary Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8100")]
        Item8100,
        
        /// <summary>
        /// <para>Technical and Vocational Education and Training</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Technical and Vocational Education and Training")]
        [System.Xml.Serialization.XmlEnumAttribute("8101")]
        Item8101,
        
        /// <summary>
        /// <para>Higher Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Higher Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8102")]
        Item8102,
        
        /// <summary>
        /// <para>Adult, Community and Other Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adult, Community and Other Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8200")]
        Item8200,
        
        /// <summary>
        /// <para>Adult, Community and Other Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adult, Community and Other Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8210")]
        Item8210,
        
        /// <summary>
        /// <para>Sports and Physical Recreation Instruction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Physical Recreation Instruction")]
        [System.Xml.Serialization.XmlEnumAttribute("8211")]
        Item8211,
        
        /// <summary>
        /// <para>Arts Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arts Education")]
        [System.Xml.Serialization.XmlEnumAttribute("8212")]
        Item8212,
        
        /// <summary>
        /// <para>Adult, Community and Other Education n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adult, Community and Other Education n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("8219")]
        Item8219,
        
        /// <summary>
        /// <para>Educational Support Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Educational Support Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8220")]
        Item8220,
        
        /// <summary>
        /// <para>Hospitals</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitals")]
        [System.Xml.Serialization.XmlEnumAttribute("8400")]
        Item8400,
        
        /// <summary>
        /// <para>Hospitals (Except Psychiatric Hospitals)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitals (Except Psychiatric Hospitals)")]
        [System.Xml.Serialization.XmlEnumAttribute("8401")]
        Item8401,
        
        /// <summary>
        /// <para>Psychiatric Hospitals</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Psychiatric Hospitals")]
        [System.Xml.Serialization.XmlEnumAttribute("8402")]
        Item8402,
        
        /// <summary>
        /// <para>Medical and Other Health Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical and Other Health Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8500")]
        Item8500,
        
        /// <summary>
        /// <para>Medical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8510")]
        Item8510,
        
        /// <summary>
        /// <para>General Practice Medical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General Practice Medical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8511")]
        Item8511,
        
        /// <summary>
        /// <para>Specialist Medical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specialist Medical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8512")]
        Item8512,
        
        /// <summary>
        /// <para>Pathology and Diagnostic Imaging Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pathology and Diagnostic Imaging Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8520")]
        Item8520,
        
        /// <summary>
        /// <para>Allied Health Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allied Health Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8530")]
        Item8530,
        
        /// <summary>
        /// <para>Dental Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dental Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8531")]
        Item8531,
        
        /// <summary>
        /// <para>Optometry and Optical Dispensing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Optometry and Optical Dispensing")]
        [System.Xml.Serialization.XmlEnumAttribute("8532")]
        Item8532,
        
        /// <summary>
        /// <para>Physiotherapy Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Physiotherapy Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8533")]
        Item8533,
        
        /// <summary>
        /// <para>Chiropractic and Osteopathic Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chiropractic and Osteopathic Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8534")]
        Item8534,
        
        /// <summary>
        /// <para>Other Allied Health Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Allied Health Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8539")]
        Item8539,
        
        /// <summary>
        /// <para>Other Health Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Health Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8590")]
        Item8590,
        
        /// <summary>
        /// <para>Ambulance Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ambulance Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8591")]
        Item8591,
        
        /// <summary>
        /// <para>Other Health Care Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Health Care Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("8599")]
        Item8599,
        
        /// <summary>
        /// <para>Residential Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Residential Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8600")]
        Item8600,
        
        /// <summary>
        /// <para>Aged Care Residential Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aged Care Residential Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8601")]
        Item8601,
        
        /// <summary>
        /// <para>Other Residential Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Residential Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8609")]
        Item8609,
        
        /// <summary>
        /// <para>Social Assistance Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Social Assistance Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8700")]
        Item8700,
        
        /// <summary>
        /// <para>Child Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8710")]
        Item8710,
        
        /// <summary>
        /// <para>Other Social Assistance Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Social Assistance Services")]
        [System.Xml.Serialization.XmlEnumAttribute("8790")]
        Item8790,
        
        /// <summary>
        /// <para>Heritage Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Heritage Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("8900")]
        Item8900,
        
        /// <summary>
        /// <para>Museum Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Museum Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("8910")]
        Item8910,
        
        /// <summary>
        /// <para>Parks and Gardens Operations</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parks and Gardens Operations")]
        [System.Xml.Serialization.XmlEnumAttribute("8920")]
        Item8920,
        
        /// <summary>
        /// <para>Zoological and Botanical Gardens Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zoological and Botanical Gardens Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("8921")]
        Item8921,
        
        /// <summary>
        /// <para>Nature Reserves and Conservation Parks Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nature Reserves and Conservation Parks Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("8922")]
        Item8922,
        
        /// <summary>
        /// <para>Creative and Performing Arts Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Creative and Performing Arts Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9000")]
        Item9000,
        
        /// <summary>
        /// <para>Performing Arts Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Performing Arts Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9001")]
        Item9001,
        
        /// <summary>
        /// <para>Creative Artists, Musicians, Writers and Performers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Creative Artists, Musicians, Writers and Performers")]
        [System.Xml.Serialization.XmlEnumAttribute("9002")]
        Item9002,
        
        /// <summary>
        /// <para>Performing Arts Venue Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Performing Arts Venue Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9003")]
        Item9003,
        
        /// <summary>
        /// <para>Sports and Recreation Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Recreation Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9100")]
        Item9100,
        
        /// <summary>
        /// <para>Sports and Physical Recreation Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Physical Recreation Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9110")]
        Item9110,
        
        /// <summary>
        /// <para>Health and Fitness Centres and Gymnasia Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health and Fitness Centres and Gymnasia Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9111")]
        Item9111,
        
        /// <summary>
        /// <para>Sports and Physical Recreation Clubs and Sports Professionals</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Physical Recreation Clubs and Sports Professionals")]
        [System.Xml.Serialization.XmlEnumAttribute("9112")]
        Item9112,
        
        /// <summary>
        /// <para>Sports and Physical Recreation Venues, Grounds and Facilities Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Physical Recreation Venues, Grounds and Facilities Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9113")]
        Item9113,
        
        /// <summary>
        /// <para>Sports and Physical Recreation Administrative Service</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sports and Physical Recreation Administrative Service")]
        [System.Xml.Serialization.XmlEnumAttribute("9114")]
        Item9114,
        
        /// <summary>
        /// <para>Horse and Dog Racing Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse and Dog Racing Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9120")]
        Item9120,
        
        /// <summary>
        /// <para>Horse and Dog Racing Administration and Track Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Horse and Dog Racing Administration and Track Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9121")]
        Item9121,
        
        /// <summary>
        /// <para>Other Horse and Dog Racing Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Horse and Dog Racing Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9129")]
        Item9129,
        
        /// <summary>
        /// <para>Amusement and Other Recreation Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement and Other Recreation Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9130")]
        Item9130,
        
        /// <summary>
        /// <para>Amusement Parks and Centres Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement Parks and Centres Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9131")]
        Item9131,
        
        /// <summary>
        /// <para>Amusement and Other Recreational Activities n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amusement and Other Recreational Activities n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("9139")]
        Item9139,
        
        /// <summary>
        /// <para>Gambling Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gambling Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9200")]
        Item9200,
        
        /// <summary>
        /// <para>Casino Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Casino Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9201")]
        Item9201,
        
        /// <summary>
        /// <para>Lottery Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lottery Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9202")]
        Item9202,
        
        /// <summary>
        /// <para>Other Gambling Activities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Gambling Activities")]
        [System.Xml.Serialization.XmlEnumAttribute("9209")]
        Item9209,
        
        /// <summary>
        /// <para>Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9400")]
        Item9400,
        
        /// <summary>
        /// <para>Automotive Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9410")]
        Item9410,
        
        /// <summary>
        /// <para>Automotive Electrical Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Electrical Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9411")]
        Item9411,
        
        /// <summary>
        /// <para>Automotive Body, Paint and Interior Repair</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Automotive Body, Paint and Interior Repair")]
        [System.Xml.Serialization.XmlEnumAttribute("9412")]
        Item9412,
        
        /// <summary>
        /// <para>Other Automotive Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Automotive Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9419")]
        Item9419,
        
        /// <summary>
        /// <para>Machinery and Equipment Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Machinery and Equipment Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9420")]
        Item9420,
        
        /// <summary>
        /// <para>Domestic Appliance Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Domestic Appliance Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9421")]
        Item9421,
        
        /// <summary>
        /// <para>Electronic (except Domestic Appliance) and Precision Equipment Repair</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electronic (except Domestic Appliance) and Precision Equipment Repair")]
        [System.Xml.Serialization.XmlEnumAttribute("9422")]
        Item9422,
        
        /// <summary>
        /// <para>Other Machinery and Equipment Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Machinery and Equipment Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9429")]
        Item9429,
        
        /// <summary>
        /// <para>Other Repair and Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Repair and Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("9490")]
        Item9490,
        
        /// <summary>
        /// <para>Clothing and Footwear Repair</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing and Footwear Repair")]
        [System.Xml.Serialization.XmlEnumAttribute("9491")]
        Item9491,
        
        /// <summary>
        /// <para>Other Repair and Maintenance n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Repair and Maintenance n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("9499")]
        Item9499,
        
        /// <summary>
        /// <para>Personal and Other Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal and Other Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9500")]
        Item9500,
        
        /// <summary>
        /// <para>Personal Care Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Care Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9510")]
        Item9510,
        
        /// <summary>
        /// <para>Hairdressing and Beauty Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hairdressing and Beauty Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9511")]
        Item9511,
        
        /// <summary>
        /// <para>Diet and Weight Reduction Centre Operation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diet and Weight Reduction Centre Operation")]
        [System.Xml.Serialization.XmlEnumAttribute("9512")]
        Item9512,
        
        /// <summary>
        /// <para>Funeral, Crematorium and Cemetery Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funeral, Crematorium and Cemetery Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9520")]
        Item9520,
        
        /// <summary>
        /// <para>Other Personal Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Personal Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9530")]
        Item9530,
        
        /// <summary>
        /// <para>Laundry and Dry-Cleaning Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laundry and Dry-Cleaning Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9531")]
        Item9531,
        
        /// <summary>
        /// <para>Photographic Film Processing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic Film Processing")]
        [System.Xml.Serialization.XmlEnumAttribute("9532")]
        Item9532,
        
        /// <summary>
        /// <para>Parking Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parking Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9533")]
        Item9533,
        
        /// <summary>
        /// <para>Brothel Keeping and Prostitution Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brothel Keeping and Prostitution Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9534")]
        Item9534,
        
        /// <summary>
        /// <para>Other Personal Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Personal Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("9539")]
        Item9539,
        
        /// <summary>
        /// <para>Religious Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Religious Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9540")]
        Item9540,
        
        /// <summary>
        /// <para>Civic, Professional and Other Interest Group Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Civic, Professional and Other Interest Group Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9550")]
        Item9550,
        
        /// <summary>
        /// <para>Business and Professional Association Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business and Professional Association Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9551")]
        Item9551,
        
        /// <summary>
        /// <para>Labour Association Services</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Labour Association Services")]
        [System.Xml.Serialization.XmlEnumAttribute("9552")]
        Item9552,
        
        /// <summary>
        /// <para>Other Interest Group Services n.e.c.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Interest Group Services n.e.c.")]
        [System.Xml.Serialization.XmlEnumAttribute("9559")]
        Item9559,
        
        /// <summary>
        /// <para>Private Households Employing Staff and Undifferentiated Goods- and Service-Producing Activities of Households for Own Use</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Households Employing Staff and Undifferentiated Goods- and Service-Produc" +
            "ing Activities of Households for Own Use")]
        [System.Xml.Serialization.XmlEnumAttribute("9600")]
        Item9600,
        
        /// <summary>
        /// <para>Private Households Employing Staff</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Households Employing Staff")]
        [System.Xml.Serialization.XmlEnumAttribute("9601")]
        Item9601,
        
        /// <summary>
        /// <para>Undifferentiated Goods-Producing Activities of Private Households for Own Use</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Undifferentiated Goods-Producing Activities of Private Households for Own Use")]
        [System.Xml.Serialization.XmlEnumAttribute("9602")]
        Item9602,
        
        /// <summary>
        /// <para>Undifferentiated Service-Producing Activities of Private Households for Own Use</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Undifferentiated Service-Producing Activities of Private Households for Own Use")]
        [System.Xml.Serialization.XmlEnumAttribute("9603")]
        Item9603,
    }
    
    /// <summary>
    /// <para>applicantTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("applicantTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("applicantTypeList", Namespace="")]
    public enum ApplicantTypeList
    {
        
        /// <summary>
        /// <para>The party is applying in the capacity of a borrower on the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party is applying in the capacity of a borrower on the loan.")]
        Borrower,
        
        /// <summary>
        /// <para>The party is applying in the capacity of a guarantor on the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party is applying in the capacity of a guarantor on the loan.")]
        Guarantor,
    }
    
    /// <summary>
    /// <para>applicationDocTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("applicationDocTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("applicationDocTypeList", Namespace="")]
    public enum ApplicationDocTypeList
    {
        
        /// <summary>
        /// <para>Indicates that the applicants will provide documentary evidence in support of their financial position, including income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicants will provide documentary evidence in support of the" +
            "ir financial position, including income.")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Doc")]
        Full_Doc,
        
        /// <summary>
        /// <para>Indicates that the applicants will provide limited documentation in support of their financial position, but will instead typically provide a declaration as to financial position in particular income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicants will provide limited documentation in support of th" +
            "eir financial position, but will instead typically provide a declaration as to f" +
            "inancial position in particular income.")]
        [System.Xml.Serialization.XmlEnumAttribute("Lo Doc")]
        Lo_Doc,
        
        /// <summary>
        /// <para>Indicates that the applicants will not provide documentary evidence in support of their financial position. Also known as an asset lend.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicants will not provide documentary evidence in support of" +
            " their financial position. Also known as an asset lend.")]
        [System.Xml.Serialization.XmlEnumAttribute("No Doc")]
        No_Doc,
    }
    
    /// <summary>
    /// <para>applicationTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("applicationTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("applicationTypeList", Namespace="")]
    public enum ApplicationTypeList
    {
        
        /// <summary>
        /// <para>The application is for a deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application is for a deposit account.")]
        [System.Xml.Serialization.XmlEnumAttribute("Deposit Account")]
        Deposit_Account,
        
        /// <summary>
        /// <para>The application is for a loan within an existing approved umbrella master facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application is for a loan within an existing approved umbrella master facilit" +
            "y.")]
        [System.Xml.Serialization.XmlEnumAttribute("Facility Drawdown")]
        Facility_Drawdown,
        
        /// <summary>
        /// <para>Application is for a finance or operating lease.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application is for a finance or operating lease.")]
        Lease,
        
        /// <summary>
        /// <para>Application is for a standard loan facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application is for a standard loan facility.")]
        Loan,
        
        /// <summary>
        /// <para>The application is to vary one or more existing loan accounts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application is to vary one or more existing loan accounts.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Variation")]
        Loan_Variation,
        
        /// <summary>
        /// <para>Loan application is for an overdraft or similar non-amortising loan facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan application is for an overdraft or similar non-amortising loan facility.")]
        Overdraft,
        
        /// <summary>
        /// <para>Loan application is for an evaluation of a potential borrower by a lender that determines whether the borrower qualifies for a loan from the lender, or the maximum amount that the lender would be willing to lend.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan application is for an evaluation of a potential borrower by a lender that de" +
            "termines whether the borrower qualifies for a loan from the lender, or the maxim" +
            "um amount that the lender would be willing to lend.")]
        Preapproval,
        
        /// <summary>
        /// <para>Loan application is for prequalification of applicants, usually prior to identification of the security property to be purchased using the loan funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan application is for prequalification of applicants, usually prior to identifi" +
            "cation of the security property to be purchased using the loan funds.")]
        Prequalification,
        
        /// <summary>
        /// <para>Loan application is for an unsecured loan facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan application is for an unsecured loan facility.")]
        Unsecured,
    }
    
    /// <summary>
    /// <para>assessmentTypeApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("assessmentTypeApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("assessmentTypeApplicationInstructionsList", Namespace="")]
    public enum AssessmentTypeApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>Full</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Full")]
        Full,
        
        /// <summary>
        /// <para>Indicative</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicative")]
        Indicative,
        
        /// <summary>
        /// <para>Quote</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quote")]
        Quote,
    }
    
    /// <summary>
    /// <para>assetTransactionList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("assetTransactionList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("assetTransactionList", Namespace="")]
    public enum AssetTransactionList
    {
        
        /// <summary>
        /// <para>The property is already owned by the parties, without a mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is already owned by the parties, without a mortgage.")]
        Owns,
        
        /// <summary>
        /// <para>The property is already owned by the parties, with a mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is already owned by the parties, with a mortgage.")]
        [System.Xml.Serialization.XmlEnumAttribute("Owns Existing Mortgage")]
        Owns_Existing_Mortgage,
        
        /// <summary>
        /// <para>The property is being purchased by the parties specified as the owners of the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is being purchased by the parties specified as the owners of the pro" +
            "perty.")]
        Purchasing,
        
        /// <summary>
        /// <para>The property has recently been sold.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property has recently been sold.")]
        Sold,
    }
    
    /// <summary>
    /// <para>A list of valid document types that can be included in an attachment.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of valid document types that can be included in an attachment.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("attachmentTypeList", Namespace="")]
    public enum AttachmentTypeList
    {
        
        /// <summary>
        /// <para>18+ Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("18+ Card")]
        [System.Xml.Serialization.XmlEnumAttribute("18+ Card")]
        Item18Plus_Card,
        
        /// <summary>
        /// <para>Application Recommendations</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application Recommendations")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Recommendations")]
        Application_Recommendations,
        
        /// <summary>
        /// <para>Bank Statement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Statement")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank Statement")]
        Bank_Statement,
        
        /// <summary>
        /// <para>Credit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>Debit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Debit Card")]
        Debit_Card,
        
        /// <summary>
        /// <para>Deed Poll</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deed Poll")]
        [System.Xml.Serialization.XmlEnumAttribute("Deed Poll")]
        Deed_Poll,
        
        /// <summary>
        /// <para>A Certificate of Registration by Descent is issued by the Government of Australia or New Zealand to a person who was born outside the country and at least one of their parents was an Australian or New Zealand citizen at the time of their birth.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Certificate of Registration by Descent is issued by the Government of Australia" +
            " or New Zealand to a person who was born outside the country and at least one of" +
            " their parents was an Australian or New Zealand citizen at the time of their bir" +
            "th.")]
        [System.Xml.Serialization.XmlEnumAttribute("Descent Certificate")]
        Descent_Certificate,
        
        /// <summary>
        /// <para>Electricity Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Electricity Bill")]
        Electricity_Bill,
        
        /// <summary>
        /// <para>Emergency Travel Document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Emergency Travel Document")]
        [System.Xml.Serialization.XmlEnumAttribute("Emergency Travel Document")]
        Emergency_Travel_Document,
        
        /// <summary>
        /// <para>Foreign Birth Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Birth Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Birth Certificate")]
        Foreign_Birth_Certificate,
        
        /// <summary>
        /// <para>Foreign Citizenship Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Citizenship Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Citizenship Certificate")]
        Foreign_Citizenship_Certificate,
        
        /// <summary>
        /// <para>Gas Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gas Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Gas Bill")]
        Gas_Bill,
        
        /// <summary>
        /// <para>Government Benefits Notice</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government Benefits Notice")]
        [System.Xml.Serialization.XmlEnumAttribute("Government Benefits Notice")]
        Government_Benefits_Notice,
        
        /// <summary>
        /// <para>Health Care Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Care Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Health Care Card")]
        Health_Care_Card,
        
        /// <summary>
        /// <para>International Driver License</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Driver License")]
        [System.Xml.Serialization.XmlEnumAttribute("International Driver License")]
        International_Driver_License,
        
        /// <summary>
        /// <para>International Passport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Passport")]
        [System.Xml.Serialization.XmlEnumAttribute("International Passport")]
        International_Passport,
        
        /// <summary>
        /// <para>Internet Service Provider Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internet Service Provider Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Internet Service Provider Bill")]
        Internet_Service_Provider_Bill,
        
        /// <summary>
        /// <para>Landline Phone Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landline Phone Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Landline Phone Bill")]
        Landline_Phone_Bill,
        
        /// <summary>
        /// <para>Lenders Mortgage Insurance Policy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lenders Mortgage Insurance Policy")]
        [System.Xml.Serialization.XmlEnumAttribute("Lenders Mortgage Insurance Policy")]
        Lenders_Mortgage_Insurance_Policy,
        
        /// <summary>
        /// <para>Marriage Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marriage Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Marriage Certificate")]
        Marriage_Certificate,
        
        /// <summary>
        /// <para>Medicare Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medicare Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Medicare Card")]
        Medicare_Card,
        
        /// <summary>
        /// <para>National Identity Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("National Identity Card")]
        [System.Xml.Serialization.XmlEnumAttribute("National Identity Card")]
        National_Identity_Card,
        
        /// <summary>
        /// <para>New Zealand Birth Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Birth Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Birth Certificate")]
        New_Zealand_Birth_Certificate,
        
        /// <summary>
        /// <para>New Zealand Certificate of Identity</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Certificate of Identity")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Certificate of Identity")]
        New_Zealand_Certificate_Of_Identity,
        
        /// <summary>
        /// <para>New Zealand Citizenship Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Citizenship Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Citizenship Certificate")]
        New_Zealand_Citizenship_Certificate,
        
        /// <summary>
        /// <para>New Zealand Driver Licence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Driver Licence")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Driver Licence")]
        New_Zealand_Driver_Licence,
        
        /// <summary>
        /// <para>New Zealand Firearms Licence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Firearms Licence")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Firearms Licence")]
        New_Zealand_Firearms_Licence,
        
        /// <summary>
        /// <para>New Zealand Passport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Passport")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Passport")]
        New_Zealand_Passport,
        
        /// <summary>
        /// <para>New Zealand Refugee Travel Document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Refugee Travel Document")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Refugee Travel Document")]
        New_Zealand_Refugee_Travel_Document,
        
        /// <summary>
        /// <para>New Zealand Responsible Lending Declaration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Responsible Lending Declaration")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Responsible Lending Declaration")]
        New_Zealand_Responsible_Lending_Declaration,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Pension Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pension Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Pension Card")]
        Pension_Card,
        
        /// <summary>
        /// <para>Proof of Age Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Proof of Age Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Proof of Age Card")]
        Proof_Of_Age_Card,
        
        /// <summary>
        /// <para>Rates Notice</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rates Notice")]
        [System.Xml.Serialization.XmlEnumAttribute("Rates Notice")]
        Rates_Notice,
        
        /// <summary>
        /// <para>Tax Assessment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Assessment")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Assessment")]
        Tax_Assessment,
        
        /// <summary>
        /// <para>Water Utility Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Utility Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Water Utility Bill")]
        Water_Utility_Bill,
    }
    
    /// <summary>
    /// <para>auStateList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("auStateList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("auStateList", Namespace="")]
    public enum AuStateList
    {
        
        /// <summary>
        /// <para>ACT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ACT")]
        ACT,
        
        /// <summary>
        /// <para>NSW</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NSW")]
        NSW,
        
        /// <summary>
        /// <para>NT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NT")]
        NT,
        
        /// <summary>
        /// <para>QLD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("QLD")]
        QLD,
        
        /// <summary>
        /// <para>SA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SA")]
        SA,
        
        /// <summary>
        /// <para>TAS</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("TAS")]
        TAS,
        
        /// <summary>
        /// <para>VIC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("VIC")]
        VIC,
        
        /// <summary>
        /// <para>WA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WA")]
        WA,
    }
    
    /// <summary>
    /// <para>balloonRVInputPatternList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("balloonRVInputPatternList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("balloonRVInputPatternList", Namespace="")]
    public enum BalloonRVInputPatternList
    {
        
        /// <summary>
        /// <para>Amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount")]
        Amount,
        
        /// <summary>
        /// <para>Percent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Percent")]
        Percent,
    }
    
    /// <summary>
    /// <para>basisForAmountRequestedList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("basisForAmountRequestedList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("basisForAmountRequestedList", Namespace="")]
    public enum BasisForAmountRequestedList
    {
        
        /// <summary>
        /// <para>Credit Limit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Limit")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Limit")]
        Credit_Limit,
        
        /// <summary>
        /// <para>Outstanding Balance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outstanding Balance")]
        [System.Xml.Serialization.XmlEnumAttribute("Outstanding Balance")]
        Outstanding_Balance,
    }
    
    /// <summary>
    /// <para>benefitEnquiriesList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("benefitEnquiriesList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("benefitEnquiriesList", Namespace="")]
    public enum BenefitEnquiriesList
    {
        
        /// <summary>
        /// <para>Other.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other.")]
        Other,
        
        /// <summary>
        /// <para>The co-applicant will acquire a reasonably proportionate legal or equitable interest in assets purchased with the loan funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The co-applicant will acquire a reasonably proportionate legal or equitable inter" +
            "est in assets purchased with the loan funds.")]
        [System.Xml.Serialization.XmlEnumAttribute("Proportion in Assets Purchased")]
        Proportion_In_Assets_Purchased,
        
        /// <summary>
        /// <para>A reasonable portion of the loans funds will be used to repay debts or other obligations owed by the co-applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reasonable portion of the loans funds will be used to repay debts or other obli" +
            "gations owed by the co-applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("Repay Debts or Other Obligations")]
        Repay_Debts_Or_Other_Obligations,
    }
    
    /// <summary>
    /// <para>builderTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("builderTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("builderTypeList", Namespace="")]
    public enum BuilderTypeList
    {
        
        /// <summary>
        /// <para>Licensed Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Licensed Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("Licensed Builder")]
        Licensed_Builder,
        
        /// <summary>
        /// <para>Owner Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Owner Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner Builder")]
        Owner_Builder,
        
        /// <summary>
        /// <para>Unlicensed Builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unlicensed Builder")]
        [System.Xml.Serialization.XmlEnumAttribute("Unlicensed Builder")]
        Unlicensed_Builder,
    }
    
    /// <summary>
    /// <para>businessChannelTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("businessChannelTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("businessChannelTypeList", Namespace="")]
    public enum BusinessChannelTypeList
    {
        
        /// <summary>
        /// <para>Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank")]
        Bank,
        
        /// <summary>
        /// <para>Building Society</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Society")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Society")]
        Building_Society,
        
        /// <summary>
        /// <para>Credit Union</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Union")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Union")]
        Credit_Union,
        
        /// <summary>
        /// <para>Mortgage Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mortgage Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Manager")]
        Mortgage_Manager,
        
        /// <summary>
        /// <para>Non Bank Lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Bank Lender")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Bank Lender")]
        Non_Bank_Lender,
    }
    
    /// <summary>
    /// <para>A list of the types of business structure for an enterprise, excluding trusts.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of the types of business structure for an enterprise, excluding trusts.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("businessStructureExcludingTrustList", Namespace="")]
    public enum BusinessStructureExcludingTrustList
    {
        
        /// <summary>
        /// <para>A company is a separate legal entity, unlike a sole trader or a partnership structure. This means the company has the same rights as a natural person and can incur debt, sue and be sued. The company's owners (the shareholders) can limit their personal liability and are generally not liable for company debts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A company is a separate legal entity, unlike a sole trader or a partnership structure. This means the company has the same rights as a natural person and can incur debt, sue and be sued. The company's owners (the shareholders) can limit their personal liability and are generally not liable for company debts.")]
        Company,
        
        /// <summary>
        /// <para>A partnership is a type of business structure that involves a number of entities who carry on a business together.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A partnership is a type of business structure that involves a number of entities " +
            "who carry on a business together.")]
        Partnership,
        
        /// <summary>
        /// <para>A sole trader business structure is a person trading as the individual legally responsible for all aspects of the business.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A sole trader business structure is a person trading as the individual legally re" +
            "sponsible for all aspects of the business.")]
        [System.Xml.Serialization.XmlEnumAttribute("Sole Trader")]
        Sole_Trader,
    }
    
    /// <summary>
    /// <para>A list of the types of business structure for an enterprise.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of the types of business structure for an enterprise.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("businessStructureFullList", Namespace="")]
    public enum BusinessStructureFullList
    {
        
        /// <summary>
        /// <para>A company is a separate legal entity, unlike a sole trader or a partnership structure. This means the company has the same rights as a natural person and can incur debt, sue and be sued. The company's owners (the shareholders) can limit their personal liability and are generally not liable for company debts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A company is a separate legal entity, unlike a sole trader or a partnership structure. This means the company has the same rights as a natural person and can incur debt, sue and be sued. The company's owners (the shareholders) can limit their personal liability and are generally not liable for company debts.")]
        Company,
        
        /// <summary>
        /// <para>A partnership is a type of business structure that involves a number of entities who carry on a business together.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A partnership is a type of business structure that involves a number of entities " +
            "who carry on a business together.")]
        Partnership,
        
        /// <summary>
        /// <para>A sole trader business structure is a person trading as the individual legally responsible for all aspects of the business.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A sole trader business structure is a person trading as the individual legally re" +
            "sponsible for all aspects of the business.")]
        [System.Xml.Serialization.XmlEnumAttribute("Sole Trader")]
        Sole_Trader,
        
        /// <summary>
        /// <para>A Trust is an obligation imposed on a person - a trustee - to hold property or assets (such as business assets) for the benefit of others, known as beneficiaries.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Trust is an obligation imposed on a person - a trustee - to hold property or as" +
            "sets (such as business assets) for the benefit of others, known as beneficiaries" +
            ".")]
        Trust,
    }
    
    /// <summary>
    /// <para>A list of amounts that can be used as the base value to calculate a fee, when the fee is given as a percentage rate.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of amounts that can be used as the base value to calculate a fee, when the" +
        " fee is given as a percentage rate.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("calculationBasisList", Namespace="")]
    public enum CalculationBasisList
    {
        
        /// <summary>
        /// <para>The balance of the loan amount is to be used as the base value to calculate the fee amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The balance of the loan amount is to be used as the base value to calculate the f" +
            "ee amount.")]
        Balance,
        
        /// <summary>
        /// <para>The limit of the loan amount is to be used as the base value to calculate the fee amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The limit of the loan amount is to be used as the base value to calculate the fee" +
            " amount.")]
        Limit,
    }
    
    /// <summary>
    /// <para>cleaningEquipmentTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("cleaningEquipmentTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cleaningEquipmentTypeList", Namespace="")]
    public enum CleaningEquipmentTypeList
    {
        
        /// <summary>
        /// <para>Dry Cleaning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dry Cleaning")]
        [System.Xml.Serialization.XmlEnumAttribute("Dry Cleaning")]
        Dry_Cleaning,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Vacuum Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vacuum Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Vacuum Equipment")]
        Vacuum_Equipment,
        
        /// <summary>
        /// <para>Washers and Dryers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Washers and Dryers")]
        [System.Xml.Serialization.XmlEnumAttribute("Washers and Dryers")]
        Washers_And_Dryers,
        
        /// <summary>
        /// <para>Waste Bins</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Waste Bins")]
        [System.Xml.Serialization.XmlEnumAttribute("Waste Bins")]
        Waste_Bins,
    }
    
    /// <summary>
    /// <para>A list of options available for selecting the source of funds from a third party institution used to clear an existing liability (as opposed to funds from the loan under application).</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of options available for selecting the source of funds from a third party " +
        "institution used to clear an existing liability (as opposed to funds from the lo" +
        "an under application).")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("clearingFromOtherSourceList", Namespace="")]
    public enum ClearingFromOtherSourceList
    {
        
        /// <summary>
        /// <para>No part of the existing loan will be paid out using loan funds from a third party institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No part of the existing loan will be paid out using loan funds from a third party" +
            " institution.")]
        No,
        
        /// <summary>
        /// <para>The existing loan will be partially paid out using loan funds being applied for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The existing loan will be partially paid out using loan funds being applied for.")]
        Partial,
        
        /// <summary>
        /// <para>The existing loan will be completely paid out using loan funds from a third party institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The existing loan will be completely paid out using loan funds from a third party" +
            " institution.")]
        Yes,
    }
    
    /// <summary>
    /// <para>clearingFromThisLoanList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("clearingFromThisLoanList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("clearingFromThisLoanList", Namespace="")]
    public enum ClearingFromThisLoanList
    {
        
        /// <summary>
        /// <para>No part of the existing loan will be paid out using loan funds being applied for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No part of the existing loan will be paid out using loan funds being applied for." +
            "")]
        No,
        
        /// <summary>
        /// <para>The existing loan will be partially paid out using loan funds being applied for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The existing loan will be partially paid out using loan funds being applied for.")]
        Partial,
        
        /// <summary>
        /// <para>The existing loan will be completely paid out using loan funds being applied for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The existing loan will be completely paid out using loan funds being applied for." +
            "")]
        Yes,
    }
    
    /// <summary>
    /// <para>coApplicantBenefitList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("coApplicantBenefitList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("coApplicantBenefitList", Namespace="")]
    public enum CoApplicantBenefitList
    {
        
        /// <summary>
        /// <para>The co-applicant has confirmed that they will not receive a substantial benefit from the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The co-applicant has confirmed that they will not receive a substantial benefit f" +
            "rom the loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("No Substantial Benefit")]
        No_Substantial_Benefit,
        
        /// <summary>
        /// <para>The co-applicant has confirmed that they will not receive a substantial benefit from the loan and have confirmed they still want to proceed as a co-applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The co-applicant has confirmed that they will not receive a substantial benefit f" +
            "rom the loan and have confirmed they still want to proceed as a co-applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("No Substantial Benefit and Proceed")]
        No_Substantial_Benefit_And_Proceed,
        
        /// <summary>
        /// <para>The co-applicant has confirmed that they will receive a substantial benefit from the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The co-applicant has confirmed that they will receive a substantial benefit from " +
            "the loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Substantial Benefit")]
        Substantial_Benefit,
    }
    
    /// <summary>
    /// <para>collateralTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("collateralTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("collateralTypeList", Namespace="")]
    public enum CollateralTypeList
    {
        
        /// <summary>
        /// <para>Commercial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial")]
        Commercial,
        
        /// <summary>
        /// <para>Consumer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Consumer")]
        Consumer,
    }
    
    /// <summary>
    /// <para>commercialTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("commercialTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("commercialTypeList", Namespace="")]
    public enum CommercialTypeList
    {
        
        /// <summary>
        /// <para>A block of units or flats where the units/flats all come under a single title.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A block of units or flats where the units/flats all come under a single title.")]
        [System.Xml.Serialization.XmlEnumAttribute("Block of Units or Flats")]
        Block_Of_Units_Or_Flats,
        
        /// <summary>
        /// <para>Factory</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Factory")]
        Factory,
        
        /// <summary>
        /// <para>A multiple dwelling development is where the units may exist under individual titles.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A multiple dwelling development is where the units may exist under individual tit" +
            "les.")]
        [System.Xml.Serialization.XmlEnumAttribute("Multiple Dwelling Development")]
        Multiple_Dwelling_Development,
        
        /// <summary>
        /// <para>Non Specialised Commercial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Specialised Commercial")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Specialised Commercial")]
        Non_Specialised_Commercial,
        
        /// <summary>
        /// <para>Offices</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offices")]
        Offices,
        
        /// <summary>
        /// <para>Commercial premises of a type that is not described in any of the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial premises of a type that is not described in any of the other enumerate" +
            "d values.")]
        Other,
        
        /// <summary>
        /// <para>Professional chambers, such as barristers chambers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Professional chambers, such as barristers chambers.")]
        [System.Xml.Serialization.XmlEnumAttribute("Professional Chambers")]
        Professional_Chambers,
        
        /// <summary>
        /// <para>Mixed usage residential commercial, such as a shop front with an apartment residence over.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed usage residential commercial, such as a shop front with an apartment reside" +
            "nce over.")]
        [System.Xml.Serialization.XmlEnumAttribute("Residential Commercial")]
        Residential_Commercial,
        
        /// <summary>
        /// <para>Retail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retail")]
        Retail,
        
        /// <summary>
        /// <para>Retirement village accommodation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retirement village accommodation.")]
        [System.Xml.Serialization.XmlEnumAttribute("Retirement Village")]
        Retirement_Village,
        
        /// <summary>
        /// <para>Land that does not have a structure erected on it.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Land that does not have a structure erected on it.")]
        [System.Xml.Serialization.XmlEnumAttribute("Vacant Land")]
        Vacant_Land,
        
        /// <summary>
        /// <para>Warehouse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Warehouse")]
        Warehouse,
    }
    
    /// <summary>
    /// <para>commissionBeneficiaryList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("commissionBeneficiaryList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("commissionBeneficiaryList", Namespace="")]
    public enum CommissionBeneficiaryList
    {
        
        /// <summary>
        /// <para>Aggregator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aggregator")]
        Aggregator,
        
        /// <summary>
        /// <para>Originator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Originator")]
        Originator,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
    }
    
    /// <summary>
    /// <para>commissionStructureList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("commissionStructureList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("commissionStructureList", Namespace="")]
    public enum CommissionStructureList
    {
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>An ongoing trail commission will be paid post-settlement, no upfront commission will be paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An ongoing trail commission will be paid post-settlement, no upfront commission w" +
            "ill be paid.")]
        [System.Xml.Serialization.XmlEnumAttribute("Trail Only")]
        Trail_Only,
        
        /// <summary>
        /// <para>An up front commission only will be paid on settlement of the loan, no trail commission is payable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An up front commission only will be paid on settlement of the loan, no trail comm" +
            "ission is payable.")]
        [System.Xml.Serialization.XmlEnumAttribute("Up Front Only")]
        Up_Front_Only,
        
        /// <summary>
        /// <para>An up front commission only will be paid on settlement of the loan, as well as an ongoing trail commission.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An up front commission only will be paid on settlement of the loan, as well as an" +
            " ongoing trail commission.")]
        [System.Xml.Serialization.XmlEnumAttribute("Up Front Plus Trail")]
        Up_Front_Plus_Trail,
    }
    
    /// <summary>
    /// <para>conditionList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("conditionList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionList", Namespace="")]
    public enum ConditionList
    {
        
        /// <summary>
        /// <para>Demo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Demo")]
        Demo,
        
        /// <summary>
        /// <para>New</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New")]
        New,
        
        /// <summary>
        /// <para>Refurbished</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refurbished")]
        Refurbished,
        
        /// <summary>
        /// <para>Used</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Used")]
        Used,
    }
    
    /// <summary>
    /// <para>conditionOwnerApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("conditionOwnerApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionOwnerApplicationInstructionsList", Namespace="")]
    public enum ConditionOwnerApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Applicant")]
        Applicant,
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Borrower's Solicitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Borrower\'s Solic" +
            "itor")]
        [System.Xml.Serialization.XmlEnumAttribute("Borrower\'s Solicitor")]
        BorrowerSingleQuoteS_Solicitor,
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Branch</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Branch")]
        Branch,
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Broker")]
        Broker,
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Loan Officer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Loan Officer")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Officer")]
        Loan_Officer,
        
        /// <summary>
        /// <para>The current responsible party for actioning the Condition is the Settlement Agent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current responsible party for actioning the Condition is the Settlement Agent" +
            "")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Agent")]
        Settlement_Agent,
    }
    
    /// <summary>
    /// <para>conditionResponseStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("conditionResponseStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionResponseStatusList", Namespace="")]
    public enum ConditionResponseStatusList
    {
        
        /// <summary>
        /// <para>The submitting party attests that the condition has been met, and if supporting documentation is required it is attached.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The submitting party attests that the condition has been met, and if supporting d" +
            "ocumentation is required it is attached.")]
        Met,
        
        /// <summary>
        /// <para>The submitting party attests that the condition has not been met. The condition response description may include a request that the condition be waived.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The submitting party attests that the condition has not been met. The condition r" +
            "esponse description may include a request that the condition be waived.")]
        [System.Xml.Serialization.XmlEnumAttribute("Not Met")]
        Not_Met,
        
        /// <summary>
        /// <para>The submitting party attests that the condition has been met in part, and if supporting documentation is required it is attached.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The submitting party attests that the condition has been met in part, and if supp" +
            "orting documentation is required it is attached.")]
        [System.Xml.Serialization.XmlEnumAttribute("Partially Met")]
        Partially_Met,
    }
    
    /// <summary>
    /// <para>conditionStatusApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("conditionStatusApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionStatusApplicationInstructionsList", Namespace="")]
    public enum ConditionStatusApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>The Condition has not been satisfied</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition has not been satisfied")]
        [System.Xml.Serialization.XmlEnumAttribute("Not Satisfied")]
        Not_Satisfied,
        
        /// <summary>
        /// <para>The Condition status is Open and awaiting actioning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition status is Open and awaiting actioning")]
        Open,
        
        /// <summary>
        /// <para>The Condition has been referred for actioning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition has been referred for actioning")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred to Assessor")]
        Referred_To_Assessor,
        
        /// <summary>
        /// <para>The Condition has been satisfied</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition has been satisfied")]
        Satisfied,
        
        /// <summary>
        /// <para>The Condition has been waived</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition has been waived")]
        Waived,
    }
    
    /// <summary>
    /// <para>constructionTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("constructionTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("constructionTypeList", Namespace="")]
    public enum ConstructionTypeList
    {
        
        /// <summary>
        /// <para>Full Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Full Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Construction")]
        Full_Construction,
        
        /// <summary>
        /// <para>Home Extension</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Extension")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Extension")]
        Home_Extension,
        
        /// <summary>
        /// <para>House Land Package</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("House Land Package")]
        [System.Xml.Serialization.XmlEnumAttribute("House Land Package")]
        House_Land_Package,
        
        /// <summary>
        /// <para>Minor Non Structural Repairs</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Minor Non Structural Repairs")]
        [System.Xml.Serialization.XmlEnumAttribute("Minor Non Structural Repairs")]
        Minor_Non_Structural_Repairs,
        
        /// <summary>
        /// <para>Renovation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Renovation")]
        Renovation,
        
        /// <summary>
        /// <para>Weather Tightness Repairs addresses a building's weathertightness and durability issues in order to make the dwelling compliant with the NZ Building Code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weather Tightness Repairs addresses a building\'s weathertightness and durability " +
            "issues in order to make the dwelling compliant with the NZ Building Code.")]
        [System.Xml.Serialization.XmlEnumAttribute("Weather Tightness Repairs")]
        Weather_Tightness_Repairs,
    }
    
    /// <summary>
    /// <para>contactEmailTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("contactEmailTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("contactEmailTypeList", Namespace="")]
    public enum ContactEmailTypeList
    {
        
        /// <summary>
        /// <para>Email address is a home or personal address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Email address is a home or personal address.")]
        Home,
        
        /// <summary>
        /// <para>Email address is a work or business address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Email address is a work or business address.")]
        Work,
    }
    
    /// <summary>
    /// <para>contributionFundsTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("contributionFundsTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("contributionFundsTypeList", Namespace="")]
    public enum ContributionFundsTypeList
    {
        
        /// <summary>
        /// <para>The source of funds is cash or equivalent, other than genuine savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is cash or equivalent, other than genuine savings.")]
        Cash,
        
        /// <summary>
        /// <para>Existing Equity</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Existing Equity")]
        [System.Xml.Serialization.XmlEnumAttribute("Existing Equity")]
        Existing_Equity,
        
        /// <summary>
        /// <para>The source of funds is a First Home Owners Grant program to assist first home buyers to purchase an O/O home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is a First Home Owners Grant program to assist first home buy" +
            "ers to purchase an O/O home.")]
        [System.Xml.Serialization.XmlEnumAttribute("First Home Owner Grant")]
        First_Home_Owner_Grant,
        
        /// <summary>
        /// <para>The source of funds is savings that have been accumulated over time, with a savings institution or a liquidatable investment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is savings that have been accumulated over time, with a savin" +
            "gs institution or a liquidatable investment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Genuine Savings")]
        Genuine_Savings,
        
        /// <summary>
        /// <para>The source of funds is a gift from a third party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is a gift from a third party.")]
        Gift,
        
        /// <summary>
        /// <para>The funds will be provided from an inheritance that the borrower(s) have the right to use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds will be provided from an inheritance that the borrower(s) have the righ" +
            "t to use.")]
        Inheritance,
        
        /// <summary>
        /// <para>Kainga Ora Grant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kainga Ora Grant")]
        [System.Xml.Serialization.XmlEnumAttribute("Kainga Ora Grant")]
        Kainga_Ora_Grant,
        
        /// <summary>
        /// <para>The source of funds is a KiwiSaver.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is a KiwiSaver.")]
        KiwiSaver,
        
        /// <summary>
        /// <para>The net proceeds of sale of a property, after payment of all costs associated with the sale including agent's fees.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net proceeds of sale of a property, after payment of all costs associated wit" +
            "h the sale including agent\'s fees.")]
        [System.Xml.Serialization.XmlEnumAttribute("Net Proceeds from Sale of Property")]
        Net_Proceeds_From_Sale_Of_Property,
        
        /// <summary>
        /// <para>The source of funds is not described by any of the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of funds is not described by any of the other enumerated values.")]
        Other,
        
        /// <summary>
        /// <para>Redraw</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Redraw")]
        Redraw,
        
        /// <summary>
        /// <para>Sale of Non Real Estate Asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sale of Non Real Estate Asset")]
        [System.Xml.Serialization.XmlEnumAttribute("Sale of Non Real Estate Asset")]
        Sale_Of_Non_Real_Estate_Asset,
        
        /// <summary>
        /// <para>Secured VISA</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secured VISA")]
        [System.Xml.Serialization.XmlEnumAttribute("Secured VISA")]
        Secured_VISA,
        
        /// <summary>
        /// <para>The funds will be provided from a superannuation fund.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds will be provided from a superannuation fund.")]
        Superannuation,
        
        /// <summary>
        /// <para>The funds will be provided from an existing term deposit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds will be provided from an existing term deposit.")]
        [System.Xml.Serialization.XmlEnumAttribute("Term Deposit")]
        Term_Deposit,
        
        /// <summary>
        /// <para>The funds will be borrowed from a third party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds will be borrowed from a third party.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unsecured Borrowing")]
        Unsecured_Borrowing,
    }
    
    /// <summary>
    /// <para>creditCardTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("creditCardTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("creditCardTypeList", Namespace="")]
    public enum CreditCardTypeList
    {
        
        /// <summary>
        /// <para>American Express</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("American Express")]
        [System.Xml.Serialization.XmlEnumAttribute("American Express")]
        American_Express,
        
        /// <summary>
        /// <para>Bank Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank Card")]
        Bank_Card,
        
        /// <summary>
        /// <para>Diners Club</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diners Club")]
        [System.Xml.Serialization.XmlEnumAttribute("Diners Club")]
        Diners_Club,
        
        /// <summary>
        /// <para>MasterCard</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MasterCard")]
        MasterCard,
        
        /// <summary>
        /// <para>Other Credit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Credit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Credit Card")]
        Other_Credit_Card,
        
        /// <summary>
        /// <para>Visa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Visa")]
        Visa,
    }
    
    /// <summary>
    /// <para>creditHistoryIssueList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("creditHistoryIssueList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("creditHistoryIssueList", Namespace="")]
    public enum CreditHistoryIssueList
    {
        
        /// <summary>
        /// <para>Application for Hardship with Existing Lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application for Hardship with Existing Lender")]
        [System.Xml.Serialization.XmlEnumAttribute("Application for Hardship with Existing Lender")]
        Application_For_Hardship_With_Existing_Lender,
        
        /// <summary>
        /// <para>Arrears</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arrears")]
        Arrears,
        
        /// <summary>
        /// <para>Bankruptcy</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bankruptcy")]
        Bankruptcy,
        
        /// <summary>
        /// <para>Default</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Default")]
        Default,
        
        /// <summary>
        /// <para>Financial Stress from Current Commitments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Stress from Current Commitments")]
        [System.Xml.Serialization.XmlEnumAttribute("Financial Stress from Current Commitments")]
        Financial_Stress_From_Current_Commitments,
        
        /// <summary>
        /// <para>Insolvency</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insolvency")]
        Insolvency,
        
        /// <summary>
        /// <para>Judgement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Judgement")]
        Judgement,
        
        /// <summary>
        /// <para>Legal Proceeding</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal Proceeding")]
        [System.Xml.Serialization.XmlEnumAttribute("Legal Proceeding")]
        Legal_Proceeding,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Scheme of Arrangement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scheme of Arrangement")]
        [System.Xml.Serialization.XmlEnumAttribute("Scheme of Arrangement")]
        Scheme_Of_Arrangement,
        
        /// <summary>
        /// <para>Writ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Writ")]
        Writ,
    }
    
    /// <summary>
    /// <para>creditReportingBodyList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("creditReportingBodyList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("creditReportingBodyList", Namespace="")]
    public enum CreditReportingBodyList
    {
        
        /// <summary>
        /// <para>The credit reporting body who reported the default is Dun and Bradstreet</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The credit reporting body who reported the default is Dun and Bradstreet")]
        [System.Xml.Serialization.XmlEnumAttribute("D and B")]
        D_And_B,
        
        /// <summary>
        /// <para>The credit reporting body who reported the default is Experian</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The credit reporting body who reported the default is Experian")]
        Experian,
        
        /// <summary>
        /// <para>The credit reporting body who reported the default is Veda</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The credit reporting body who reported the default is Veda")]
        Veda,
    }
    
    /// <summary>
    /// <para>creditStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("creditStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("creditStatusList", Namespace="")]
    public enum CreditStatusList
    {
        
        /// <summary>
        /// <para>The party's credit history discloses no defaults, writ and summonses, bankruptcy/insolvency or other credit issues; and the applicant shall be able to indicate whether they have answered "No" to both questions on credit performance in the Applicant Declaration Authority and Acknowledgement section of the application form.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The party's credit history discloses no defaults, writ and summonses, bankruptcy/insolvency or other credit issues; and the applicant shall be able to indicate whether they have answered ""No"" to both questions on credit performance in the Applicant Declaration Authority and Acknowledgement section of the application form.")]
        Clean,
        
        /// <summary>
        /// <para>Unknown</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unknown")]
        Unknown,
        
        /// <summary>
        /// <para>The party's credit history discloses defaults, writ and summonses, bankruptcy/insolvency or other credit issues; or the applicant has answered "Yes" to one of the questions on credit performance in the Applicant Declaration Authority and Acknowledgement section of the application form.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The party's credit history discloses defaults, writ and summonses, bankruptcy/insolvency or other credit issues; or the applicant has answered ""Yes"" to one of the questions on credit performance in the Applicant Declaration Authority and Acknowledgement section of the application form.")]
        Warning,
    }
    
    /// <summary>
    /// <para>currencyCodeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("currencyCodeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("currencyCodeList", Namespace="")]
    public enum CurrencyCodeList
    {
        
        /// <summary>
        /// <para>UAE Dirham</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("UAE Dirham")]
        AED,
        
        /// <summary>
        /// <para>Afghani</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Afghani")]
        AFN,
        
        /// <summary>
        /// <para>Lek</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lek")]
        ALL,
        
        /// <summary>
        /// <para>Armenian Dram</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Armenian Dram")]
        AMD,
        
        /// <summary>
        /// <para>Netherlands Antillean Guilder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Netherlands Antillean Guilder")]
        ANG,
        
        /// <summary>
        /// <para>Kwanza</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwanza")]
        AOA,
        
        /// <summary>
        /// <para>Argentine Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Argentine Peso")]
        ARS,
        
        /// <summary>
        /// <para>Australian Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Australian Dollar")]
        AUD,
        
        /// <summary>
        /// <para>Aruban Florin</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aruban Florin")]
        AWG,
        
        /// <summary>
        /// <para>Azerbaijanian Manat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Azerbaijanian Manat")]
        AZN,
        
        /// <summary>
        /// <para>Convertible Mark</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Convertible Mark")]
        BAM,
        
        /// <summary>
        /// <para>Barbados Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Barbados Dollar")]
        BBD,
        
        /// <summary>
        /// <para>Taka</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Taka")]
        BDT,
        
        /// <summary>
        /// <para>Bulgarian Lev</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bulgarian Lev")]
        BGN,
        
        /// <summary>
        /// <para>Bahraini Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bahraini Dinar")]
        BHD,
        
        /// <summary>
        /// <para>Burundi Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Burundi Franc")]
        BIF,
        
        /// <summary>
        /// <para>Bermudian Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bermudian Dollar")]
        BMD,
        
        /// <summary>
        /// <para>Brunei Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brunei Dollar")]
        BND,
        
        /// <summary>
        /// <para>Boliviano</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Boliviano")]
        BOB,
        
        /// <summary>
        /// <para>Mvdol</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mvdol")]
        BOV,
        
        /// <summary>
        /// <para>Brazilian Real</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brazilian Real")]
        BRL,
        
        /// <summary>
        /// <para>Bahamian Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bahamian Dollar")]
        BSD,
        
        /// <summary>
        /// <para>Ngultrum</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ngultrum")]
        BTN,
        
        /// <summary>
        /// <para>Pula</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pula")]
        BWP,
        
        /// <summary>
        /// <para>Belarussian Ruble</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belarussian Ruble")]
        BYR,
        
        /// <summary>
        /// <para>Belize Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Belize Dollar")]
        BZD,
        
        /// <summary>
        /// <para>Canadian Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Canadian Dollar")]
        CAD,
        
        /// <summary>
        /// <para>Congolese Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Congolese Franc")]
        CDF,
        
        /// <summary>
        /// <para>WIR Euro</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIR Euro")]
        CHE,
        
        /// <summary>
        /// <para>Swiss Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Swiss Franc")]
        CHF,
        
        /// <summary>
        /// <para>WIR Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("WIR Franc")]
        CHW,
        
        /// <summary>
        /// <para>Unidad de Fomento</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unidad de Fomento")]
        CLF,
        
        /// <summary>
        /// <para>Chilean Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chilean Peso")]
        CLP,
        
        /// <summary>
        /// <para>Yuan Renminbi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yuan Renminbi")]
        CNY,
        
        /// <summary>
        /// <para>Colombian Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Colombian Peso")]
        COP,
        
        /// <summary>
        /// <para>Unidad de Valor Real</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unidad de Valor Real")]
        COU,
        
        /// <summary>
        /// <para>Costa Rican Colon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Costa Rican Colon")]
        CRC,
        
        /// <summary>
        /// <para>Peso Convertible</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peso Convertible")]
        CUC,
        
        /// <summary>
        /// <para>Cuban Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cuban Peso")]
        CUP,
        
        /// <summary>
        /// <para>Cape Verde Escudo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cape Verde Escudo")]
        CVE,
        
        /// <summary>
        /// <para>Czech Koruna</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Czech Koruna")]
        CZK,
        
        /// <summary>
        /// <para>Djibouti Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Djibouti Franc")]
        DJF,
        
        /// <summary>
        /// <para>Danish Krone</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Danish Krone")]
        DKK,
        
        /// <summary>
        /// <para>Dominican Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dominican Peso")]
        DOP,
        
        /// <summary>
        /// <para>Algerian Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Algerian Dinar")]
        DZD,
        
        /// <summary>
        /// <para>Egyptian Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Egyptian Pound")]
        EGP,
        
        /// <summary>
        /// <para>Nakfa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nakfa")]
        ERN,
        
        /// <summary>
        /// <para>Ethiopian Birr</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ethiopian Birr")]
        ETB,
        
        /// <summary>
        /// <para>Euro</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Euro")]
        EUR,
        
        /// <summary>
        /// <para>Fiji Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fiji Dollar")]
        FJD,
        
        /// <summary>
        /// <para>Falkland Islands Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Falkland Islands Pound")]
        FKP,
        
        /// <summary>
        /// <para>Pound Sterling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pound Sterling")]
        GBP,
        
        /// <summary>
        /// <para>Lari</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lari")]
        GEL,
        
        /// <summary>
        /// <para>Ghana Cedi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ghana Cedi")]
        GHS,
        
        /// <summary>
        /// <para>Gibraltar Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gibraltar Pound")]
        GIP,
        
        /// <summary>
        /// <para>Dalasi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dalasi")]
        GMD,
        
        /// <summary>
        /// <para>Guinea Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guinea Franc")]
        GNF,
        
        /// <summary>
        /// <para>Quetzal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quetzal")]
        GTQ,
        
        /// <summary>
        /// <para>Guyana Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guyana Dollar")]
        GYD,
        
        /// <summary>
        /// <para>Hong Kong Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hong Kong Dollar")]
        HKD,
        
        /// <summary>
        /// <para>Lempira</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lempira")]
        HNL,
        
        /// <summary>
        /// <para>Croatian Kuna</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Croatian Kuna")]
        HRK,
        
        /// <summary>
        /// <para>Gourde</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gourde")]
        HTG,
        
        /// <summary>
        /// <para>Forint</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forint")]
        HUF,
        
        /// <summary>
        /// <para>Rupiah</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rupiah")]
        IDR,
        
        /// <summary>
        /// <para>New Israeli Sheqel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Israeli Sheqel")]
        ILS,
        
        /// <summary>
        /// <para>Indian Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indian Rupee")]
        INR,
        
        /// <summary>
        /// <para>Iraqi Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iraqi Dinar")]
        IQD,
        
        /// <summary>
        /// <para>Iranian Rial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iranian Rial")]
        IRR,
        
        /// <summary>
        /// <para>Iceland Krona</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Iceland Krona")]
        ISK,
        
        /// <summary>
        /// <para>Jamaican Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jamaican Dollar")]
        JMD,
        
        /// <summary>
        /// <para>Jordanian Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jordanian Dinar")]
        JOD,
        
        /// <summary>
        /// <para>Yen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yen")]
        JPY,
        
        /// <summary>
        /// <para>Kenyan Shilling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kenyan Shilling")]
        KES,
        
        /// <summary>
        /// <para>Som</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Som")]
        KGS,
        
        /// <summary>
        /// <para>Riel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Riel")]
        KHR,
        
        /// <summary>
        /// <para>Comoro Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comoro Franc")]
        KMF,
        
        /// <summary>
        /// <para>North Korean Won</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("North Korean Won")]
        KPW,
        
        /// <summary>
        /// <para>Won</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Won")]
        KRW,
        
        /// <summary>
        /// <para>Kuwaiti Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kuwaiti Dinar")]
        KWD,
        
        /// <summary>
        /// <para>Cayman Islands Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cayman Islands Dollar")]
        KYD,
        
        /// <summary>
        /// <para>Tenge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenge")]
        KZT,
        
        /// <summary>
        /// <para>Kip</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kip")]
        LAK,
        
        /// <summary>
        /// <para>Lebanese Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lebanese Pound")]
        LBP,
        
        /// <summary>
        /// <para>Sri Lanka Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sri Lanka Rupee")]
        LKR,
        
        /// <summary>
        /// <para>Liberian Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liberian Dollar")]
        LRD,
        
        /// <summary>
        /// <para>Loti</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loti")]
        LSL,
        
        /// <summary>
        /// <para>Lithuanian Litas</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lithuanian Litas")]
        LTL,
        
        /// <summary>
        /// <para>Libyan Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Libyan Dinar")]
        LYD,
        
        /// <summary>
        /// <para>Moroccan Dirham</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Moroccan Dirham")]
        MAD,
        
        /// <summary>
        /// <para>Moldovan Leu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Moldovan Leu")]
        MDL,
        
        /// <summary>
        /// <para>Malagasy Ariary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Malagasy Ariary")]
        MGA,
        
        /// <summary>
        /// <para>Denar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Denar")]
        MKD,
        
        /// <summary>
        /// <para>Kyat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kyat")]
        MMK,
        
        /// <summary>
        /// <para>Tugrik</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tugrik")]
        MNT,
        
        /// <summary>
        /// <para>Pataca</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pataca")]
        MOP,
        
        /// <summary>
        /// <para>Ouguiya</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ouguiya")]
        MRO,
        
        /// <summary>
        /// <para>Mauritius Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mauritius Rupee")]
        MUR,
        
        /// <summary>
        /// <para>Rufiyaa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rufiyaa")]
        MVR,
        
        /// <summary>
        /// <para>Kwacha</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kwacha")]
        MWK,
        
        /// <summary>
        /// <para>Mexican Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mexican Peso")]
        MXN,
        
        /// <summary>
        /// <para>Mexican Unidad de Inversion (UDI)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mexican Unidad de Inversion (UDI)")]
        MXV,
        
        /// <summary>
        /// <para>Malaysian Ringgit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Malaysian Ringgit")]
        MYR,
        
        /// <summary>
        /// <para>Mozambique Metical</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mozambique Metical")]
        MZN,
        
        /// <summary>
        /// <para>Namibia Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Namibia Dollar")]
        NAD,
        
        /// <summary>
        /// <para>Naira</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Naira")]
        NGN,
        
        /// <summary>
        /// <para>Cordoba Oro</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cordoba Oro")]
        NIO,
        
        /// <summary>
        /// <para>Norwegian Krone</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Norwegian Krone")]
        NOK,
        
        /// <summary>
        /// <para>Nepalese Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nepalese Rupee")]
        NPR,
        
        /// <summary>
        /// <para>New Zealand Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Dollar")]
        NZD,
        
        /// <summary>
        /// <para>Rial Omani</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rial Omani")]
        OMR,
        
        /// <summary>
        /// <para>Balboa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Balboa")]
        PAB,
        
        /// <summary>
        /// <para>Nuevo Sol</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nuevo Sol")]
        PEN,
        
        /// <summary>
        /// <para>Kina</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Kina")]
        PGK,
        
        /// <summary>
        /// <para>Philippine Peso</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Philippine Peso")]
        PHP,
        
        /// <summary>
        /// <para>Pakistan Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pakistan Rupee")]
        PKR,
        
        /// <summary>
        /// <para>Zloty</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zloty")]
        PLN,
        
        /// <summary>
        /// <para>Guarani</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Guarani")]
        PYG,
        
        /// <summary>
        /// <para>Qatari Rial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Qatari Rial")]
        QAR,
        
        /// <summary>
        /// <para>New Romanian Leu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Romanian Leu")]
        RON,
        
        /// <summary>
        /// <para>Serbian Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Serbian Dinar")]
        RSD,
        
        /// <summary>
        /// <para>Russian Ruble</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Russian Ruble")]
        RUB,
        
        /// <summary>
        /// <para>Rwanda Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rwanda Franc")]
        RWF,
        
        /// <summary>
        /// <para>Saudi Riyal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saudi Riyal")]
        SAR,
        
        /// <summary>
        /// <para>Solomon Islands Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solomon Islands Dollar")]
        SBD,
        
        /// <summary>
        /// <para>Seychelles Rupee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seychelles Rupee")]
        SCR,
        
        /// <summary>
        /// <para>Sudanese Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sudanese Pound")]
        SDG,
        
        /// <summary>
        /// <para>Swedish Krona</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Swedish Krona")]
        SEK,
        
        /// <summary>
        /// <para>Singapore Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Singapore Dollar")]
        SGD,
        
        /// <summary>
        /// <para>Saint Helena Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saint Helena Pound")]
        SHP,
        
        /// <summary>
        /// <para>Leone</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leone")]
        SLL,
        
        /// <summary>
        /// <para>Somali Shilling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Somali Shilling")]
        SOS,
        
        /// <summary>
        /// <para>Surinam Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surinam Dollar")]
        SRD,
        
        /// <summary>
        /// <para>South Sudanese Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("South Sudanese Pound")]
        SSP,
        
        /// <summary>
        /// <para>Dobra</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dobra")]
        STD,
        
        /// <summary>
        /// <para>El Salvador Colon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("El Salvador Colon")]
        SVC,
        
        /// <summary>
        /// <para>Syrian Pound</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Syrian Pound")]
        SYP,
        
        /// <summary>
        /// <para>Lilangeni</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lilangeni")]
        SZL,
        
        /// <summary>
        /// <para>Baht</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Baht")]
        THB,
        
        /// <summary>
        /// <para>Somoni</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Somoni")]
        TJS,
        
        /// <summary>
        /// <para>Turkmenistan New Manat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turkmenistan New Manat")]
        TMT,
        
        /// <summary>
        /// <para>Tunisian Dinar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tunisian Dinar")]
        TND,
        
        /// <summary>
        /// <para>Pa'anga</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pa\'anga")]
        TOP,
        
        /// <summary>
        /// <para>Turkish Lira</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Turkish Lira")]
        TRY,
        
        /// <summary>
        /// <para>Trinidad and Tobago Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trinidad and Tobago Dollar")]
        TTD,
        
        /// <summary>
        /// <para>New Taiwan Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Taiwan Dollar")]
        TWD,
        
        /// <summary>
        /// <para>Tanzanian Shilling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tanzanian Shilling")]
        TZS,
        
        /// <summary>
        /// <para>Hryvnia</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hryvnia")]
        UAH,
        
        /// <summary>
        /// <para>Uganda Shilling</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uganda Shilling")]
        UGX,
        
        /// <summary>
        /// <para>US Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("US Dollar")]
        USD,
        
        /// <summary>
        /// <para>US Dollar (Next day)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("US Dollar (Next day)")]
        USN,
        
        /// <summary>
        /// <para>Uruguay Peso en Unidades Indexadas (URUIURUI)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uruguay Peso en Unidades Indexadas (URUIURUI)")]
        UYI,
        
        /// <summary>
        /// <para>Peso Uruguayo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peso Uruguayo")]
        UYU,
        
        /// <summary>
        /// <para>Uzbekistan Sum</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Uzbekistan Sum")]
        UZS,
        
        /// <summary>
        /// <para>Bolivar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bolivar")]
        VEF,
        
        /// <summary>
        /// <para>Dong</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dong")]
        VND,
        
        /// <summary>
        /// <para>Vatu</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vatu")]
        VUV,
        
        /// <summary>
        /// <para>Tala</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tala")]
        WST,
        
        /// <summary>
        /// <para>CFA Franc BEAC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CFA Franc BEAC")]
        XAF,
        
        /// <summary>
        /// <para>East Caribbean Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("East Caribbean Dollar")]
        XCD,
        
        /// <summary>
        /// <para>SDR (Special Drawing Right)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SDR (Special Drawing Right)")]
        XDR,
        
        /// <summary>
        /// <para>CFA Franc BCEAO</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CFA Franc BCEAO")]
        XOF,
        
        /// <summary>
        /// <para>CFP Franc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CFP Franc")]
        XPF,
        
        /// <summary>
        /// <para>Sucre</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sucre")]
        XSU,
        
        /// <summary>
        /// <para>ADB Unit of Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ADB Unit of Account")]
        XUA,
        
        /// <summary>
        /// <para>Yemeni Rial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yemeni Rial")]
        YER,
        
        /// <summary>
        /// <para>Rand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rand")]
        ZAR,
        
        /// <summary>
        /// <para>Zambian Kwacha</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zambian Kwacha")]
        ZMW,
        
        /// <summary>
        /// <para>Zimbabwe Dollar</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Zimbabwe Dollar")]
        ZWL,
    }
    
    /// <summary>
    /// <para>A list of the days of each week.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of the days of each week.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("dayOfWeekList", Namespace="")]
    public enum DayOfWeekList
    {
        
        /// <summary>
        /// <para>Friday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Friday")]
        Friday,
        
        /// <summary>
        /// <para>Monday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monday")]
        Monday,
        
        /// <summary>
        /// <para>Saturday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Saturday")]
        Saturday,
        
        /// <summary>
        /// <para>Sunday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sunday")]
        Sunday,
        
        /// <summary>
        /// <para>Thursday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Thursday")]
        Thursday,
        
        /// <summary>
        /// <para>Tuesday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tuesday")]
        Tuesday,
        
        /// <summary>
        /// <para>Wednesday</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wednesday")]
        Wednesday,
    }
    
    /// <summary>
    /// <para>declinedReasonApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("declinedReasonApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("declinedReasonApplicationInstructionsList", Namespace="")]
    public enum DeclinedReasonApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>The loan has been declined because it does not confirm to the credit provider's affordability calculations</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan has been declined because it does not confirm to the credit provider\'s a" +
            "ffordability calculations")]
        Affordability,
        
        /// <summary>
        /// <para>The loan has been declined because the borrower has adverse credit history</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan has been declined because the borrower has adverse credit history")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit History")]
        Credit_History,
        
        /// <summary>
        /// <para>The loan has been declined because the borrower does not have acceptable employment history</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan has been declined because the borrower does not have acceptable employme" +
            "nt history")]
        [System.Xml.Serialization.XmlEnumAttribute("Employment Security")]
        Employment_Security,
        
        /// <summary>
        /// <para>The credit provider has determined that the borrower has an unacceptable level of debt</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The credit provider has determined that the borrower has an unacceptable level of" +
            " debt")]
        [System.Xml.Serialization.XmlEnumAttribute("Level of Debt")]
        Level_Of_Debt,
        
        /// <summary>
        /// <para>The loan has been declined because the security property has come in too low or has some adverse comments against it</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan has been declined because the security property has come in too low or h" +
            "as some adverse comments against it")]
        Security,
    }
    
    /// <summary>
    /// <para>depositAccountTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("depositAccountTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("depositAccountTypeList", Namespace="")]
    public enum DepositAccountTypeList
    {
        
        /// <summary>
        /// <para>Standard deposit accounts that may or may not pay interest and funds can be withdrawn on demand.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Standard deposit accounts that may or may not pay interest and funds can be withd" +
            "rawn on demand.")]
        Standard,
        
        /// <summary>
        /// <para>An investment of cash placed with a financial institution for a fixed term with a fixed interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An investment of cash placed with a financial institution for a fixed term with a" +
            " fixed interest rate.")]
        [System.Xml.Serialization.XmlEnumAttribute("Term Deposit")]
        Term_Deposit,
        
        /// <summary>
        /// <para>Funds can be immediately withdrawn, transferred or used by the depositor without restrictions or limits.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds can be immediately withdrawn, transferred or used by the depositor without " +
            "restrictions or limits.")]
        Transactional,
    }
    
    /// <summary>
    /// <para>documentCategoryList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("documentCategoryList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("documentCategoryList", Namespace="")]
    public enum DocumentCategoryList
    {
        
        /// <summary>
        /// <para>Non Photographic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Photographic")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Photographic")]
        Non_Photographic,
        
        /// <summary>
        /// <para>Photographic</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photographic")]
        Photographic,
        
        /// <summary>
        /// <para>Secondary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secondary")]
        Secondary,
    }
    
    /// <summary>
    /// <para>A list of valid document types that can be used to support the verification of a person's identity.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of valid document types that can be used to support the verification of a " +
        "person\'s identity.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("documentTypeList", Namespace="")]
    public enum DocumentTypeList
    {
        
        /// <summary>
        /// <para>18+ Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("18+ Card")]
        [System.Xml.Serialization.XmlEnumAttribute("18+ Card")]
        Item18Plus_Card,
        
        /// <summary>
        /// <para>Bank Statement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank Statement")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank Statement")]
        Bank_Statement,
        
        /// <summary>
        /// <para>Credit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>Debit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Debit Card")]
        Debit_Card,
        
        /// <summary>
        /// <para>Deed Poll</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deed Poll")]
        [System.Xml.Serialization.XmlEnumAttribute("Deed Poll")]
        Deed_Poll,
        
        /// <summary>
        /// <para>A Certificate of Registration by Descent is issued by the Government of Australia or New Zealand to a person who was born outside the country and at least one of their parents was an Australian or New Zealand citizen at the time of their birth.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Certificate of Registration by Descent is issued by the Government of Australia" +
            " or New Zealand to a person who was born outside the country and at least one of" +
            " their parents was an Australian or New Zealand citizen at the time of their bir" +
            "th.")]
        [System.Xml.Serialization.XmlEnumAttribute("Descent Certificate")]
        Descent_Certificate,
        
        /// <summary>
        /// <para>Electricity Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electricity Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Electricity Bill")]
        Electricity_Bill,
        
        /// <summary>
        /// <para>Emergency Travel Document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Emergency Travel Document")]
        [System.Xml.Serialization.XmlEnumAttribute("Emergency Travel Document")]
        Emergency_Travel_Document,
        
        /// <summary>
        /// <para>Foreign Birth Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Birth Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Birth Certificate")]
        Foreign_Birth_Certificate,
        
        /// <summary>
        /// <para>Foreign Citizenship Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Citizenship Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Citizenship Certificate")]
        Foreign_Citizenship_Certificate,
        
        /// <summary>
        /// <para>Gas Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gas Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Gas Bill")]
        Gas_Bill,
        
        /// <summary>
        /// <para>Government Benefits Notice</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government Benefits Notice")]
        [System.Xml.Serialization.XmlEnumAttribute("Government Benefits Notice")]
        Government_Benefits_Notice,
        
        /// <summary>
        /// <para>Health Care Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health Care Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Health Care Card")]
        Health_Care_Card,
        
        /// <summary>
        /// <para>International Driver License</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Driver License")]
        [System.Xml.Serialization.XmlEnumAttribute("International Driver License")]
        International_Driver_License,
        
        /// <summary>
        /// <para>International Passport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("International Passport")]
        [System.Xml.Serialization.XmlEnumAttribute("International Passport")]
        International_Passport,
        
        /// <summary>
        /// <para>Internet Service Provider Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Internet Service Provider Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Internet Service Provider Bill")]
        Internet_Service_Provider_Bill,
        
        /// <summary>
        /// <para>Landline Phone Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Landline Phone Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Landline Phone Bill")]
        Landline_Phone_Bill,
        
        /// <summary>
        /// <para>Marriage Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Marriage Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Marriage Certificate")]
        Marriage_Certificate,
        
        /// <summary>
        /// <para>Medicare Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medicare Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Medicare Card")]
        Medicare_Card,
        
        /// <summary>
        /// <para>National Identity Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("National Identity Card")]
        [System.Xml.Serialization.XmlEnumAttribute("National Identity Card")]
        National_Identity_Card,
        
        /// <summary>
        /// <para>New Zealand Birth Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Birth Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Birth Certificate")]
        New_Zealand_Birth_Certificate,
        
        /// <summary>
        /// <para>New Zealand Certificate of Identity</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Certificate of Identity")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Certificate of Identity")]
        New_Zealand_Certificate_Of_Identity,
        
        /// <summary>
        /// <para>New Zealand Citizenship Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Citizenship Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Citizenship Certificate")]
        New_Zealand_Citizenship_Certificate,
        
        /// <summary>
        /// <para>New Zealand Driver Licence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Driver Licence")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Driver Licence")]
        New_Zealand_Driver_Licence,
        
        /// <summary>
        /// <para>New Zealand Firearms Licence</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Firearms Licence")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Firearms Licence")]
        New_Zealand_Firearms_Licence,
        
        /// <summary>
        /// <para>New Zealand Passport</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Passport")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Passport")]
        New_Zealand_Passport,
        
        /// <summary>
        /// <para>New Zealand Refugee Travel Document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("New Zealand Refugee Travel Document")]
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Refugee Travel Document")]
        New_Zealand_Refugee_Travel_Document,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Pension Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pension Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Pension Card")]
        Pension_Card,
        
        /// <summary>
        /// <para>Proof of Age Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Proof of Age Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Proof of Age Card")]
        Proof_Of_Age_Card,
        
        /// <summary>
        /// <para>Rates Notice</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rates Notice")]
        [System.Xml.Serialization.XmlEnumAttribute("Rates Notice")]
        Rates_Notice,
        
        /// <summary>
        /// <para>Tax Assessment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Assessment")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Assessment")]
        Tax_Assessment,
        
        /// <summary>
        /// <para>Water Utility Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Utility Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Water Utility Bill")]
        Water_Utility_Bill,
    }
    
    /// <summary>
    /// <para>earthMovingMiningAndConstructionSubtypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("earthMovingMiningAndConstructionSubtypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("earthMovingMiningAndConstructionSubtypeList", Namespace="")]
    public enum EarthMovingMiningAndConstructionSubtypeList
    {
        
        /// <summary>
        /// <para>Crusher (subtype of Crushing / Screening).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crusher (subtype of Crushing / Screening).")]
        Crusher,
        
        /// <summary>
        /// <para>Directional Drill (subtype of Drill Rig).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Directional Drill (subtype of Drill Rig).")]
        [System.Xml.Serialization.XmlEnumAttribute("Directional Drill")]
        Directional_Drill,
        
        /// <summary>
        /// <para>Drill and Blast Rig (subtype of Drill Rig).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drill and Blast Rig (subtype of Drill Rig).")]
        [System.Xml.Serialization.XmlEnumAttribute("Drill and Blast Rig")]
        Drill_And_Blast_Rig,
        
        /// <summary>
        /// <para>Screen (subtype of Crushing / Screening).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Screen (subtype of Crushing / Screening).")]
        Screen,
        
        /// <summary>
        /// <para>Skid-Steer Loader (subtype of Loader).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skid-Steer Loader (subtype of Loader).")]
        [System.Xml.Serialization.XmlEnumAttribute("Skid-Steer Loader")]
        Skid_Steer_Loader,
        
        /// <summary>
        /// <para>Tracked Loader (subtype of Loader).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tracked Loader (subtype of Loader).")]
        [System.Xml.Serialization.XmlEnumAttribute("Tracked Loader")]
        Tracked_Loader,
        
        /// <summary>
        /// <para>Wheeled Loader (subtype of Loader).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wheeled Loader (subtype of Loader).")]
        [System.Xml.Serialization.XmlEnumAttribute("Wheeled Loader")]
        Wheeled_Loader,
    }
    
    /// <summary>
    /// <para>earthMovingMiningAndConstructionTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("earthMovingMiningAndConstructionTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("earthMovingMiningAndConstructionTypeList", Namespace="")]
    public enum EarthMovingMiningAndConstructionTypeList
    {
        
        /// <summary>
        /// <para>Concrete Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Concrete Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Concrete Equipment")]
        Concrete_Equipment,
        
        /// <summary>
        /// <para>Conveyor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conveyor")]
        Conveyor,
        
        /// <summary>
        /// <para>Crushing / Screening</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crushing / Screening")]
        [System.Xml.Serialization.XmlEnumAttribute("Crushing / Screening")]
        Crushing_Slash_Screening,
        
        /// <summary>
        /// <para>Dozer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dozer")]
        Dozer,
        
        /// <summary>
        /// <para>Drill Rig</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Drill Rig")]
        [System.Xml.Serialization.XmlEnumAttribute("Drill Rig")]
        Drill_Rig,
        
        /// <summary>
        /// <para>Excavator / Face Shovel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excavator / Face Shovel")]
        [System.Xml.Serialization.XmlEnumAttribute("Excavator / Face Shovel")]
        Excavator_Slash_Face_Shovel,
        
        /// <summary>
        /// <para>Forestry</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forestry")]
        Forestry,
        
        /// <summary>
        /// <para>Grader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grader")]
        Grader,
        
        /// <summary>
        /// <para>Loader</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loader")]
        Loader,
        
        /// <summary>
        /// <para>Off Highway Truck</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Off Highway Truck")]
        [System.Xml.Serialization.XmlEnumAttribute("Off Highway Truck")]
        Off_Highway_Truck,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Road Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Road Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("Road Maintenance")]
        Road_Maintenance,
        
        /// <summary>
        /// <para>Roller / Compacting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Roller / Compacting")]
        [System.Xml.Serialization.XmlEnumAttribute("Roller / Compacting")]
        Roller_Slash_Compacting,
        
        /// <summary>
        /// <para>Scraper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scraper")]
        Scraper,
        
        /// <summary>
        /// <para>Sweeping / Cleaning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sweeping / Cleaning")]
        [System.Xml.Serialization.XmlEnumAttribute("Sweeping / Cleaning")]
        Sweeping_Slash_Cleaning,
        
        /// <summary>
        /// <para>Trenching</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trenching")]
        Trenching,
    }
    
    /// <summary>
    /// <para>employerTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("employerTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("employerTypeList", Namespace="")]
    public enum EmployerTypeList
    {
        
        /// <summary>
        /// <para>The employer is a private enterprise.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employer is a private enterprise.")]
        Private,
        
        /// <summary>
        /// <para>The employer is a government department, agency or enterprise.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employer is a government department, agency or enterprise.")]
        Public,
    }
    
    /// <summary>
    /// <para>employmentStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("employmentStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("employmentStatusList", Namespace="")]
    public enum EmploymentStatusList
    {
        
        /// <summary>
        /// <para>Previous</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Previous")]
        Previous,
        
        /// <summary>
        /// <para>Primary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primary")]
        Primary,
        
        /// <summary>
        /// <para>Secondary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Secondary")]
        Secondary,
    }
    
    /// <summary>
    /// <para>errorInstructionsTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("errorInstructionsTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("errorInstructionsTypeList", Namespace="")]
    public enum ErrorInstructionsTypeList
    {
        
        /// <summary>
        /// <para>Data Error</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Data Error")]
        [System.Xml.Serialization.XmlEnumAttribute("Data Error")]
        Data_Error,
        
        /// <summary>
        /// <para>Information</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information")]
        Information,
        
        /// <summary>
        /// <para>System Error</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System Error")]
        [System.Xml.Serialization.XmlEnumAttribute("System Error")]
        System_Error,
    }
    
    /// <summary>
    /// <para>errorSourceList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("errorSourceList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("errorSourceList", Namespace="")]
    public enum ErrorSourceList
    {
        
        /// <summary>
        /// <para>DTD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DTD")]
        DTD,
        
        /// <summary>
        /// <para>Parser</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parser")]
        Parser,
        
        /// <summary>
        /// <para>Proprietary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Proprietary")]
        Proprietary,
        
        /// <summary>
        /// <para>Schematron</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Schematron")]
        Schematron,
        
        /// <summary>
        /// <para>XSD</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("XSD")]
        XSD,
        
        /// <summary>
        /// <para>XSLT</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("XSLT")]
        XSLT,
    }
    
    /// <summary>
    /// <para>estimateBasisNonRealEstateAssetList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("estimateBasisNonRealEstateAssetList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("estimateBasisNonRealEstateAssetList", Namespace="")]
    public enum EstimateBasisNonRealEstateAssetList
    {
        
        /// <summary>
        /// <para>The value specified as the estimated value is the applicant's estimate of the value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is the applicant\'s estimate of the val" +
            "ue.")]
        [System.Xml.Serialization.XmlEnumAttribute("Applicant Estimate")]
        Applicant_Estimate,
        
        /// <summary>
        /// <para>The value specified as the estimated value is a certified valuation provided by a valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is a certified valuation provided by a" +
            " valuer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Certified Valuation")]
        Certified_Valuation,
    }
    
    /// <summary>
    /// <para>estimateBasisRealEstateAssetList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("estimateBasisRealEstateAssetList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("estimateBasisRealEstateAssetList", Namespace="")]
    public enum EstimateBasisRealEstateAssetList
    {
        
        /// <summary>
        /// <para>The value specified as the estimated value is the applicant's estimate of the value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is the applicant\'s estimate of the val" +
            "ue.")]
        [System.Xml.Serialization.XmlEnumAttribute("Applicant Estimate")]
        Applicant_Estimate,
        
        /// <summary>
        /// <para>The value specified as the estimated value is the bank's assessment of the value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is the bank\'s assessment of the value." +
            "")]
        [System.Xml.Serialization.XmlEnumAttribute("Bank Assessment")]
        Bank_Assessment,
        
        /// <summary>
        /// <para>The value specified as the estimated value is a certified valuation provided by a valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is a certified valuation provided by a" +
            " valuer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Certified Valuation")]
        Certified_Valuation,
        
        /// <summary>
        /// <para>The value specified as the estimated value is provided by Contract of Sale.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is provided by Contract of Sale.")]
        [System.Xml.Serialization.XmlEnumAttribute("Contract of Sale")]
        Contract_Of_Sale,
        
        /// <summary>
        /// <para>The value specified as the estimated value was calculated electronically.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value was calculated electronically.")]
        [System.Xml.Serialization.XmlEnumAttribute("Electronic Valuation")]
        Electronic_Valuation,
        
        /// <summary>
        /// <para>The value specified as the estimated value was taken from the rates notice.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value was taken from the rates notice.")]
        [System.Xml.Serialization.XmlEnumAttribute("Rates Notice")]
        Rates_Notice,
        
        /// <summary>
        /// <para>The value specified as the estimated value is provided by RP Data property search service.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is provided by RP Data property search" +
            " service.")]
        [System.Xml.Serialization.XmlEnumAttribute("RP Data")]
        RP_Data,
        
        /// <summary>
        /// <para>The value specified as the estimated value is provided by Valocity property search service.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is provided by Valocity property searc" +
            "h service.")]
        Valocity,
    }
    
    /// <summary>
    /// <para>The methodology used for estimating the value.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The methodology used for estimating the value.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("estimateMethodologyList", Namespace="")]
    public enum EstimateMethodologyList
    {
        
        /// <summary>
        /// <para>The value specified as the estimated value is based on the expected value of the finalised construction. Sometimes called 'As If Complete'.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is based on the expected value of the " +
            "finalised construction. Sometimes called \'As If Complete\'.")]
        [System.Xml.Serialization.XmlEnumAttribute("Completed Construction Value")]
        Completed_Construction_Value,
        
        /// <summary>
        /// <para>The value specified as the estimated value is based on the current market value. Sometimes called 'Existing Property'.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value specified as the estimated value is based on the current market value. " +
            "Sometimes called \'Existing Property\'.")]
        [System.Xml.Serialization.XmlEnumAttribute("Current Market Value")]
        Current_Market_Value,
    }
    
    /// <summary>
    /// <para>eventNameApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("eventNameApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eventNameApplicationInstructionsList", Namespace="")]
    public enum EventNameApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>Application has already been registered but additional explanations and/or comments are required from the applicants or loan writer in order to complete the assessment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has already been registered but additional explanations and/or commen" +
            "ts are required from the applicants or loan writer in order to complete the asse" +
            "ssment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Additional Information Has Been Requested")]
        Additional_Information_Has_Been_Requested,
        
        /// <summary>
        /// <para>Application successfully received by Lender system and can be further processed i.e. well formed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application successfully received by Lender system and can be further processed i" +
            ".e. well formed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Received")]
        Application_Received,
        
        /// <summary>
        /// <para>Lender system ID allocated (Pre Settlement Application Identifier) and, if electronically lodged, application is ready for credit assessment ie. validates against Lender's schema and other business rules.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lender system ID allocated (Pre Settlement Application Identifier) and, if electr" +
            "onically lodged, application is ready for credit assessment ie. validates agains" +
            "t Lender\'s schema and other business rules.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Registered")]
        Application_Registered,
        
        /// <summary>
        /// <para>Application successfully transmitted by Broker system.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application successfully transmitted by Broker system.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Sent")]
        Application_Sent,
        
        /// <summary>
        /// <para>The customer is now required to to provide supporting documents.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The customer is now required to to provide supporting documents.")]
        [System.Xml.Serialization.XmlEnumAttribute("Awaiting Supporting Documents")]
        Awaiting_Supporting_Documents,
        
        /// <summary>
        /// <para>Application has been stopped at Lender's initiative. Cannot be resurrected.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been stopped at Lender\'s initiative. Cannot be resurrected.")]
        Cancelled,
        
        /// <summary>
        /// <para>The Details attribute contains free text comments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Details attribute contains free text comments.")]
        Comment,
        
        /// <summary>
        /// <para>The Commission Paid to loan originator event has been triggered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Commission Paid to loan originator event has been triggered.")]
        [System.Xml.Serialization.XmlEnumAttribute("Commission Paid")]
        Commission_Paid,
        
        /// <summary>
        /// <para>Application has been approved subject to conditions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been approved subject to conditions.")]
        [System.Xml.Serialization.XmlEnumAttribute("Conditionally Approved")]
        Conditionally_Approved,
        
        /// <summary>
        /// <para>A credit check with a credit bureau has been ordered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A credit check with a credit bureau has been ordered.")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Check Ordered")]
        Credit_Check_Ordered,
        
        /// <summary>
        /// <para>A credit check has been received from a credit bureau.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A credit check has been received from a credit bureau.")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Check Received")]
        Credit_Check_Received,
        
        /// <summary>
        /// <para>Application has been Declined.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been Declined.")]
        Declined,
        
        /// <summary>
        /// <para>The borrowers current loan has been paid off in full.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The borrowers current loan has been paid off in full.")]
        Discharged,
        
        /// <summary>
        /// <para>The submission received already exists in the recipients system.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The submission received already exists in the recipients system.")]
        [System.Xml.Serialization.XmlEnumAttribute("Duplicate Submission")]
        Duplicate_Submission,
        
        /// <summary>
        /// <para>An employment check on the borrower has commenced.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An employment check on the borrower has commenced.")]
        [System.Xml.Serialization.XmlEnumAttribute("Employment Check Commenced")]
        Employment_Check_Commenced,
        
        /// <summary>
        /// <para>An employment check on the borrower has been completed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An employment check on the borrower has been completed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Employment Check Completed")]
        Employment_Check_Completed,
        
        /// <summary>
        /// <para>An employment check on the borrower has been delayed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An employment check on the borrower has been delayed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Employment Check Delayed")]
        Employment_Check_Delayed,
        
        /// <summary>
        /// <para>The application either has missing data or has invalid combinations of data. You will need to re-submit the application after correcting any data issues.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application either has missing data or has invalid combinations of data. You " +
            "will need to re-submit the application after correcting any data issues.")]
        [System.Xml.Serialization.XmlEnumAttribute("Error on Submission")]
        Error_On_Submission,
        
        /// <summary>
        /// <para>Lenders Mortgage Insurance has been ordered by the credit provider with a Mortgage Insurer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lenders Mortgage Insurance has been ordered by the credit provider with a Mortgag" +
            "e Insurer.")]
        [System.Xml.Serialization.XmlEnumAttribute("LMI Ordered")]
        LMI_Ordered,
        
        /// <summary>
        /// <para>A response has been received from the Mortgage Insurer, usually containing a Premium amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A response has been received from the Mortgage Insurer, usually containing a Prem" +
            "ium amount.")]
        [System.Xml.Serialization.XmlEnumAttribute("LMI Response Received")]
        LMI_Response_Received,
        
        /// <summary>
        /// <para>The Loan Documents and requirements received from the Borrower are in order.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Loan Documents and requirements received from the Borrower are in order.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents and Requirements Complete")]
        Loan_Documents_And_Requirements_Complete,
        
        /// <summary>
        /// <para>The Loan Documents and/or requirements received from the Borrower are not complete.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Loan Documents and/or requirements received from the Borrower are not complet" +
            "e.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents and Requirements Incomplete")]
        Loan_Documents_And_Requirements_Incomplete,
        
        /// <summary>
        /// <para>The Loan Documents have been certified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Loan Documents have been certified.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Certified for Settlement")]
        Loan_Documents_Certified_For_Settlement,
        
        /// <summary>
        /// <para>Error message returned to the Lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Error message returned to the Lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Error Message Returned")]
        Loan_Documents_Error_Message_Returned,
        
        /// <summary>
        /// <para>A request to follow up the Loan Document production has been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to follow up the Loan Document production has been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Follow Up")]
        Loan_Documents_Follow_Up,
        
        /// <summary>
        /// <para>Loan Documents have been issued as directed by Lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan Documents have been issued as directed by Lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Issued")]
        Loan_Documents_Issued,
        
        /// <summary>
        /// <para>A request to start loan documents preparation has been issued by the Lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to start loan documents preparation has been issued by the Lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Preparation Commenced")]
        Loan_Documents_Preparation_Commenced,
        
        /// <summary>
        /// <para>Loan documents have been produced.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan documents have been produced.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Produced")]
        Loan_Documents_Produced,
        
        /// <summary>
        /// <para>The Loan Documents have been produced and returned to the Lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Loan Documents have been produced and returned to the Lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Produced and Returned to Lender")]
        Loan_Documents_Produced_And_Returned_To_Lender,
        
        /// <summary>
        /// <para>The request to reissue the Loan Documents has been sent.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The request to reissue the Loan Documents has been sent.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Re-issue Request Sent")]
        Loan_Documents_Re_Issue_Request_Sent,
        
        /// <summary>
        /// <para>The Loan Documents have been re-issued.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Loan Documents have been re-issued.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Re-Issued")]
        Loan_Documents_Re_Issued,
        
        /// <summary>
        /// <para>Signed Loan Documents have been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Signed Loan Documents have been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Received")]
        Loan_Documents_Received,
        
        /// <summary>
        /// <para>A request to produce Loan Documents has been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to produce Loan Documents has been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Request Received")]
        Loan_Documents_Request_Received,
        
        /// <summary>
        /// <para>A request to produce Loan Documents has been sent.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to produce Loan Documents has been sent.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Request Sent")]
        Loan_Documents_Request_Sent,
        
        /// <summary>
        /// <para>An enquiry about whether signed Loan Documents have been returned has been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An enquiry about whether signed Loan Documents have been returned has been receiv" +
            "ed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Documents Returned Enquiry")]
        Loan_Documents_Returned_Enquiry,
        
        /// <summary>
        /// <para>The funds have been debited to the Loan Account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds have been debited to the Loan Account.")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Funded by Lender")]
        Loan_Funded_By_Lender,
        
        /// <summary>
        /// <para>The total amount required to pay out the loan has been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total amount required to pay out the loan has been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Payout Figure Received")]
        Payout_Figure_Received,
        
        /// <summary>
        /// <para>The total amount required to pay out the loan has been rejected.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total amount required to pay out the loan has been rejected.")]
        [System.Xml.Serialization.XmlEnumAttribute("Payout Figure Rejected")]
        Payout_Figure_Rejected,
        
        /// <summary>
        /// <para>Application conditionally approved subject to final identification of security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application conditionally approved subject to final identification of security pr" +
            "operty.")]
        PreApproved,
        
        /// <summary>
        /// <para>A progress payment has been completed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A progress payment has been completed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Progress Payment Complete")]
        Progress_Payment_Complete,
        
        /// <summary>
        /// <para>A message about the Progress Payment process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A message about the Progress Payment process.")]
        [System.Xml.Serialization.XmlEnumAttribute("Progress Payment Message")]
        Progress_Payment_Message,
        
        /// <summary>
        /// <para>The application is in a state in which it is ready to begin the Progress Payment process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application is in a state in which it is ready to begin the Progress Payment " +
            "process.")]
        [System.Xml.Serialization.XmlEnumAttribute("Ready for Progress Payment")]
        Ready_For_Progress_Payment,
        
        /// <summary>
        /// <para>The application is in a state in which it is ready to begin the Settlement process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application is in a state in which it is ready to begin the Settlement proces" +
            "s.")]
        [System.Xml.Serialization.XmlEnumAttribute("Ready for Settlement")]
        Ready_For_Settlement,
        
        /// <summary>
        /// <para>Application has been referred for manual credit assessment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been referred for manual credit assessment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred for Credit Assessment")]
        Referred_For_Credit_Assessment,
        
        /// <summary>
        /// <para>Application has been referred to the Broker.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been referred to the Broker.")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred to Broker")]
        Referred_To_Broker,
        
        /// <summary>
        /// <para>Application has been referred to the Mortgage Insurer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been referred to the Mortgage Insurer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred to Mortgage Insurer")]
        Referred_To_Mortgage_Insurer,
        
        /// <summary>
        /// <para>The security documents have been sent to the custodian.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security documents have been sent to the custodian.")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Documents Sent to Custodian")]
        Security_Documents_Sent_To_Custodian,
        
        /// <summary>
        /// <para>The security documents have been sent to the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security documents have been sent to the lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Documents Sent to Lender")]
        Security_Documents_Sent_To_Lender,
        
        /// <summary>
        /// <para>The security packet has been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security packet has been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Packet Received")]
        Security_Packet_Received,
        
        /// <summary>
        /// <para>The security has been registered with the Land Titles Office</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security has been registered with the Land Titles Office")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Registered")]
        Security_Registered,
        
        /// <summary>
        /// <para>A service coordinator has been assigned to process the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A service coordinator has been assigned to process the application.")]
        [System.Xml.Serialization.XmlEnumAttribute("Service Coordinator Assigned")]
        Service_Coordinator_Assigned,
        
        /// <summary>
        /// <para>The settlement process has been cancelled.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The settlement process has been cancelled.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Cancelled")]
        Settlement_Cancelled,
        
        /// <summary>
        /// <para>Application has gone to settlement; may or may not have been fully drawn down; accounts may have had a new identifier allocated to them by the Lender (known as Post Settlement Application Number or Facility identifier).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has gone to settlement; may or may not have been fully drawn down; ac" +
            "counts may have had a new identifier allocated to them by the Lender (known as P" +
            "ost Settlement Application Number or Facility identifier).")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Completed")]
        Settlement_Completed,
        
        /// <summary>
        /// <para>The settlement date has been booked.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The settlement date has been booked.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Date Booked")]
        Settlement_Date_Booked,
        
        /// <summary>
        /// <para>The settlement date has been confirmed by all parties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The settlement date has been confirmed by all parties.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Date Confirmed")]
        Settlement_Date_Confirmed,
        
        /// <summary>
        /// <para>The estimated settlement date, which is 21 days or as long as six weeks post the exchange of contracts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated settlement date, which is 21 days or as long as six weeks post the " +
            "exchange of contracts.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Date Estimated")]
        Settlement_Date_Estimated,
        
        /// <summary>
        /// <para>The settlement process has been delayed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The settlement process has been delayed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Delayed")]
        Settlement_Delayed,
        
        /// <summary>
        /// <para>The funds required at settlement have been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The funds required at settlement have been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Funds Received")]
        Settlement_Funds_Received,
        
        /// <summary>
        /// <para>The settlement date has been rebooked.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The settlement date has been rebooked.")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Rebooked")]
        Settlement_Rebooked,
        
        /// <summary>
        /// <para>The solicitors conducting the property transaction have been instructed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The solicitors conducting the property transaction have been instructed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Solicitor Instructed")]
        Solicitor_Instructed,
        
        /// <summary>
        /// <para>The instruction for the solicitors conducting the property transaction have been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The instruction for the solicitors conducting the property transaction have been " +
            "received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Solicitor Instruction Received")]
        Solicitor_Instruction_Received,
        
        /// <summary>
        /// <para>The supporting documents provided by the customer do not cover the checklist requirements, additional supporting documents are expected.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The supporting documents provided by the customer do not cover the checklist requ" +
            "irements, additional supporting documents are expected.")]
        [System.Xml.Serialization.XmlEnumAttribute("Supporting Documents Determined to Be Incomplete")]
        Supporting_Documents_Determined_To_Be_Incomplete,
        
        /// <summary>
        /// <para>The customer provided supporting documents have been verified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The customer provided supporting documents have been verified.")]
        [System.Xml.Serialization.XmlEnumAttribute("Supporting Documents Have Been Verified")]
        Supporting_Documents_Have_Been_Verified,
        
        /// <summary>
        /// <para>The customer provided supporting documentation have been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The customer provided supporting documentation have been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Supporting Documents Received")]
        Supporting_Documents_Received,
        
        /// <summary>
        /// <para>A property title search has been ordered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A property title search has been ordered.")]
        [System.Xml.Serialization.XmlEnumAttribute("Title Search Ordered")]
        Title_Search_Ordered,
        
        /// <summary>
        /// <para>The results of the property title search have been received.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The results of the property title search have been received.")]
        [System.Xml.Serialization.XmlEnumAttribute("Title Search Received")]
        Title_Search_Received,
        
        /// <summary>
        /// <para>All conditions to conditional approval have been met and Application has received formal/final approval.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All conditions to conditional approval have been met and Application has received" +
            " formal/final approval.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unconditionally Approved")]
        Unconditionally_Approved,
        
        /// <summary>
        /// <para>The property valuation has been approved.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property valuation has been approved.")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Approved")]
        Valuation_Approved,
        
        /// <summary>
        /// <para>The property valuation ordered has been cancelled.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property valuation ordered has been cancelled.")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Cancelled")]
        Valuation_Cancelled,
        
        /// <summary>
        /// <para>A property valuation is not required.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A property valuation is not required.")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Not Required")]
        Valuation_Not_Required,
        
        /// <summary>
        /// <para>The property valuation has been ordered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property valuation has been ordered.")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Ordered")]
        Valuation_Ordered,
        
        /// <summary>
        /// <para>A completed property valuation has been received from the Valuation Firm.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A completed property valuation has been received from the Valuation Firm.")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Received")]
        Valuation_Received,
        
        /// <summary>
        /// <para>A Variation to the borrower's facility has been initiated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Variation to the borrower\'s facility has been initiated.")]
        [System.Xml.Serialization.XmlEnumAttribute("Variation Initialised")]
        Variation_Initialised,
        
        /// <summary>
        /// <para>Application has been stopped at client's initiative.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been stopped at client\'s initiative.")]
        Withdrawn,
    }
    
    /// <summary>
    /// <para>excessUsageCalculationMethodList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("excessUsageCalculationMethodList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("excessUsageCalculationMethodList", Namespace="")]
    public enum ExcessUsageCalculationMethodList
    {
        
        /// <summary>
        /// <para>Per Annum</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Per Annum")]
        [System.Xml.Serialization.XmlEnumAttribute("Per Annum")]
        Per_Annum,
        
        /// <summary>
        /// <para>Per Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Per Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Per Loan")]
        Per_Loan,
        
        /// <summary>
        /// <para>Per Month</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Per Month")]
        [System.Xml.Serialization.XmlEnumAttribute("Per Month")]
        Per_Month,
    }
    
    /// <summary>
    /// <para>exemptStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("exemptStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("exemptStatusList", Namespace="")]
    public enum ExemptStatusList
    {
        
        /// <summary>
        /// <para>The company is an exempt company as defined in the Corporations Law.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company is an exempt company as defined in the Corporations Law.")]
        Exempt,
        
        /// <summary>
        /// <para>The company is not an exempt company as defined in the Corporations Law.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company is not an exempt company as defined in the Corporations Law.")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Exempt")]
        Non_Exempt,
    }
    
    /// <summary>
    /// <para>feeCategoryList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("feeCategoryList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("feeCategoryList", Namespace="")]
    public enum FeeCategoryList
    {
        
        /// <summary>
        /// <para>Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bank")]
        Bank,
        
        /// <summary>
        /// <para>Government</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government")]
        Government,
        
        /// <summary>
        /// <para>Mortgage Insurer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mortgage Insurer")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Insurer")]
        Mortgage_Insurer,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Valuer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valuer")]
        Valuer,
    }
    
    /// <summary>
    /// <para>A list of timings that describe when fees are payable.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of timings that describe when fees are payable.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("feePaymentTimingList", Namespace="")]
    public enum FeePaymentTimingList
    {
        
        /// <summary>
        /// <para>The fee is payable before credit drawdown occurs.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fee is payable before credit drawdown occurs.")]
        [System.Xml.Serialization.XmlEnumAttribute("Before Credit Drawdown")]
        Before_Credit_Drawdown,
        
        /// <summary>
        /// <para>The fee is payable upon credit drawdown.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fee is payable upon credit drawdown.")]
        [System.Xml.Serialization.XmlEnumAttribute("On Credit Drawdown")]
        On_Credit_Drawdown,
        
        /// <summary>
        /// <para>The fee is payable upon the occurrence of a specific event.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fee is payable upon the occurrence of a specific event.")]
        [System.Xml.Serialization.XmlEnumAttribute("On Event Occurrence")]
        On_Event_Occurrence,
        
        /// <summary>
        /// <para>The fee is payable on a regular schedule.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fee is payable on a regular schedule.")]
        [System.Xml.Serialization.XmlEnumAttribute("Regular Recurring")]
        Regular_Recurring,
    }
    
    /// <summary>
    /// <para>feeTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("feeTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("feeTypeList", Namespace="")]
    public enum FeeTypeList
    {
        
        /// <summary>
        /// <para>A fee charged by the bank for taking legal obligation of paying a commercial bill on its maturity date. Generally used when taking over a commercial bill.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fee charged by the bank for taking legal obligation of paying a commercial bill" +
            " on its maturity date. Generally used when taking over a commercial bill.")]
        [System.Xml.Serialization.XmlEnumAttribute("Acceptance Fee")]
        Acceptance_Fee,
        
        /// <summary>
        /// <para>Fee is charged for adding one or more additional securities after loan settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged for adding one or more additional securities after loan settlement" +
            ".")]
        [System.Xml.Serialization.XmlEnumAttribute("Additional Security Fee")]
        Additional_Security_Fee,
        
        /// <summary>
        /// <para>Fee is charged for administration and maintenance of credit facilities, usually for revolving credit loans or credit cards.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged for administration and maintenance of credit facilities, usually f" +
            "or revolving credit loans or credit cards.")]
        [System.Xml.Serialization.XmlEnumAttribute("Annual Fee")]
        Annual_Fee,
        
        /// <summary>
        /// <para>Fee is charged for processing and assessment of the application for the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged for processing and assessment of the application for the loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Fee")]
        Application_Fee,
        
        /// <summary>
        /// <para>Fee is charged when a broker assisted borrowers in finding and obtaining approval for a loan. This fee may be charged to the buyer, seller or both.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when a broker assisted borrowers in finding and obtaining approval" +
            " for a loan. This fee may be charged to the buyer, seller or both.")]
        [System.Xml.Serialization.XmlEnumAttribute("Brokerage Fee")]
        Brokerage_Fee,
        
        /// <summary>
        /// <para>Premium charged for taking out Cash Benefit Insurance. Cash benefit insurance is related to personal loan products (in particular car loans), and covers the owner if their car is written off/destroyed for any costs of replacing the vehicle (above and beyond the payout they would receive from full comprehensive coverage).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Premium charged for taking out Cash Benefit Insurance. Cash benefit insurance is related to personal loan products (in particular car loans), and covers the owner if their car is written off/destroyed for any costs of replacing the vehicle (above and beyond the payout they would receive from full comprehensive coverage).")]
        [System.Xml.Serialization.XmlEnumAttribute("Cash Benefit Insurance")]
        Cash_Benefit_Insurance,
        
        /// <summary>
        /// <para>Fee is charged each time a property valuer inspects building works during the course of a property being built in order to ensure that building is in accordance with the plans and expectations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged each time a property valuer inspects building works during the cou" +
            "rse of a property being built in order to ensure that building is in accordance " +
            "with the plans and expectations.")]
        [System.Xml.Serialization.XmlEnumAttribute("Construction Progress Inspection Fee")]
        Construction_Progress_Inspection_Fee,
        
        /// <summary>
        /// <para>Premium charged for taking out Consumer Credit Insurance (CCI). CCI is an optional insurance policy that protects borrowers against changes in circumstances that negatively affect their ability to pay back the loan such as death, injury or illness and involuntary unemployment. The premium can generally be added to the loan as a lump sum or can be paid monthly.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Premium charged for taking out Consumer Credit Insurance (CCI). CCI is an optional insurance policy that protects borrowers against changes in circumstances that negatively affect their ability to pay back the loan such as death, injury or illness and involuntary unemployment. The premium can generally be added to the loan as a lump sum or can be paid monthly.")]
        [System.Xml.Serialization.XmlEnumAttribute("Consumer Credit Insurance")]
        Consumer_Credit_Insurance,
        
        /// <summary>
        /// <para>Fee is charged for preparation of loan documents. The amount varies based on the complexity of the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged for preparation of loan documents. The amount varies based on the " +
            "complexity of the loan application.")]
        [System.Xml.Serialization.XmlEnumAttribute("Documentation Fee")]
        Documentation_Fee,
        
        /// <summary>
        /// <para>Fee charged when customer repays the loan earlier than the end of the loan term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee charged when customer repays the loan earlier than the end of the loan term.")]
        [System.Xml.Serialization.XmlEnumAttribute("Early Repayment Admin Fee")]
        Early_Repayment_Admin_Fee,
        
        /// <summary>
        /// <para>Fee is charged for the establishment of the loan facility. For some financial institutions, this is a general term used for fees that one may incur for the bank to set up a loan which may include Application Fee, Settlement Fee, etc. For some financial institutions, this is the same as an Application Fee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Fee is charged for the establishment of the loan facility. For some financial institutions, this is a general term used for fees that one may incur for the bank to set up a loan which may include Application Fee, Settlement Fee, etc. For some financial institutions, this is the same as an Application Fee.")]
        [System.Xml.Serialization.XmlEnumAttribute("Establishment Fee")]
        Establishment_Fee,
        
        /// <summary>
        /// <para>Premium charged for taking out Extended Warranty Insurance. This insurance (also called mechanical breakdown insurance or motor breakdown insurance (MBI)) commences after your new car warranty ends and provides some cover for the repair or replacement of specific parts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Premium charged for taking out Extended Warranty Insurance. This insurance (also called mechanical breakdown insurance or motor breakdown insurance (MBI)) commences after your new car warranty ends and provides some cover for the repair or replacement of specific parts.")]
        [System.Xml.Serialization.XmlEnumAttribute("Extended Warranty Insurance")]
        Extended_Warranty_Insurance,
        
        /// <summary>
        /// <para>Premium charged for taking out Guarantee Asset Protection (GAP) Insurance. GAP insurance (also called motor equity insurance or shortfall insurance) covers the lender for the difference between what a borrower owes on the car loan, and what the car is insured for under comprehensive car insurance, if car is written off.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Premium charged for taking out Guarantee Asset Protection (GAP) Insurance. GAP insurance (also called motor equity insurance or shortfall insurance) covers the lender for the difference between what a borrower owes on the car loan, and what the car is insured for under comprehensive car insurance, if car is written off.")]
        [System.Xml.Serialization.XmlEnumAttribute("Guarantee Asset Protection Insurance")]
        Guarantee_Asset_Protection_Insurance,
        
        /// <summary>
        /// <para>A fee charged for the inspection of an asset. An inspection usually occurs to confirm the location of the asset, determine the condition of the asset, and confirm the asset documents match with the physical asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fee charged for the inspection of an asset. An inspection usually occurs to con" +
            "firm the location of the asset, determine the condition of the asset, and confir" +
            "m the asset documents match with the physical asset.")]
        [System.Xml.Serialization.XmlEnumAttribute("Inspection Fee")]
        Inspection_Fee,
        
        /// <summary>
        /// <para>Fee is charged when a final search of the title is ordered to ensure that the property is clear from any interest or restrictions that may have been recorded prior to settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when a final search of the title is ordered to ensure that the pro" +
            "perty is clear from any interest or restrictions that may have been recorded pri" +
            "or to settlement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Land Titles Office Final Search Fee")]
        Land_Titles_Office_Final_Search_Fee,
        
        /// <summary>
        /// <para>Fee is charged when title search is ordered to ascertain the ownership of a property and determine whether there are existing encumbrances, covenants or easements that may be recorded on the title.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when title search is ordered to ascertain the ownership of a prope" +
            "rty and determine whether there are existing encumbrances, covenants or easement" +
            "s that may be recorded on the title.")]
        [System.Xml.Serialization.XmlEnumAttribute("Land Titles Office Search Fee")]
        Land_Titles_Office_Search_Fee,
        
        /// <summary>
        /// <para>Fee is charged to cover legal fees incurred by the lender in arranging the loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged to cover legal fees incurred by the lender in arranging the loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Legal Fee")]
        Legal_Fee,
        
        /// <summary>
        /// <para>LMI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LMI")]
        LMI,
        
        /// <summary>
        /// <para>Loan Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Fee")]
        Loan_Fee,
        
        /// <summary>
        /// <para>Fee is charged by the Title Office to register the lender's mortgage on the title for a security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged by the Title Office to register the lender\'s mortgage on the title" +
            " for a security")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Registration")]
        Mortgage_Registration,
        
        /// <summary>
        /// <para>Motor Vehicle Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motor Vehicle Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Motor Vehicle Insurance")]
        Motor_Vehicle_Insurance,
        
        /// <summary>
        /// <para>Fee charged is not described by one of the enumerated values in the list</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee charged is not described by one of the enumerated values in the list")]
        Other,
        
        /// <summary>
        /// <para>Package Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Package Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Package Fee")]
        Package_Fee,
        
        /// <summary>
        /// <para>A fee associated with registering a non-real estate asset on the Personal Property Securities Register (PPSR) when it is used as security on a loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fee associated with registering a non-real estate asset on the Personal Propert" +
            "y Securities Register (PPSR) when it is used as security on a loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("PPSR Fee")]
        PPSR_Fee,
        
        /// <summary>
        /// <para>Rate Lock Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rate Lock Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Rate Lock Fee")]
        Rate_Lock_Fee,
        
        /// <summary>
        /// <para>Fee is charged when documents such as Loan Agreement or Variation Contract are re-issued prior to settlement due to change requested by either customer or introducer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when documents such as Loan Agreement or Variation Contract are re" +
            "-issued prior to settlement due to change requested by either customer or introd" +
            "ucer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Re-documentation Fee")]
        Re_Documentation_Fee,
        
        /// <summary>
        /// <para>Reduced Equity Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reduced Equity Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Reduced Equity Fee")]
        Reduced_Equity_Fee,
        
        /// <summary>
        /// <para>Risk Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Risk Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Risk Fee")]
        Risk_Fee,
        
        /// <summary>
        /// <para>A fee charged when rolling over a commerical bill.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fee charged when rolling over a commerical bill.")]
        [System.Xml.Serialization.XmlEnumAttribute("Rollover Fee")]
        Rollover_Fee,
        
        /// <summary>
        /// <para>Security Guarantee Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Guarantee Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Guarantee Fee")]
        Security_Guarantee_Fee,
        
        /// <summary>
        /// <para>Fee is charged when a lender removes their legal charge from the security held against a mortgage or loan. This is sometimes called Discharge Fee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when a lender removes their legal charge from the security held ag" +
            "ainst a mortgage or loan. This is sometimes called Discharge Fee.")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Release Fee")]
        Security_Release_Fee,
        
        /// <summary>
        /// <para>Service Plan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Service Plan")]
        [System.Xml.Serialization.XmlEnumAttribute("Service Plan")]
        Service_Plan,
        
        /// <summary>
        /// <para>Settlement Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Settlement Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Settlement Fee")]
        Settlement_Fee,
        
        /// <summary>
        /// <para>Fee paid to the State Revenue Office for stamping of mortgage or other security document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee paid to the State Revenue Office for stamping of mortgage or other security d" +
            "ocument")]
        [System.Xml.Serialization.XmlEnumAttribute("Stamp Duty on Mortgage")]
        Stamp_Duty_On_Mortgage,
        
        /// <summary>
        /// <para>Fee paid to the State Revenue Office for stamping of transfer or other assignment of ownership document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee paid to the State Revenue Office for stamping of transfer or other assignment" +
            " of ownership document")]
        [System.Xml.Serialization.XmlEnumAttribute("Stamp Duty on Transfer of Property")]
        Stamp_Duty_On_Transfer_Of_Property,
        
        /// <summary>
        /// <para>Fee is charged when the current property security of a loan is substituted for another property. This usually occurs when the borrower intends to sell the existing property security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when the current property security of a loan is substituted for an" +
            "other property. This usually occurs when the borrower intends to sell the existi" +
            "ng property security.")]
        [System.Xml.Serialization.XmlEnumAttribute("Substitute Security Fee")]
        Substitute_Security_Fee,
        
        /// <summary>
        /// <para>Fee is charged when all or part of an existing loan balance will be converted to another product, another type of interest rate (change between fixed and variable) or repayment type (change between interest only payments and principal and interest payments).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Fee is charged when all or part of an existing loan balance will be converted to another product, another type of interest rate (change between fixed and variable) or repayment type (change between interest only payments and principal and interest payments).")]
        [System.Xml.Serialization.XmlEnumAttribute("Switch Fee")]
        Switch_Fee,
        
        /// <summary>
        /// <para>Fee is charged when producing a Certificate of Title or other security documents.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when producing a Certificate of Title or other security documents." +
            "")]
        [System.Xml.Serialization.XmlEnumAttribute("Third Party Document Production Fee")]
        Third_Party_Document_Production_Fee,
        
        /// <summary>
        /// <para>Fee is charged when there is a transfer of ownership; for example property title transfer or vehicle registration transfer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when there is a transfer of ownership; for example property title " +
            "transfer or vehicle registration transfer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Title Transfer Fee")]
        Title_Transfer_Fee,
        
        /// <summary>
        /// <para>Tyre and Rim Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tyre and Rim Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Tyre and Rim Insurance")]
        Tyre_And_Rim_Insurance,
        
        /// <summary>
        /// <para>A fee charged when a customer has unused limit on their facility. Applies to commerical bills only.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fee charged when a customer has unused limit on their facility. Applies to comm" +
            "erical bills only.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unused Facility Fee")]
        Unused_Facility_Fee,
        
        /// <summary>
        /// <para>Valuation Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valuation Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Valuation Fee")]
        Valuation_Fee,
        
        /// <summary>
        /// <para>Fee is charged when caveat will be withdrawn/removed and lodged to the corresponding land or property information office.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged when caveat will be withdrawn/removed and lodged to the correspond" +
            "ing land or property information office.")]
        [System.Xml.Serialization.XmlEnumAttribute("Withdrawal of Caveat Fee")]
        Withdrawal_Of_Caveat_Fee,
        
        /// <summary>
        /// <para>Fee is charged for the removal of a writ recorded against a title.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fee is charged for the removal of a writ recorded against a title.")]
        [System.Xml.Serialization.XmlEnumAttribute("Withdrawal of Writ Fee")]
        Withdrawal_Of_Writ_Fee,
    }
    
    /// <summary>
    /// <para>financialAssetTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("financialAssetTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("financialAssetTypeList", Namespace="")]
    public enum FinancialAssetTypeList
    {
        
        /// <summary>
        /// <para>Asset is cash that is not on deposit with a financial institution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset is cash that is not on deposit with a financial institution")]
        Cash,
        
        /// <summary>
        /// <para>A financial asset that is purchased with the hope that it will generate income or appreciate in the future.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A financial asset that is purchased with the hope that it will generate income or" +
            " appreciate in the future.")]
        Investment,
        
        /// <summary>
        /// <para>Money available through KiwiSaver a New Zealand voluntary, work-based savings initiative.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Money available through KiwiSaver a New Zealand voluntary, work-based savings ini" +
            "tiative.")]
        KiwiSaver,
        
        /// <summary>
        /// <para>Shares or units in a managed fund</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shares or units in a managed fund")]
        [System.Xml.Serialization.XmlEnumAttribute("Managed Funds")]
        Managed_Funds,
        
        /// <summary>
        /// <para>Asset is not described by any of the other enumerated values in the list</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset is not described by any of the other enumerated values in the list")]
        Other,
        
        /// <summary>
        /// <para>Pension Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pension Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Pension Account")]
        Pension_Account,
        
        /// <summary>
        /// <para>Trade receivables owed by debtors of a business</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trade receivables owed by debtors of a business")]
        Receivables,
        
        /// <summary>
        /// <para>Savings Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Savings Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Savings Account")]
        Savings_Account,
        
        /// <summary>
        /// <para>Listed and unlisted shares, business equity, bills, bonds and debentures</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Listed and unlisted shares, business equity, bills, bonds and debentures")]
        [System.Xml.Serialization.XmlEnumAttribute("Shares and Debentures")]
        Shares_And_Debentures,
        
        /// <summary>
        /// <para>Value held in a superannuation fund</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Value held in a superannuation fund")]
        Superannuation,
        
        /// <summary>
        /// <para>Term deposit accounts, including annuities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Term deposit accounts, including annuities")]
        [System.Xml.Serialization.XmlEnumAttribute("Term Deposit")]
        Term_Deposit,
        
        /// <summary>
        /// <para>Includes deposit account, cash management account, and chequing account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Includes deposit account, cash management account, and chequing account")]
        [System.Xml.Serialization.XmlEnumAttribute("Transaction Account")]
        Transaction_Account,
        
        /// <summary>
        /// <para>Beneficial ownership of equity within a trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beneficial ownership of equity within a trust.")]
        [System.Xml.Serialization.XmlEnumAttribute("Trust Beneficial Interest")]
        Trust_Beneficial_Interest,
    }
    
    /// <summary>
    /// <para>financialTransactionTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("financialTransactionTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("financialTransactionTypeList", Namespace="")]
    public enum FinancialTransactionTypeList
    {
        
        /// <summary>
        /// <para>Leaseback</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leaseback")]
        Leaseback,
        
        /// <summary>
        /// <para>Refinance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinance")]
        Refinance,
        
        /// <summary>
        /// <para>Rollover</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rollover")]
        Rollover,
        
        /// <summary>
        /// <para>Sale and Hire</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sale and Hire")]
        [System.Xml.Serialization.XmlEnumAttribute("Sale and Hire")]
        Sale_And_Hire,
    }
    
    /// <summary>
    /// <para>foreignEmployedBasisList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("foreignEmployedBasisList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreignEmployedBasisList", Namespace="")]
    public enum ForeignEmployedBasisList
    {
        
        /// <summary>
        /// <para>The employment described is under a casual contract of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under a casual contract of employment.")]
        Casual,
        
        /// <summary>
        /// <para>The employment described is remunerated by commission only, there is no base or retainer paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is remunerated by commission only, there is no base or r" +
            "etainer paid.")]
        [System.Xml.Serialization.XmlEnumAttribute("Commission Only")]
        Commission_Only,
        
        /// <summary>
        /// <para>The employment described is under a contract for services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under a contract for services.")]
        Contract,
        
        /// <summary>
        /// <para>The employment described is under full time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under full time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Time")]
        Full_Time,
        
        /// <summary>
        /// <para>The employment described is under part time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under part time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Part Time")]
        Part_Time,
        
        /// <summary>
        /// <para>The employment described is seasonal in nature, for example fruit picking.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is seasonal in nature, for example fruit picking.")]
        Seasonal,
        
        /// <summary>
        /// <para>The employment described is under contract with an employment agency, also known as temping.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under contract with an employment agency, also known " +
            "as temping.")]
        Temporary,
    }
    
    /// <summary>
    /// <para>frequencyFullList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("frequencyFullList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("frequencyFullList", Namespace="")]
    public enum FrequencyFullList
    {
        
        /// <summary>
        /// <para>Daily</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Daily")]
        Daily,
        
        /// <summary>
        /// <para>Fortnightly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fortnightly")]
        Fortnightly,
        
        /// <summary>
        /// <para>Half Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Half Yearly")]
        [System.Xml.Serialization.XmlEnumAttribute("Half Yearly")]
        Half_Yearly,
        
        /// <summary>
        /// <para>Monthly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly")]
        Monthly,
        
        /// <summary>
        /// <para>One Off</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("One Off")]
        [System.Xml.Serialization.XmlEnumAttribute("One Off")]
        One_Off,
        
        /// <summary>
        /// <para>Quarterly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quarterly")]
        Quarterly,
        
        /// <summary>
        /// <para>Seasonal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seasonal")]
        Seasonal,
        
        /// <summary>
        /// <para>Weekly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weekly")]
        Weekly,
        
        /// <summary>
        /// <para>Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yearly")]
        Yearly,
    }
    
    /// <summary>
    /// <para>frequencyShortList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("frequencyShortList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("frequencyShortList", Namespace="")]
    public enum FrequencyShortList
    {
        
        /// <summary>
        /// <para>Fortnightly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fortnightly")]
        Fortnightly,
        
        /// <summary>
        /// <para>Monthly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly")]
        Monthly,
        
        /// <summary>
        /// <para>Weekly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weekly")]
        Weekly,
        
        /// <summary>
        /// <para>Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yearly")]
        Yearly,
    }
    
    /// <summary>
    /// <para>funderList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("funderList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("funderList", Namespace="")]
    public enum FunderList
    {
        
        /// <summary>
        /// <para>Adelaide Bank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Adelaide Bank")]
        [System.Xml.Serialization.XmlEnumAttribute("Adelaide Bank")]
        Adelaide_Bank,
        
        /// <summary>
        /// <para>Advantedge</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Advantedge")]
        Advantedge,
        
        /// <summary>
        /// <para>Arch Finance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arch Finance")]
        [System.Xml.Serialization.XmlEnumAttribute("Arch Finance")]
        Arch_Finance,
        
        /// <summary>
        /// <para>Firstmac</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Firstmac")]
        Firstmac,
        
        /// <summary>
        /// <para>LaTrobe</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LaTrobe")]
        LaTrobe,
        
        /// <summary>
        /// <para>Loanworks</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loanworks")]
        Loanworks,
        
        /// <summary>
        /// <para>Macquarie</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Macquarie")]
        Macquarie,
        
        /// <summary>
        /// <para>MKM Group</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("MKM Group")]
        [System.Xml.Serialization.XmlEnumAttribute("MKM Group")]
        MKM_Group,
        
        /// <summary>
        /// <para>Origin</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Origin")]
        Origin,
        
        /// <summary>
        /// <para>Pepper</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pepper")]
        Pepper,
        
        /// <summary>
        /// <para>RedZed</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("RedZed")]
        RedZed,
        
        /// <summary>
        /// <para>Resimac</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Resimac")]
        Resimac,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Sintex</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Sintex")]
        Sintex,
        
        /// <summary>
        /// <para>Think Tank</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Think Tank")]
        [System.Xml.Serialization.XmlEnumAttribute("Think Tank")]
        Think_Tank,
        
        /// <summary>
        /// <para>Well Nigh</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Well Nigh")]
        [System.Xml.Serialization.XmlEnumAttribute("Well Nigh")]
        Well_Nigh,
        
        /// <summary>
        /// <para>Wilson and Copley</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wilson and Copley")]
        [System.Xml.Serialization.XmlEnumAttribute("Wilson and Copley")]
        Wilson_And_Copley,
    }
    
    /// <summary>
    /// <para>fundsAccessTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("fundsAccessTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("fundsAccessTypeList", Namespace="")]
    public enum FundsAccessTypeList
    {
        
        /// <summary>
        /// <para>Line of Credit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of Credit")]
        [System.Xml.Serialization.XmlEnumAttribute("Line of Credit")]
        Line_Of_Credit,
        
        /// <summary>
        /// <para>None</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("None")]
        None,
        
        /// <summary>
        /// <para>Offset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offset")]
        Offset,
        
        /// <summary>
        /// <para>Redraw</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Redraw")]
        Redraw,
    }
    
    /// <summary>
    /// <para>genderList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("genderList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("genderList", Namespace="")]
    public enum GenderList
    {
        
        /// <summary>
        /// <para>The person is a female.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is a female.")]
        Female,
        
        /// <summary>
        /// <para>The person is a male.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is a male.")]
        Male,
        
        /// <summary>
        /// <para>The person has elected not to disclose their gender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person has elected not to disclose their gender.")]
        Undisclosed,
    }
    
    /// <summary>
    /// <para>goodToBeUsedLocationList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("goodToBeUsedLocationList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("goodToBeUsedLocationList", Namespace="")]
    public enum GoodToBeUsedLocationList
    {
        
        /// <summary>
        /// <para>On Business Premises</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises")]
        [System.Xml.Serialization.XmlEnumAttribute("On Business Premises")]
        On_Business_Premises,
        
        /// <summary>
        /// <para>On Site</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Site")]
        [System.Xml.Serialization.XmlEnumAttribute("On Site")]
        On_Site,
        
        /// <summary>
        /// <para>On Site Daily Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Site Daily Return")]
        [System.Xml.Serialization.XmlEnumAttribute("On Site Daily Return")]
        On_Site_Daily_Return,
    }
    
    /// <summary>
    /// <para>governmentBenefitsTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("governmentBenefitsTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("governmentBenefitsTypeList", Namespace="")]
    public enum GovernmentBenefitsTypeList
    {
        
        /// <summary>
        /// <para>Government support income for people who were injured in an accident.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government support income for people who were injured in an accident.")]
        [System.Xml.Serialization.XmlEnumAttribute("Accident Compensation")]
        Accident_Compensation,
        
        /// <summary>
        /// <para>Child Support</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Support")]
        [System.Xml.Serialization.XmlEnumAttribute("Child Support")]
        Child_Support,
        
        /// <summary>
        /// <para>Family Allowance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Family Allowance")]
        [System.Xml.Serialization.XmlEnumAttribute("Family Allowance")]
        Family_Allowance,
        
        /// <summary>
        /// <para>Government income support for people who are permanently and severely restricted in their capacity for work because of sickness, injury, or disability, or be totally blind.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government income support for people who are permanently and severely restricted " +
            "in their capacity for work because of sickness, injury, or disability, or be tot" +
            "ally blind.")]
        [System.Xml.Serialization.XmlEnumAttribute("Invalid Benefits")]
        Invalid_Benefits,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Parenting Payment is government provided income support for parents or guardians to help with the cost of raising children.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Parenting Payment is government provided income support for parents or guardians " +
            "to help with the cost of raising children.")]
        [System.Xml.Serialization.XmlEnumAttribute("Parenting Payment")]
        Parenting_Payment,
        
        /// <summary>
        /// <para>Government support income for people who are temporarily off work or working at a reduced level because of sickness, an injury, pregnancy, or a disability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government support income for people who are temporarily off work or working at a" +
            " reduced level because of sickness, an injury, pregnancy, or a disability.")]
        [System.Xml.Serialization.XmlEnumAttribute("Sickness Benefits")]
        Sickness_Benefits,
        
        /// <summary>
        /// <para>Government support income for single parents and caregivers of dependent children.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government support income for single parents and caregivers of dependent children" +
            ".")]
        [System.Xml.Serialization.XmlEnumAttribute("Sole Parent Support")]
        Sole_Parent_Support,
        
        /// <summary>
        /// <para>Widows Allowance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Widows Allowance")]
        [System.Xml.Serialization.XmlEnumAttribute("Widows Allowance")]
        Widows_Allowance,
        
        /// <summary>
        /// <para>Government support income for families with low income or large families.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government support income for families with low income or large families.")]
        [System.Xml.Serialization.XmlEnumAttribute("Working for Families")]
        Working_For_Families,
    }
    
    /// <summary>
    /// <para>guarantorAccessList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("guarantorAccessList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("guarantorAccessList", Namespace="")]
    public enum GuarantorAccessList
    {
        
        /// <summary>
        /// <para>Full Access</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Full Access")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Access")]
        Full_Access,
        
        /// <summary>
        /// <para>Information Only Access</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information Only Access")]
        [System.Xml.Serialization.XmlEnumAttribute("Information Only Access")]
        Information_Only_Access,
        
        /// <summary>
        /// <para>No Access</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No Access")]
        [System.Xml.Serialization.XmlEnumAttribute("No Access")]
        No_Access,
        
        /// <summary>
        /// <para>Transacting Access</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Transacting Access")]
        [System.Xml.Serialization.XmlEnumAttribute("Transacting Access")]
        Transacting_Access,
    }
    
    /// <summary>
    /// <para>holdingList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("holdingList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("holdingList", Namespace="")]
    public enum HoldingList
    {
        
        /// <summary>
        /// <para>The parties specified as the owners of the property hold their interest as owners of shares in a company that owns the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The parties specified as the owners of the property hold their interest as owners" +
            " of shares in a company that owns the property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Company Share")]
        Company_Share,
        
        /// <summary>
        /// <para>The parties specified as the owners of the property hold their interest as joint tenants.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The parties specified as the owners of the property hold their interest as joint " +
            "tenants.")]
        [System.Xml.Serialization.XmlEnumAttribute("Joint Tenants")]
        Joint_Tenants,
        
        /// <summary>
        /// <para>The party specified as the owner of the property holds their interest as sole proprietor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party specified as the owner of the property holds their interest as sole pro" +
            "prietor.")]
        Sole,
        
        /// <summary>
        /// <para>The parties specified as the owners of the property hold their interest as tenants in common in equal shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The parties specified as the owners of the property hold their interest as tenant" +
            "s in common in equal shares.")]
        [System.Xml.Serialization.XmlEnumAttribute("Tennant Common in Equal Shares")]
        Tennant_Common_In_Equal_Shares,
        
        /// <summary>
        /// <para>The parties specified as the owners of the property hold their interest as tenants in common in unspecified shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The parties specified as the owners of the property hold their interest as tenant" +
            "s in common in unspecified shares.")]
        [System.Xml.Serialization.XmlEnumAttribute("Tennant Common in Shares of")]
        Tennant_Common_In_Shares_Of,
        
        /// <summary>
        /// <para>The parties specified as the owners of the property hold their interest under a time share arrangement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The parties specified as the owners of the property hold their interest under a t" +
            "ime share arrangement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Time Share")]
        Time_Share,
    }
    
    /// <summary>
    /// <para>hospitalityAndLeisureTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("hospitalityAndLeisureTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hospitalityAndLeisureTypeList", Namespace="")]
    public enum HospitalityAndLeisureTypeList
    {
        
        /// <summary>
        /// <para>Air Conditioning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air Conditioning")]
        [System.Xml.Serialization.XmlEnumAttribute("Air Conditioning")]
        Air_Conditioning,
        
        /// <summary>
        /// <para>Cooking</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cooking")]
        Cooking,
        
        /// <summary>
        /// <para>Gaming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming")]
        Gaming,
        
        /// <summary>
        /// <para>Garden</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Garden")]
        Garden,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Kitchen</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Kitchen")]
        Kitchen,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Refrigeration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refrigeration")]
        Refrigeration,
        
        /// <summary>
        /// <para>Salon</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salon")]
        Salon,
        
        /// <summary>
        /// <para>Spa</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spa")]
        Spa,
    }
    
    /// <summary>
    /// <para>housingStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("housingStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("housingStatusList", Namespace="")]
    public enum HousingStatusList
    {
        
        /// <summary>
        /// <para>Person pays board to the person who has the right to occupy the property at the address they reside at.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person pays board to the person who has the right to occupy the property at the a" +
            "ddress they reside at.")]
        Boarding,
        
        /// <summary>
        /// <para>Person lives in a caravan or similar demountable dwelling at the address they reside at.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person lives in a caravan or similar demountable dwelling at the address they res" +
            "ide at.")]
        Caravan,
        
        /// <summary>
        /// <para>Person's basis for living at the address they reside at is not found in the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person\'s basis for living at the address they reside at is not found in the other" +
            " enumerated values.")]
        Other,
        
        /// <summary>
        /// <para>Person owns outright the property at the address they reside at, property is not mortgaged.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person owns outright the property at the address they reside at, property is not " +
            "mortgaged.")]
        [System.Xml.Serialization.XmlEnumAttribute("Own Home")]
        Own_Home,
        
        /// <summary>
        /// <para>Person owns the property at the address they reside at, property is mortgaged.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person owns the property at the address they reside at, property is mortgaged.")]
        [System.Xml.Serialization.XmlEnumAttribute("Own Home Mortgage")]
        Own_Home_Mortgage,
        
        /// <summary>
        /// <para>Person rents the property at the address they reside at.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person rents the property at the address they reside at.")]
        Renting,
        
        /// <summary>
        /// <para>Person lives at accommodation provided by their employer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person lives at accommodation provided by their employer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Supplied by Employer")]
        Supplied_By_Employer,
        
        /// <summary>
        /// <para>Person living with parents or other relatives in property at the address they reside at.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Person living with parents or other relatives in property at the address they res" +
            "ide at.")]
        [System.Xml.Serialization.XmlEnumAttribute("With Parents")]
        With_Parents,
    }
    
    /// <summary>
    /// <para>importanceList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("importanceList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("importanceList", Namespace="")]
    public enum ImportanceList
    {
        
        /// <summary>
        /// <para>The applicant expressed they do not want the feature.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant expressed they do not want the feature.")]
        [System.Xml.Serialization.XmlEnumAttribute("Don\'t Want")]
        DonSingleQuoteT_Want,
        
        /// <summary>
        /// <para>The feature is a high priority for the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The feature is a high priority for the applicant.")]
        Important,
        
        /// <summary>
        /// <para>The feature is not of high priority to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The feature is not of high priority to the applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("Not Important")]
        Not_Important,
    }
    
    /// <summary>
    /// <para>incomeVerificationList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("incomeVerificationList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("incomeVerificationList", Namespace="")]
    public enum IncomeVerificationList
    {
        
        /// <summary>
        /// <para>Indicates that the income claimed will be verified by provision of evidence of the income, for example using payslips which evidence PAYG income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the income claimed will be verified by provision of evidence of th" +
            "e income, for example using payslips which evidence PAYG income.")]
        [System.Xml.Serialization.XmlEnumAttribute("Fully Verified")]
        Fully_Verified,
        
        /// <summary>
        /// <para>Indicates that the applicant will provide a written statement in which they certify that they earn the income claimed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicant will provide a written statement in which they certi" +
            "fy that they earn the income claimed.")]
        [System.Xml.Serialization.XmlEnumAttribute("Self Certified")]
        Self_Certified,
    }
    
    /// <summary>
    /// <para>industrialTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("industrialTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("industrialTypeList", Namespace="")]
    public enum IndustrialTypeList
    {
        
        /// <summary>
        /// <para>The industrial property is classified as light industrial.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The industrial property is classified as light industrial.")]
        [System.Xml.Serialization.XmlEnumAttribute("Light Industrial")]
        Light_Industrial,
        
        /// <summary>
        /// <para>The industrial property is classified as general industrial, not for specialised use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The industrial property is classified as general industrial, not for specialised " +
            "use.")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Specialised Industrial")]
        Non_Specialised_Industrial,
        
        /// <summary>
        /// <para>The industrial property cannot be classified using one of the other enumeration types.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The industrial property cannot be classified using one of the other enumeration t" +
            "ypes.")]
        Other,
    }
    
    /// <summary>
    /// <para>instalmentsFrequencyList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("instalmentsFrequencyList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("instalmentsFrequencyList", Namespace="")]
    public enum InstalmentsFrequencyList
    {
        
        /// <summary>
        /// <para>Fortnightly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fortnightly")]
        Fortnightly,
        
        /// <summary>
        /// <para>Monthly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly")]
        Monthly,
        
        /// <summary>
        /// <para>Weekly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weekly")]
        Weekly,
    }
    
    /// <summary>
    /// <para>insuranceTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("insuranceTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("insuranceTypeList", Namespace="")]
    public enum InsuranceTypeList
    {
        
        /// <summary>
        /// <para>Body Corporate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Body Corporate")]
        [System.Xml.Serialization.XmlEnumAttribute("Body Corporate")]
        Body_Corporate,
        
        /// <summary>
        /// <para>Building Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Insurance")]
        Building_Insurance,
        
        /// <summary>
        /// <para>Building Replacement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Replacement")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Replacement")]
        Building_Replacement,
        
        /// <summary>
        /// <para>Consumer Credit Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Consumer Credit Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Consumer Credit Insurance")]
        Consumer_Credit_Insurance,
        
        /// <summary>
        /// <para>Disablement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Disablement")]
        Disablement,
        
        /// <summary>
        /// <para>Home Contents Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Contents Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Contents Insurance")]
        Home_Contents_Insurance,
        
        /// <summary>
        /// <para>Income Protection</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income Protection")]
        [System.Xml.Serialization.XmlEnumAttribute("Income Protection")]
        Income_Protection,
        
        /// <summary>
        /// <para>Involuntary Unemployment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Involuntary Unemployment")]
        [System.Xml.Serialization.XmlEnumAttribute("Involuntary Unemployment")]
        Involuntary_Unemployment,
        
        /// <summary>
        /// <para>Life Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Life Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Life Insurance")]
        Life_Insurance,
        
        /// <summary>
        /// <para>LMI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("LMI")]
        LMI,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Trauma</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trauma")]
        Trauma,
    }
    
    /// <summary>
    /// <para>insurerList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("insurerList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("insurerList", Namespace="")]
    public enum InsurerList
    {
        
        /// <summary>
        /// <para>AA Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AA Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("AA Insurance")]
        AA_Insurance,
        
        /// <summary>
        /// <para>AMI Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("AMI Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("AMI Insurance")]
        AMI_Insurance,
        
        /// <summary>
        /// <para>Combined Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Combined Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Combined Insurance")]
        Combined_Insurance,
        
        /// <summary>
        /// <para>FMG Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("FMG Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("FMG Insurance")]
        FMG_Insurance,
        
        /// <summary>
        /// <para>IAG New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IAG New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("IAG New Zealand")]
        IAG_New_Zealand,
        
        /// <summary>
        /// <para>NZI</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("NZI")]
        NZI,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Southern Cross Healthcare Group</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Southern Cross Healthcare Group")]
        [System.Xml.Serialization.XmlEnumAttribute("Southern Cross Healthcare Group")]
        Southern_Cross_Healthcare_Group,
        
        /// <summary>
        /// <para>Sovereign</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sovereign")]
        Sovereign,
        
        /// <summary>
        /// <para>Tower Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tower Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Tower Insurance")]
        Tower_Insurance,
    }
    
    /// <summary>
    /// <para>Where the credit application includes an interest only period, this list contains options that can be used to prompt the applicant for reasons (with an option of 'other').</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Where the credit application includes an interest only period, this list contains" +
        " options that can be used to prompt the applicant for reasons (with an option of" +
        " \'other\').")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("interestOnlyReasonList", Namespace="")]
    public enum InterestOnlyReasonList
    {
        
        /// <summary>
        /// <para>This application contains an interest only period to assist in creating funds for investment purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to assist in creating funds for" +
            " investment purposes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Create funds for investment purposes")]
        Create_Funds_For_Investment_Purposes,
        
        /// <summary>
        /// <para>This application contains an interest only period to accommodate an anticipated large non-recurring expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to accommodate an anticipated l" +
            "arge non-recurring expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Large non-recurring expenses")]
        Large_Non_Recurring_Expenses,
        
        /// <summary>
        /// <para>This application contains an interest only period to assist in maximising cash flow.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to assist in maximising cash fl" +
            "ow.")]
        [System.Xml.Serialization.XmlEnumAttribute("Maximise cash flow")]
        Maximise_Cash_Flow,
        
        /// <summary>
        /// <para>This application contains an interest only period to minimise cash flow impact during the construction period on the security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to minimise cash flow impact du" +
            "ring the construction period on the security property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Minimise Cash Flow Impact During Construction")]
        Minimise_Cash_Flow_Impact_During_Construction,
        
        /// <summary>
        /// <para>This application contains an interest only period to minimise cash flow impact during the bridging finance period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to minimise cash flow impact du" +
            "ring the bridging finance period.")]
        [System.Xml.Serialization.XmlEnumAttribute("Minimise Cash Flow Impact During the Bridging Period")]
        Minimise_Cash_Flow_Impact_During_The_Bridging_Period,
        
        /// <summary>
        /// <para>This application contains an interest only period for reasons not otherwise listed above.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period for reasons not otherwise liste" +
            "d above.")]
        [System.Xml.Serialization.XmlEnumAttribute("Other reason")]
        Other_Reason,
        
        /// <summary>
        /// <para>This application contains an interest only period because it is intended to convert the property to an investment property in the future.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period because it is intended to conve" +
            "rt the property to an investment property in the future.")]
        [System.Xml.Serialization.XmlEnumAttribute("Plan to convert to investment property")]
        Plan_To_Convert_To_Investment_Property,
        
        /// <summary>
        /// <para>This application contains an interest only period as it is intended that principal reductions will be made into an offset facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period as it is intended that principa" +
            "l reductions will be made into an offset facility.")]
        [System.Xml.Serialization.XmlEnumAttribute("Principal reductions in an offset facility")]
        Principal_Reductions_In_An_Offset_Facility,
        
        /// <summary>
        /// <para>This application contains an interest only period because of a recommendation from an independent financial adviser.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period because of a recommendation fro" +
            "m an independent financial adviser.")]
        [System.Xml.Serialization.XmlEnumAttribute("Recommendation From Independent Financial Adviser")]
        Recommendation_From_Independent_Financial_Adviser,
        
        /// <summary>
        /// <para>This application contains an interest only period for taxation, financial or accounting reasons.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period for taxation, financial or acco" +
            "unting reasons.")]
        [System.Xml.Serialization.XmlEnumAttribute("Taxation, financial or accounting reasons")]
        TaxationComma_Financial_Or_Accounting_Reasons,
        
        /// <summary>
        /// <para>This application contains an interest only period to accommodate a temporary reduction in income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period to accommodate a temporary redu" +
            "ction in income.")]
        [System.Xml.Serialization.XmlEnumAttribute("Temporary reduction in income")]
        Temporary_Reduction_In_Income,
        
        /// <summary>
        /// <para>This application contains an interest only period as income is of a variable nature.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This application contains an interest only period as income is of a variable natu" +
            "re.")]
        [System.Xml.Serialization.XmlEnumAttribute("Variable income")]
        Variable_Income,
    }
    
    /// <summary>
    /// <para>interestRateTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("interestRateTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("interestRateTypeList", Namespace="")]
    public enum InterestRateTypeList
    {
        
        /// <summary>
        /// <para>Basic Variable</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Basic Variable")]
        [System.Xml.Serialization.XmlEnumAttribute("Basic Variable")]
        Basic_Variable,
        
        /// <summary>
        /// <para>Fixed</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed")]
        Fixed,
        
        /// <summary>
        /// <para>Split</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Split")]
        Split,
        
        /// <summary>
        /// <para>Standard Variable</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Standard Variable")]
        [System.Xml.Serialization.XmlEnumAttribute("Standard Variable")]
        Standard_Variable,
    }
    
    /// <summary>
    /// <para>interestTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("interestTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("interestTypeList", Namespace="")]
    public enum InterestTypeList
    {
        
        /// <summary>
        /// <para>The term specified is the fixed rate term of the loan, being the period during which a fixed interest rate applies.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The term specified is the fixed rate term of the loan, being the period during wh" +
            "ich a fixed interest rate applies.")]
        [System.Xml.Serialization.XmlEnumAttribute("Fixed Rate")]
        Fixed_Rate,
        
        /// <summary>
        /// <para>The term specified is the variable rate term of the loan, being the period during which a variable interest rate applies.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The term specified is the variable rate term of the loan, being the period during" +
            " which a variable interest rate applies.")]
        Variable,
    }
    
    /// <summary>
    /// <para>itAndAVEquipmentTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("itAndAVEquipmentTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("itAndAVEquipmentTypeList", Namespace="")]
    public enum ItAndAVEquipmentTypeList
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Audio Visual</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Audio Visual" +
            "")]
        [System.Xml.Serialization.XmlEnumAttribute("Audio Visual")]
        Audio_Visual,
        
        /// <summary>
        /// <para>Client Computing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Client Computing")]
        [System.Xml.Serialization.XmlEnumAttribute("Client Computing")]
        Client_Computing,
        
        /// <summary>
        /// <para>Gaming</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gaming")]
        Gaming,
        
        /// <summary>
        /// <para>HiFi</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("HiFi")]
        HiFi,
        
        /// <summary>
        /// <para>Network Infrastructure</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Network Infrastructure")]
        [System.Xml.Serialization.XmlEnumAttribute("Network Infrastructure")]
        Network_Infrastructure,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Peripherals</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peripherals")]
        Peripherals,
        
        /// <summary>
        /// <para>Photography</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photography")]
        Photography,
        
        /// <summary>
        /// <para>Point of Sale System</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Point of Sale System")]
        [System.Xml.Serialization.XmlEnumAttribute("Point of Sale System")]
        Point_Of_Sale_System,
        
        /// <summary>
        /// <para>Portable Audio</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Portable Audio")]
        [System.Xml.Serialization.XmlEnumAttribute("Portable Audio")]
        Portable_Audio,
        
        /// <summary>
        /// <para>Security Hardware and Appliances</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Hardware and Appliances")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Hardware and Appliances")]
        Security_Hardware_And_Appliances,
        
        /// <summary>
        /// <para>Server Computing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Server Computing")]
        [System.Xml.Serialization.XmlEnumAttribute("Server Computing")]
        Server_Computing,
        
        /// <summary>
        /// <para>Software</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Software")]
        Software,
        
        /// <summary>
        /// <para>Storage Infrastructure</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Storage Infrastructure")]
        [System.Xml.Serialization.XmlEnumAttribute("Storage Infrastructure")]
        Storage_Infrastructure,
        
        /// <summary>
        /// <para>Surveillance Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveillance Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Surveillance Equipment")]
        Surveillance_Equipment,
        
        /// <summary>
        /// <para>Television</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Television")]
        Television,
        
        /// <summary>
        /// <para>Video</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Video")]
        Video,
    }
    
    /// <summary>
    /// <para>kinRelationshipList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("kinRelationshipList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("kinRelationshipList", Namespace="")]
    public enum KinRelationshipList
    {
        
        /// <summary>
        /// <para>Next of kin is a child of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Next of kin is a child of the applicant.")]
        Child,
        
        /// <summary>
        /// <para>Friend</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Friend")]
        Friend,
        
        /// <summary>
        /// <para>Grandparent</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grandparent")]
        Grandparent,
        
        /// <summary>
        /// <para>Next of kin is a relative other than a parent, child or spouse of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Next of kin is a relative other than a parent, child or spouse of the applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Relative")]
        Other_Relative,
        
        /// <summary>
        /// <para>Next of kin is a parent of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Next of kin is a parent of the applicant.")]
        Parent,
        
        /// <summary>
        /// <para>Next of kin is a sibling of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Next of kin is a sibling of the applicant.")]
        Sibling,
        
        /// <summary>
        /// <para>Next of kin is a spouse.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Next of kin is a spouse.")]
        Spouse,
    }
    
    /// <summary>
    /// <para>landAreaUnitsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("landAreaUnitsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("landAreaUnitsList", Namespace="")]
    public enum LandAreaUnitsList
    {
        
        /// <summary>
        /// <para>Acres</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Acres")]
        Acres,
        
        /// <summary>
        /// <para>Hectares</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hectares")]
        Hectares,
        
        /// <summary>
        /// <para>Square Metres</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Square Metres")]
        [System.Xml.Serialization.XmlEnumAttribute("Square Metres")]
        Square_Metres,
    }
    
    /// <summary>
    /// <para>landValueEstimateBasisList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("landValueEstimateBasisList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("landValueEstimateBasisList", Namespace="")]
    public enum LandValueEstimateBasisList
    {
        
        /// <summary>
        /// <para>Estimated Market Value</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Estimated Market Value")]
        [System.Xml.Serialization.XmlEnumAttribute("Estimated Market Value")]
        Estimated_Market_Value,
        
        /// <summary>
        /// <para>Purchase Price</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purchase Price")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Price")]
        Purchase_Price,
    }
    
    /// <summary>
    /// <para>lendingGuaranteeTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("lendingGuaranteeTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("lendingGuaranteeTypeList", Namespace="")]
    public enum LendingGuaranteeTypeList
    {
        
        /// <summary>
        /// <para>Income and Security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income and Security")]
        [System.Xml.Serialization.XmlEnumAttribute("Income and Security")]
        Income_And_Security,
        
        /// <summary>
        /// <para>Income Only</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income Only")]
        [System.Xml.Serialization.XmlEnumAttribute("Income Only")]
        Income_Only,
        
        /// <summary>
        /// <para>Security Only</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security Only")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Only")]
        Security_Only,
    }
    
    /// <summary>
    /// <para>liabilityTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("liabilityTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("liabilityTypeList", Namespace="")]
    public enum LiabilityTypeList
    {
        
        /// <summary>
        /// <para>Liability is a bridging loan. A short term loan designed to allow a borrower to finance the purchase of a new property before selling an existing property. An assessment for a bridging loan involves calculation of peak debt and end debt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a bridging loan. A short term loan designed to allow a borrower to f" +
            "inance the purchase of a new property before selling an existing property. An as" +
            "sessment for a bridging loan involves calculation of peak debt and end debt.")]
        [System.Xml.Serialization.XmlEnumAttribute("Bridging Finance")]
        Bridging_Finance,
        
        /// <summary>
        /// <para>Liability is a car loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a car loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Car Loan")]
        Car_Loan,
        
        /// <summary>
        /// <para>Liability is a commercial bill, typically associated with business lending or high-end investment lending</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a commercial bill, typically associated with business lending or hig" +
            "h-end investment lending")]
        [System.Xml.Serialization.XmlEnumAttribute("Commercial Bill")]
        Commercial_Bill,
        
        /// <summary>
        /// <para>Liability is has not yet crystallised but may arise in future on the happening of certain events or contingencies</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is has not yet crystallised but may arise in future on the happening of" +
            " certain events or contingencies")]
        [System.Xml.Serialization.XmlEnumAttribute("Contingent Liability")]
        Contingent_Liability,
        
        /// <summary>
        /// <para>Liability is a credit card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a credit card")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>Liability is a debt under the Commonwealth Higher Education Contribution Scheme</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a debt under the Commonwealth Higher Education Contribution Scheme")]
        [System.Xml.Serialization.XmlEnumAttribute("HECS-HELP")]
        HECS_HELP,
        
        /// <summary>
        /// <para>Liability is owed under a hire purchase agreement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is owed under a hire purchase agreement")]
        [System.Xml.Serialization.XmlEnumAttribute("Hire Purchase")]
        Hire_Purchase,
        
        /// <summary>
        /// <para>An invoice financing loan secured by one or more outstanding sales invoices owed to the borrower.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An invoice financing loan secured by one or more outstanding sales invoices owed " +
            "to the borrower.")]
        [System.Xml.Serialization.XmlEnumAttribute("Invoice Financing Loan")]
        Invoice_Financing_Loan,
        
        /// <summary>
        /// <para>Liability is owed under a finance lease, including for a motor vehicle or equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is owed under a finance lease, including for a motor vehicle or equipme" +
            "nt")]
        Lease,
        
        /// <summary>
        /// <para>Liability has a limit up to which the borrower may draw, but which has no regular principal repayment obligations; as opposed to a Term Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability has a limit up to which the borrower may draw, but which has no regular" +
            " principal repayment obligations; as opposed to a Term Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Line of Credit")]
        Line_Of_Credit,
        
        /// <summary>
        /// <para>Liability is the contingent liability of a guarantor for guaranteed obligations of a third party to a lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is the contingent liability of a guarantor for guaranteed obligations o" +
            "f a third party to a lender")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan as Guarantor")]
        Loan_As_Guarantor,
        
        /// <summary>
        /// <para>Liability which lets you borrow money to invest and uses your shares or managed funds as security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability which lets you borrow money to invest and uses your shares or managed f" +
            "unds as security.")]
        [System.Xml.Serialization.XmlEnumAttribute("Margin Loan")]
        Margin_Loan,
        
        /// <summary>
        /// <para>DEPRECATED and to be deleted in a breaking release on or after May 1 2017. Liability is a loan secured by real property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED and to be deleted in a breaking release on or after May 1 2017. Liabil" +
            "ity is a loan secured by real property")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Loan")]
        Mortgage_Loan,
        
        /// <summary>
        /// <para>Liability is not described by one of the other enumerated values in the list</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is not described by one of the other enumerated values in the list")]
        Other,
        
        /// <summary>
        /// <para>Liability is loan that is not described by the loan types Mortgage Loan, Personal Loan, Term Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is loan that is not described by the loan types Mortgage Loan, Personal" +
            " Loan, Term Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Loan")]
        Other_Loan,
        
        /// <summary>
        /// <para>Liability is a debt owed to a public authority for unpaid taxes, including BAS and PAYGW</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a debt owed to a public authority for unpaid taxes, including BAS an" +
            "d PAYGW")]
        [System.Xml.Serialization.XmlEnumAttribute("Outstanding Taxation")]
        Outstanding_Taxation,
        
        /// <summary>
        /// <para>Liability is a credit buffer on a deposit account, unsecured, or an extra buffer above the approved limit of a credit facility</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a credit buffer on a deposit account, unsecured, or an extra buffer " +
            "above the approved limit of a credit facility")]
        Overdraft,
        
        /// <summary>
        /// <para>Liability is a personal loan, typically unsecured and for personal purposes such as funding travel or the purchase of a car</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a personal loan, typically unsecured and for personal purposes such " +
            "as funding travel or the purchase of a car")]
        [System.Xml.Serialization.XmlEnumAttribute("Personal Loan")]
        Personal_Loan,
        
        /// <summary>
        /// <para>Liability is a store card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a store card")]
        [System.Xml.Serialization.XmlEnumAttribute("Store Card")]
        Store_Card,
        
        /// <summary>
        /// <para>Liability is a student loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a student loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Student Loan")]
        Student_Loan,
        
        /// <summary>
        /// <para>Liability is a loan that has a term, as opposed to a Line Of Credit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability is a loan that has a term, as opposed to a Line Of Credit")]
        [System.Xml.Serialization.XmlEnumAttribute("Term Loan")]
        Term_Loan,
        
        /// <summary>
        /// <para>A trade finance loan for financing domestic and international trade.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trade finance loan for financing domestic and international trade.")]
        [System.Xml.Serialization.XmlEnumAttribute("Trade Finance Loan")]
        Trade_Finance_Loan,
    }
    
    /// <summary>
    /// <para>List of living expense categories, as agreed by the Living Expenses Working Group.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("List of living expense categories, as agreed by the Living Expenses Working Group" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("livingExpenseCategoryList", Namespace="")]
    public enum LivingExpenseCategoryList
    {
        
        /// <summary>
        /// <para>Body corporate fees, strata fees and land tax on owner occupied principal place of residence. Excludes investment properties, secondary residences, and properties maintained for other purposes such as holiday properties or residences maintained for parents or children.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Body corporate fees, strata fees and land tax on owner occupied principal place of residence. Excludes investment properties, secondary residences, and properties maintained for other purposes such as holiday properties or residences maintained for parents or children.")]
        [System.Xml.Serialization.XmlEnumAttribute("Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal Place o" +
            "f Residence")]
        Body_Corporate_FeesComma_Strata_Fees_And_Land_Tax_On_Owner_Occupied_Principal_Place_Of_Residence,
        
        /// <summary>
        /// <para>Childcare including nannies and non-compulsory pre-school.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Childcare including nannies and non-compulsory pre-school.")]
        Childcare,
        
        /// <summary>
        /// <para>Clothing, footwear, personal care products, cosmetics, hair services and accessories (including travel goods, handbags, umbrellas, wallets, and baby-goods) for men, women, children and infants, including purchases, repairs and alterations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Clothing, footwear, personal care products, cosmetics, hair services and accessor" +
            "ies (including travel goods, handbags, umbrellas, wallets, and baby-goods) for m" +
            "en, women, children and infants, including purchases, repairs and alterations.")]
        [System.Xml.Serialization.XmlEnumAttribute("Clothing and personal care")]
        Clothing_And_Personal_Care,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Public and private education fees and associated costs (preschool, primary, secondary and tertiary) including books and uniforms etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Public and p" +
            "rivate education fees and associated costs (preschool, primary, secondary and te" +
            "rtiary) including books and uniforms etc.")]
        Education,
        
        /// <summary>
        /// <para>General basic insurances include ambulance, car (not recreation vehicles), travel, and personal belongings insurance. Excludes property (house and contents), health, sickness and personal accident, life, income protection and pet insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General basic insurances include ambulance, car (not recreation vehicles), travel" +
            ", and personal belongings insurance. Excludes property (house and contents), hea" +
            "lth, sickness and personal accident, life, income protection and pet insurance.")]
        [System.Xml.Serialization.XmlEnumAttribute("General Basic Insurances")]
        General_Basic_Insurances,
        
        /// <summary>
        /// <para>Groceries (food and non-alcoholic beverages), toiletries and cleaning products.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Groceries (food and non-alcoholic beverages), toiletries and cleaning products.")]
        Groceries,
        
        /// <summary>
        /// <para>Health insurance including hospital, medical and dental insurance (excludes separate ambulance insurance).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Health insurance including hospital, medical and dental insurance (excludes separ" +
            "ate ambulance insurance).")]
        [System.Xml.Serialization.XmlEnumAttribute("Health Insurance")]
        Health_Insurance,
        
        /// <summary>
        /// <para>Higher education and vocational training fees (including TAFE, business college, drama, music, dance) excluding HECS, and professional fees (union dues, professional association subscriptions, legal, accountant and tax agent fees).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Higher education and vocational training fees (including TAFE, business college, " +
            "drama, music, dance) excluding HECS, and professional fees (union dues, professi" +
            "onal association subscriptions, legal, accountant and tax agent fees).")]
        [System.Xml.Serialization.XmlEnumAttribute("Higher Education, Vocational Training and Professional Fees")]
        Higher_EducationComma_Vocational_Training_And_Professional_Fees,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. All insurance including health, home and contents, motor vehicle, life, income protection.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. All insuranc" +
            "e including health, home and contents, motor vehicle, life, income protection.")]
        Insurance,
        
        /// <summary>
        /// <para>Costs associated with any property owned for investment purposes. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Costs associated with any property owned for investment purposes. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Investment Property Running Costs")]
        Investment_Property_Running_Costs,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Housing and property expenses on investment property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a future release. Housing and property expenses on investment property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).")]
        [System.Xml.Serialization.XmlEnumAttribute("Investment property utilities, rates and related costs")]
        Investment_Property_UtilitiesComma_Rates_And_Related_Costs,
        
        /// <summary>
        /// <para>Medical and health care services including GPs, specialists, physiotherapists, chiropractors, and opticians. Medicines, pharmaceuticals, prescriptions, glasses, purchase or hire of therapeutic appliances and equipment, hospital charges, nursing home charges. Excludes health insurance and ambulance insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Medical and health care services including GPs, specialists, physiotherapists, chiropractors, and opticians. Medicines, pharmaceuticals, prescriptions, glasses, purchase or hire of therapeutic appliances and equipment, hospital charges, nursing home charges. Excludes health insurance and ambulance insurance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Medical and health")]
        Medical_And_Health,
        
        /// <summary>
        /// <para>Other ongoing or recurring items not included within the other categories including, but not limited to pet insurance, insurance not elsewhere classified, registration, insurance and operation of recreational vehicles (such as caravans, trailers, motorcycles, boats and aircraft), overseas holidays, gifts, jewellery, household services including cleaning, gardening, housekeeping, security and pest control services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Other ongoing or recurring items not included within the other categories including, but not limited to pet insurance, insurance not elsewhere classified, registration, insurance and operation of recreational vehicles (such as caravans, trailers, motorcycles, boats and aircraft), overseas holidays, gifts, jewellery, household services including cleaning, gardening, housekeeping, security and pest control services.")]
        Other,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Housing and property expenses on owner occupied property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a future release. Housing and property expenses on owner occupied property including rates, taxes, levies, body corporate and strata fees, repairs and maintenance, other household items and utilities (excluding insurance, telephone, internet and pay TV as they are categorised separately).")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner occupied property utilities, rates and related costs")]
        Owner_Occupied_Property_UtilitiesComma_Rates_And_Related_Costs,
        
        /// <summary>
        /// <para>Pet food, grooming, minding services, care products, health products, veterinarian fees.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pet food, grooming, minding services, care products, health products, veterinaria" +
            "n fees.")]
        [System.Xml.Serialization.XmlEnumAttribute("Pet Care")]
        Pet_Care,
        
        /// <summary>
        /// <para>Costs associated with the primary residence, either owned or rented. Includes rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, home insurance, contents insurance and appliance insurance. Excludes body corporate fees, strata fees and land tax.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Costs associated with the primary residence, either owned or rented. Includes rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, home insurance, contents insurance and appliance insurance. Excludes body corporate fees, strata fees and land tax.")]
        [System.Xml.Serialization.XmlEnumAttribute("Primary Residence Running Costs")]
        Primary_Residence_Running_Costs,
        
        /// <summary>
        /// <para>Tuition fees, school fees and sports fees for private schooling, including independent schools (Catholic or non-Catholic) and private tuition including compulsory age kindergarten/reception/pre-primary/prep.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tuition fees, school fees and sports fees for private schooling, including indepe" +
            "ndent schools (Catholic or non-Catholic) and private tuition including compulsor" +
            "y age kindergarten/reception/pre-primary/prep.")]
        [System.Xml.Serialization.XmlEnumAttribute("Private Schooling and Tuition")]
        Private_Schooling_And_Tuition,
        
        /// <summary>
        /// <para>Public or government, primary and secondary school tuition, school and sports fees including compulsory kindergarten/reception/pre-primary/prep.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Public or government, primary and secondary school tuition, school and sports fee" +
            "s including compulsory kindergarten/reception/pre-primary/prep.")]
        [System.Xml.Serialization.XmlEnumAttribute("Public or Government Primary and Secondary Education")]
        Public_Or_Government_Primary_And_Secondary_Education,
        
        /// <summary>
        /// <para>Meals in restaurants, hotels and clubs, fast food and takeaway including coffee. Alcoholic beverages and tobacco products. Purchase, hire, repair of recreational personal belongings including electronics, computers, games consoles, AV equipment, cameras. Toys, hobbies, stationery, arts, crafts, sports, camping, fishing and recreation equipment including musical instruments, accessories and lessons. Non-subscription TV, video, games, and audio content, books, newspapers, magazines (including physical material and digital content). Recreation, gym, and health and fitness studios fees, court hire, sports lessons, admission fees and tickets (sports, theatre, gallery, museum, music events). Domestic holidays (fares, fuel, accommodation, theme parks, zoos tours). Recreational gambling, including lottery-type games, scratch cards, poker machines, club and casino gaming, and sports betting. Excludes travel insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Meals in restaurants, hotels and clubs, fast food and takeaway including coffee. Alcoholic beverages and tobacco products. Purchase, hire, repair of recreational personal belongings including electronics, computers, games consoles, AV equipment, cameras. Toys, hobbies, stationery, arts, crafts, sports, camping, fishing and recreation equipment including musical instruments, accessories and lessons. Non-subscription TV, video, games, and audio content, books, newspapers, magazines (including physical material and digital content). Recreation, gym, and health and fitness studios fees, court hire, sports lessons, admission fees and tickets (sports, theatre, gallery, museum, music events). Domestic holidays (fares, fuel, accommodation, theme parks, zoos tours). Recreational gambling, including lottery-type games, scratch cards, poker machines, club and casino gaming, and sports betting. Excludes travel insurance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Recreation and entertainment")]
        Recreation_And_Entertainment,
        
        /// <summary>
        /// <para>Costs associated with any secondary residence, either rented or owned for non-investment purposes, such as a holiday property that is not rented to generate income, or a property that family members (parents or children) are allowed to live in rent-free. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Costs associated with any secondary residence, either rented or owned for non-investment purposes, such as a holiday property that is not rented to generate income, or a property that family members (parents or children) are allowed to live in rent-free. Includes body corporate fees, strata fees, land tax, property management fees, rates, water, sewage, repairs and maintenance, electricity, gas, heating oil and wood for fuel, purchase, hire and repair of household and outdoor furnishings and equipment, furnishings, floor coverings, linen, tableware, gardening tools, power tools, electrical, lights, trees, shrubs, plants, pool chemicals, landlords insurance, home insurance, contents insurance and appliance insurance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Secondary Residence Running Costs")]
        Secondary_Residence_Running_Costs,
        
        /// <summary>
        /// <para>Sickness and personal accident insurance, life insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sickness and personal accident insurance, life insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Sickness and Personal Accident Insurance, Life Insurance")]
        Sickness_And_Personal_Accident_InsuranceComma_Life_Insurance,
        
        /// <summary>
        /// <para>Telephone accounts (home and mobile), internet, pay TV and media streaming subscriptions (such as Netflix and Spotify).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telephone accounts (home and mobile), internet, pay TV and media streaming subscr" +
            "iptions (such as Netflix and Spotify).")]
        [System.Xml.Serialization.XmlEnumAttribute("Telephone, internet, pay TV and media streaming subscriptions")]
        TelephoneComma_InternetComma_Pay_TV_And_Media_Streaming_Subscriptions,
        
        /// <summary>
        /// <para>Public transport, taxis, ride-sharing and non-holiday domestic airfares (excludes overseas airfares). Running costs for essential vehicles including fuel, servicing, repairs, parking, tolls (excludes insurance) and registration of motor vehicles (excludes recreational vehicles such as caravans, trailers, motorcycles, boats and aircraft).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Public transport, taxis, ride-sharing and non-holiday domestic airfares (excludes overseas airfares). Running costs for essential vehicles including fuel, servicing, repairs, parking, tolls (excludes insurance) and registration of motor vehicles (excludes recreational vehicles such as caravans, trailers, motorcycles, boats and aircraft).")]
        Transport,
        
        /// <summary>
        /// <para>Superannuation contributions that the applicants choose to make into their own Superannuation schemes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation contributions that the applicants choose to make into their own Su" +
            "perannuation schemes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Voluntary Superannuation Contributions")]
        Voluntary_Superannuation_Contributions,
    }
    
    /// <summary>
    /// <para>A list of types of loan payment schedules.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of types of loan payment schedules.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loanPaymentScheduleTypeList", Namespace="")]
    public enum LoanPaymentScheduleTypeList
    {
        
        /// <summary>
        /// <para>The size of the principal payment is the same for every payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The size of the principal payment is the same for every payment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Even Principal Payments")]
        Even_Principal_Payments,
        
        /// <summary>
        /// <para>The size of the total payment (principal plus interest) is the same for every payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The size of the total payment (principal plus interest) is the same for every pay" +
            "ment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Even Total Payments")]
        Even_Total_Payments,
    }
    
    /// <summary>
    /// <para>loanTermUnitsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("loanTermUnitsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loanTermUnitsList", Namespace="")]
    public enum LoanTermUnitsList
    {
        
        /// <summary>
        /// <para>The loan term specified is in months.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan term specified is in months.")]
        Months,
        
        /// <summary>
        /// <para>The loan term specified is in weeks.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan term specified is in weeks.")]
        Weeks,
        
        /// <summary>
        /// <para>The loan term specified is in years.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan term specified is in years.")]
        Years,
    }
    
    /// <summary>
    /// <para>A list of credit facility types that are valid for those facilities described in the 'LoanDetails' element.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of credit facility types that are valid for those facilities described in " +
        "the \'LoanDetails\' element.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loanTypeList", Namespace="")]
    public enum LoanTypeList
    {
        
        /// <summary>
        /// <para>A short term loan designed to allow a borrower to finance the purchase of a new property before selling an existing property. An assessment for a bridging loan involves calculation of peak debt and end debt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A short term loan designed to allow a borrower to finance the purchase of a new p" +
            "roperty before selling an existing property. An assessment for a bridging loan i" +
            "nvolves calculation of peak debt and end debt.")]
        [System.Xml.Serialization.XmlEnumAttribute("Bridging Finance")]
        Bridging_Finance,
        
        /// <summary>
        /// <para>A finance company lends money to the customer to purchase movable equipment (the 'chattel'), in return for regular repayments. The customer takes ownership upon purchase, and an ASIC-registered Charge provides loan security. At term, the customer can either pay any residual value (gaining clear title via removal of the Charge), trade in the asset, or refinance the residual value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A finance company lends money to the customer to purchase movable equipment (the 'chattel'), in return for regular repayments. The customer takes ownership upon purchase, and an ASIC-registered Charge provides loan security. At term, the customer can either pay any residual value (gaining clear title via removal of the Charge), trade in the asset, or refinance the residual value.")]
        [System.Xml.Serialization.XmlEnumAttribute("Chattel Mortgage")]
        Chattel_Mortgage,
        
        /// <summary>
        /// <para>Commercial Bill</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Commercial Bill")]
        [System.Xml.Serialization.XmlEnumAttribute("Commercial Bill")]
        Commercial_Bill,
        
        /// <summary>
        /// <para>The lessor secures and pays for an asset on the lessee's behalf with an offer to hire it back to the lessee for an agreed term. The lessor retains ownership of the asset until the lessee pays it off on a principal plus interest basis.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The lessor secures and pays for an asset on the lessee\'s behalf with an offer to " +
            "hire it back to the lessee for an agreed term. The lessor retains ownership of t" +
            "he asset until the lessee pays it off on a principal plus interest basis.")]
        [System.Xml.Serialization.XmlEnumAttribute("Commercial Hire Purchase")]
        Commercial_Hire_Purchase,
        
        /// <summary>
        /// <para>A type of unsecured revolving credit facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A type of unsecured revolving credit facility.")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>An arrangement where a finance company purchases an asset, and use of the asset is granted to the customer through a series of payments until the end of term, when the customer can acquire ownership by paying the residual value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An arrangement where a finance company purchases an asset, and use of the asset i" +
            "s granted to the customer through a series of payments until the end of term, wh" +
            "en the customer can acquire ownership by paying the residual value.")]
        [System.Xml.Serialization.XmlEnumAttribute("Finance Lease")]
        Finance_Lease,
        
        /// <summary>
        /// <para>An invoice financing loan secured by one or more outstanding sales invoices owed to the borrower.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An invoice financing loan secured by one or more outstanding sales invoices owed " +
            "to the borrower.")]
        [System.Xml.Serialization.XmlEnumAttribute("Invoice Financing Loan")]
        Invoice_Financing_Loan,
        
        /// <summary>
        /// <para>A type of rental arrangement other than Operating Lease or Finance Lease (which are each are listed separately).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A type of rental arrangement other than Operating Lease or Finance Lease (which a" +
            "re each are listed separately).")]
        Lease,
        
        /// <summary>
        /// <para>A revolving credit facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A revolving credit facility.")]
        [System.Xml.Serialization.XmlEnumAttribute("Line of Credit")]
        Line_Of_Credit,
        
        /// <summary>
        /// <para>Margin Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Margin Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Margin Loan")]
        Margin_Loan,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Mortgage Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Mortgage Loa" +
            "n")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Loan")]
        Mortgage_Loan,
        
        /// <summary>
        /// <para>An agreement where an asset's owner permits it's use by the customer for a term that is less than the useful or economic life of the asset in return for regular payments. Ownership rights are not transferred and the customer can return the equipment to the owner at the end of term without further obligation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An agreement where an asset's owner permits it's use by the customer for a term that is less than the useful or economic life of the asset in return for regular payments. Ownership rights are not transferred and the customer can return the equipment to the owner at the end of term without further obligation.")]
        [System.Xml.Serialization.XmlEnumAttribute("Operating Lease")]
        Operating_Lease,
        
        /// <summary>
        /// <para>Other Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Loan")]
        Other_Loan,
        
        /// <summary>
        /// <para>Overdraft</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Overdraft")]
        Overdraft,
        
        /// <summary>
        /// <para>Personal Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Personal Loan")]
        [System.Xml.Serialization.XmlEnumAttribute("Personal Loan")]
        Personal_Loan,
        
        /// <summary>
        /// <para>An equity release mortgage with accruing interest, repaid on the sale of the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An equity release mortgage with accruing interest, repaid on the sale of the prop" +
            "erty.")]
        [System.Xml.Serialization.XmlEnumAttribute("Reverse Mortgage")]
        Reverse_Mortgage,
        
        /// <summary>
        /// <para>A loan with a specified repayment period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A loan with a specified repayment period.")]
        [System.Xml.Serialization.XmlEnumAttribute("Term Loan")]
        Term_Loan,
        
        /// <summary>
        /// <para>A trade finance loan for financing domestic and international trade.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trade finance loan for financing domestic and international trade.")]
        [System.Xml.Serialization.XmlEnumAttribute("Trade Finance Loan")]
        Trade_Finance_Loan,
    }
    
    /// <summary>
    /// <para>maritalStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("maritalStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("maritalStatusList", Namespace="")]
    public enum MaritalStatusList
    {
        
        /// <summary>
        /// <para>The person is in a de facto relationship.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is in a de facto relationship.")]
        [System.Xml.Serialization.XmlEnumAttribute("De Facto")]
        De_Facto,
        
        /// <summary>
        /// <para>The person is a divorcee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is a divorcee.")]
        Divorced,
        
        /// <summary>
        /// <para>The person is married.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is married.")]
        Married,
        
        /// <summary>
        /// <para>The person is separated from their husband/wife.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is separated from their husband/wife.")]
        Separated,
        
        /// <summary>
        /// <para>The person is single with no financial dependency for or from a previous spouse.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person is single with no financial dependency for or from a previous spouse.")]
        Single,
        
        /// <summary>
        /// <para>The person's marital status is unknown.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person\'s marital status is unknown.")]
        Unknown,
        
        /// <summary>
        /// <para>The person's husband/wife is deceased.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person\'s husband/wife is deceased.")]
        Widowed,
    }
    
    /// <summary>
    /// <para>masterAgreementStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("masterAgreementStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("masterAgreementStatusList", Namespace="")]
    public enum MasterAgreementStatusList
    {
        
        /// <summary>
        /// <para>Approved</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Approved")]
        Approved,
        
        /// <summary>
        /// <para>Declined</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declined")]
        Declined,
        
        /// <summary>
        /// <para>Existing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Existing")]
        Existing,
        
        /// <summary>
        /// <para>A request for a new master agreement is being submitted.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request for a new master agreement is being submitted.")]
        New,
        
        /// <summary>
        /// <para>Withdrawn</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Withdrawn")]
        Withdrawn,
    }
    
    /// <summary>
    /// <para>masterAgreementTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("masterAgreementTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("masterAgreementTypeList", Namespace="")]
    public enum MasterAgreementTypeList
    {
        
        /// <summary>
        /// <para>The master agreement is a reducing credit facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The master agreement is a reducing credit facility.")]
        Reducing,
        
        /// <summary>
        /// <para>The master agreement is a revolving line of credit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The master agreement is a revolving line of credit.")]
        Revolving,
    }
    
    /// <summary>
    /// <para>materialsHandlingAndLiftingSubtypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("materialsHandlingAndLiftingSubtypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("materialsHandlingAndLiftingSubtypeList", Namespace="")]
    public enum MaterialsHandlingAndLiftingSubtypeList
    {
        
        /// <summary>
        /// <para>Diesel Forklift (subtype of Forklift).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diesel Forklift (subtype of Forklift).")]
        [System.Xml.Serialization.XmlEnumAttribute("Diesel Forklift")]
        Diesel_Forklift,
        
        /// <summary>
        /// <para>Electric Forklift (subtype of Forklift).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Electric Forklift (subtype of Forklift).")]
        [System.Xml.Serialization.XmlEnumAttribute("Electric Forklift")]
        Electric_Forklift,
        
        /// <summary>
        /// <para>Loader Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loader Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Loader Crane")]
        Loader_Crane,
        
        /// <summary>
        /// <para>Mobile Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Mobile Crane")]
        Mobile_Crane,
        
        /// <summary>
        /// <para>Overhead Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Overhead Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Overhead Crane")]
        Overhead_Crane,
        
        /// <summary>
        /// <para>Rough Terrain Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rough Terrain Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Rough Terrain Crane")]
        Rough_Terrain_Crane,
        
        /// <summary>
        /// <para>Telescopic Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telescopic Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Telescopic Crane")]
        Telescopic_Crane,
        
        /// <summary>
        /// <para>Tower Crane (subtype of Crane).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tower Crane (subtype of Crane).")]
        [System.Xml.Serialization.XmlEnumAttribute("Tower Crane")]
        Tower_Crane,
    }
    
    /// <summary>
    /// <para>materialsHandlingAndLiftingTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("materialsHandlingAndLiftingTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("materialsHandlingAndLiftingTypeList", Namespace="")]
    public enum MaterialsHandlingAndLiftingTypeList
    {
        
        /// <summary>
        /// <para>Crane</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crane")]
        Crane,
        
        /// <summary>
        /// <para>Forklift</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Forklift")]
        Forklift,
        
        /// <summary>
        /// <para>Jack / Lifting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Jack / Lifting")]
        [System.Xml.Serialization.XmlEnumAttribute("Jack / Lifting")]
        Jack_Slash_Lifting,
        
        /// <summary>
        /// <para>Lift / Elevator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lift / Elevator")]
        [System.Xml.Serialization.XmlEnumAttribute("Lift / Elevator")]
        Lift_Slash_Elevator,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Scissor Lift</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Scissor Lift")]
        [System.Xml.Serialization.XmlEnumAttribute("Scissor Lift")]
        Scissor_Lift,
        
        /// <summary>
        /// <para>Storage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Storage")]
        Storage,
        
        /// <summary>
        /// <para>Telescopic Handler</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telescopic Handler")]
        [System.Xml.Serialization.XmlEnumAttribute("Telescopic Handler")]
        Telescopic_Handler,
    }
    
    /// <summary>
    /// <para>medicalEquipmentTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("medicalEquipmentTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("medicalEquipmentTypeList", Namespace="")]
    public enum MedicalEquipmentTypeList
    {
        
        /// <summary>
        /// <para>Diagnostic Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diagnostic Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Diagnostic Equipment")]
        Diagnostic_Equipment,
        
        /// <summary>
        /// <para>X-ray, ultrasound, CT scanner, MRI etc</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("X-ray, ultrasound, CT scanner, MRI etc")]
        [System.Xml.Serialization.XmlEnumAttribute("Imaging Equipment")]
        Imaging_Equipment,
        
        /// <summary>
        /// <para>Laboratory Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laboratory Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Laboratory Equipment")]
        Laboratory_Equipment,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Therapy Systems</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Therapy Systems")]
        [System.Xml.Serialization.XmlEnumAttribute("Therapy Systems")]
        Therapy_Systems,
    }
    
    /// <summary>
    /// <para>methodOfOperationList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("methodOfOperationList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("methodOfOperationList", Namespace="")]
    public enum MethodOfOperationList
    {
        
        /// <summary>
        /// <para>All Signatories</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All Signatories")]
        [System.Xml.Serialization.XmlEnumAttribute("All Signatories")]
        All_Signatories,
        
        /// <summary>
        /// <para>Any Director Jointly With Secretary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any Director Jointly With Secretary")]
        [System.Xml.Serialization.XmlEnumAttribute("Any Director Jointly With Secretary")]
        Any_Director_Jointly_With_Secretary,
        
        /// <summary>
        /// <para>Any One Director</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any One Director")]
        [System.Xml.Serialization.XmlEnumAttribute("Any One Director")]
        Any_One_Director,
        
        /// <summary>
        /// <para>Any One Signatory</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any One Signatory")]
        [System.Xml.Serialization.XmlEnumAttribute("Any One Signatory")]
        Any_One_Signatory,
        
        /// <summary>
        /// <para>Any Two Directors</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any Two Directors")]
        [System.Xml.Serialization.XmlEnumAttribute("Any Two Directors")]
        Any_Two_Directors,
        
        /// <summary>
        /// <para>Any Two Signatories</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any Two Signatories")]
        [System.Xml.Serialization.XmlEnumAttribute("Any Two Signatories")]
        Any_Two_Signatories,
    }
    
    /// <summary>
    /// <para>mmMonthList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("mmMonthList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("mmMonthList", Namespace="")]
    public enum MmMonthList
    {
        
        /// <summary>
        /// <para>01</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("01")]
        [System.Xml.Serialization.XmlEnumAttribute("01")]
        Item01,
        
        /// <summary>
        /// <para>02</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("02")]
        [System.Xml.Serialization.XmlEnumAttribute("02")]
        Item02,
        
        /// <summary>
        /// <para>03</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("03")]
        [System.Xml.Serialization.XmlEnumAttribute("03")]
        Item03,
        
        /// <summary>
        /// <para>04</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("04")]
        [System.Xml.Serialization.XmlEnumAttribute("04")]
        Item04,
        
        /// <summary>
        /// <para>05</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("05")]
        [System.Xml.Serialization.XmlEnumAttribute("05")]
        Item05,
        
        /// <summary>
        /// <para>06</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("06")]
        [System.Xml.Serialization.XmlEnumAttribute("06")]
        Item06,
        
        /// <summary>
        /// <para>07</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("07")]
        [System.Xml.Serialization.XmlEnumAttribute("07")]
        Item07,
        
        /// <summary>
        /// <para>08</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("08")]
        [System.Xml.Serialization.XmlEnumAttribute("08")]
        Item08,
        
        /// <summary>
        /// <para>09</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("09")]
        [System.Xml.Serialization.XmlEnumAttribute("09")]
        Item09,
        
        /// <summary>
        /// <para>10</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10")]
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <summary>
        /// <para>11</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("11")]
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <summary>
        /// <para>12</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("12")]
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
    }
    
    /// <summary>
    /// <para>mobileComputingTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("mobileComputingTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("mobileComputingTypeList", Namespace="")]
    public enum MobileComputingTypeList
    {
        
        /// <summary>
        /// <para>Laptop</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Laptop")]
        Laptop,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Smart Phone</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Smart Phone")]
        [System.Xml.Serialization.XmlEnumAttribute("Smart Phone")]
        Smart_Phone,
        
        /// <summary>
        /// <para>Tablet</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tablet")]
        Tablet,
        
        /// <summary>
        /// <para>Wearable Device</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wearable Device")]
        [System.Xml.Serialization.XmlEnumAttribute("Wearable Device")]
        Wearable_Device,
    }
    
    /// <summary>
    /// <para>nccpStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("nccpStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nccpStatusList", Namespace="")]
    public enum NccpStatusList
    {
        
        /// <summary>
        /// <para>The loan is regulated by the NCCP as it is predominantly for private or domestic purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan is regulated by the NCCP as it is predominantly for private or domestic " +
            "purposes.")]
        Regulated,
        
        /// <summary>
        /// <para>The loan is not regulated by the NCCP as it is not predominantly for private or domestic purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan is not regulated by the NCCP as it is not predominantly for private or d" +
            "omestic purposes.")]
        Unregulated,
    }
    
    /// <summary>
    /// <para>nonRealEstateAssetTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("nonRealEstateAssetTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nonRealEstateAssetTypeList", Namespace="")]
    public enum NonRealEstateAssetTypeList
    {
        
        /// <summary>
        /// <para>Agricultural equipment, crops and livestock</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural equipment, crops and livestock")]
        Agricultural,
        
        /// <summary>
        /// <para>Fixed and rotary wing aircraft and aircraft engines</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed and rotary wing aircraft and aircraft engines")]
        Aircraft,
        
        /// <summary>
        /// <para>Business</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Business")]
        Business,
        
        /// <summary>
        /// <para>Cleaning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaning")]
        Cleaning,
        
        /// <summary>
        /// <para>Earth Moving, Mining and Construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earth Moving, Mining and Construction")]
        [System.Xml.Serialization.XmlEnumAttribute("Earth Moving, Mining and Construction")]
        Earth_MovingComma_Mining_And_Construction,
        
        /// <summary>
        /// <para>Cash and accounts at financial institutions</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cash and accounts at financial institutions")]
        [System.Xml.Serialization.XmlEnumAttribute("Financial Asset")]
        Financial_Asset,
        
        /// <summary>
        /// <para>Hospitality and Leisure</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hospitality and Leisure")]
        [System.Xml.Serialization.XmlEnumAttribute("Hospitality and Leisure")]
        Hospitality_And_Leisure,
        
        /// <summary>
        /// <para>IT and AV Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("IT and AV Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("IT and AV Equipment")]
        IT_And_AV_Equipment,
        
        /// <summary>
        /// <para>Materials Handling and Lifting</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Materials Handling and Lifting")]
        [System.Xml.Serialization.XmlEnumAttribute("Materials Handling and Lifting")]
        Materials_Handling_And_Lifting,
        
        /// <summary>
        /// <para>Medical</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Medical")]
        Medical,
        
        /// <summary>
        /// <para>Mobile Computing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile Computing")]
        [System.Xml.Serialization.XmlEnumAttribute("Mobile Computing")]
        Mobile_Computing,
        
        /// <summary>
        /// <para>Including cars, commercial vehicles and watercraft</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Including cars, commercial vehicles and watercraft")]
        [System.Xml.Serialization.XmlEnumAttribute("Motor Vehicle and Transport")]
        Motor_Vehicle_And_Transport,
        
        /// <summary>
        /// <para>Office Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Office Equipment")]
        Office_Equipment,
        
        /// <summary>
        /// <para>Asset is not described by any of the other enumerated values in the list</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset is not described by any of the other enumerated values in the list")]
        Other,
        
        /// <summary>
        /// <para>Plant, Equipment and Industrial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plant, Equipment and Industrial")]
        [System.Xml.Serialization.XmlEnumAttribute("Plant, Equipment and Industrial")]
        PlantComma_Equipment_And_Industrial,
        
        /// <summary>
        /// <para>Portable Tradesman tools</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Portable Tradesman tools")]
        [System.Xml.Serialization.XmlEnumAttribute("Tools of Trade")]
        Tools_Of_Trade,
        
        /// <summary>
        /// <para>A boat or other vessel that travels on water.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A boat or other vessel that travels on water.")]
        Watercraft,
    }
    
    /// <summary>
    /// <para>nrasConsortiumList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("nrasConsortiumList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nrasConsortiumList", Namespace="")]
    public enum NrasConsortiumList
    {
        
        /// <summary>
        /// <para>4 Walls Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("4 Walls Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("4 Walls Ltd")]
        Item4_Walls_Ltd,
        
        /// <summary>
        /// <para>Accelerated Wealth Systems (Quantum)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accelerated Wealth Systems (Quantum)")]
        [System.Xml.Serialization.XmlEnumAttribute("Accelerated Wealth Systems (Quantum)")]
        Accelerated_Wealth_Systems_LeftParenthesisQuantumRightParenthesis,
        
        /// <summary>
        /// <para>Affordable Housing Consulting Pty Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Affordable Housing Consulting Pty Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Affordable Housing Consulting Pty Ltd")]
        Affordable_Housing_Consulting_Pty_Ltd,
        
        /// <summary>
        /// <para>Affordable Management Corporation Pty Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Affordable Management Corporation Pty Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Affordable Management Corporation Pty Ltd")]
        Affordable_Management_Corporation_Pty_Ltd,
        
        /// <summary>
        /// <para>Aspire Housing Group</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aspire Housing Group")]
        [System.Xml.Serialization.XmlEnumAttribute("Aspire Housing Group")]
        Aspire_Housing_Group,
        
        /// <summary>
        /// <para>Brisbane Housing Company Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Brisbane Housing Company Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Brisbane Housing Company Ltd")]
        Brisbane_Housing_Company_Ltd,
        
        /// <summary>
        /// <para>Community Housing Canberra Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Housing Canberra Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Community Housing Canberra Ltd")]
        Community_Housing_Canberra_Ltd,
        
        /// <summary>
        /// <para>Ethan Affordable Housing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ethan Affordable Housing")]
        [System.Xml.Serialization.XmlEnumAttribute("Ethan Affordable Housing")]
        Ethan_Affordable_Housing,
        
        /// <summary>
        /// <para>Providence Housing Pty Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Providence Housing Pty Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Providence Housing Pty Ltd")]
        Providence_Housing_Pty_Ltd,
        
        /// <summary>
        /// <para>Quantum Housing Group</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantum Housing Group")]
        [System.Xml.Serialization.XmlEnumAttribute("Quantum Housing Group")]
        Quantum_Housing_Group,
        
        /// <summary>
        /// <para>Queensland Affordable Housing Consortium</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Queensland Affordable Housing Consortium")]
        [System.Xml.Serialization.XmlEnumAttribute("Queensland Affordable Housing Consortium")]
        Queensland_Affordable_Housing_Consortium,
        
        /// <summary>
        /// <para>Questus Funds Management Pty Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Questus Funds Management Pty Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Questus Funds Management Pty Ltd")]
        Questus_Funds_Management_Pty_Ltd,
        
        /// <summary>
        /// <para>Urban Affordable Housing Corporation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Urban Affordable Housing Corporation")]
        [System.Xml.Serialization.XmlEnumAttribute("Urban Affordable Housing Corporation")]
        Urban_Affordable_Housing_Corporation,
        
        /// <summary>
        /// <para>Yaran Residential Investments Pty Ltd</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yaran Residential Investments Pty Ltd")]
        [System.Xml.Serialization.XmlEnumAttribute("Yaran Residential Investments Pty Ltd")]
        Yaran_Residential_Investments_Pty_Ltd,
    }
    
    /// <summary>
    /// <para>occupancyList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("occupancyList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("occupancyList", Namespace="")]
    public enum OccupancyList
    {
        
        /// <summary>
        /// <para>Non Owner</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Owner")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Owner")]
        Non_Owner,
        
        /// <summary>
        /// <para>Owner Primary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Owner Primary")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner Primary")]
        Owner_Primary,
        
        /// <summary>
        /// <para>Owner Secondary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Owner Secondary")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner Secondary")]
        Owner_Secondary,
    }
    
    /// <summary>
    /// <para>officeEquipmentTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("officeEquipmentTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("officeEquipmentTypeList", Namespace="")]
    public enum OfficeEquipmentTypeList
    {
        
        /// <summary>
        /// <para>Shop and office furniture, fixtures and fittings</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shop and office furniture, fixtures and fittings")]
        [System.Xml.Serialization.XmlEnumAttribute("Fixtures and Fittings")]
        Fixtures_And_Fittings,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Photocopier/Printer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photocopier/Printer")]
        [System.Xml.Serialization.XmlEnumAttribute("Photocopier/Printer")]
        PhotocopierSlashPrinter,
        
        /// <summary>
        /// <para>Telephone Systems</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Telephone Systems")]
        [System.Xml.Serialization.XmlEnumAttribute("Telephone Systems")]
        Telephone_Systems,
    }
    
    /// <summary>
    /// <para>otherAssetTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("otherAssetTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("otherAssetTypeList", Namespace="")]
    public enum OtherAssetTypeList
    {
        
        /// <summary>
        /// <para>Art Works</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Art Works")]
        [System.Xml.Serialization.XmlEnumAttribute("Art Works")]
        Art_Works,
        
        /// <summary>
        /// <para>Goodwill is value in a business over and above the value of its tangible and other intangible assets</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Goodwill is value in a business over and above the value of its tangible and othe" +
            "r intangible assets")]
        [System.Xml.Serialization.XmlEnumAttribute("Good Will of Business")]
        Good_Will_Of_Business,
        
        /// <summary>
        /// <para>Home Contents</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Contents")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Contents")]
        Home_Contents,
        
        /// <summary>
        /// <para>Intellectual Property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intellectual Property")]
        [System.Xml.Serialization.XmlEnumAttribute("Intellectual Property")]
        Intellectual_Property,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Stock and Inventory</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stock and Inventory")]
        [System.Xml.Serialization.XmlEnumAttribute("Stock and Inventory")]
        Stock_And_Inventory,
    }
    
    /// <summary>
    /// <para>Category of the other commitment.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Category of the other commitment.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("otherCommitmentCategoryList", Namespace="")]
    public enum OtherCommitmentCategoryList
    {
        
        /// <summary>
        /// <para>Board paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Board paid.")]
        Board,
        
        /// <summary>
        /// <para>Maintenance for either dependent or non-dependent children, and spousal or de facto partner maintenance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Maintenance for either dependent or non-dependent children, and spousal or de fac" +
            "to partner maintenance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Child and Spousal Maintenance")]
        Child_And_Spousal_Maintenance,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Maintenance expenses for nondependent children.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Maintenance " +
            "expenses for nondependent children.")]
        [System.Xml.Serialization.XmlEnumAttribute("Child Maintenance")]
        Child_Maintenance,
        
        /// <summary>
        /// <para>Other Commitment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Commitment.")]
        Other,
        
        /// <summary>
        /// <para>Rent on primary residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rent on primary residence.")]
        Rent,
    }
    
    /// <summary>
    /// <para>This item is now deprecated and will be deleted in a release in Q1 2017.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("otherExpenseCategoryList", Namespace="")]
    public enum OtherExpenseCategoryList
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Most food, children's clothing, utilities, general dental, optical and pharmaceuticals, and most transport expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Most foo" +
            "d, children\'s clothing, utilities, general dental, optical and pharmaceuticals, " +
            "and most transport expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Basic Living Expenses")]
        Basic_Living_Expenses,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Childcare, entertainment, luxury food, and domestic holidays.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Childcar" +
            "e, entertainment, luxury food, and domestic holidays.")]
        [System.Xml.Serialization.XmlEnumAttribute("Discretionary Living Expenses")]
        Discretionary_Living_Expenses,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Any other recurring expense category</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Any othe" +
            "r recurring expense category")]
        Other,
    }
    
    /// <summary>
    /// <para>This item is now deprecated and will be deleted in a release in Q1 2017.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("otherExpenseTypeList", Namespace="")]
    public enum OtherExpenseTypeList
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Additional Car(s) Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Addition" +
            "al Car(s) Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("Additional Car(s) Maintenance")]
        Additional_CarLeftParenthesisSRightParenthesis_Maintenance,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Additional Car(s) Petrol</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Addition" +
            "al Car(s) Petrol")]
        [System.Xml.Serialization.XmlEnumAttribute("Additional Car(s) Petrol")]
        Additional_CarLeftParenthesisSRightParenthesis_Petrol,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Additional Car(s) Registration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Addition" +
            "al Car(s) Registration")]
        [System.Xml.Serialization.XmlEnumAttribute("Additional Car(s) Registration")]
        Additional_CarLeftParenthesisSRightParenthesis_Registration,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Board</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Board")]
        Board,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Body Corporate Levies</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Body Cor" +
            "porate Levies")]
        [System.Xml.Serialization.XmlEnumAttribute("Body Corporate Levies")]
        Body_Corporate_Levies,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Building or Contents Insurance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Building" +
            " or Contents Insurance")]
        [System.Xml.Serialization.XmlEnumAttribute("Building or Contents Insurance")]
        Building_Or_Contents_Insurance,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Child Care</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Child Ca" +
            "re")]
        [System.Xml.Serialization.XmlEnumAttribute("Child Care")]
        Child_Care,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Maintenance expenses for nondependent children.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Maintena" +
            "nce expenses for nondependent children.")]
        [System.Xml.Serialization.XmlEnumAttribute("Child Maintenance")]
        Child_Maintenance,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Private school and tertiary education.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Private " +
            "school and tertiary education.")]
        Education,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Gym Membership</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Gym Memb" +
            "ership")]
        [System.Xml.Serialization.XmlEnumAttribute("Gym Membership")]
        Gym_Membership,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Maintenance Fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Maintena" +
            "nce Fee")]
        [System.Xml.Serialization.XmlEnumAttribute("Maintenance Fee")]
        Maintenance_Fee,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. All medical expenses including GP, but excluding dental, optical and pharmaceutical.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. All medi" +
            "cal expenses including GP, but excluding dental, optical and pharmaceutical.")]
        Medical,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Mobile Phone(s)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Mobile P" +
            "hone(s)")]
        [System.Xml.Serialization.XmlEnumAttribute("Mobile Phone(s)")]
        Mobile_PhoneLeftParenthesisSRightParenthesis,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Non Government Education</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Non Gove" +
            "rnment Education")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Government Education")]
        Non_Government_Education,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Any other recurring expense.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Any othe" +
            "r recurring expense.")]
        Other,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Private Health / Medical</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Private " +
            "Health / Medical")]
        [System.Xml.Serialization.XmlEnumAttribute("Private Health / Medical")]
        Private_Health_Slash_Medical,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Rent on primary residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Rent on " +
            "primary residence.")]
        Rent,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Subscriptions</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Subscrip" +
            "tions")]
        Subscriptions,
    }
    
    /// <summary>
    /// <para>otherIncomeTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("otherIncomeTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("otherIncomeTypeList", Namespace="")]
    public enum OtherIncomeTypeList
    {
        
        /// <summary>
        /// <para>Annuities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Annuities")]
        Annuities,
        
        /// <summary>
        /// <para>Income is received from a paying boarder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income is received from a paying boarder.")]
        Board,
        
        /// <summary>
        /// <para>Child Maintenance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Child Maintenance")]
        [System.Xml.Serialization.XmlEnumAttribute("Child Maintenance")]
        Child_Maintenance,
        
        /// <summary>
        /// <para>Dividends</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dividends")]
        Dividends,
        
        /// <summary>
        /// <para>Foreign Sourced</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Foreign Sourced")]
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Sourced")]
        Foreign_Sourced,
        
        /// <summary>
        /// <para>Government Benefits</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Government Benefits")]
        [System.Xml.Serialization.XmlEnumAttribute("Government Benefits")]
        Government_Benefits,
        
        /// <summary>
        /// <para>Interest Income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest Income")]
        [System.Xml.Serialization.XmlEnumAttribute("Interest Income")]
        Interest_Income,
        
        /// <summary>
        /// <para>Managed Investment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Managed Investment")]
        [System.Xml.Serialization.XmlEnumAttribute("Managed Investment")]
        Managed_Investment,
        
        /// <summary>
        /// <para>Other Income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other Income")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Income")]
        Other_Income,
        
        /// <summary>
        /// <para>Private Pension</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Pension")]
        [System.Xml.Serialization.XmlEnumAttribute("Private Pension")]
        Private_Pension,
        
        /// <summary>
        /// <para>Salary Sacrifice Contribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary Sacrifice Contribution")]
        [System.Xml.Serialization.XmlEnumAttribute("Salary Sacrifice Contribution")]
        Salary_Sacrifice_Contribution,
        
        /// <summary>
        /// <para>Super Concessional Contribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super Concessional Contribution")]
        [System.Xml.Serialization.XmlEnumAttribute("Super Concessional Contribution")]
        Super_Concessional_Contribution,
        
        /// <summary>
        /// <para>Super Excess Concessional Contribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super Excess Concessional Contribution")]
        [System.Xml.Serialization.XmlEnumAttribute("Super Excess Concessional Contribution")]
        Super_Excess_Concessional_Contribution,
        
        /// <summary>
        /// <para>Super Non Concessional Contribution</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super Non Concessional Contribution")]
        [System.Xml.Serialization.XmlEnumAttribute("Super Non Concessional Contribution")]
        Super_Non_Concessional_Contribution,
        
        /// <summary>
        /// <para>Superannuation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation")]
        Superannuation,
        
        /// <summary>
        /// <para>Workers Compensation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Workers Compensation")]
        [System.Xml.Serialization.XmlEnumAttribute("Workers Compensation")]
        Workers_Compensation,
    }
    
    /// <summary>
    /// <para>List of the types of partners.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("List of the types of partners.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("partnerTypeList", Namespace="")]
    public enum PartnerTypeList
    {
        
        /// <summary>
        /// <para>A General Partner is a partner in a partnership that normally has unlimited liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A General Partner is a partner in a partnership that normally has unlimited liabi" +
            "lity.")]
        [System.Xml.Serialization.XmlEnumAttribute("General Partner")]
        General_Partner,
        
        /// <summary>
        /// <para>A Limited Partner is a partner in a partnership that has their liability limited to the capital amount they have invested</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Limited Partner is a partner in a partnership that has their liability limited " +
            "to the capital amount they have invested")]
        [System.Xml.Serialization.XmlEnumAttribute("Limited Partner")]
        Limited_Partner,
    }
    
    /// <summary>
    /// <para>A list of employment basis types that are valid for New Zealand.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of employment basis types that are valid for New Zealand.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("payeBasisList", Namespace="")]
    public enum PayeBasisList
    {
        
        /// <summary>
        /// <para>The employment described is under a casual contract of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under a casual contract of employment.")]
        Casual,
        
        /// <summary>
        /// <para>The employment described is remunerated by commission only, there is no base or retainer paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is remunerated by commission only, there is no base or r" +
            "etainer paid.")]
        [System.Xml.Serialization.XmlEnumAttribute("Commission Only")]
        Commission_Only,
        
        /// <summary>
        /// <para>The employment described is under a contract for services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under a contract for services.")]
        Contract,
        
        /// <summary>
        /// <para>The employment described is under full time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under full time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Time")]
        Full_Time,
        
        /// <summary>
        /// <para>The employment described is under part time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under part time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Part Time")]
        Part_Time,
        
        /// <summary>
        /// <para>The employment described is seasonal in nature, for example fruit picking.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is seasonal in nature, for example fruit picking.")]
        Seasonal,
        
        /// <summary>
        /// <para>The employment described is under contract with an employment agency, also known as temping.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employment described is under contract with an employment agency, also known " +
            "as temping.")]
        Temporary,
    }
    
    /// <summary>
    /// <para>payFeesFromList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("payFeesFromList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("payFeesFromList", Namespace="")]
    public enum PayFeesFromList
    {
        
        /// <summary>
        /// <para>Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account")]
        Account,
        
        /// <summary>
        /// <para>Add to Loan Amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Add to Loan Amount")]
        [System.Xml.Serialization.XmlEnumAttribute("Add to Loan Amount")]
        Add_To_Loan_Amount,
        
        /// <summary>
        /// <para>Cash</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cash")]
        Cash,
        
        /// <summary>
        /// <para>Cheque</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cheque")]
        Cheque,
        
        /// <summary>
        /// <para>Credit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>Debit Card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debit Card")]
        [System.Xml.Serialization.XmlEnumAttribute("Debit Card")]
        Debit_Card,
        
        /// <summary>
        /// <para>Direct Credit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Direct Credit")]
        [System.Xml.Serialization.XmlEnumAttribute("Direct Credit")]
        Direct_Credit,
        
        /// <summary>
        /// <para>Direct Deposit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Direct Deposit")]
        [System.Xml.Serialization.XmlEnumAttribute("Direct Deposit")]
        Direct_Deposit,
        
        /// <summary>
        /// <para>From Settlement Proceeds</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("From Settlement Proceeds")]
        [System.Xml.Serialization.XmlEnumAttribute("From Settlement Proceeds")]
        From_Settlement_Proceeds,
        
        /// <summary>
        /// <para>Included in Loan Amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Included in Loan Amount")]
        [System.Xml.Serialization.XmlEnumAttribute("Included in Loan Amount")]
        Included_In_Loan_Amount,
    }
    
    /// <summary>
    /// <para>List of items that describe the timing of the payment with respect to the payment period itself.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("List of items that describe the timing of the payment with respect to the payment" +
        " period itself.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("paymentTimingList", Namespace="")]
    public enum PaymentTimingList
    {
        
        /// <summary>
        /// <para>The payments are made at the start of the payment period (in advance).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payments are made at the start of the payment period (in advance).")]
        [System.Xml.Serialization.XmlEnumAttribute("In Advance")]
        In_Advance,
        
        /// <summary>
        /// <para>The payment is made at the end of the payment period (in arrears).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment is made at the end of the payment period (in arrears).")]
        [System.Xml.Serialization.XmlEnumAttribute("In Arrears")]
        In_Arrears,
    }
    
    /// <summary>
    /// <para>paymentTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("paymentTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("paymentTypeList", Namespace="")]
    public enum PaymentTypeList
    {
        
        /// <summary>
        /// <para>There is no repayment during the specified term, interest is capitalised to the loan balance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("There is no repayment during the specified term, interest is capitalised to the l" +
            "oan balance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Interest Capitalised")]
        Interest_Capitalised,
        
        /// <summary>
        /// <para>The repayment during the specified term consists only of interest, calculated in arrears.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment during the specified term consists only of interest, calculated in " +
            "arrears.")]
        [System.Xml.Serialization.XmlEnumAttribute("Interest Only")]
        Interest_Only,
        
        /// <summary>
        /// <para>The repayment during the specified term consists only of interest, calculated in arrears, some of which is capitalised to the loan balance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment during the specified term consists only of interest, calculated in " +
            "arrears, some of which is capitalised to the loan balance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Interest Partially Capitalised")]
        Interest_Partially_Capitalised,
        
        /// <summary>
        /// <para>The repayment during the specified term consists of an interest only payment made in advance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment during the specified term consists of an interest only payment made" +
            " in advance.")]
        [System.Xml.Serialization.XmlEnumAttribute("Prepaid Interest")]
        Prepaid_Interest,
        
        /// <summary>
        /// <para>The repayment during the specified term consists of both principal and interest.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment during the specified term consists of both principal and interest.")]
        [System.Xml.Serialization.XmlEnumAttribute("Principal and Interest")]
        Principal_And_Interest,
        
        /// <summary>
        /// <para>The repayment during the specified term consists of both principal and interest plus a servicing fee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment during the specified term consists of both principal and interest p" +
            "lus a servicing fee.")]
        [System.Xml.Serialization.XmlEnumAttribute("Principal Interest Fees")]
        Principal_Interest_Fees,
    }
    
    /// <summary>
    /// <para>plantEquipmentAndIndustrialTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("plantEquipmentAndIndustrialTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("plantEquipmentAndIndustrialTypeList", Namespace="")]
    public enum PlantEquipmentAndIndustrialTypeList
    {
        
        /// <summary>
        /// <para>Arborist and Landscaping Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Arborist and Landscaping Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Arborist and Landscaping Equipment")]
        Arborist_And_Landscaping_Equipment,
        
        /// <summary>
        /// <para>Butchers Plant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Butchers Plant")]
        [System.Xml.Serialization.XmlEnumAttribute("Butchers Plant")]
        Butchers_Plant,
        
        /// <summary>
        /// <para>Cleaning</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cleaning")]
        Cleaning,
        
        /// <summary>
        /// <para>Compressors</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Compressors")]
        Compressors,
        
        /// <summary>
        /// <para>Engine</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engine")]
        Engine,
        
        /// <summary>
        /// <para>Engineering Machine</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Engineering Machine")]
        [System.Xml.Serialization.XmlEnumAttribute("Engineering Machine")]
        Engineering_Machine,
        
        /// <summary>
        /// <para>Racks, shelving, benches, workstations, cool room.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Racks, shelving, benches, workstations, cool room.")]
        Fitout,
        
        /// <summary>
        /// <para>Generator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Generator")]
        Generator,
        
        /// <summary>
        /// <para>Air conditioning, heaters, chillers, refrigeration plant, cold storage</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Air conditioning, heaters, chillers, refrigeration plant, cold storage")]
        [System.Xml.Serialization.XmlEnumAttribute("Heating and Cooling")]
        Heating_And_Cooling,
        
        /// <summary>
        /// <para>Hot Water Plant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hot Water Plant")]
        [System.Xml.Serialization.XmlEnumAttribute("Hot Water Plant")]
        Hot_Water_Plant,
        
        /// <summary>
        /// <para>Lighting Plant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lighting Plant")]
        [System.Xml.Serialization.XmlEnumAttribute("Lighting Plant")]
        Lighting_Plant,
        
        /// <summary>
        /// <para>CNC machine, Lathe, Press, Drill Press, Borer, Welding, Dies</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CNC machine, Lathe, Press, Drill Press, Borer, Welding, Dies")]
        [System.Xml.Serialization.XmlEnumAttribute("Manufacturing and Machining")]
        Manufacturing_And_Machining,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Photo Process Plant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Photo Process Plant")]
        [System.Xml.Serialization.XmlEnumAttribute("Photo Process Plant")]
        Photo_Process_Plant,
        
        /// <summary>
        /// <para>Power Metering Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Power Metering Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Power Metering Equipment")]
        Power_Metering_Equipment,
        
        /// <summary>
        /// <para>Printing Press</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Printing Press")]
        [System.Xml.Serialization.XmlEnumAttribute("Printing Press")]
        Printing_Press,
        
        /// <summary>
        /// <para>Pump</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pump")]
        Pump,
        
        /// <summary>
        /// <para>Sewing Machine</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sewing Machine")]
        [System.Xml.Serialization.XmlEnumAttribute("Sewing Machine")]
        Sewing_Machine,
        
        /// <summary>
        /// <para>Solar DC Inverters</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solar DC Inverters")]
        [System.Xml.Serialization.XmlEnumAttribute("Solar DC Inverters")]
        Solar_DC_Inverters,
        
        /// <summary>
        /// <para>Solar Rooftop PV</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solar Rooftop PV")]
        [System.Xml.Serialization.XmlEnumAttribute("Solar Rooftop PV")]
        Solar_Rooftop_PV,
        
        /// <summary>
        /// <para>Wood Working Plant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wood Working Plant")]
        [System.Xml.Serialization.XmlEnumAttribute("Wood Working Plant")]
        Wood_Working_Plant,
    }
    
    /// <summary>
    /// <para>planTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("planTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("planTypeList", Namespace="")]
    public enum PlanTypeList
    {
        
        /// <summary>
        /// <para>Building Unit Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Unit Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Unit Plan")]
        Building_Unit_Plan,
        
        /// <summary>
        /// <para>Building Unit Plan of Amalgamation (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Unit Plan of Amalgamation (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Unit Plan of Amalgamation")]
        Building_Unit_Plan_Of_Amalgamation,
        
        /// <summary>
        /// <para>Building Unit Plan of Resubdivision (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Building Unit Plan of Resubdivision (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Building Unit Plan of Resubdivision")]
        Building_Unit_Plan_Of_Resubdivision,
        
        /// <summary>
        /// <para>Community Plan (NSW, SA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Community Plan (NSW, SA)")]
        [System.Xml.Serialization.XmlEnumAttribute("Community Plan")]
        Community_Plan,
        
        /// <summary>
        /// <para>Crown Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Crown Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Crown Plan")]
        Crown_Plan,
        
        /// <summary>
        /// <para>Deposited Plan (NSW,SA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deposited Plan (NSW,SA)")]
        [System.Xml.Serialization.XmlEnumAttribute("Deposited Plan")]
        Deposited_Plan,
        
        /// <summary>
        /// <para>Diagram (WA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diagram (WA)")]
        Diagram,
        
        /// <summary>
        /// <para>Filed Plan (SA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Filed Plan (SA)")]
        [System.Xml.Serialization.XmlEnumAttribute("Filed Plan")]
        Filed_Plan,
        
        /// <summary>
        /// <para>Group Title Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Group Title Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Group Title Plan")]
        Group_Title_Plan,
        
        /// <summary>
        /// <para>Group Title Plan of Amalgamation (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Group Title Plan of Amalgamation (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Group Title Plan of Amalgamation")]
        Group_Title_Plan_Of_Amalgamation,
        
        /// <summary>
        /// <para>Group Title Plan of Resubdivision (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Group Title Plan of Resubdivision (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Group Title Plan of Resubdivision")]
        Group_Title_Plan_Of_Resubdivision,
        
        /// <summary>
        /// <para>Leasehold Building Unit Plan (South Bank) (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Leasehold Building Unit Plan (South Bank) (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Leasehold Building Unit Plan (South Bank)")]
        Leasehold_Building_Unit_Plan_LeftParenthesisSouth_BankRightParenthesis,
        
        /// <summary>
        /// <para>Lower Building Unit Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lower Building Unit Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Lower Building Unit Plan")]
        Lower_Building_Unit_Plan,
        
        /// <summary>
        /// <para>Mixed Community Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Community Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Mixed Community Plan")]
        Mixed_Community_Plan,
        
        /// <summary>
        /// <para>Mixed Precinct Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Precinct Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Mixed Precinct Plan")]
        Mixed_Precinct_Plan,
        
        /// <summary>
        /// <para>Mixed Stratum Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mixed Stratum Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Mixed Stratum Plan")]
        Mixed_Stratum_Plan,
        
        /// <summary>
        /// <para>Plan (WA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plan (WA)")]
        Plan,
        
        /// <summary>
        /// <para>Plan of Subdivision (VIC)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plan of Subdivision (VIC)")]
        [System.Xml.Serialization.XmlEnumAttribute("Plan of Subdivision")]
        Plan_Of_Subdivision,
        
        /// <summary>
        /// <para>Registered Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Registered Plan")]
        Registered_Plan,
        
        /// <summary>
        /// <para>Strata Plan (NSW, SA, WA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Strata Plan (NSW, SA, WA)")]
        [System.Xml.Serialization.XmlEnumAttribute("Strata Plan")]
        Strata_Plan,
        
        /// <summary>
        /// <para>Stratum Plan (South Bank) (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stratum Plan (South Bank) (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Stratum Plan (South Bank)")]
        Stratum_Plan_LeftParenthesisSouth_BankRightParenthesis,
        
        /// <summary>
        /// <para>Stratum Plan of Amalgamation (South Bank) (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stratum Plan of Amalgamation (South Bank) (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Stratum Plan of Amalgamation (South Bank)")]
        Stratum_Plan_Of_Amalgamation_LeftParenthesisSouth_BankRightParenthesis,
        
        /// <summary>
        /// <para>Stratum Plan of Subdivision (South Bank) (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stratum Plan of Subdivision (South Bank) (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Stratum Plan of Subdivision (South Bank)")]
        Stratum_Plan_Of_Subdivision_LeftParenthesisSouth_BankRightParenthesis,
        
        /// <summary>
        /// <para>Survey Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Survey Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Survey Plan")]
        Survey_Plan,
        
        /// <summary>
        /// <para>Survey Strata Plan (WA)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Survey Strata Plan (WA)")]
        [System.Xml.Serialization.XmlEnumAttribute("Survey Strata Plan")]
        Survey_Strata_Plan,
        
        /// <summary>
        /// <para>Upper Building Unit Plan (QLD)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upper Building Unit Plan (QLD)")]
        [System.Xml.Serialization.XmlEnumAttribute("Upper Building Unit Plan")]
        Upper_Building_Unit_Plan,
    }
    
    /// <summary>
    /// <para>poolTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("poolTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("poolTypeList", Namespace="")]
    public enum PoolTypeList
    {
        
        /// <summary>
        /// <para>Above Ground</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Above Ground")]
        [System.Xml.Serialization.XmlEnumAttribute("Above Ground")]
        Above_Ground,
        
        /// <summary>
        /// <para>Inground</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inground")]
        Inground,
    }
    
    /// <summary>
    /// <para>powerOfAttorneyTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("powerOfAttorneyTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("powerOfAttorneyTypeList", Namespace="")]
    public enum PowerOfAttorneyTypeList
    {
        
        /// <summary>
        /// <para>Company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Company")]
        Company,
        
        /// <summary>
        /// <para>Enduring</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Enduring")]
        Enduring,
        
        /// <summary>
        /// <para>General</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("General")]
        General,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
    }
    
    /// <summary>
    /// <para>preConditionToStageApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("preConditionToStageApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("preConditionToStageApplicationInstructionsList", Namespace="")]
    public enum PreConditionToStageApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>The Condition must be satisfied or waived in order to progress to Conditional Approval status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition must be satisfied or waived in order to progress to Conditional App" +
            "roval status")]
        [System.Xml.Serialization.XmlEnumAttribute("Conditional Approval")]
        Conditional_Approval,
        
        /// <summary>
        /// <para>The Condition must be satisfied or waived in order to progress to Pre Approval status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition must be satisfied or waived in order to progress to Pre Approval st" +
            "atus")]
        PreApproval,
        
        /// <summary>
        /// <para>The Condition must be satisfied or waived in order to progress to Referred status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition must be satisfied or waived in order to progress to Referred status" +
            "")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred to Assessor")]
        Referred_To_Assessor,
        
        /// <summary>
        /// <para>The Condition must be satisfied or waived in order to progress to Settlement status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition must be satisfied or waived in order to progress to Settlement stat" +
            "us")]
        Settlement,
        
        /// <summary>
        /// <para>The Condition must be satisfied or waived in order to progress to Unconditional Approval status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Condition must be satisfied or waived in order to progress to Unconditional A" +
            "pproval status")]
        [System.Xml.Serialization.XmlEnumAttribute("Unconditional Approval")]
        Unconditional_Approval,
    }
    
    /// <summary>
    /// <para>A list of methods to contact a company.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of methods to contact a company.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("preferredContactCompanyList", Namespace="")]
    public enum PreferredContactCompanyList
    {
        
        /// <summary>
        /// <para>Preferred contact method is email.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is email.")]
        Email,
        
        /// <summary>
        /// <para>Preferred contact method is work phone number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is work phone number.")]
        [System.Xml.Serialization.XmlEnumAttribute("Office Phone")]
        Office_Phone,
    }
    
    /// <summary>
    /// <para>A list of methods to contact a person.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of methods to contact a person.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("preferredContactPersonList", Namespace="")]
    public enum PreferredContactPersonList
    {
        
        /// <summary>
        /// <para>Preferred contact method is email.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is email.")]
        Email,
        
        /// <summary>
        /// <para>Preferred contact method is home phone number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is home phone number.")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Phone")]
        Home_Phone,
        
        /// <summary>
        /// <para>Preferred contact method is mobile phone number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is mobile phone number.")]
        Mobile,
        
        /// <summary>
        /// <para>Preferred contact method is work phone number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred contact method is work phone number.")]
        [System.Xml.Serialization.XmlEnumAttribute("Work Phone")]
        Work_Phone,
    }
    
    /// <summary>
    /// <para>primaryPurposeLoanPurposeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("primaryPurposeLoanPurposeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("primaryPurposeLoanPurposeList", Namespace="")]
    public enum PrimaryPurposeLoanPurposeList
    {
        
        /// <summary>
        /// <para>Primarily for business or other commercial purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primarily for business or other commercial purposes.")]
        Business,
        
        /// <summary>
        /// <para>Primarily for investment purposes other than investment in residential property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primarily for investment purposes other than investment in residential property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Investment Non Residential")]
        Investment_Non_Residential,
        
        /// <summary>
        /// <para>Primarily for the purchase, refinance, renovation or improvement of residential property used for investment purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primarily for the purchase, refinance, renovation or improvement of residential p" +
            "roperty used for investment purposes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Investment Residential")]
        Investment_Residential,
        
        /// <summary>
        /// <para>Primarily for the purchase, refinance, renovation or improvement of owner occupied residential property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primarily for the purchase, refinance, renovation or improvement of owner occupie" +
            "d residential property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner Occupied")]
        Owner_Occupied,
        
        /// <summary>
        /// <para>Primarily for personal, domestic or household purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Primarily for personal, domestic or household purposes.")]
        Personal,
    }
    
    /// <summary>
    /// <para>primaryPurposeRealEstateAssetList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("primaryPurposeRealEstateAssetList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("primaryPurposeRealEstateAssetList", Namespace="")]
    public enum PrimaryPurposeRealEstateAssetList
    {
        
        /// <summary>
        /// <para>The property is owned for the primary purpose as a business premises for the owners.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is owned for the primary purpose as a business premises for the owne" +
            "rs.")]
        Business,
        
        /// <summary>
        /// <para>The property is owned for the primary purpose of an investment for the owners.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is owned for the primary purpose of an investment for the owners.")]
        Investment,
        
        /// <summary>
        /// <para>The property is owned for the primary purpose as a residence for the owners.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property is owned for the primary purpose as a residence for the owners.")]
        [System.Xml.Serialization.XmlEnumAttribute("Owner Occupied")]
        Owner_Occupied,
    }
    
    /// <summary>
    /// <para>primaryUsageList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("primaryUsageList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("primaryUsageList", Namespace="")]
    public enum PrimaryUsageList
    {
        
        /// <summary>
        /// <para>Property is used primarily for commercial purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property is used primarily for commercial purposes.")]
        Commercial,
        
        /// <summary>
        /// <para>Property used for industrial purposes such as a factory or warehouse.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property used for industrial purposes such as a factory or warehouse.")]
        Industrial,
        
        /// <summary>
        /// <para>Indicates that a property is used primarily for residential purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that a property is used primarily for residential purposes.")]
        Residential,
        
        /// <summary>
        /// <para>Property is located in a rural area and may be used for carrying on business of primary production.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property is located in a rural area and may be used for carrying on business of p" +
            "rimary production.")]
        Rural,
    }
    
    /// <summary>
    /// <para>principalRefinancingReasonList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("principalRefinancingReasonList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("principalRefinancingReasonList", Namespace="")]
    public enum PrincipalRefinancingReasonList
    {
        
        /// <summary>
        /// <para>Consolidating or Restructuring Finances</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Consolidating or Restructuring Finances")]
        [System.Xml.Serialization.XmlEnumAttribute("Consolidating or Restructuring Finances")]
        Consolidating_Or_Restructuring_Finances,
        
        /// <summary>
        /// <para>Convenience / Flexibility</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Convenience / Flexibility")]
        [System.Xml.Serialization.XmlEnumAttribute("Convenience / Flexibility")]
        Convenience_Slash_Flexibility,
        
        /// <summary>
        /// <para>Dissatisfaction with Service at Current Lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dissatisfaction with Service at Current Lender")]
        [System.Xml.Serialization.XmlEnumAttribute("Dissatisfaction with Service at Current Lender")]
        Dissatisfaction_With_Service_At_Current_Lender,
        
        /// <summary>
        /// <para>More Competitive Pricing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("More Competitive Pricing")]
        [System.Xml.Serialization.XmlEnumAttribute("More Competitive Pricing")]
        More_Competitive_Pricing,
        
        /// <summary>
        /// <para>Specific Product or Feature</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specific Product or Feature")]
        [System.Xml.Serialization.XmlEnumAttribute("Specific Product or Feature")]
        Specific_Product_Or_Feature,
    }
    
    /// <summary>
    /// <para>proofCodeCompanyList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proofCodeCompanyList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodeCompanyList", Namespace="")]
    public enum ProofCodeCompanyList
    {
        
        /// <summary>
        /// <para>Financial Statement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Statement")]
        [System.Xml.Serialization.XmlEnumAttribute("Financial Statement")]
        Financial_Statement,
        
        /// <summary>
        /// <para>Tax Assessment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Assessment")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Assessment")]
        Tax_Assessment,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>proofCodeNotEmployedList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proofCodeNotEmployedList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodeNotEmployedList", Namespace="")]
    public enum ProofCodeNotEmployedList
    {
        
        /// <summary>
        /// <para>Letter from Appropriate Body</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Appropriate Body")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Appropriate Body")]
        Letter_From_Appropriate_Body,
        
        /// <summary>
        /// <para>Letter from Government</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Government")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Government")]
        Letter_From_Government,
        
        /// <summary>
        /// <para>Letter from Super Fund</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Super Fund")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Super Fund")]
        Letter_From_Super_Fund,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>proofCodeOtherList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proofCodeOtherList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodeOtherList", Namespace="")]
    public enum ProofCodeOtherList
    {
        
        /// <summary>
        /// <para>Letter from Appropriate Body</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Appropriate Body")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Appropriate Body")]
        Letter_From_Appropriate_Body,
        
        /// <summary>
        /// <para>Letter from Government</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Government")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Government")]
        Letter_From_Government,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>A list of codes that indicate the type of evidence provided as proof of PAYE income.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of codes that indicate the type of evidence provided as proof of PAYE inco" +
        "me.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodePAYEList", Namespace="")]
    public enum ProofCodePAYEList
    {
        
        /// <summary>
        /// <para>Employment Contract</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Employment Contract")]
        [System.Xml.Serialization.XmlEnumAttribute("Employment Contract")]
        Employment_Contract,
        
        /// <summary>
        /// <para>Group Certificate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Group Certificate")]
        [System.Xml.Serialization.XmlEnumAttribute("Group Certificate")]
        Group_Certificate,
        
        /// <summary>
        /// <para>Letter from Employer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Letter from Employer")]
        [System.Xml.Serialization.XmlEnumAttribute("Letter from Employer")]
        Letter_From_Employer,
        
        /// <summary>
        /// <para>Payslip</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payslip")]
        Payslip,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>proofCodeSelfEmployedList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proofCodeSelfEmployedList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodeSelfEmployedList", Namespace="")]
    public enum ProofCodeSelfEmployedList
    {
        
        /// <summary>
        /// <para>Financial Statement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Statement")]
        [System.Xml.Serialization.XmlEnumAttribute("Financial Statement")]
        Financial_Statement,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>proofCodeTrustList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proofCodeTrustList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proofCodeTrustList", Namespace="")]
    public enum ProofCodeTrustList
    {
        
        /// <summary>
        /// <para>Financial Statement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial Statement")]
        [System.Xml.Serialization.XmlEnumAttribute("Financial Statement")]
        Financial_Statement,
        
        /// <summary>
        /// <para>Tax Assessment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Assessment")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Assessment")]
        Tax_Assessment,
        
        /// <summary>
        /// <para>Tax Return</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tax Return")]
        [System.Xml.Serialization.XmlEnumAttribute("Tax Return")]
        Tax_Return,
    }
    
    /// <summary>
    /// <para>The valid list of results available from a Property Search Validation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The valid list of results available from a Property Search Validation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("propertySearchValidationResultList", Namespace="")]
    public enum PropertySearchValidationResultList
    {
        
        /// <summary>
        /// <para>Indicates that the Purchase Price and/or LVRs are at the limit or slightly outside acceptable intervals for the current property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Purchase Price and/or LVRs are at the limit or slightly outsid" +
            "e acceptable intervals for the current property.")]
        Caution,
        
        /// <summary>
        /// <para>Indicates that the Purchase Price and LVRs are within acceptable intervals for the current property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Purchase Price and LVRs are within acceptable intervals for th" +
            "e current property.")]
        Pass,
        
        /// <summary>
        /// <para>Indicates that the Purchase Price and/or LVRs are either outside acceptable intervals or the data is not available and a property valuation should be ordered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Purchase Price and/or LVRs are either outside acceptable inter" +
            "vals or the data is not available and a property valuation should be ordered.")]
        Refer,
    }
    
    /// <summary>
    /// <para>proposedRepaymentMethodList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("proposedRepaymentMethodList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("proposedRepaymentMethodList", Namespace="")]
    public enum ProposedRepaymentMethodList
    {
        
        /// <summary>
        /// <para>The loan will be repaid by deposit at Australia Post.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by deposit at Australia Post.")]
        [System.Xml.Serialization.XmlEnumAttribute("Australia Post")]
        Australia_Post,
        
        /// <summary>
        /// <para>The loan will be repaid by Bpay.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by Bpay.")]
        Bpay,
        
        /// <summary>
        /// <para>The loan payments will be drawn from a credit card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan payments will be drawn from a credit card.")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>The loan will be repaid by direct debit from an bank account that is already open.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by direct debit from an bank account that is already open" +
            ".")]
        [System.Xml.Serialization.XmlEnumAttribute("Direct Debit Existing Account")]
        Direct_Debit_Existing_Account,
        
        /// <summary>
        /// <para>The loan will be repaid by direct debit from an bank account that will be opened in future.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by direct debit from an bank account that will be opened " +
            "in future.")]
        [System.Xml.Serialization.XmlEnumAttribute("Direct Debit New Account")]
        Direct_Debit_New_Account,
        
        /// <summary>
        /// <para>The loan will be repaid by direct payment from the person's employer under a salary credit arrangement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by direct payment from the person\'s employer under a sala" +
            "ry credit arrangement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Direct Salary Credit")]
        Direct_Salary_Credit,
        
        /// <summary>
        /// <para>Payments will be made by direct funds transfer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payments will be made by direct funds transfer")]
        [System.Xml.Serialization.XmlEnumAttribute("Funds Transfer")]
        Funds_Transfer,
        
        /// <summary>
        /// <para>Payments will be made by deposit at a branch of the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payments will be made by deposit at a branch of the lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Lender Branch")]
        Lender_Branch,
        
        /// <summary>
        /// <para>The loan repayment method is not described in one of the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan repayment method is not described in one of the other enumerated values." +
            "")]
        Other,
        
        /// <summary>
        /// <para>The loan will be repaid by deduction from the staff member's pay; only applies when the borrower works for the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan will be repaid by deduction from the staff member\'s pay; only applies wh" +
            "en the borrower works for the lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Staff Pay")]
        Staff_Pay,
    }
    
    /// <summary>
    /// <para>purposeOfApplicationList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("purposeOfApplicationList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("purposeOfApplicationList", Namespace="")]
    public enum PurposeOfApplicationList
    {
        
        /// <summary>
        /// <para>Funds are intended to cover interest incurred on a bridging loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended to cover interest incurred on a bridging loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Bridging Interest")]
        Bridging_Interest,
        
        /// <summary>
        /// <para>Funds are intended for purchasing a business or any business related expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for purchasing a business or any business related expenses.")]
        Business,
        
        /// <summary>
        /// <para>Funds are intended for the development of commercial property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the development of commercial property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Commercial Development")]
        Commercial_Development,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of a computer or computer devices.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of a computer or computer devices.")]
        Computer,
        
        /// <summary>
        /// <para>Funds are intended for construction of a property asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for construction of a property asset.")]
        Construction,
        
        /// <summary>
        /// <para>Funds are intended for purchase of consumer goods such as whitegoods.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for purchase of consumer goods such as whitegoods.")]
        [System.Xml.Serialization.XmlEnumAttribute("Consumer Goods")]
        Consumer_Goods,
        
        /// <summary>
        /// <para>Applying for a credit card product.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applying for a credit card product.")]
        [System.Xml.Serialization.XmlEnumAttribute("Credit Card")]
        Credit_Card,
        
        /// <summary>
        /// <para>Funds are intended for the consolidation of existing debt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the consolidation of existing debt.")]
        [System.Xml.Serialization.XmlEnumAttribute("Debt Consolidation")]
        Debt_Consolidation,
        
        /// <summary>
        /// <para>Funds are intended for dental expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for dental expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Dental Expenses")]
        Dental_Expenses,
        
        /// <summary>
        /// <para>Applying to open a deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applying to open a deposit account.")]
        [System.Xml.Serialization.XmlEnumAttribute("Deposit Account")]
        Deposit_Account,
        
        /// <summary>
        /// <para>Funds are intended for expenses related to education.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for expenses related to education.")]
        [System.Xml.Serialization.XmlEnumAttribute("Education Expenses")]
        Education_Expenses,
        
        /// <summary>
        /// <para>Funds are intended for holiday expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for holiday expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Holiday Expenses")]
        Holiday_Expenses,
        
        /// <summary>
        /// <para>Funds are intended for a deposit taken when purchasing a home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for a deposit taken when purchasing a home.")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Deposit")]
        Home_Deposit,
        
        /// <summary>
        /// <para>Funds are intended to be taken from the equity in a home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended to be taken from the equity in a home.")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Equity")]
        Home_Equity,
        
        /// <summary>
        /// <para>Funds are intended for home improvements such as renovations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for home improvements such as renovations.")]
        [System.Xml.Serialization.XmlEnumAttribute("Home Improvements")]
        Home_Improvements,
        
        /// <summary>
        /// <para>Funds are intended for purchase of household items.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for purchase of household items.")]
        [System.Xml.Serialization.XmlEnumAttribute("Household Items")]
        Household_Items,
        
        /// <summary>
        /// <para>Funds are intended for any legal fees incurred.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for any legal fees incurred.")]
        [System.Xml.Serialization.XmlEnumAttribute("Legal Fees")]
        Legal_Fees,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of marine equipment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of marine equipment.")]
        Marine,
        
        /// <summary>
        /// <para>Funds are intended for marital settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for marital settlement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Marital Settlement")]
        Marital_Settlement,
        
        /// <summary>
        /// <para>Funds are intended for medical expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for medical expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Medical Expenses")]
        Medical_Expenses,
        
        /// <summary>
        /// <para>Funds are intended for a purpose not described in any of the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for a purpose not described in any of the other enumerated val" +
            "ues.")]
        Other,
        
        /// <summary>
        /// <para>Applying for an overdraft or adding an overdraft facility to an existing account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applying for an overdraft or adding an overdraft facility to an existing account." +
            "")]
        Overdraft,
        
        /// <summary>
        /// <para>Funds are intended for the payment of tax debt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the payment of tax debt.")]
        [System.Xml.Serialization.XmlEnumAttribute("Pay Taxes")]
        Pay_Taxes,
        
        /// <summary>
        /// <para>Funds are intended for potentially unspecified personal use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for potentially unspecified personal use.")]
        [System.Xml.Serialization.XmlEnumAttribute("Personal Use")]
        Personal_Use,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of plant and equipment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of plant and equipment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Plant and Equipment")]
        Plant_And_Equipment,
        
        /// <summary>
        /// <para>Funds are intended for settling the purchase of a property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for settling the purchase of a property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Property Settlement")]
        Property_Settlement,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of a caravan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of a caravan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Caravan")]
        Purchase_Caravan,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of land and subsequent construction of a real estate asset on the land.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of land and subsequent construction of a real" +
            " estate asset on the land.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Land and Build")]
        Purchase_Land_And_Build,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of real estate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of real estate.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Real Estate")]
        Purchase_Real_Estate,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of shares.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Shares")]
        Purchase_Shares,
        
        /// <summary>
        /// <para>Funds are intended for the purchase of a vehicle.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for the purchase of a vehicle.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Vehicle")]
        Purchase_Vehicle,
        
        /// <summary>
        /// <para>Funds are intended for recreation expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for recreation expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Recreation Expenses")]
        Recreation_Expenses,
        
        /// <summary>
        /// <para>Funds are intended for refinancing an existing home loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for refinancing an existing home loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinance Home Loan")]
        Refinance_Home_Loan,
        
        /// <summary>
        /// <para>Funds are intended for refinancing unspecified existing debt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for refinancing unspecified existing debt.")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinance Other")]
        Refinance_Other,
        
        /// <summary>
        /// <para>Funds are intended for refinancing an existing vehicle loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for refinancing an existing vehicle loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinance Vehicle Loan")]
        Refinance_Vehicle_Loan,
        
        /// <summary>
        /// <para>Funds are intended for travel or travel expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for travel or travel expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Travel Requirements")]
        Travel_Requirements,
        
        /// <summary>
        /// <para>Funds are intended for vehicle expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for vehicle expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Vehicle Expenses")]
        Vehicle_Expenses,
        
        /// <summary>
        /// <para>Funds are intended for wedding expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are intended for wedding expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Wedding Expenses")]
        Wedding_Expenses,
    }
    
    /// <summary>
    /// <para>purposeOfFundsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("purposeOfFundsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("purposeOfFundsList", Namespace="")]
    public enum PurposeOfFundsList
    {
        
        /// <summary>
        /// <para>Funds are to be used for the construction of a dwelling.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for the construction of a dwelling.")]
        [System.Xml.Serialization.XmlEnumAttribute("Construction of Dwelling")]
        Construction_Of_Dwelling,
        
        /// <summary>
        /// <para>Funds are to be used to consolidate short term debts into a home loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used to consolidate short term debts into a home loan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Debt Consolidation")]
        Debt_Consolidation,
        
        /// <summary>
        /// <para>Funds are to be used for purchase a dwelling through the EECA Energywise programme.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for purchase a dwelling through the EECA Energywise programm" +
            "e.")]
        [System.Xml.Serialization.XmlEnumAttribute("EECA Energy Efficiency Funding")]
        EECA_Energy_Efficiency_Funding,
        
        /// <summary>
        /// <para>Funds are to be used for undertaking repairs on a property that has been identified as 'Leaky'.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for undertaking repairs on a property that has been identifi" +
            "ed as \'Leaky\'.")]
        [System.Xml.Serialization.XmlEnumAttribute("Fix Leaky Home")]
        Fix_Leaky_Home,
        
        /// <summary>
        /// <para>Funds are to be used for undertaking repairs on a property that has been affected by a natural disaster.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for undertaking repairs on a property that has been affected" +
            " by a natural disaster.")]
        [System.Xml.Serialization.XmlEnumAttribute("Fix Natural Disaster Affected Home")]
        Fix_Natural_Disaster_Affected_Home,
        
        /// <summary>
        /// <para>Funds are to be used to pay for holiday and/or travel expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used to pay for holiday and/or travel expenses.")]
        [System.Xml.Serialization.XmlEnumAttribute("Holiday /Travel")]
        Holiday_SlashTravel,
        
        /// <summary>
        /// <para>Funds are to be used for another purpose.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for another purpose.")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Purpose")]
        Other_Purpose,
        
        /// <summary>
        /// <para>Funds are to be used for the purchase of a newly erected dwelling.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for the purchase of a newly erected dwelling.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase of Dwelling")]
        Purchase_Of_Dwelling,
        
        /// <summary>
        /// <para>Funds are to be used to purchase a vehicle.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used to purchase a vehicle.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purchase Vehicle")]
        Purchase_Vehicle,
        
        /// <summary>
        /// <para>Funds are to be used for the refinance of a mortgage or other liabilities with the current lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for the refinance of a mortgage or other liabilities with th" +
            "e current lender.")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinance of Liabilities with Current Lender")]
        Refinance_Of_Liabilities_With_Current_Lender,
        
        /// <summary>
        /// <para>Funds are to be used for the refinance of a mortgage or other liabilities with other lenders.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for the refinance of a mortgage or other liabilities with ot" +
            "her lenders.")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinance of Liabilities with Other Lenders")]
        Refinance_Of_Liabilities_With_Other_Lenders,
        
        /// <summary>
        /// <para>Funds are to be used for completing renovations or alterations on an existing dwelling.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Funds are to be used for completing renovations or alterations on an existing dwe" +
            "lling.")]
        [System.Xml.Serialization.XmlEnumAttribute("Renovations and Extensions")]
        Renovations_And_Extensions,
    }
    
    /// <summary>
    /// <para>realEstateAssetStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("realEstateAssetStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("realEstateAssetStatusList", Namespace="")]
    public enum RealEstateAssetStatusList
    {
        
        /// <summary>
        /// <para>The dwelling on the property is an established home i.e. not newly constructed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling on the property is an established home i.e. not newly constructed.")]
        Established,
        
        /// <summary>
        /// <para>The dwelling on the property is newly constructed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling on the property is newly constructed.")]
        [System.Xml.Serialization.XmlEnumAttribute("New Building")]
        New_Building,
        
        /// <summary>
        /// <para>A new construction that will be completed by the time of settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A new construction that will be completed by the time of settlement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Off the Plan")]
        Off_The_Plan,
        
        /// <summary>
        /// <para>There is no dwelling on the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("There is no dwelling on the property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Vacant Land")]
        Vacant_Land,
    }
    
    /// <summary>
    /// <para>releaseSecurityReasonList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("releaseSecurityReasonList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("releaseSecurityReasonList", Namespace="")]
    public enum ReleaseSecurityReasonList
    {
        
        /// <summary>
        /// <para>Debt Reduction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debt Reduction")]
        [System.Xml.Serialization.XmlEnumAttribute("Debt Reduction")]
        Debt_Reduction,
        
        /// <summary>
        /// <para>Dissolving Partnership</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dissolving Partnership")]
        [System.Xml.Serialization.XmlEnumAttribute("Dissolving Partnership")]
        Dissolving_Partnership,
        
        /// <summary>
        /// <para>No Longer Required</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No Longer Required")]
        [System.Xml.Serialization.XmlEnumAttribute("No Longer Required")]
        No_Longer_Required,
        
        /// <summary>
        /// <para>Refinancing with Another Lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refinancing with Another Lender")]
        [System.Xml.Serialization.XmlEnumAttribute("Refinancing with Another Lender")]
        Refinancing_With_Another_Lender,
        
        /// <summary>
        /// <para>Sale of Property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sale of Property")]
        [System.Xml.Serialization.XmlEnumAttribute("Sale of Property")]
        Sale_Of_Property,
    }
    
    /// <summary>
    /// <para>repaymentFrequencyList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("repaymentFrequencyList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("repaymentFrequencyList", Namespace="")]
    public enum RepaymentFrequencyList
    {
        
        /// <summary>
        /// <para>Daily</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Daily")]
        Daily,
        
        /// <summary>
        /// <para>Fortnightly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fortnightly")]
        Fortnightly,
        
        /// <summary>
        /// <para>Half Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Half Yearly")]
        [System.Xml.Serialization.XmlEnumAttribute("Half Yearly")]
        Half_Yearly,
        
        /// <summary>
        /// <para>Monthly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly")]
        Monthly,
        
        /// <summary>
        /// <para>One Off</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("One Off")]
        [System.Xml.Serialization.XmlEnumAttribute("One Off")]
        One_Off,
        
        /// <summary>
        /// <para>Quarterly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quarterly")]
        Quarterly,
        
        /// <summary>
        /// <para>Seasonal</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Seasonal")]
        Seasonal,
        
        /// <summary>
        /// <para>Weekly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weekly")]
        Weekly,
        
        /// <summary>
        /// <para>Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yearly")]
        Yearly,
    }
    
    /// <summary>
    /// <para>residencyStatusList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("residencyStatusList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("residencyStatusList", Namespace="")]
    public enum ResidencyStatusList
    {
        
        /// <summary>
        /// <para>Non Resident</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non Resident")]
        [System.Xml.Serialization.XmlEnumAttribute("Non Resident")]
        Non_Resident,
        
        /// <summary>
        /// <para>Permanently in New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Permanently in New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("Permanently in New Zealand")]
        Permanently_In_New_Zealand,
        
        /// <summary>
        /// <para>Temporarily in New Zealand</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Temporarily in New Zealand")]
        [System.Xml.Serialization.XmlEnumAttribute("Temporarily in New Zealand")]
        Temporarily_In_New_Zealand,
    }
    
    /// <summary>
    /// <para>residentialTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("residentialTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("residentialTypeList", Namespace="")]
    public enum ResidentialTypeList
    {
        
        /// <summary>
        /// <para>The dwelling is an aged care unit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is an aged care unit.")]
        [System.Xml.Serialization.XmlEnumAttribute("Aged Care Unit")]
        Aged_Care_Unit,
        
        /// <summary>
        /// <para>The dwelling is an apartment, unit or flat</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is an apartment, unit or flat")]
        [System.Xml.Serialization.XmlEnumAttribute("Apartment Unit Flat")]
        Apartment_Unit_Flat,
        
        /// <summary>
        /// <para>The dwelling is a bedsit in which the bedroom and main living room are one</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a bedsit in which the bedroom and main living room are one")]
        [System.Xml.Serialization.XmlEnumAttribute("Bedsitter Bachelor")]
        Bedsitter_Bachelor,
        
        /// <summary>
        /// <para>The dwelling is a unit in a block that is under company title</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a unit in a block that is under company title")]
        [System.Xml.Serialization.XmlEnumAttribute("Company Title Unit")]
        Company_Title_Unit,
        
        /// <summary>
        /// <para>The dwelling has been converted from a commercial property, such as a floor in a converted office building</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling has been converted from a commercial property, such as a floor in a " +
            "converted office building")]
        [System.Xml.Serialization.XmlEnumAttribute("Converted Commercial Property")]
        Converted_Commercial_Property,
        
        /// <summary>
        /// <para>The dwelling has been converted from a commercial property, such as a converted warehouse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling has been converted from a commercial property, such as a converted w" +
            "arehouse")]
        [System.Xml.Serialization.XmlEnumAttribute("Converted Industrial Property")]
        Converted_Industrial_Property,
        
        /// <summary>
        /// <para>The dwelling is a unit in a building that has been converted from what were originally units in a motel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a unit in a building that has been converted from what were origi" +
            "nally units in a motel")]
        [System.Xml.Serialization.XmlEnumAttribute("Converted Motel Units")]
        Converted_Motel_Units,
        
        /// <summary>
        /// <para>The dwelling is a display house.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a display house.")]
        [System.Xml.Serialization.XmlEnumAttribute("Display House")]
        Display_House,
        
        /// <summary>
        /// <para>The dwelling is a duplex, being one of two houses on neighbouring blocks of land and a common wall</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a duplex, being one of two houses on neighbouring blocks of land " +
            "and a common wall")]
        Duplex,
        
        /// <summary>
        /// <para>The dwelling is a house on its own block of land with no common walls</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a house on its own block of land with no common walls")]
        [System.Xml.Serialization.XmlEnumAttribute("Fully Detached House")]
        Fully_Detached_House,
        
        /// <summary>
        /// <para>The dwelling meets the financial institution's definition of a high density apartment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling meets the financial institution\'s definition of a high density apart" +
            "ment.")]
        [System.Xml.Serialization.XmlEnumAttribute("High Density Apartment")]
        High_Density_Apartment,
        
        /// <summary>
        /// <para>The dwelling is used by the owners as a holiday home</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is used by the owners as a holiday home")]
        [System.Xml.Serialization.XmlEnumAttribute("Holiday Home")]
        Holiday_Home,
        
        /// <summary>
        /// <para>The dwelling is short term rented to holiday goers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is short term rented to holiday goers")]
        [System.Xml.Serialization.XmlEnumAttribute("Holiday Rental")]
        Holiday_Rental,
        
        /// <summary>
        /// <para>The property consists of improved land.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property consists of improved land.")]
        [System.Xml.Serialization.XmlEnumAttribute("Improved Land")]
        Improved_Land,
        
        /// <summary>
        /// <para>The dwelling is a kit home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a kit home.")]
        [System.Xml.Serialization.XmlEnumAttribute("Kit Home")]
        Kit_Home,
        
        /// <summary>
        /// <para>The dwelling meets the financial institution's definition of a low density apartment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling meets the financial institution\'s definition of a low density apartm" +
            "ent.")]
        [System.Xml.Serialization.XmlEnumAttribute("Low Density Apartment")]
        Low_Density_Apartment,
        
        /// <summary>
        /// <para>The dwelling is a luxury home</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a luxury home")]
        [System.Xml.Serialization.XmlEnumAttribute("Luxury House")]
        Luxury_House,
        
        /// <summary>
        /// <para>The dwelling is a luxury accommodation other than a house</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a luxury accommodation other than a house")]
        [System.Xml.Serialization.XmlEnumAttribute("Luxury Other")]
        Luxury_Other,
        
        /// <summary>
        /// <para>The dwelling meets the financial institution's definition of a medium density apartment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling meets the financial institution\'s definition of a medium density apa" +
            "rtment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Medium Density Apartment")]
        Medium_Density_Apartment,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Property Development</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Property Development")]
        [System.Xml.Serialization.XmlEnumAttribute("Property Development")]
        Property_Development,
        
        /// <summary>
        /// <para>The dwelling is a relocatable home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a relocatable home.")]
        [System.Xml.Serialization.XmlEnumAttribute("Relocatable Home")]
        Relocatable_Home,
        
        /// <summary>
        /// <para>The dwelling is a unit in a holiday resort</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a unit in a holiday resort")]
        [System.Xml.Serialization.XmlEnumAttribute("Resort Unit")]
        Resort_Unit,
        
        /// <summary>
        /// <para>The dwelling is a house on its own block of land with one or more common walls</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a house on its own block of land with one or more common walls")]
        [System.Xml.Serialization.XmlEnumAttribute("Semi Detached House")]
        Semi_Detached_House,
        
        /// <summary>
        /// <para>The dwelling is a serviced apartment, being an apartment in a block that is serviced by a third party on contract attached to the property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a serviced apartment, being an apartment in a block that is servi" +
            "ced by a third party on contract attached to the property")]
        [System.Xml.Serialization.XmlEnumAttribute("Serviced Apartment")]
        Serviced_Apartment,
        
        /// <summary>
        /// <para>The dwelling is a strata hotel unit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a strata hotel unit.")]
        [System.Xml.Serialization.XmlEnumAttribute("Strata Hotel Unit")]
        Strata_Hotel_Unit,
        
        /// <summary>
        /// <para>The dwelling is a unit in a block that is under strata title</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a unit in a block that is under strata title")]
        [System.Xml.Serialization.XmlEnumAttribute("Strata Title Unit")]
        Strata_Title_Unit,
        
        /// <summary>
        /// <para>The dwelling is a studio apartment in a converted warehouse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a studio apartment in a converted warehouse")]
        [System.Xml.Serialization.XmlEnumAttribute("Studio Warehouse Apartment")]
        Studio_Warehouse_Apartment,
        
        /// <summary>
        /// <para>The dwelling is a terrace house, being a house on its own block of land in a row of such houses with common side walls</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a terrace house, being a house on its own block of land in a row " +
            "of such houses with common side walls")]
        Terrace,
        
        /// <summary>
        /// <para>The dwelling is a town house, being a dwelling that is not a unit, apartment or flat but having common walls</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a town house, being a dwelling that is not a unit, apartment or f" +
            "lat but having common walls")]
        Townhouse,
        
        /// <summary>
        /// <para>The dwelling is a unit that is rented as student accommodation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a unit that is rented as student accommodation")]
        [System.Xml.Serialization.XmlEnumAttribute("Unit Student Accommodation")]
        Unit_Student_Accommodation,
        
        /// <summary>
        /// <para>No dwelling is currently scheduled for construction, the land is intended to remain unimproved</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("No dwelling is currently scheduled for construction, the land is intended to rema" +
            "in unimproved")]
        [System.Xml.Serialization.XmlEnumAttribute("Vacant Land")]
        Vacant_Land,
        
        /// <summary>
        /// <para>The dwelling is a villa, or unit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dwelling is a villa, or unit")]
        Villa,
    }
    
    /// <summary>
    /// <para>ruralTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("ruralTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ruralTypeList", Namespace="")]
    public enum RuralTypeList
    {
        
        /// <summary>
        /// <para>The rural property is 8 hectares or less in area.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is 8 hectares or less in area.")]
        [System.Xml.Serialization.XmlEnumAttribute("8 Hectares or Less")]
        Item8_Hectares_Or_Less,
        
        /// <summary>
        /// <para>The rural property is greater than 40 hectares in area.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is greater than 40 hectares in area.")]
        [System.Xml.Serialization.XmlEnumAttribute("Over 40 Hectares")]
        Over_40_Hectares,
        
        /// <summary>
        /// <para>The rural property is greater than 8 hectares but not greater than 40 hectares in area.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is greater than 8 hectares but not greater than 40 hectares in" +
            " area.")]
        [System.Xml.Serialization.XmlEnumAttribute("Over 8 Less than 40 Hectares")]
        Over_8_Less_Than_40_Hectares,
    }
    
    /// <summary>
    /// <para>ruralUsageList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("ruralUsageList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ruralUsageList", Namespace="")]
    public enum RuralUsageList
    {
        
        /// <summary>
        /// <para>The rural property is used for income producing purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is used for income producing purposes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Income Producing")]
        Income_Producing,
        
        /// <summary>
        /// <para>The rural property is a Lifestyle Block.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is a Lifestyle Block.")]
        [System.Xml.Serialization.XmlEnumAttribute("Lifestyle Block")]
        Lifestyle_Block,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>The rural property is used as a rural residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is used as a rural residence.")]
        [System.Xml.Serialization.XmlEnumAttribute("Rural Life")]
        Rural_Life,
        
        /// <summary>
        /// <para>The rural property is used as a residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rural property is used as a residence.")]
        [System.Xml.Serialization.XmlEnumAttribute("Rural Residential")]
        Rural_Residential,
    }
    
    /// <summary>
    /// <para>salesChannelTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("salesChannelTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("salesChannelTypeList", Namespace="")]
    public enum SalesChannelTypeList
    {
        
        /// <summary>
        /// <para>Branch Network</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Branch Network")]
        [System.Xml.Serialization.XmlEnumAttribute("Branch Network")]
        Branch_Network,
        
        /// <summary>
        /// <para>Call Centre</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Call Centre")]
        [System.Xml.Serialization.XmlEnumAttribute("Call Centre")]
        Call_Centre,
        
        /// <summary>
        /// <para>Mortgage Broker</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mortgage Broker")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Broker")]
        Mortgage_Broker,
        
        /// <summary>
        /// <para>Mortgage Manager</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mortgage Manager")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Manager")]
        Mortgage_Manager,
        
        /// <summary>
        /// <para>Mortgage Originator</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mortgage Originator")]
        [System.Xml.Serialization.XmlEnumAttribute("Mortgage Originator")]
        Mortgage_Originator,
        
        /// <summary>
        /// <para>Online Channel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Online Channel")]
        [System.Xml.Serialization.XmlEnumAttribute("Online Channel")]
        Online_Channel,
    }
    
    /// <summary>
    /// <para>securityPriorityList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("securityPriorityList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("securityPriorityList", Namespace="")]
    public enum SecurityPriorityList
    {
        
        /// <summary>
        /// <para>The mortgage is a first ranking mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mortgage is a first ranking mortgage.")]
        [System.Xml.Serialization.XmlEnumAttribute("First Mortgage")]
        First_Mortgage,
        
        /// <summary>
        /// <para>The security is registered on a property security register</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security is registered on a property security register")]
        [System.Xml.Serialization.XmlEnumAttribute("Registered Security")]
        Registered_Security,
        
        /// <summary>
        /// <para>The mortgage is a second ranking mortgage, ranking after a first ranking mortgage to Defence Services Housing.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mortgage is a second ranking mortgage, ranking after a first ranking mortgage" +
            " to Defence Services Housing.")]
        [System.Xml.Serialization.XmlEnumAttribute("Second after DSH")]
        Second_After_DSH,
        
        /// <summary>
        /// <para>The mortgage is a second ranking mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mortgage is a second ranking mortgage.")]
        [System.Xml.Serialization.XmlEnumAttribute("Second Mortgage")]
        Second_Mortgage,
        
        /// <summary>
        /// <para>The mortgage is a third ranking mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mortgage is a third ranking mortgage.")]
        [System.Xml.Serialization.XmlEnumAttribute("Third Mortgage")]
        Third_Mortgage,
        
        /// <summary>
        /// <para>The mortgage is not registered on the Land Register at the Land Titles Office.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mortgage is not registered on the Land Register at the Land Titles Office.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unregistered Mortgage")]
        Unregistered_Mortgage,
    }
    
    /// <summary>
    /// <para>selfEmployedBasisList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("selfEmployedBasisList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("selfEmployedBasisList", Namespace="")]
    public enum SelfEmployedBasisList
    {
        
        /// <summary>
        /// <para>The self employment described is under a casual contract of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The self employment described is under a casual contract of employment.")]
        Casual,
        
        /// <summary>
        /// <para>The self employment described is under a contract for services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The self employment described is under a contract for services.")]
        Contract,
        
        /// <summary>
        /// <para>The self employment described is under full time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The self employment described is under full time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Time")]
        Full_Time,
        
        /// <summary>
        /// <para>The self employment described is under part time employment contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The self employment described is under part time employment contract.")]
        [System.Xml.Serialization.XmlEnumAttribute("Part Time")]
        Part_Time,
        
        /// <summary>
        /// <para>The self employment described is under contract with an employment agency, also known as temping.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The self employment described is under contract with an employment agency, also k" +
            "nown as temping.")]
        Temporary,
    }
    
    /// <summary>
    /// <para>sendDocumentsToPersonList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("sendDocumentsToPersonList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sendDocumentsToPersonList", Namespace="")]
    public enum SendDocumentsToPersonList
    {
        
        /// <summary>
        /// <para>Accountant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Accountant")]
        Accountant,
        
        /// <summary>
        /// <para>Branch</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Branch")]
        Branch,
        
        /// <summary>
        /// <para>Loan Writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan Writer")]
        [System.Xml.Serialization.XmlEnumAttribute("Loan Writer")]
        Loan_Writer,
        
        /// <summary>
        /// <para>Myself</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Myself")]
        Myself,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Solicitor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Solicitor")]
        Solicitor,
    }
    
    /// <summary>
    /// <para>shareTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("shareTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shareTypeList", Namespace="")]
    public enum ShareTypeList
    {
        
        /// <summary>
        /// <para>Bearer Securities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bearer Securities")]
        [System.Xml.Serialization.XmlEnumAttribute("Bearer Securities")]
        Bearer_Securities,
        
        /// <summary>
        /// <para>Debentures</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debentures")]
        Debentures,
        
        /// <summary>
        /// <para>Inscribed Stock Cth</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inscribed Stock Cth")]
        [System.Xml.Serialization.XmlEnumAttribute("Inscribed Stock Cth")]
        Inscribed_Stock_Cth,
        
        /// <summary>
        /// <para>Inscribed Stock State</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Inscribed Stock State")]
        [System.Xml.Serialization.XmlEnumAttribute("Inscribed Stock State")]
        Inscribed_Stock_State,
        
        /// <summary>
        /// <para>Listed Shares</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Listed Shares")]
        [System.Xml.Serialization.XmlEnumAttribute("Listed Shares")]
        Listed_Shares,
        
        /// <summary>
        /// <para>Options</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Options")]
        Options,
        
        /// <summary>
        /// <para>Unlisted Shares</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unlisted Shares")]
        [System.Xml.Serialization.XmlEnumAttribute("Unlisted Shares")]
        Unlisted_Shares,
    }
    
    /// <summary>
    /// <para>statementCycleList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("statementCycleList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("statementCycleList", Namespace="")]
    public enum StatementCycleList
    {
        
        /// <summary>
        /// <para>Fortnightly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fortnightly")]
        Fortnightly,
        
        /// <summary>
        /// <para>Half Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Half Yearly")]
        [System.Xml.Serialization.XmlEnumAttribute("Half Yearly")]
        Half_Yearly,
        
        /// <summary>
        /// <para>Monthly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly")]
        Monthly,
        
        /// <summary>
        /// <para>Quarterly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quarterly")]
        Quarterly,
        
        /// <summary>
        /// <para>Weekly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Weekly")]
        Weekly,
        
        /// <summary>
        /// <para>Yearly</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Yearly")]
        Yearly,
    }
    
    /// <summary>
    /// <para>statusNameApplicationInstructionsList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("statusNameApplicationInstructionsList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("statusNameApplicationInstructionsList", Namespace="")]
    public enum StatusNameApplicationInstructionsList
    {
        
        /// <summary>
        /// <para>The intended recipient has received the application but has not yet registered it in the origination system.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The intended recipient has received the application but has not yet registered it" +
            " in the origination system.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Received")]
        Application_Received,
        
        /// <summary>
        /// <para>Lender system ID allocated (Pre Settlement Application Identifier) and, if electronically lodged, application is ready for credit assessment ie. validates against Lender's schema and other business rules.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lender system ID allocated (Pre Settlement Application Identifier) and, if electr" +
            "onically lodged, application is ready for credit assessment ie. validates agains" +
            "t Lender\'s schema and other business rules.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Registered")]
        Application_Registered,
        
        /// <summary>
        /// <para>Application successfully transmitted by Broker system.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application successfully transmitted by Broker system.")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Sent")]
        Application_Sent,
        
        /// <summary>
        /// <para>Application has gone to settlement; may or may not have been fully drawn down; accounts may have had a new identifier allocated to them by the Lender (known as Post Settlement Application Number or Facility identifier).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has gone to settlement; may or may not have been fully drawn down; ac" +
            "counts may have had a new identifier allocated to them by the Lender (known as P" +
            "ost Settlement Application Number or Facility identifier).")]
        [System.Xml.Serialization.XmlEnumAttribute("Application Settled")]
        Application_Settled,
        
        /// <summary>
        /// <para>Application has been stopped at Lender's initiative. Cannot be resurrected.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been stopped at Lender\'s initiative. Cannot be resurrected.")]
        Cancelled,
        
        /// <summary>
        /// <para>Application has been approved subject to conditions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been approved subject to conditions.")]
        [System.Xml.Serialization.XmlEnumAttribute("Conditionally Approved")]
        Conditionally_Approved,
        
        /// <summary>
        /// <para>Application has been Declined.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been Declined.")]
        Declined,
        
        /// <summary>
        /// <para>The application has been indicatively approved without having done a credit check on the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The application has been indicatively approved without having done a credit check" +
            " on the applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("Indicatively Approved")]
        Indicatively_Approved,
        
        /// <summary>
        /// <para>Application conditionally approved subject to final identification of security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application conditionally approved subject to final identification of security pr" +
            "operty.")]
        PreApproved,
        
        /// <summary>
        /// <para>All documents have been received, confirmed as being signed and in order, and the loan is ready for settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All documents have been received, confirmed as being signed and in order, and the" +
            " loan is ready for settlement.")]
        [System.Xml.Serialization.XmlEnumAttribute("Ready for Settlement")]
        Ready_For_Settlement,
        
        /// <summary>
        /// <para>Application has been referred for manual assessment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been referred for manual assessment.")]
        [System.Xml.Serialization.XmlEnumAttribute("Referred to Assessor")]
        Referred_To_Assessor,
        
        /// <summary>
        /// <para>Application has been reverted to the data capture stage to update or correct data.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been reverted to the data capture stage to update or correct data" +
            ".")]
        [System.Xml.Serialization.XmlEnumAttribute("Reverted to Capture")]
        Reverted_To_Capture,
        
        /// <summary>
        /// <para>All conditions to conditional approval have been met and Application has received formal/final approval.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All conditions to conditional approval have been met and Application has received" +
            " formal/final approval.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unconditionally Approved")]
        Unconditionally_Approved,
        
        /// <summary>
        /// <para>Application has been stopped at client's initiative.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application has been stopped at client\'s initiative.")]
        Withdrawn,
    }
    
    /// <summary>
    /// <para>supplierTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("supplierTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("supplierTypeList", Namespace="")]
    public enum SupplierTypeList
    {
        
        /// <summary>
        /// <para>Licensed Dealer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Licensed Dealer")]
        [System.Xml.Serialization.XmlEnumAttribute("Licensed Dealer")]
        Licensed_Dealer,
        
        /// <summary>
        /// <para>Manufacturer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Manufacturer")]
        Manufacturer,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Private Sale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Private Sale")]
        [System.Xml.Serialization.XmlEnumAttribute("Private Sale")]
        Private_Sale,
        
        /// <summary>
        /// <para>Recognised Supplier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Recognised Supplier")]
        [System.Xml.Serialization.XmlEnumAttribute("Recognised Supplier")]
        Recognised_Supplier,
    }
    
    /// <summary>
    /// <para>taxDepreciationMethodList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("taxDepreciationMethodList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("taxDepreciationMethodList", Namespace="")]
    public enum TaxDepreciationMethodList
    {
        
        /// <summary>
        /// <para>Diminishing Value</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Diminishing Value")]
        [System.Xml.Serialization.XmlEnumAttribute("Diminishing Value")]
        Diminishing_Value,
        
        /// <summary>
        /// <para>Straight Line</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Straight Line")]
        [System.Xml.Serialization.XmlEnumAttribute("Straight Line")]
        Straight_Line,
    }
    
    /// <summary>
    /// <para>tenureTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("tenureTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tenureTypeList", Namespace="")]
    public enum TenureTypeList
    {
        
        /// <summary>
        /// <para>Tenure held is under a Community Scheme or a Community Strata Scheme. Both divide land to create lots and common property in a similar manner to strata titles. Unlike a strata title, a scheme may include a development lot, retained by the developer, for later division into further lots within the scheme.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Tenure held is under a Community Scheme or a Community Strata Scheme. Both divide land to create lots and common property in a similar manner to strata titles. Unlike a strata title, a scheme may include a development lot, retained by the developer, for later division into further lots within the scheme.")]
        [System.Xml.Serialization.XmlEnumAttribute("Community Title")]
        Community_Title,
        
        /// <summary>
        /// <para>Tenure is held by ownership of shares in a company that grant rights to exclusively occupy parts of land that the company owns.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure is held by ownership of shares in a company that grant rights to exclusive" +
            "ly occupy parts of land that the company owns.")]
        [System.Xml.Serialization.XmlEnumAttribute("Company Title")]
        Company_Title,
        
        /// <summary>
        /// <para>Tenure held is under a Cross-Lease Title, where the property owner holds a registered lease over their property on the landlord, and an undivided ownership share in the land with other property owners.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is under a Cross-Lease Title, where the property owner holds a regist" +
            "ered lease over their property on the landlord, and an undivided ownership share" +
            " in the land with other property owners.")]
        [System.Xml.Serialization.XmlEnumAttribute("Cross Lease")]
        Cross_Lease,
        
        /// <summary>
        /// <para>Tenure held is in the 'right of the Crown' of either an individual State or the Commonwealth of Australia.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is in the \'right of the Crown\' of either an individual State or the C" +
            "ommonwealth of Australia.")]
        [System.Xml.Serialization.XmlEnumAttribute("Crown Land")]
        Crown_Land,
        
        /// <summary>
        /// <para>Tenure held is under a Crown lease granted by the Crown over Crown land, commonly with a 99 year leasehold term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is under a Crown lease granted by the Crown over Crown land, commonly" +
            " with a 99 year leasehold term.")]
        [System.Xml.Serialization.XmlEnumAttribute("Crown Lease")]
        Crown_Lease,
        
        /// <summary>
        /// <para>Tenure is held by ownership of shares in a company that grant rights to exclusively occupy parts of land that the company owns.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure is held by ownership of shares in a company that grant rights to exclusive" +
            "ly occupy parts of land that the company owns.")]
        [System.Xml.Serialization.XmlEnumAttribute("Flat Owning Company Shares")]
        Flat_Owning_Company_Shares,
        
        /// <summary>
        /// <para>Tenure held is outright ownership, in perpetuity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is outright ownership, in perpetuity.")]
        Freehold,
        
        /// <summary>
        /// <para>Tenure held is outright ownership, in perpetuity. This is specifically used for Retirement Complexes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is outright ownership, in perpetuity. This is specifically used for R" +
            "etirement Complexes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Freehold Retirement Complex")]
        Freehold_Retirement_Complex,
        
        /// <summary>
        /// <para>Tenure held is outright ownership, in perpetuity. This is specifically used for individual portions of freehold land, common with blocks of units, townhouses etc. were the building is collectively owned by the residents that live there.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is outright ownership, in perpetuity. This is specifically used for i" +
            "ndividual portions of freehold land, common with blocks of units, townhouses etc" +
            ". were the building is collectively owned by the residents that live there.")]
        [System.Xml.Serialization.XmlEnumAttribute("Freehold Stratum Estate")]
        Freehold_Stratum_Estate,
        
        /// <summary>
        /// <para>Tenure held is as a lot collectively administered under the Group Titles Act 1980 (QLD).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is as a lot collectively administered under the Group Titles Act 1980" +
            " (QLD).")]
        [System.Xml.Serialization.XmlEnumAttribute("Group Titles Plan")]
        Group_Titles_Plan,
        
        /// <summary>
        /// <para>Tenure held is as a lessee under a lease from the freehold owner of the property (lessor).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is as a lessee under a lease from the freehold owner of the property " +
            "(lessor).")]
        Leasehold,
        
        /// <summary>
        /// <para>Tenure held is as a lessee under a lease from the freehold owner of the property (lessor). This is specifically used for Retirement Complexes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is as a lessee under a lease from the freehold owner of the property " +
            "(lessor). This is specifically used for Retirement Complexes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Leasehold Retirement Complex")]
        Leasehold_Retirement_Complex,
        
        /// <summary>
        /// <para>Tenure held is as a lessee under a lease from the freehold owner of the property (lessor). This is specifically used for individual portions of freehold land, common with blocks of units, townhouses etc. where the building is collectively owned by the residents that live there.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Tenure held is as a lessee under a lease from the freehold owner of the property (lessor). This is specifically used for individual portions of freehold land, common with blocks of units, townhouses etc. where the building is collectively owned by the residents that live there.")]
        [System.Xml.Serialization.XmlEnumAttribute("Leasehold Stratum Estate")]
        Leasehold_Stratum_Estate,
        
        /// <summary>
        /// <para>Tenure is held by a landlord who owns an apartment or building and rents the right to occupy the unit to a tenant. This is specifically used for Retirement Complexes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure is held by a landlord who owns an apartment or building and rents the righ" +
            "t to occupy the unit to a tenant. This is specifically used for Retirement Compl" +
            "exes.")]
        [System.Xml.Serialization.XmlEnumAttribute("Licence to Occupy Retirement Complex")]
        Licence_To_Occupy_Retirement_Complex,
        
        /// <summary>
        /// <para>Tenure held is for Maori Land.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is for Maori Land.")]
        [System.Xml.Serialization.XmlEnumAttribute("Maori Land")]
        Maori_Land,
        
        /// <summary>
        /// <para>Tenure held is a share of the whole of the land and a lease over a defined portion of the land for from the other owner or owners, typically covering maisonettes or attached cottages.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is a share of the whole of the land and a lease over a defined portio" +
            "n of the land for from the other owner or owners, typically covering maisonettes" +
            " or attached cottages.")]
        [System.Xml.Serialization.XmlEnumAttribute("Moiety Title")]
        Moiety_Title,
        
        /// <summary>
        /// <para>Indicates that no tenure is specified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that no tenure is specified.")]
        None,
        
        /// <summary>
        /// <para>Indicates that the type of tenure held is not described by any of the other enumerated values.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the type of tenure held is not described by any of the other enume" +
            "rated values.")]
        [System.Xml.Serialization.XmlEnumAttribute("Other Title")]
        Other_Title,
        
        /// <summary>
        /// <para>Tenure held is ownership of an undivided share in a property, with the right to exclusively occupy certain areas in the complex determined by contract with each resident.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is ownership of an undivided share in a property, with the right to e" +
            "xclusively occupy certain areas in the complex determined by contract with each " +
            "resident.")]
        [System.Xml.Serialization.XmlEnumAttribute("Purple Title")]
        Purple_Title,
        
        /// <summary>
        /// <para>Tenure held is as a unit or lot on a plan of subdivision associated with townhouses, units and blocks of flats and based on the horizontal and vertical subdivision of air space. Owners have a certificate of title, are absolute owners of a freehold flat and have an undivided share of the common property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Tenure held is as a unit or lot on a plan of subdivision associated with townhouses, units and blocks of flats and based on the horizontal and vertical subdivision of air space. Owners have a certificate of title, are absolute owners of a freehold flat and have an undivided share of the common property.")]
        [System.Xml.Serialization.XmlEnumAttribute("Strata Title")]
        Strata_Title,
        
        /// <summary>
        /// <para>Tenure held is freehold over an apartment, unit or flat, with in addition the owner automatically becoming a member of a service company that administers, manages and maintains the property in which the owner's flat is registered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is freehold over an apartment, unit or flat, with in addition the own" +
            "er automatically becoming a member of a service company that administers, manage" +
            "s and maintains the property in which the owner\'s flat is registered.")]
        [System.Xml.Serialization.XmlEnumAttribute("Stratum Title")]
        Stratum_Title,
        
        /// <summary>
        /// <para>Equivalent to a Strata Title with the exception that no buildings are shown on the Plan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equivalent to a Strata Title with the exception that no buildings are shown on th" +
            "e Plan.")]
        [System.Xml.Serialization.XmlEnumAttribute("Survey Strata Title")]
        Survey_Strata_Title,
        
        /// <summary>
        /// <para>Tenure held is unit title under the Unit Titles Act (ACT) which is the ACT equivalent of Strata Title.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tenure held is unit title under the Unit Titles Act (ACT) which is the ACT equiva" +
            "lent of Strata Title.")]
        [System.Xml.Serialization.XmlEnumAttribute("Unit Title")]
        Unit_Title,
    }
    
    /// <summary>
    /// <para>titleSystemList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("titleSystemList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("titleSystemList", Namespace="")]
    public enum TitleSystemList
    {
        
        /// <summary>
        /// <para>The title is granted by ownership of shares in a company that have rights to exclusively occupy parts of land that the company owns.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The title is granted by ownership of shares in a company that have rights to excl" +
            "usively occupy parts of land that the company owns.")]
        Company,
        
        /// <summary>
        /// <para>The title is granted by a chain of title documents or deeds, the system replaced by Torrens Title.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The title is granted by a chain of title documents or deeds, the system replaced " +
            "by Torrens Title.")]
        [System.Xml.Serialization.XmlEnumAttribute("Old Law")]
        Old_Law,
        
        /// <summary>
        /// <para>A folio in the Torrens Title Register in which is recorded a "caution" that has not been cancelled. A caution warns persons dealing with the registered proprietor that the land is held subject to any "subsisting interests" that may exist under Common Law or Old System.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A folio in the Torrens Title Register in which is recorded a ""caution"" that has not been cancelled. A caution warns persons dealing with the registered proprietor that the land is held subject to any ""subsisting interests"" that may exist under Common Law or Old System.")]
        Qualified,
        
        /// <summary>
        /// <para>The title is registered in a public register that is maintained by a Land Registry under relevant legislation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The title is registered in a public register that is maintained by a Land Registr" +
            "y under relevant legislation.")]
        Torrens,
        
        /// <summary>
        /// <para>The title is pending registration in the Torrens Title Register.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The title is pending registration in the Torrens Title Register.")]
        Unregistered,
    }
    
    /// <summary>
    /// <para>toolsOfTradeTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("toolsOfTradeTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("toolsOfTradeTypeList", Namespace="")]
    public enum ToolsOfTradeTypeList
    {
        
        /// <summary>
        /// <para>Camera</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Camera")]
        Camera,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Power Tools</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Power Tools")]
        [System.Xml.Serialization.XmlEnumAttribute("Power Tools")]
        Power_Tools,
        
        /// <summary>
        /// <para>Surveying Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Surveying Equipment")]
        [System.Xml.Serialization.XmlEnumAttribute("Surveying Equipment")]
        Surveying_Equipment,
        
        /// <summary>
        /// <para>Tools - Laser Beam</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tools - Laser Beam")]
        [System.Xml.Serialization.XmlEnumAttribute("Tools - Laser Beam")]
        Tools_Laser_Beam,
        
        /// <summary>
        /// <para>Tools General</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tools General")]
        [System.Xml.Serialization.XmlEnumAttribute("Tools General")]
        Tools_General,
    }
    
    /// <summary>
    /// <para>totalTermTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("totalTermTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("totalTermTypeList", Namespace="")]
    public enum TotalTermTypeList
    {
        
        /// <summary>
        /// <para>The term specified is the amortisation term of the loan, being the period over which the amortising repayment is calculated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The term specified is the amortisation term of the loan, being the period over wh" +
            "ich the amortising repayment is calculated.")]
        [System.Xml.Serialization.XmlEnumAttribute("Amortisation Term")]
        Amortisation_Term,
        
        /// <summary>
        /// <para>The term specified is the total term of the loan, being the period at the end of which the loan principal must be repaid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The term specified is the total term of the loan, being the period at the end of " +
            "which the loan principal must be repaid.")]
        [System.Xml.Serialization.XmlEnumAttribute("Total Term")]
        Total_Term,
    }
    
    /// <summary>
    /// <para>trustPurposeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("trustPurposeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("trustPurposeList", Namespace="")]
    public enum TrustPurposeList
    {
        
        /// <summary>
        /// <para>A discretionary trust for which a family trust election has been made.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A discretionary trust for which a family trust election has been made.")]
        [System.Xml.Serialization.XmlEnumAttribute("Family Trust")]
        Family_Trust,
        
        /// <summary>
        /// <para>The trust has been established for a person who is unable to manage his or her own affairs.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The trust has been established for a person who is unable to manage his or her ow" +
            "n affairs.")]
        Protective,
        
        /// <summary>
        /// <para>A trust, typically a simple (bare) trust, set up to hold property as security for a loan, for example for an SMSF. Also known as a property trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trust, typically a simple (bare) trust, set up to hold property as security for" +
            " a loan, for example for an SMSF. Also known as a property trust.")]
        [System.Xml.Serialization.XmlEnumAttribute("Security Trust")]
        Security_Trust,
        
        /// <summary>
        /// <para>Self managed super fund trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Self managed super fund trust.")]
        SMSF,
        
        /// <summary>
        /// <para>A trust that actively carries on business, and hence where the trust assets are used in the conduct of business.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trust that actively carries on business, and hence where the trust assets are u" +
            "sed in the conduct of business.")]
        [System.Xml.Serialization.XmlEnumAttribute("Trading Trust")]
        Trading_Trust,
    }
    
    /// <summary>
    /// <para>trustStructureList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("trustStructureList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("trustStructureList", Namespace="")]
    public enum TrustStructureList
    {
        
        /// <summary>
        /// <para>The trustee has discretion as to the distribution of trust property to the beneficiaries.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The trustee has discretion as to the distribution of trust property to the benefi" +
            "ciaries.")]
        Discretionary,
        
        /// <summary>
        /// <para>The trustee holds the trust assets for the benefit of the beneficiaries in specified fixed proportions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The trustee holds the trust assets for the benefit of the beneficiaries in specif" +
            "ied fixed proportions.")]
        Fixed,
        
        /// <summary>
        /// <para>A trust that combines elements of both fixed and discretionary trusts, in that the trustee must pay a certain amount of the trust property to each beneficiary, but otherwise has discretion as to how any remaining trust property is distributed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trust that combines elements of both fixed and discretionary trusts, in that th" +
            "e trustee must pay a certain amount of the trust property to each beneficiary, b" +
            "ut otherwise has discretion as to how any remaining trust property is distribute" +
            "d.")]
        Hybrid,
        
        /// <summary>
        /// <para>A trust with one trustee and one beneficiary, and where the trustee has no active duty beyond conveying the property to the beneficiary at some future time determined by the trust. Also known as a bare trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A trust with one trustee and one beneficiary, and where the trustee has no active" +
            " duty beyond conveying the property to the beneficiary at some future time deter" +
            "mined by the trust. Also known as a bare trust.")]
        Simple,
        
        /// <summary>
        /// <para>The beneficiaries (called unit holders) each possess a certain share (called units) and can direct the trustee to pay money to them out of the trust property according to the number of units they possess.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The beneficiaries (called unit holders) each possess a certain share (called unit" +
            "s) and can direct the trustee to pay money to them out of the trust property acc" +
            "ording to the number of units they possess.")]
        Unit,
    }
    
    /// <summary>
    /// <para>A list of valid types of incorporation that describe the valid company structures.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of valid types of incorporation that describe the valid company structures" +
        ".")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("typeOfIncorporationList", Namespace="")]
    public enum TypeOfIncorporationList
    {
        
        /// <summary>
        /// <para>An incorporated association under the relevant state or territory legislation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An incorporated association under the relevant state or territory legislation.")]
        Inc,
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. A Look-Through Company (LTC) is a kind of tax structure for New Zealand companies with limited liability, which allows the company in question to transfer its income and expenditure to its shareholders directly.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a future release. A Look-Through Company (LTC) is a kind of tax structure for New Zealand companies with limited liability, which allows the company in question to transfer its income and expenditure to its shareholders directly.")]
        LTC,
        
        /// <summary>
        /// <para>A public company limited by shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A public company limited by shares.")]
        Ltd,
        
        /// <summary>
        /// <para>A "No Liability Company", meaning that it must be solely for the objective of mining and have no further call on any of its unpaid shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A \"No Liability Company\", meaning that it must be solely for the objective of min" +
            "ing and have no further call on any of its unpaid shares.")]
        NL,
        
        /// <summary>
        /// <para>A Proprietary Limited company, being a private company limited by shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Proprietary Limited company, being a private company limited by shares.")]
        [System.Xml.Serialization.XmlEnumAttribute("Pty Ltd")]
        Pty_Ltd,
    }
    
    /// <summary>
    /// <para>usageUnitOfMeasurementList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("usageUnitOfMeasurementList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("usageUnitOfMeasurementList", Namespace="")]
    public enum UsageUnitOfMeasurementList
    {
        
        /// <summary>
        /// <para>Days</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Days")]
        Days,
        
        /// <summary>
        /// <para>Hours</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Hours")]
        Hours,
        
        /// <summary>
        /// <para>Km</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Km")]
        Km,
        
        /// <summary>
        /// <para>Months</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Months")]
        Months,
        
        /// <summary>
        /// <para>Years</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Years")]
        Years,
    }
    
    /// <summary>
    /// <para>valuationProgramList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("valuationProgramList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("valuationProgramList", Namespace="")]
    public enum ValuationProgramList
    {
        
        /// <summary>
        /// <para>An AVM (Automated Valuation Model) requires no input from a qualified valuer, but instead use computer models based on attribute data and recent comparable sales data to estimate a value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An AVM (Automated Valuation Model) requires no input from a qualified valuer, but" +
            " instead use computer models based on attribute data and recent comparable sales" +
            " data to estimate a value.")]
        AVM,
        
        /// <summary>
        /// <para>A Costing is an evaluation of a construction contract to determine if the contract price is appropriate for the building being constructed, and to estimate the market value as if complete. Used for off the plan or To Be Erected (TBE) property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Costing is an evaluation of a construction contract to determine if the contrac" +
            "t price is appropriate for the building being constructed, and to estimate the m" +
            "arket value as if complete. Used for off the plan or To Be Erected (TBE) propert" +
            "y.")]
        Costing,
        
        /// <summary>
        /// <para>A Desktop Valuation requires no internal or external inspection, instead qualified valuers use data about the property (attributes, photos, and comparable sales) to value a property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Desktop Valuation requires no internal or external inspection, instead qualifie" +
            "d valuers use data about the property (attributes, photos, and comparable sales)" +
            " to value a property.")]
        Desktop,
        
        /// <summary>
        /// <para>A Full Registered Valuation requires an internal and external inspection of the property by a qualified valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Full Registered Valuation requires an internal and external inspection of the p" +
            "roperty by a qualified valuer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Full Registered")]
        Full_Registered,
        
        /// <summary>
        /// <para>A Kerb Side Valuation requires an external sighting of the property from the street by a qualified valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Kerb Side Valuation requires an external sighting of the property from the stre" +
            "et by a qualified valuer.")]
        [System.Xml.Serialization.XmlEnumAttribute("Kerb Side")]
        Kerb_Side,
        
        /// <summary>
        /// <para>None</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("None")]
        None,
        
        /// <summary>
        /// <para>A Progress Inspection is an inspection and valuation of a building under construction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Progress Inspection is an inspection and valuation of a building under construc" +
            "tion.")]
        [System.Xml.Serialization.XmlEnumAttribute("Progress Inspection")]
        Progress_Inspection,
    }
    
    /// <summary>
    /// <para>variationTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("variationTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("variationTypeList", Namespace="")]
    public enum VariationTypeList
    {
        
        /// <summary>
        /// <para>Add Borrower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Add Borrower")]
        [System.Xml.Serialization.XmlEnumAttribute("Add Borrower")]
        Add_Borrower,
        
        /// <summary>
        /// <para>Add Guarantor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Add Guarantor")]
        [System.Xml.Serialization.XmlEnumAttribute("Add Guarantor")]
        Add_Guarantor,
        
        /// <summary>
        /// <para>Add Security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Add Security")]
        [System.Xml.Serialization.XmlEnumAttribute("Add Security")]
        Add_Security,
        
        /// <summary>
        /// <para>Balance Increase</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Balance Increase")]
        [System.Xml.Serialization.XmlEnumAttribute("Balance Increase")]
        Balance_Increase,
        
        /// <summary>
        /// <para>Change Authority to Operate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Authority to Operate")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Authority to Operate")]
        Change_Authority_To_Operate,
        
        /// <summary>
        /// <para>Change Loan Term</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Loan Term")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Loan Term")]
        Change_Loan_Term,
        
        /// <summary>
        /// <para>Change Repayment Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Repayment Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Repayment Account")]
        Change_Repayment_Account,
        
        /// <summary>
        /// <para>Change Repayment Amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Repayment Amount")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Repayment Amount")]
        Change_Repayment_Amount,
        
        /// <summary>
        /// <para>Change Repayment Date</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Repayment Date")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Repayment Date")]
        Change_Repayment_Date,
        
        /// <summary>
        /// <para>Change Repayment Frequency</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Repayment Frequency")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Repayment Frequency")]
        Change_Repayment_Frequency,
        
        /// <summary>
        /// <para>Change Repayment Type</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Change Repayment Type")]
        [System.Xml.Serialization.XmlEnumAttribute("Change Repayment Type")]
        Change_Repayment_Type,
        
        /// <summary>
        /// <para>Close Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Close Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Close Account")]
        Close_Account,
        
        /// <summary>
        /// <para>Interest Rate Discount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest Rate Discount")]
        [System.Xml.Serialization.XmlEnumAttribute("Interest Rate Discount")]
        Interest_Rate_Discount,
        
        /// <summary>
        /// <para>Limit Increase</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Limit Increase")]
        [System.Xml.Serialization.XmlEnumAttribute("Limit Increase")]
        Limit_Increase,
        
        /// <summary>
        /// <para>Reduce Balance</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reduce Balance")]
        [System.Xml.Serialization.XmlEnumAttribute("Reduce Balance")]
        Reduce_Balance,
        
        /// <summary>
        /// <para>Reduce Limit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reduce Limit")]
        [System.Xml.Serialization.XmlEnumAttribute("Reduce Limit")]
        Reduce_Limit,
        
        /// <summary>
        /// <para>Release Guarantor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Release Guarantor")]
        [System.Xml.Serialization.XmlEnumAttribute("Release Guarantor")]
        Release_Guarantor,
        
        /// <summary>
        /// <para>Release Security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Release Security")]
        [System.Xml.Serialization.XmlEnumAttribute("Release Security")]
        Release_Security,
        
        /// <summary>
        /// <para>Remove Borrower</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Remove Borrower")]
        [System.Xml.Serialization.XmlEnumAttribute("Remove Borrower")]
        Remove_Borrower,
        
        /// <summary>
        /// <para>Split Account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Split Account")]
        [System.Xml.Serialization.XmlEnumAttribute("Split Account")]
        Split_Account,
        
        /// <summary>
        /// <para>Substitute Security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Substitute Security")]
        [System.Xml.Serialization.XmlEnumAttribute("Substitute Security")]
        Substitute_Security,
        
        /// <summary>
        /// <para>Switch Product</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Switch Product")]
        [System.Xml.Serialization.XmlEnumAttribute("Switch Product")]
        Switch_Product,
        
        /// <summary>
        /// <para>Update Party Details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Update Party Details")]
        [System.Xml.Serialization.XmlEnumAttribute("Update Party Details")]
        Update_Party_Details,
    }
    
    /// <summary>
    /// <para>varyOnValuationList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("varyOnValuationList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("varyOnValuationList", Namespace="")]
    public enum VaryOnValuationList
    {
        
        /// <summary>
        /// <para>Vary the cash reserve amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vary the cash reserve amount.")]
        [System.Xml.Serialization.XmlEnumAttribute("Cash Reserve")]
        Cash_Reserve,
        
        /// <summary>
        /// <para>Vary the instalment amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vary the instalment amount.")]
        Instalments,
        
        /// <summary>
        /// <para>Vary the lump sum amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vary the lump sum amount.")]
        [System.Xml.Serialization.XmlEnumAttribute("Lump Sum")]
        Lump_Sum,
    }
    
    /// <summary>
    /// <para>vehicleSubtypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("vehicleSubtypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vehicleSubtypeList", Namespace="")]
    public enum VehicleSubtypeList
    {
        
        /// <summary>
        /// <para>Beaver Tail Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Beaver Tail Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Beaver Tail Truck")]
        Beaver_Tail_Truck,
        
        /// <summary>
        /// <para>Cab Chassis Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cab Chassis Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Cab Chassis Truck")]
        Cab_Chassis_Truck,
        
        /// <summary>
        /// <para>Cable Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cable Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Cable Trailer")]
        Cable_Trailer,
        
        /// <summary>
        /// <para>Dog Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dog Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Dog Trailer")]
        Dog_Trailer,
        
        /// <summary>
        /// <para>Flat Top Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flat Top Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Flat Top Trailer")]
        Flat_Top_Trailer,
        
        /// <summary>
        /// <para>Light Truck Under 4 and a Half Tons GVM (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Light Truck Under 4 and a Half Tons GVM (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Light Truck Under 4 and a Half Tons GVM")]
        Light_Truck_Under_4_And_A_Half_Tons_GVM,
        
        /// <summary>
        /// <para>Low Loader Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Low Loader Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Low Loader Trailer")]
        Low_Loader_Trailer,
        
        /// <summary>
        /// <para>Passenger (subtype of Car).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Passenger (subtype of Car).")]
        Passenger,
        
        /// <summary>
        /// <para>Plant Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plant Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Plant Trailer")]
        Plant_Trailer,
        
        /// <summary>
        /// <para>Prime Mover (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Prime Mover (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Prime Mover")]
        Prime_Mover,
        
        /// <summary>
        /// <para>Refrigerated Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Refrigerated Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Refrigerated Trailer")]
        Refrigerated_Trailer,
        
        /// <summary>
        /// <para>Skel Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Skel Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Skel Trailer")]
        Skel_Trailer,
        
        /// <summary>
        /// <para>SUV (subtype of Car).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SUV (subtype of Car).")]
        SUV,
        
        /// <summary>
        /// <para>Tautliner Trailer (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tautliner Trailer (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Tautliner Trailer")]
        Tautliner_Trailer,
        
        /// <summary>
        /// <para>Tipper Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipper Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Tipper Truck")]
        Tipper_Truck,
        
        /// <summary>
        /// <para>Trailer-Mounted Crane (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trailer-Mounted Crane (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Trailer-Mounted Crane")]
        Trailer_Mounted_Crane,
        
        /// <summary>
        /// <para>Trailer-Mounted Vacuum Unit (subtype of Trailer).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trailer-Mounted Vacuum Unit (subtype of Trailer).")]
        [System.Xml.Serialization.XmlEnumAttribute("Trailer-Mounted Vacuum Unit")]
        Trailer_Mounted_Vacuum_Unit,
        
        /// <summary>
        /// <para>Trayback Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trayback Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Trayback Truck")]
        Trayback_Truck,
        
        /// <summary>
        /// <para>Truck-Mounted Crane (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Truck-Mounted Crane (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Truck-Mounted Crane")]
        Truck_Mounted_Crane,
        
        /// <summary>
        /// <para>Utility (subtype of Car).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Utility (subtype of Car).")]
        Utility,
        
        /// <summary>
        /// <para>Vacuum Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vacuum Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Vacuum Truck")]
        Vacuum_Truck,
        
        /// <summary>
        /// <para>Water Truck (subtype of Truck).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Water Truck (subtype of Truck).")]
        [System.Xml.Serialization.XmlEnumAttribute("Water Truck")]
        Water_Truck,
    }
    
    /// <summary>
    /// <para>vehicleTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("vehicleTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vehicleTypeList", Namespace="")]
    public enum VehicleTypeList
    {
        
        /// <summary>
        /// <para>Bicycle</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bicycle")]
        Bicycle,
        
        /// <summary>
        /// <para>Bodies</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bodies")]
        Bodies,
        
        /// <summary>
        /// <para>Buses, coaches, tow trucks, hearses, motorised caravans and other non-freight carrying vehicles</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Buses, coaches, tow trucks, hearses, motorised caravans and other non-freight car" +
            "rying vehicles")]
        [System.Xml.Serialization.XmlEnumAttribute("Bus Coach or Special Purpose")]
        Bus_Coach_Or_Special_Purpose,
        
        /// <summary>
        /// <para>Cars, station wagons, utilities, SUV, and other small passenger vehicles and vans</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cars, station wagons, utilities, SUV, and other small passenger vehicles and vans" +
            "")]
        Car,
        
        /// <summary>
        /// <para>Wheeled vehicle, used to live in, typically towed by a car.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wheeled vehicle, used to live in, typically towed by a car.")]
        Caravan,
        
        /// <summary>
        /// <para>Vehicles constructed primarily for the carriage of goods and not exceeding 3.5 tonnes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicles constructed primarily for the carriage of goods and not exceeding 3.5 to" +
            "nnes")]
        [System.Xml.Serialization.XmlEnumAttribute("Light Commercial")]
        Light_Commercial,
        
        /// <summary>
        /// <para>Locomotive</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Locomotive")]
        Locomotive,
        
        /// <summary>
        /// <para>Motorcycle</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motorcycle")]
        Motorcycle,
        
        /// <summary>
        /// <para>Other</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other")]
        Other,
        
        /// <summary>
        /// <para>Rail rolling stock</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rail rolling stock")]
        [System.Xml.Serialization.XmlEnumAttribute("Rail Cars")]
        Rail_Cars,
        
        /// <summary>
        /// <para>Trailer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trailer")]
        Trailer,
        
        /// <summary>
        /// <para>Freight carrying vehicles with a gross combination mass rating in excess of 3.5 tonnes including prime movers</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Freight carrying vehicles with a gross combination mass rating in excess of 3.5 t" +
            "onnes including prime movers")]
        Truck,
        
        /// <summary>
        /// <para>Including personal watercraft, sail and power boats of any size</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Including personal watercraft, sail and power boats of any size")]
        Watercraft,
    }
    
    /// <summary>
    /// <para>visitContactTypeList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("visitContactTypeList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("visitContactTypeList", Namespace="")]
    public enum VisitContactTypeList
    {
        
        /// <summary>
        /// <para>The contact for arranging inspection of the property is the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contact for arranging inspection of the property is the applicant.")]
        Applicant,
        
        /// <summary>
        /// <para>The contact for arranging the inspection of the property is the builder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contact for arranging the inspection of the property is the builder.")]
        Builder,
        
        /// <summary>
        /// <para>The contact for arranging inspection of the property is the real estate agent acting for the vendor of the property. Applicable when the property is being purchased by the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contact for arranging inspection of the property is the real estate agent act" +
            "ing for the vendor of the property. Applicable when the property is being purcha" +
            "sed by the applicant.")]
        [System.Xml.Serialization.XmlEnumAttribute("Property Agent")]
        Property_Agent,
        
        /// <summary>
        /// <para>The contact for arranging inspection of the property is the tenant that resides in the property. Applicable when the property is leased.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contact for arranging inspection of the property is the tenant that resides i" +
            "n the property. Applicable when the property is leased.")]
        Tenant,
        
        /// <summary>
        /// <para>The contact for arranging inspection of the property is the seller.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contact for arranging inspection of the property is the seller.")]
        Vendor,
    }
    
    /// <summary>
    /// <para>A list of the weeks in each period.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of the weeks in each period.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("weekList", Namespace="")]
    public enum WeekList
    {
        
        /// <summary>
        /// <para>The first week of the period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The first week of the period.")]
        First,
        
        /// <summary>
        /// <para>The fourth week of the period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fourth week of the period.")]
        Fourth,
        
        /// <summary>
        /// <para>The last week of the period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The last week of the period.")]
        Last,
        
        /// <summary>
        /// <para>The second week of the period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The second week of the period.")]
        Second,
        
        /// <summary>
        /// <para>The third week of the period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The third week of the period.")]
        Third,
    }
    
    /// <summary>
    /// <para>A list of options to indicate answers of Yes, No, Future Intent.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of options to indicate answers of Yes, No, Future Intent.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yesNoIntentList", Namespace="")]
    public enum YesNoIntentList
    {
        
        /// <summary>
        /// <para>In the future the response will be Yes, indicating future intent.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In the future the response will be Yes, indicating future intent.")]
        [System.Xml.Serialization.XmlEnumAttribute("Future Intent")]
        Future_Intent,
        
        /// <summary>
        /// <para>Currently No</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Currently No")]
        No,
        
        /// <summary>
        /// <para>Currently Yes</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Currently Yes")]
        Yes,
    }
    
    /// <summary>
    /// <para>yyYearList</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("yyYearList")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("yyYearList", Namespace="")]
    public enum YyYearList
    {
        
        /// <summary>
        /// <para>00</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("00")]
        [System.Xml.Serialization.XmlEnumAttribute("00")]
        Item00,
        
        /// <summary>
        /// <para>01</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("01")]
        [System.Xml.Serialization.XmlEnumAttribute("01")]
        Item01,
        
        /// <summary>
        /// <para>02</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("02")]
        [System.Xml.Serialization.XmlEnumAttribute("02")]
        Item02,
        
        /// <summary>
        /// <para>03</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("03")]
        [System.Xml.Serialization.XmlEnumAttribute("03")]
        Item03,
        
        /// <summary>
        /// <para>04</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("04")]
        [System.Xml.Serialization.XmlEnumAttribute("04")]
        Item04,
        
        /// <summary>
        /// <para>05</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("05")]
        [System.Xml.Serialization.XmlEnumAttribute("05")]
        Item05,
        
        /// <summary>
        /// <para>06</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("06")]
        [System.Xml.Serialization.XmlEnumAttribute("06")]
        Item06,
        
        /// <summary>
        /// <para>07</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("07")]
        [System.Xml.Serialization.XmlEnumAttribute("07")]
        Item07,
        
        /// <summary>
        /// <para>08</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("08")]
        [System.Xml.Serialization.XmlEnumAttribute("08")]
        Item08,
        
        /// <summary>
        /// <para>09</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("09")]
        [System.Xml.Serialization.XmlEnumAttribute("09")]
        Item09,
        
        /// <summary>
        /// <para>10</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10")]
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <summary>
        /// <para>11</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("11")]
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <summary>
        /// <para>12</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("12")]
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <summary>
        /// <para>13</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("13")]
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <summary>
        /// <para>14</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("14")]
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <summary>
        /// <para>15</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("15")]
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <summary>
        /// <para>16</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("16")]
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <summary>
        /// <para>17</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("17")]
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <summary>
        /// <para>18</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("18")]
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <summary>
        /// <para>19</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("19")]
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <summary>
        /// <para>20</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("20")]
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <summary>
        /// <para>21</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("21")]
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <summary>
        /// <para>22</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("22")]
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <summary>
        /// <para>23</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("23")]
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <summary>
        /// <para>24</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("24")]
        [System.Xml.Serialization.XmlEnumAttribute("24")]
        Item24,
        
        /// <summary>
        /// <para>25</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("25")]
        [System.Xml.Serialization.XmlEnumAttribute("25")]
        Item25,
        
        /// <summary>
        /// <para>26</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("26")]
        [System.Xml.Serialization.XmlEnumAttribute("26")]
        Item26,
        
        /// <summary>
        /// <para>27</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("27")]
        [System.Xml.Serialization.XmlEnumAttribute("27")]
        Item27,
        
        /// <summary>
        /// <para>28</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("28")]
        [System.Xml.Serialization.XmlEnumAttribute("28")]
        Item28,
        
        /// <summary>
        /// <para>29</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("29")]
        [System.Xml.Serialization.XmlEnumAttribute("29")]
        Item29,
        
        /// <summary>
        /// <para>30</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("30")]
        [System.Xml.Serialization.XmlEnumAttribute("30")]
        Item30,
        
        /// <summary>
        /// <para>31</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("31")]
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,
        
        /// <summary>
        /// <para>32</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("32")]
        [System.Xml.Serialization.XmlEnumAttribute("32")]
        Item32,
        
        /// <summary>
        /// <para>33</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("33")]
        [System.Xml.Serialization.XmlEnumAttribute("33")]
        Item33,
        
        /// <summary>
        /// <para>34</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("34")]
        [System.Xml.Serialization.XmlEnumAttribute("34")]
        Item34,
        
        /// <summary>
        /// <para>35</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("35")]
        [System.Xml.Serialization.XmlEnumAttribute("35")]
        Item35,
        
        /// <summary>
        /// <para>36</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("36")]
        [System.Xml.Serialization.XmlEnumAttribute("36")]
        Item36,
        
        /// <summary>
        /// <para>37</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("37")]
        [System.Xml.Serialization.XmlEnumAttribute("37")]
        Item37,
        
        /// <summary>
        /// <para>38</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("38")]
        [System.Xml.Serialization.XmlEnumAttribute("38")]
        Item38,
        
        /// <summary>
        /// <para>39</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("39")]
        [System.Xml.Serialization.XmlEnumAttribute("39")]
        Item39,
        
        /// <summary>
        /// <para>40</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("40")]
        [System.Xml.Serialization.XmlEnumAttribute("40")]
        Item40,
        
        /// <summary>
        /// <para>41</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("41")]
        [System.Xml.Serialization.XmlEnumAttribute("41")]
        Item41,
        
        /// <summary>
        /// <para>42</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("42")]
        [System.Xml.Serialization.XmlEnumAttribute("42")]
        Item42,
        
        /// <summary>
        /// <para>43</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("43")]
        [System.Xml.Serialization.XmlEnumAttribute("43")]
        Item43,
        
        /// <summary>
        /// <para>44</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("44")]
        [System.Xml.Serialization.XmlEnumAttribute("44")]
        Item44,
        
        /// <summary>
        /// <para>45</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("45")]
        [System.Xml.Serialization.XmlEnumAttribute("45")]
        Item45,
        
        /// <summary>
        /// <para>46</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("46")]
        [System.Xml.Serialization.XmlEnumAttribute("46")]
        Item46,
        
        /// <summary>
        /// <para>47</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("47")]
        [System.Xml.Serialization.XmlEnumAttribute("47")]
        Item47,
        
        /// <summary>
        /// <para>48</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("48")]
        [System.Xml.Serialization.XmlEnumAttribute("48")]
        Item48,
        
        /// <summary>
        /// <para>49</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("49")]
        [System.Xml.Serialization.XmlEnumAttribute("49")]
        Item49,
        
        /// <summary>
        /// <para>50</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("50")]
        [System.Xml.Serialization.XmlEnumAttribute("50")]
        Item50,
        
        /// <summary>
        /// <para>51</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("51")]
        [System.Xml.Serialization.XmlEnumAttribute("51")]
        Item51,
        
        /// <summary>
        /// <para>52</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("52")]
        [System.Xml.Serialization.XmlEnumAttribute("52")]
        Item52,
        
        /// <summary>
        /// <para>53</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("53")]
        [System.Xml.Serialization.XmlEnumAttribute("53")]
        Item53,
        
        /// <summary>
        /// <para>54</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("54")]
        [System.Xml.Serialization.XmlEnumAttribute("54")]
        Item54,
        
        /// <summary>
        /// <para>55</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("55")]
        [System.Xml.Serialization.XmlEnumAttribute("55")]
        Item55,
        
        /// <summary>
        /// <para>56</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("56")]
        [System.Xml.Serialization.XmlEnumAttribute("56")]
        Item56,
        
        /// <summary>
        /// <para>57</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("57")]
        [System.Xml.Serialization.XmlEnumAttribute("57")]
        Item57,
        
        /// <summary>
        /// <para>58</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("58")]
        [System.Xml.Serialization.XmlEnumAttribute("58")]
        Item58,
        
        /// <summary>
        /// <para>59</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("59")]
        [System.Xml.Serialization.XmlEnumAttribute("59")]
        Item59,
        
        /// <summary>
        /// <para>60</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("60")]
        [System.Xml.Serialization.XmlEnumAttribute("60")]
        Item60,
        
        /// <summary>
        /// <para>61</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("61")]
        [System.Xml.Serialization.XmlEnumAttribute("61")]
        Item61,
        
        /// <summary>
        /// <para>62</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("62")]
        [System.Xml.Serialization.XmlEnumAttribute("62")]
        Item62,
        
        /// <summary>
        /// <para>63</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("63")]
        [System.Xml.Serialization.XmlEnumAttribute("63")]
        Item63,
        
        /// <summary>
        /// <para>64</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("64")]
        [System.Xml.Serialization.XmlEnumAttribute("64")]
        Item64,
        
        /// <summary>
        /// <para>65</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("65")]
        [System.Xml.Serialization.XmlEnumAttribute("65")]
        Item65,
        
        /// <summary>
        /// <para>66</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("66")]
        [System.Xml.Serialization.XmlEnumAttribute("66")]
        Item66,
        
        /// <summary>
        /// <para>67</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("67")]
        [System.Xml.Serialization.XmlEnumAttribute("67")]
        Item67,
        
        /// <summary>
        /// <para>68</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("68")]
        [System.Xml.Serialization.XmlEnumAttribute("68")]
        Item68,
        
        /// <summary>
        /// <para>69</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("69")]
        [System.Xml.Serialization.XmlEnumAttribute("69")]
        Item69,
        
        /// <summary>
        /// <para>70</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("70")]
        [System.Xml.Serialization.XmlEnumAttribute("70")]
        Item70,
        
        /// <summary>
        /// <para>71</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("71")]
        [System.Xml.Serialization.XmlEnumAttribute("71")]
        Item71,
        
        /// <summary>
        /// <para>72</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("72")]
        [System.Xml.Serialization.XmlEnumAttribute("72")]
        Item72,
        
        /// <summary>
        /// <para>73</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("73")]
        [System.Xml.Serialization.XmlEnumAttribute("73")]
        Item73,
        
        /// <summary>
        /// <para>74</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("74")]
        [System.Xml.Serialization.XmlEnumAttribute("74")]
        Item74,
        
        /// <summary>
        /// <para>75</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("75")]
        [System.Xml.Serialization.XmlEnumAttribute("75")]
        Item75,
        
        /// <summary>
        /// <para>76</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("76")]
        [System.Xml.Serialization.XmlEnumAttribute("76")]
        Item76,
        
        /// <summary>
        /// <para>77</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("77")]
        [System.Xml.Serialization.XmlEnumAttribute("77")]
        Item77,
        
        /// <summary>
        /// <para>78</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("78")]
        [System.Xml.Serialization.XmlEnumAttribute("78")]
        Item78,
        
        /// <summary>
        /// <para>79</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("79")]
        [System.Xml.Serialization.XmlEnumAttribute("79")]
        Item79,
        
        /// <summary>
        /// <para>80</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("80")]
        [System.Xml.Serialization.XmlEnumAttribute("80")]
        Item80,
        
        /// <summary>
        /// <para>81</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("81")]
        [System.Xml.Serialization.XmlEnumAttribute("81")]
        Item81,
        
        /// <summary>
        /// <para>82</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("82")]
        [System.Xml.Serialization.XmlEnumAttribute("82")]
        Item82,
        
        /// <summary>
        /// <para>83</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("83")]
        [System.Xml.Serialization.XmlEnumAttribute("83")]
        Item83,
        
        /// <summary>
        /// <para>84</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("84")]
        [System.Xml.Serialization.XmlEnumAttribute("84")]
        Item84,
        
        /// <summary>
        /// <para>85</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("85")]
        [System.Xml.Serialization.XmlEnumAttribute("85")]
        Item85,
        
        /// <summary>
        /// <para>86</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("86")]
        [System.Xml.Serialization.XmlEnumAttribute("86")]
        Item86,
        
        /// <summary>
        /// <para>87</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("87")]
        [System.Xml.Serialization.XmlEnumAttribute("87")]
        Item87,
        
        /// <summary>
        /// <para>88</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("88")]
        [System.Xml.Serialization.XmlEnumAttribute("88")]
        Item88,
        
        /// <summary>
        /// <para>89</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("89")]
        [System.Xml.Serialization.XmlEnumAttribute("89")]
        Item89,
        
        /// <summary>
        /// <para>90</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("90")]
        [System.Xml.Serialization.XmlEnumAttribute("90")]
        Item90,
        
        /// <summary>
        /// <para>91</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("91")]
        [System.Xml.Serialization.XmlEnumAttribute("91")]
        Item91,
        
        /// <summary>
        /// <para>92</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("92")]
        [System.Xml.Serialization.XmlEnumAttribute("92")]
        Item92,
        
        /// <summary>
        /// <para>93</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("93")]
        [System.Xml.Serialization.XmlEnumAttribute("93")]
        Item93,
        
        /// <summary>
        /// <para>94</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("94")]
        [System.Xml.Serialization.XmlEnumAttribute("94")]
        Item94,
        
        /// <summary>
        /// <para>95</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("95")]
        [System.Xml.Serialization.XmlEnumAttribute("95")]
        Item95,
        
        /// <summary>
        /// <para>96</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("96")]
        [System.Xml.Serialization.XmlEnumAttribute("96")]
        Item96,
        
        /// <summary>
        /// <para>97</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("97")]
        [System.Xml.Serialization.XmlEnumAttribute("97")]
        Item97,
        
        /// <summary>
        /// <para>98</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("98")]
        [System.Xml.Serialization.XmlEnumAttribute("98")]
        Item98,
        
        /// <summary>
        /// <para>99</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("99")]
        [System.Xml.Serialization.XmlEnumAttribute("99")]
        Item99,
    }
    
    /// <summary>
    /// <para>The root element that contains a message for exchange between two end-points involved in the workflow related to the processing of an application for a new financial product or change management of an existing financial product. The message contains instructions to the recipient requesting some workflow activity along with data related to: the applicant and the financial product involved; the publisher; one or more recipients; schema version information; and any related attachments.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"The root element that contains a message for exchange between two end-points involved in the workflow related to the processing of an application for a new financial product or change management of an existing financial product. The message contains instructions to the recipient requesting some workflow activity along with data related to: the applicant and the financial product involved; the publisher; one or more recipients; schema version information; and any related attachments.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Package", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Package", Namespace="")]
    public partial class Package
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageAttachment> _attachment;
        
        /// <summary>
        /// <para>Contains information about a document that is attached to the application, either by being embedded or by reference to a URL, or both.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about a document that is attached to the application, either" +
            " by being embedded or by reference to a URL, or both.")]
        [System.Xml.Serialization.XmlElementAttribute("Attachment")]
        public System.Collections.Generic.List<PackageAttachment> Attachment
        {
            get
            {
                return this._attachment;
            }
            set
            {
                this._attachment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attachment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttachmentSpecified
        {
            get
            {
                return (this.Attachment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Package" /> class.</para>
        /// </summary>
        public Package()
        {
            this._attachment = new System.Collections.Generic.List<PackageAttachment>();
            this._recipient = new System.Collections.Generic.List<PackageRecipient>();
            this._transformMetadata = new System.Collections.Generic.List<PackageTransformMetadataIdentifier>();
        }
        
        /// <summary>
        /// <para>The content of the message.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The content of the message.")]
        [System.Xml.Serialization.XmlElementAttribute("Content")]
        public PackageContent Content { get; set; }
        
        /// <summary>
        /// <para>Determines the scope of the message. The message can be about the Application, Valuation, Mortgage Insurance, Loan Documents or an Error.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Determines the scope of the message. The message can be about the Application, Va" +
            "luation, Mortgage Insurance, Loan Documents or an Error.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Instructions")]
        public PackageInstructions Instructions { get; set; }
        
        /// <summary>
        /// <para>The publisher of the specific XML file, being the party responsible for the content of the file as well as the work instruction, and to whom the response message would be delivered. For a mortgage broker sending an application to a lender, this would likely be the aggregator if they are providing the software, or perhaps the broker company or broker otherwise. For a lender requesting LMI, the lender is the publisher. For the LMI response, the LMI provider is the publisher.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The publisher of the specific XML file, being the party responsible for the content of the file as well as the work instruction, and to whom the response message would be delivered. For a mortgage broker sending an application to a lender, this would likely be the aggregator if they are providing the software, or perhaps the broker company or broker otherwise. For a lender requesting LMI, the lender is the publisher. For the LMI response, the LMI provider is the publisher.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Publisher")]
        public PackagePublisher Publisher { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageRecipient> _recipient;
        
        /// <summary>
        /// <para>The intended recipients (company or company-specified routing) for the Package from the Publisher.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The intended recipients (company or company-specified routing) for the Package fr" +
            "om the Publisher.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Recipient")]
        public System.Collections.Generic.List<PackageRecipient> Recipient
        {
            get
            {
                return this._recipient;
            }
            set
            {
                this._recipient = value;
            }
        }
        
        /// <summary>
        /// <para>Contains information about the package schema version</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the package schema version")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("SchemaVersion")]
        public PackageSchemaVersion SchemaVersion { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageTransformMetadataIdentifier> _transformMetadata;
        
        /// <summary>
        /// <para>Metadata required for enabling round trip transforms from a different data model into a message conforming to this schema and back again without loss of fidelity. Note that no data that carries meaning in this LIXI 2.x schema may be carried in this element.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Metadata required for enabling round trip transforms from a different data model into a message conforming to this schema and back again without loss of fidelity. Note that no data that carries meaning in this LIXI 2.x schema may be carried in this element.")]
        [System.Xml.Serialization.XmlArrayAttribute("TransformMetadata")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Identifier")]
        public System.Collections.Generic.List<PackageTransformMetadataIdentifier> TransformMetadata
        {
            get
            {
                return this._transformMetadata;
            }
            set
            {
                this._transformMetadata = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TransformMetadata collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransformMetadataSpecified
        {
            get
            {
                return (this.TransformMetadata.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether this file contains production or test data.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this file contains production or test data.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductionData")]
        public YesNoList ProductionData { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductionData property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductionDataSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageAttachment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageAttachment
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageAttachmentContent> _content;
        
        /// <summary>
        /// <para>The details of a document that is included in the attachment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details of a document that is included in the attachment.")]
        [System.Xml.Serialization.XmlElementAttribute("Content")]
        public System.Collections.Generic.List<PackageAttachmentContent> Content
        {
            get
            {
                return this._content;
            }
            set
            {
                this._content = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Content collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContentSpecified
        {
            get
            {
                return (this.Content.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageAttachment" /> class.</para>
        /// </summary>
        public PackageAttachment()
        {
            this._content = new System.Collections.Generic.List<PackageAttachmentContent>();
        }
        
        /// <summary>
        /// <para>For each attachment, the document itself can be embedded in the XML in a text encoded format.</para>
        /// <para>base64BinaryType is a restriction of the base64Binary xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For each attachment, the document itself can be embedded in the XML in a text enc" +
            "oded format.")]
        [System.Xml.Serialization.XmlElementAttribute("InlineAttachment", DataType="base64Binary")]
        public byte[] InlineAttachment { get; set; }
        
        /// <summary>
        /// <para>For each attachment, the name for the attached file, including filename extension may be provided</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For each attachment, the name for the attached file, including filename extension" +
            " may be provided")]
        [System.Xml.Serialization.XmlAttributeAttribute("Filename")]
        public string Filename { get; set; }
        
        /// <summary>
        /// <para>Multiple Documents In Attachment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Multiple Documents In Attachment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MultipleDocumentsInAttachment")]
        public YesNoList MultipleDocumentsInAttachment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MultipleDocumentsInAttachment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultipleDocumentsInAttachmentSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>For each attachment, the URI that identifies where the attached file might be accessed from. While it is anticipated that it will generally be of the form "http://" or "ftp://", there is no requirement for this to be the case.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For each attachment, the URI that identifies where the attached file might be acc" +
            "essed from. While it is anticipated that it will generally be of the form \"http:" +
            "//\" or \"ftp://\", there is no requirement for this to be the case.")]
        [System.Xml.Serialization.XmlAttributeAttribute("URI")]
        public string URI { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageAttachmentContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageAttachmentContent
    {
        
        /// <summary>
        /// <para>A description of the type of document attached. To be used when the type is 'Other'.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the type of document attached. To be used when the type is \'Othe" +
            "r\'.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The type of document included in the attachment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of document included in the attachment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public AttachmentTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContent
    {
        
        /// <summary>
        /// <para>The set of borrower- and broker-provided data for a single loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The set of borrower- and broker-provided data for a single loan application.")]
        [System.Xml.Serialization.XmlElementAttribute("Application")]
        public PackageContentApplication Application { get; set; }
        
        /// <summary>
        /// <para>An overview of the customers needs in requesting products from the financial institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An overview of the customers needs in requesting products from the financial inst" +
            "itution.")]
        [System.Xml.Serialization.XmlElementAttribute("NeedsAnalysis")]
        public PackageContentNeedsAnalysis NeedsAnalysis { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentStatementOfPosition> _statementOfPosition;
        
        /// <summary>
        /// <para>Details of a Statement of Financial Position.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of a Statement of Financial Position.")]
        [System.Xml.Serialization.XmlElementAttribute("StatementOfPosition")]
        public System.Collections.Generic.List<PackageContentStatementOfPosition> StatementOfPosition
        {
            get
            {
                return this._statementOfPosition;
            }
            set
            {
                this._statementOfPosition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StatementOfPosition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementOfPositionSpecified
        {
            get
            {
                return (this.StatementOfPosition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContent" /> class.</para>
        /// </summary>
        public PackageContent()
        {
            this._statementOfPosition = new System.Collections.Generic.List<PackageContentStatementOfPosition>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplication", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplication
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationAccountVariation> _accountVariation;
        
        /// <summary>
        /// <para>A request to vary an existing loan account. More than one request can be made on a single account, such as increase limit and add security. Not all requests are compatible, for instance increase limit and decrease limit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to vary an existing loan account. More than one request can be made on " +
            "a single account, such as increase limit and add security. Not all requests are " +
            "compatible, for instance increase limit and decrease limit.")]
        [System.Xml.Serialization.XmlElementAttribute("AccountVariation")]
        public System.Collections.Generic.List<PackageContentApplicationAccountVariation> AccountVariation
        {
            get
            {
                return this._accountVariation;
            }
            set
            {
                this._accountVariation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccountVariation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountVariationSpecified
        {
            get
            {
                return (this.AccountVariation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplication" /> class.</para>
        /// </summary>
        public PackageContentApplication()
        {
            this._accountVariation = new System.Collections.Generic.List<PackageContentApplicationAccountVariation>();
            this._address = new System.Collections.Generic.List<AddressType>();
            this._companyApplicant = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicant>();
            this._companyFinancials = new System.Collections.Generic.List<PackageContentApplicationCompanyFinancials>();
            this._contributionFunds = new System.Collections.Generic.List<PackageContentApplicationContributionFunds>();
            this._depositAccountDetails = new System.Collections.Generic.List<PackageContentApplicationDepositAccountDetails>();
            this._detailedComment = new System.Collections.Generic.List<PackageContentApplicationDetailedComment>();
            this._household = new System.Collections.Generic.List<PackageContentApplicationHousehold>();
            this._insurance = new System.Collections.Generic.List<PackageContentApplicationInsurance>();
            this._lendingGuarantee = new System.Collections.Generic.List<PackageContentApplicationLendingGuarantee>();
            this._liability = new System.Collections.Generic.List<PackageContentApplicationLiability>();
            this._loanDetails = new System.Collections.Generic.List<PackageContentApplicationLoanDetails>();
            this._masterAgreement = new System.Collections.Generic.List<PackageContentApplicationMasterAgreement>();
            this._nonRealEstateAsset = new System.Collections.Generic.List<PackageContentApplicationNonRealEstateAsset>();
            this._otherExpense = new System.Collections.Generic.List<PackageContentApplicationOtherExpense>();
            this._otherIncome = new System.Collections.Generic.List<PackageContentApplicationOtherIncome>();
            this._personApplicant = new System.Collections.Generic.List<PackageContentApplicationPersonApplicant>();
            this._productSet = new System.Collections.Generic.List<PackageContentApplicationProductSet>();
            this._realEstateAsset = new System.Collections.Generic.List<PackageContentApplicationRealEstateAsset>();
            this._relatedCompany = new System.Collections.Generic.List<PackageContentApplicationRelatedCompany>();
            this._relatedPerson = new System.Collections.Generic.List<PackageContentApplicationRelatedPerson>();
            this._trustApplicant = new System.Collections.Generic.List<PackageContentApplicationTrustApplicant>();
            this._vendorTaxInvoice = new System.Collections.Generic.List<VendorTaxInvoiceType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<AddressType> _address;
        
        /// <summary>
        /// <para>Any real or postal address, used by reference</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Any real or postal address, used by reference")]
        [System.Xml.Serialization.XmlElementAttribute("Address")]
        public System.Collections.Generic.List<AddressType> Address
        {
            get
            {
                return this._address;
            }
            set
            {
                this._address = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Address collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddressSpecified
        {
            get
            {
                return (this.Address.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures information about the organisation that the loan application is being submitted to. Typically, the business channel is the lender. For an application being submitted to a mortgage manager, the mortgage manager is the business channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the organisation that the loan application is being su" +
            "bmitted to. Typically, the business channel is the lender. For an application be" +
            "ing submitted to a mortgage manager, the mortgage manager is the business channe" +
            "l.")]
        [System.Xml.Serialization.XmlElementAttribute("BusinessChannel")]
        public PackageContentApplicationBusinessChannel BusinessChannel { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicant> _companyApplicant;
        
        /// <summary>
        /// <para>Contains applicant details for business enterprises (including company, sole trader, partnership or government department) being either a borrower or a guarantor, and may be acting for a Trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains applicant details for business enterprises (including company, sole trad" +
            "er, partnership or government department) being either a borrower or a guarantor" +
            ", and may be acting for a Trust.")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyApplicant")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicant> CompanyApplicant
        {
            get
            {
                return this._companyApplicant;
            }
            set
            {
                this._companyApplicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyApplicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyApplicantSpecified
        {
            get
            {
                return (this.CompanyApplicant.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyFinancials> _companyFinancials;
        
        /// <summary>
        /// <para>Contain element for company or self-employed financial report data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contain element for company or self-employed financial report data")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyFinancials")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyFinancials> CompanyFinancials
        {
            get
            {
                return this._companyFinancials;
            }
            set
            {
                this._companyFinancials = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyFinancials collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFinancialsSpecified
        {
            get
            {
                return (this.CompanyFinancials.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationContributionFunds> _contributionFunds;
        
        /// <summary>
        /// <para>Details the amounts and sources of funds that will be contributed by the applicant to complete the contemplated transaction, generally a property purchase but may also be a refinance or other purchase. There may be 0 or more contributions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details the amounts and sources of funds that will be contributed by the applican" +
            "t to complete the contemplated transaction, generally a property purchase but ma" +
            "y also be a refinance or other purchase. There may be 0 or more contributions.")]
        [System.Xml.Serialization.XmlElementAttribute("ContributionFunds")]
        public System.Collections.Generic.List<PackageContentApplicationContributionFunds> ContributionFunds
        {
            get
            {
                return this._contributionFunds;
            }
            set
            {
                this._contributionFunds = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContributionFunds collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContributionFundsSpecified
        {
            get
            {
                return (this.ContributionFunds.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures declarations such as Broker Declarations that apply to the whole application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures declarations such as Broker Declarations that apply to the whole applica" +
            "tion.")]
        [System.Xml.Serialization.XmlElementAttribute("Declarations")]
        public PackageContentApplicationDeclarations Declarations { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationDepositAccountDetails> _depositAccountDetails;
        
        /// <summary>
        /// <para>Carries the details of a deposit account being opened.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carries the details of a deposit account being opened.")]
        [System.Xml.Serialization.XmlElementAttribute("DepositAccountDetails")]
        public System.Collections.Generic.List<PackageContentApplicationDepositAccountDetails> DepositAccountDetails
        {
            get
            {
                return this._depositAccountDetails;
            }
            set
            {
                this._depositAccountDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DepositAccountDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositAccountDetailsSpecified
        {
            get
            {
                return (this.DepositAccountDetails.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationDetailedComment> _detailedComment;
        
        /// <summary>
        /// <para>Complex element containing comments related to any section of the application. By default, absent any reference to a Context, comments relate to the Application overall.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Complex element containing comments related to any section of the application. By" +
            " default, absent any reference to a Context, comments relate to the Application " +
            "overall.")]
        [System.Xml.Serialization.XmlElementAttribute("DetailedComment")]
        public System.Collections.Generic.List<PackageContentApplicationDetailedComment> DetailedComment
        {
            get
            {
                return this._detailedComment;
            }
            set
            {
                this._detailedComment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DetailedComment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailedCommentSpecified
        {
            get
            {
                return (this.DetailedComment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures information about the organisation that provides funding.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the organisation that provides funding.")]
        [System.Xml.Serialization.XmlElementAttribute("Funder")]
        public PackageContentApplicationFunder Funder { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationHousehold> _household;
        
        /// <summary>
        /// <para>A household to which one or more person applicants belong, used in relation to the calculation of household living expenses</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A household to which one or more person applicants belong, used in relation to th" +
            "e calculation of household living expenses")]
        [System.Xml.Serialization.XmlElementAttribute("Household")]
        public System.Collections.Generic.List<PackageContentApplicationHousehold> Household
        {
            get
            {
                return this._household;
            }
            set
            {
                this._household = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Household collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HouseholdSpecified
        {
            get
            {
                return (this.Household.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationInsurance> _insurance;
        
        /// <summary>
        /// <para>Central insurance element capturing insurance details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Central insurance element capturing insurance details.")]
        [System.Xml.Serialization.XmlElementAttribute("Insurance")]
        public System.Collections.Generic.List<PackageContentApplicationInsurance> Insurance
        {
            get
            {
                return this._insurance;
            }
            set
            {
                this._insurance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Insurance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceSpecified
        {
            get
            {
                return (this.Insurance.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLendingGuarantee> _lendingGuarantee;
        
        /// <summary>
        /// <para>A loan guarantee offered by one or more guarantors against one or more loan accounts, with or without security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A loan guarantee offered by one or more guarantors against one or more loan accou" +
            "nts, with or without security.")]
        [System.Xml.Serialization.XmlElementAttribute("LendingGuarantee")]
        public System.Collections.Generic.List<PackageContentApplicationLendingGuarantee> LendingGuarantee
        {
            get
            {
                return this._lendingGuarantee;
            }
            set
            {
                this._lendingGuarantee = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LendingGuarantee collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LendingGuaranteeSpecified
        {
            get
            {
                return (this.LendingGuarantee.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiability> _liability;
        
        /// <summary>
        /// <para>A liability item is a debt owed to a creditor or lender - such as a loan, line of credit, or tax bill.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A liability item is a debt owed to a creditor or lender - such as a loan, line of" +
            " credit, or tax bill.")]
        [System.Xml.Serialization.XmlElementAttribute("Liability")]
        public System.Collections.Generic.List<PackageContentApplicationLiability> Liability
        {
            get
            {
                return this._liability;
            }
            set
            {
                this._liability = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Liability collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiabilitySpecified
        {
            get
            {
                return (this.Liability.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetails> _loanDetails;
        
        /// <summary>
        /// <para>Information about an individual credit facility that is being applied for including but not limited to: term loans; revolving credit facilities; overdrafts; credit cards; equipment finance; commercial bills; margin loans; personal loans; and reverse mortgages.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Information about an individual credit facility that is being applied for including but not limited to: term loans; revolving credit facilities; overdrafts; credit cards; equipment finance; commercial bills; margin loans; personal loans; and reverse mortgages.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanDetails")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetails> LoanDetails
        {
            get
            {
                return this._loanDetails;
            }
            set
            {
                this._loanDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LoanDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanDetailsSpecified
        {
            get
            {
                return (this.LoanDetails.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationMasterAgreement> _masterAgreement;
        
        /// <summary>
        /// <para>A Master Agreement finance facility is a contractual document under which supplementary agreements for loans can be executed, and existing loans can be brought in.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Master Agreement finance facility is a contractual document under which supplem" +
            "entary agreements for loans can be executed, and existing loans can be brought i" +
            "n.")]
        [System.Xml.Serialization.XmlElementAttribute("MasterAgreement")]
        public System.Collections.Generic.List<PackageContentApplicationMasterAgreement> MasterAgreement
        {
            get
            {
                return this._masterAgreement;
            }
            set
            {
                this._masterAgreement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MasterAgreement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MasterAgreementSpecified
        {
            get
            {
                return (this.MasterAgreement.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationNonRealEstateAsset> _nonRealEstateAsset;
        
        /// <summary>
        /// <para>Contains details about an asset item that is not real estate, such as a term deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details about an asset item that is not real estate, such as a term depo" +
            "sit account.")]
        [System.Xml.Serialization.XmlElementAttribute("NonRealEstateAsset")]
        public System.Collections.Generic.List<PackageContentApplicationNonRealEstateAsset> NonRealEstateAsset
        {
            get
            {
                return this._nonRealEstateAsset;
            }
            set
            {
                this._nonRealEstateAsset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NonRealEstateAsset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRealEstateAssetSpecified
        {
            get
            {
                return (this.NonRealEstateAsset.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationOtherExpense> _otherExpense;
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. An expense item is an outflow of money to another person or group to pay for an item or service, or for a category of costs.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. An expen" +
            "se item is an outflow of money to another person or group to pay for an item or " +
            "service, or for a category of costs.")]
        [System.Xml.Serialization.XmlElementAttribute("OtherExpense")]
        public System.Collections.Generic.List<PackageContentApplicationOtherExpense> OtherExpense
        {
            get
            {
                return this._otherExpense;
            }
            set
            {
                this._otherExpense = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherExpense collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherExpenseSpecified
        {
            get
            {
                return (this.OtherExpense.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationOtherIncome> _otherIncome;
        
        /// <summary>
        /// <para>Captures information about income earned by the applicants that is not captured under the Employment element for Person Applicants or Income elements for Company and Trust Applicants</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about income earned by the applicants that is not captured u" +
            "nder the Employment element for Person Applicants or Income elements for Company" +
            " and Trust Applicants")]
        [System.Xml.Serialization.XmlElementAttribute("OtherIncome")]
        public System.Collections.Generic.List<PackageContentApplicationOtherIncome> OtherIncome
        {
            get
            {
                return this._otherIncome;
            }
            set
            {
                this._otherIncome = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherIncome collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherIncomeSpecified
        {
            get
            {
                return (this.OtherIncome.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Container element for the user input information applying to the entire application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the user input information applying to the entire applicati" +
            "on.")]
        [System.Xml.Serialization.XmlElementAttribute("Overview")]
        public PackageContentApplicationOverview Overview { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicant> _personApplicant;
        
        /// <summary>
        /// <para>Contains applicant details where the applicant is a person, being either a borrower or a guarantor, and may be acting for a Trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains applicant details where the applicant is a person, being either a borrow" +
            "er or a guarantor, and may be acting for a Trust.")]
        [System.Xml.Serialization.XmlElementAttribute("PersonApplicant")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicant> PersonApplicant
        {
            get
            {
                return this._personApplicant;
            }
            set
            {
                this._personApplicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PersonApplicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonApplicantSpecified
        {
            get
            {
                return (this.PersonApplicant.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationProductSet> _productSet;
        
        /// <summary>
        /// <para>A set of products.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A set of products.")]
        [System.Xml.Serialization.XmlElementAttribute("ProductSet")]
        public System.Collections.Generic.List<PackageContentApplicationProductSet> ProductSet
        {
            get
            {
                return this._productSet;
            }
            set
            {
                this._productSet = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProductSet collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductSetSpecified
        {
            get
            {
                return (this.ProductSet.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAsset> _realEstateAsset;
        
        /// <summary>
        /// <para>Contains information about an asset which is real property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about an asset which is real property.")]
        [System.Xml.Serialization.XmlElementAttribute("RealEstateAsset")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAsset> RealEstateAsset
        {
            get
            {
                return this._realEstateAsset;
            }
            set
            {
                this._realEstateAsset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RealEstateAsset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealEstateAssetSpecified
        {
            get
            {
                return (this.RealEstateAsset.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedCompany> _relatedCompany;
        
        /// <summary>
        /// <para>A business enterprise (including company, sole trader, partnership or government department) that is not an applicant but has a role in some aspect of the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A business enterprise (including company, sole trader, partnership or government " +
            "department) that is not an applicant but has a role in some aspect of the applic" +
            "ation.")]
        [System.Xml.Serialization.XmlElementAttribute("RelatedCompany")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedCompany> RelatedCompany
        {
            get
            {
                return this._relatedCompany;
            }
            set
            {
                this._relatedCompany = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelatedCompany collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelatedCompanySpecified
        {
            get
            {
                return (this.RelatedCompany.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedPerson> _relatedPerson;
        
        /// <summary>
        /// <para>A person that is not an applicant but has a role in some aspect of the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person that is not an applicant but has a role in some aspect of the applicatio" +
            "n.")]
        [System.Xml.Serialization.XmlElementAttribute("RelatedPerson")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedPerson> RelatedPerson
        {
            get
            {
                return this._relatedPerson;
            }
            set
            {
                this._relatedPerson = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelatedPerson collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelatedPersonSpecified
        {
            get
            {
                return (this.RelatedPerson.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures information about the sales channel through which the product is sold to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the sales channel through which the product is sold to" +
            " the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("SalesChannel")]
        public PackageContentApplicationSalesChannel SalesChannel { get; set; }
        
        /// <summary>
        /// <para>Application summary data.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application summary data.")]
        [System.Xml.Serialization.XmlElementAttribute("Summary")]
        public PackageContentApplicationSummary Summary { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicant> _trustApplicant;
        
        /// <summary>
        /// <para>Contains information about an applicant who is applying in their capacity as trustee of a trust. A trustee may be either a person or a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about an applicant who is applying in their capacity as trus" +
            "tee of a trust. A trustee may be either a person or a company.")]
        [System.Xml.Serialization.XmlElementAttribute("TrustApplicant")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicant> TrustApplicant
        {
            get
            {
                return this._trustApplicant;
            }
            set
            {
                this._trustApplicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrustApplicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrustApplicantSpecified
        {
            get
            {
                return (this.TrustApplicant.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VendorTaxInvoiceType> _vendorTaxInvoice;
        
        /// <summary>
        /// <para>Contains the details of a vendor tax invoice for assets purchased or being purchased as part of the transaction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the details of a vendor tax invoice for assets purchased or being purcha" +
            "sed as part of the transaction")]
        [System.Xml.Serialization.XmlElementAttribute("VendorTaxInvoice")]
        public System.Collections.Generic.List<VendorTaxInvoiceType> VendorTaxInvoice
        {
            get
            {
                return this._vendorTaxInvoice;
            }
            set
            {
                this._vendorTaxInvoice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VendorTaxInvoice collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VendorTaxInvoiceSpecified
        {
            get
            {
                return (this.VendorTaxInvoice.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether this file contains production or test data.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this file contains production or test data.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductionData")]
        public YesNoList ProductionData { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductionData property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductionDataSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariation
    {
        
        /// <summary>
        /// <para>A request to add a borrower to an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to add a borrower to an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("AddBorrower")]
        public PackageContentApplicationAccountVariationAddBorrower AddBorrower { get; set; }
        
        /// <summary>
        /// <para>A request to add a guarantor to an existing loan account, generally in conjunction with a limit increase and an additional security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to add a guarantor to an existing loan account, generally in conjunctio" +
            "n with a limit increase and an additional security")]
        [System.Xml.Serialization.XmlElementAttribute("AddGuarantor")]
        public PackageContentApplicationAccountVariationAddGuarantor AddGuarantor { get; set; }
        
        /// <summary>
        /// <para>A request to add a security to an existing loan account, generally in conjunction with a limit increase</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to add a security to an existing loan account, generally in conjunction" +
            " with a limit increase")]
        [System.Xml.Serialization.XmlElementAttribute("AddSecurity")]
        public PackageContentApplicationAccountVariationAddSecurity AddSecurity { get; set; }
        
        /// <summary>
        /// <para>A request to increase the balance on an existing loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to increase the balance on an existing loan account.")]
        [System.Xml.Serialization.XmlElementAttribute("BalanceIncrease")]
        public PackageContentApplicationAccountVariationBalanceIncrease BalanceIncrease { get; set; }
        
        /// <summary>
        /// <para>A request to change the term of the loan, either the fixed term, the total term, or both.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to change the term of the loan, either the fixed term, the total term, " +
            "or both.")]
        [System.Xml.Serialization.XmlElementAttribute("ChangeLoanTerm")]
        public PackageContentApplicationAccountVariationChangeLoanTerm ChangeLoanTerm { get; set; }
        
        /// <summary>
        /// <para>Request to change the amount of the periodic repayment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Request to change the amount of the periodic repayment")]
        [System.Xml.Serialization.XmlElementAttribute("ChangeRepaymentAmount")]
        public PackageContentApplicationAccountVariationChangeRepaymentAmount ChangeRepaymentAmount { get; set; }
        
        /// <summary>
        /// <para>Request to change the repayment frequency (e.g. monthly, fortnightly) for the existing account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Request to change the repayment frequency (e.g. monthly, fortnightly) for the exi" +
            "sting account")]
        [System.Xml.Serialization.XmlElementAttribute("ChangeRepaymentFrequency")]
        public PackageContentApplicationAccountVariationChangeRepaymentFrequency ChangeRepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para>Request to change the repayment type, e.g. interest only, principal and interest</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Request to change the repayment type, e.g. interest only, principal and interest")]
        [System.Xml.Serialization.XmlElementAttribute("ChangeRepaymentType")]
        public PackageContentApplicationAccountVariationChangeRepaymentType ChangeRepaymentType { get; set; }
        
        /// <summary>
        /// <para>A request to close the existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to close the existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("CloseAccount")]
        public PackageContentApplicationAccountVariationCloseAccount CloseAccount { get; set; }
        
        /// <summary>
        /// <para>A request for a discount on the existing loan account interest rate</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request for a discount on the existing loan account interest rate")]
        [System.Xml.Serialization.XmlElementAttribute("InterestRateDiscount")]
        public PackageContentApplicationAccountVariationInterestRateDiscount InterestRateDiscount { get; set; }
        
        /// <summary>
        /// <para>A request to increase the limit on an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to increase the limit on an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("LimitIncrease")]
        public PackageContentApplicationAccountVariationLimitIncrease LimitIncrease { get; set; }
        
        /// <summary>
        /// <para>A request to reduce the balance on an existing loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to reduce the balance on an existing loan account.")]
        [System.Xml.Serialization.XmlElementAttribute("ReduceBalance")]
        public PackageContentApplicationAccountVariationReduceBalance ReduceBalance { get; set; }
        
        /// <summary>
        /// <para>A request to reduce the limit of an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to reduce the limit of an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("ReduceLimit")]
        public PackageContentApplicationAccountVariationReduceLimit ReduceLimit { get; set; }
        
        /// <summary>
        /// <para>A request to release a guarantor from an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to release a guarantor from an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("ReleaseGuarantor")]
        public PackageContentApplicationAccountVariationReleaseGuarantor ReleaseGuarantor { get; set; }
        
        /// <summary>
        /// <para>A request to release a security from an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to release a security from an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("ReleaseSecurity")]
        public PackageContentApplicationAccountVariationReleaseSecurity ReleaseSecurity { get; set; }
        
        /// <summary>
        /// <para>A request to remove a borrower from an existing loan account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to remove a borrower from an existing loan account")]
        [System.Xml.Serialization.XmlElementAttribute("RemoveBorrower")]
        public PackageContentApplicationAccountVariationRemoveBorrower RemoveBorrower { get; set; }
        
        /// <summary>
        /// <para>Changing a loan from single loan product to two or more products, generally within the same approved limit</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Changing a loan from single loan product to two or more products, generally withi" +
            "n the same approved limit")]
        [System.Xml.Serialization.XmlElementAttribute("SplitAccount")]
        public PackageContentApplicationAccountVariationSplitAccount SplitAccount { get; set; }
        
        /// <summary>
        /// <para>A request to switch an existing loan account to a new product</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to switch an existing loan account to a new product")]
        [System.Xml.Serialization.XmlElementAttribute("SwitchProduct")]
        public PackageContentApplicationAccountVariationSwitchProduct SwitchProduct { get; set; }
        
        /// <summary>
        /// <para>A request to change details, such as contact details, for a party on the account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A request to change details, such as contact details, for a party on the account")]
        [System.Xml.Serialization.XmlElementAttribute("UpdatePartyDetails")]
        public PackageContentApplicationAccountVariationUpdatePartyDetails UpdatePartyDetails { get; set; }
        
        /// <summary>
        /// <para>The order of this account variation within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this account variation within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate the type of variation being specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate the type of variation being specified")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public VariationTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A financial institution's specific description that further describes the type of account variation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A financial institution\'s specific description that further describes the type of" +
            " account variation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("VariationDescription")]
        public string VariationDescription { get; set; }
        
        /// <summary>
        /// <para>The existing loan account (i.e. liability) that is being varied.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The existing loan account (i.e. liability) that is being varied.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_AccountToVary")]
        public string X_AccountToVary { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the loan account after it has been varied (a Loan Details element).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the loan account after it has been varied (a Loan Details el" +
            "ement).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PostVariationAccount")]
        public string X_PostVariationAccount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationAddBorrower", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationAddBorrower
    {
        
        /// <summary>
        /// <para>The specific uniquely identifiable borrower to add to an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable borrower to add to an existing loan account")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Borrower")]
        public string X_Borrower { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationAddGuarantor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationAddGuarantor
    {
        
        /// <summary>
        /// <para>The specific uniquely identifiable guarantor to add to an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable guarantor to add to an existing loan account")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Guarantor")]
        public string X_Guarantor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationAddSecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationAddSecurity
    {
        
        /// <summary>
        /// <para>The date that the security is to be added.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the security is to be added.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The specific uniquely identifiable security to add to an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable security to add to an existing loan account")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationBalanceIncrease", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationBalanceIncrease
    {
        
        /// <summary>
        /// <para>The date on which the balance is to be increased.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the balance is to be increased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount by which the balance is to be increased.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount by which the balance is to be increased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncreaseAmount")]
        public decimal IncreaseAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncreaseAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncreaseAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount to which the balance is to be increased.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount to which the balance is to be increased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewBalance")]
        public decimal NewBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewBalanceSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationChangeLoanTerm", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationChangeLoanTerm
    {
        
        /// <summary>
        /// <para>Date from which the loan term is to be changed</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date from which the loan term is to be changed")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The number of months for the new fixed rate term, if the fixed rate term can be changed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of months for the new fixed rate term, if the fixed rate term can be c" +
            "hanged")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewFixedLoanTerm")]
        public string NewFixedLoanTerm { get; set; }
        
        /// <summary>
        /// <para>The number of months for the total term of the loan, from the action date</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of months for the total term of the loan, from the action date")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewTotalLoanTerm")]
        public string NewTotalLoanTerm { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationChangeRepaymentAmount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationChangeRepaymentAmount
    {
        
        /// <summary>
        /// <para>The requested periodic repayment amount. It will be up to the lender to determine whether the repayment funds are all applied against the principal or whether some goes into redraw.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The requested periodic repayment amount. It will be up to the lender to determine" +
            " whether the repayment funds are all applied against the principal or whether so" +
            "me goes into redraw.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentAmount")]
        public decimal RepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationChangeRepaymentFrequency", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationChangeRepaymentFrequency
    {
        
        /// <summary>
        /// <para>The requested repayment frequency (e.g. monthly, fortnightly)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The requested repayment frequency (e.g. monthly, fortnightly)")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentFrequency")]
        public FrequencyFullList RepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentFrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationChangeRepaymentType", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationChangeRepaymentType
    {
        
        /// <summary>
        /// <para>The requested repayment type, e.g. interest only, principal and interest</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The requested repayment type, e.g. interest only, principal and interest")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentType")]
        public PaymentTypeList RepaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationCloseAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationCloseAccount
    {
        
        /// <summary>
        /// <para>If a card is attached to the account, should the card account also be terminated and the card destroyed</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If a card is attached to the account, should the card account also be terminated " +
            "and the card destroyed")]
        [System.Xml.Serialization.XmlAttributeAttribute("DestroyCard")]
        public YesNoList DestroyCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DestroyCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DestroyCardSpecified { get; set; }
        
        /// <summary>
        /// <para>An estimate of the amount required to be transferred to clear the account balance and exit fees</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An estimate of the amount required to be transferred to clear the account balance" +
            " and exit fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("PayoutAmount")]
        public decimal PayoutAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayoutAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayoutAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationInterestRateDiscount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationInterestRateDiscount
    {
        
        /// <summary>
        /// <para>The discount being requested, as a delta from the base rate for the product</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The discount being requested, as a delta from the base rate for the product")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountRate")]
        public decimal DiscountRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountRateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationLimitIncrease", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationLimitIncrease
    {
        
        /// <summary>
        /// <para>The date on which the limit is to be increased</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the limit is to be increased")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount that the credit limit is to be increased by</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount that the credit limit is to be increased by")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncreaseAmount")]
        public decimal IncreaseAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncreaseAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncreaseAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount that the credit limit is to be increased to</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount that the credit limit is to be increased to")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewLimit")]
        public decimal NewLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewLimitSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationReduceBalance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationReduceBalance
    {
        
        /// <summary>
        /// <para>The date on which the balance is to be reduced.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the balance is to be reduced.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount to which the balance is to be reduced.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount to which the balance is to be reduced.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewBalance")]
        public decimal NewBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount by which the balance is to be decreased.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount by which the balance is to be decreased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ReductionAmount")]
        public decimal ReductionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReductionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReductionAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationReduceLimit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationReduceLimit
    {
        
        /// <summary>
        /// <para>The amount to reduce the existing account limit by. For example to reduce a $50,000 line of credit to $40,000, the Limit Reduction would be $10,000</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount to reduce the existing account limit by. For example to reduce a $50,0" +
            "00 line of credit to $40,000, the Limit Reduction would be $10,000")]
        [System.Xml.Serialization.XmlAttributeAttribute("LimitReduction")]
        public decimal LimitReduction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitReduction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitReductionSpecified { get; set; }
        
        /// <summary>
        /// <para>The new (reduced) limit for the loan account</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The new (reduced) limit for the loan account")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewLimit")]
        public decimal NewLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewLimitSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationReleaseGuarantor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationReleaseGuarantor
    {
        
        /// <summary>
        /// <para>The specific uniquely identifiable guarantor to remove from an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable guarantor to remove from an existing loan acco" +
            "unt")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Guarantor")]
        public string X_Guarantor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationReleaseSecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationReleaseSecurity
    {
        
        /// <summary>
        /// <para>The date that the security is to be released.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the security is to be released.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A reason for the request to release the security</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reason for the request to release the security")]
        [System.Xml.Serialization.XmlAttributeAttribute("Reason")]
        public ReleaseSecurityReasonList Reason { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reason property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReasonSpecified { get; set; }
        
        /// <summary>
        /// <para>The specific uniquely identifiable security to remove from an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable security to remove from an existing loan accou" +
            "nt")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationRemoveBorrower", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationRemoveBorrower
    {
        
        /// <summary>
        /// <para>The specific uniquely identifiable borrower to remove from an existing loan account</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable borrower to remove from an existing loan accou" +
            "nt")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Borrower")]
        public string X_Borrower { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationSplitAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationSplitAccount
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationAccountVariationSplitAccountAccount> _account;
        
        /// <summary>
        /// <para>The set of new account details for each split, including (as required) information such as loan product, loan term, loan amount, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The set of new account details for each split, including (as required) informatio" +
            "n such as loan product, loan term, loan amount, etc.")]
        [System.Xml.Serialization.XmlElementAttribute("Account")]
        public System.Collections.Generic.List<PackageContentApplicationAccountVariationSplitAccountAccount> Account
        {
            get
            {
                return this._account;
            }
            set
            {
                this._account = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Account collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountSpecified
        {
            get
            {
                return (this.Account.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationAccountVariationSplitAccount" /> class.</para>
        /// </summary>
        public PackageContentApplicationAccountVariationSplitAccount()
        {
            this._account = new System.Collections.Generic.List<PackageContentApplicationAccountVariationSplitAccountAccount>();
        }
        
        /// <summary>
        /// <para>The date that the account is to be split</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the account is to be split")]
        [System.Xml.Serialization.XmlAttributeAttribute("ActionDate", DataType="date")]
        public System.DateTime ActionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationSplitAccountAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationSplitAccountAccount
    {
        
        /// <summary>
        /// <para>The set of new account details for each split, including (as required) information such as loan product, loan term, loan amount, etc.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The set of new account details for each split, including (as required) informatio" +
            "n such as loan product, loan term, loan amount, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_AccountDetails")]
        public string X_AccountDetails { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationSwitchProduct", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationSwitchProduct
    {
        
        /// <summary>
        /// <para>The basis for the determination of the amount for the new loan, either the credit limit of the original product or on the outstanding balance of the original product.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The basis for the determination of the amount for the new loan, either the credit" +
            " limit of the original product or on the outstanding balance of the original pro" +
            "duct.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BasisForAmountRequested")]
        public BasisForAmountRequestedList BasisForAmountRequested { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BasisForAmountRequested property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasisForAmountRequestedSpecified { get; set; }
        
        /// <summary>
        /// <para>The set of loan product details for the new product, including (as required) information such as loan product, repayment type, loan term etc.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The set of loan product details for the new product, including (as required) info" +
            "rmation such as loan product, repayment type, loan term etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ProductDetails")]
        public string X_ProductDetails { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationAccountVariationUpdatePartyDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationAccountVariationUpdatePartyDetails
    {
        
        /// <summary>
        /// <para>The specific uniquely identifiable party whose details are being changed</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific uniquely identifiable party whose details are being changed")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_LoanParty")]
        public string X_LoanParty { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationBusinessChannel", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationBusinessChannel
    {
        
        /// <summary>
        /// <para>Contains contact details for the business channel</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the business channel")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationBusinessChannelContact Contact { get; set; }
        
        /// <summary>
        /// <para>The company name of the lender or mortgage manager.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company name of the lender or mortgage manager.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>Captures a unique identifier that has been assigned by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a unique identifier that has been assigned by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderID")]
        public string LenderID { get; set; }
        
        /// <summary>
        /// <para>The lenders NZBN.</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The lenders NZBN.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>Captures an alternative identifier by which the business channel is known, typically issued by the originating organisation rather than the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an alternative identifier by which the business channel is known, typica" +
            "lly issued by the originating organisation rather than the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIdentifier")]
        public string OtherIdentifier { get; set; }
        
        /// <summary>
        /// <para>Type of organisation that is the recipient of the application, typically a type of lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of organisation that is the recipient of the application, typically a type o" +
            "f lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public BusinessChannelTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationBusinessChannelContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationBusinessChannelContact
    {
        
        /// <summary>
        /// <para>Contact person for the business channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contact person for the business channel.")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationBusinessChannelContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Contains a contact fax number for the business channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact fax number for the business channel.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Contains a contact phone number for the business channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact phone number for the business channel.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>Captures an email address for the distribution channel to which the loan application is being submitted.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an email address for the distribution channel to which the loan applicat" +
            "ion is being submitted.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>An internet address for web content associated with the business channel.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internet address for web content associated with the business channel.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address should capture the lender's address .</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address should capture the lender\'s address .")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationBusinessChannelContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationBusinessChannelContactContactPerson
    {
        
        /// <summary>
        /// <para>The email address of the contact person.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The email address of the contact person.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicant
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantAuthorisedSignatory> _authorisedSignatory;
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is an authorised signatory of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is an authorised signa" +
            "tory of the company.")]
        [System.Xml.Serialization.XmlElementAttribute("AuthorisedSignatory")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantAuthorisedSignatory> AuthorisedSignatory
        {
            get
            {
                return this._authorisedSignatory;
            }
            set
            {
                this._authorisedSignatory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AuthorisedSignatory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AuthorisedSignatorySpecified
        {
            get
            {
                return (this.AuthorisedSignatory.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationCompanyApplicant" /> class.</para>
        /// </summary>
        public PackageContentApplicationCompanyApplicant()
        {
            this._authorisedSignatory = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantAuthorisedSignatory>();
            this._beneficialOwner = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantBeneficialOwner>();
            this._creditHistory = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantCreditHistory>();
            this._director = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantDirector>();
            this._partner = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantPartner>();
            this._shareholder = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantShareholder>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantBeneficialOwner> _beneficialOwner;
        
        /// <summary>
        /// <para>A beneficial owner of the company. All beneficial owners of the company should be captured (even persons captured elsewhere as directors, shareholders, beneficiaries etc.)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A beneficial owner of the company. All beneficial owners of the company should be" +
            " captured (even persons captured elsewhere as directors, shareholders, beneficia" +
            "ries etc.)")]
        [System.Xml.Serialization.XmlElementAttribute("BeneficialOwner")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantBeneficialOwner> BeneficialOwner
        {
            get
            {
                return this._beneficialOwner;
            }
            set
            {
                this._beneficialOwner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeneficialOwner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeneficialOwnerSpecified
        {
            get
            {
                return (this.BeneficialOwner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains information about the business of the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the business of the company")]
        [System.Xml.Serialization.XmlElementAttribute("Business")]
        public PackageContentApplicationCompanyApplicantBusiness Business { get; set; }
        
        /// <summary>
        /// <para>Contains contact details for the company applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the company applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationCompanyApplicantContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantCreditHistory> _creditHistory;
        
        /// <summary>
        /// <para>Contains details of an applicant's credit history as provided both by credit reference bureaus and/or by the applicant themselves.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details of an applicant\'s credit history as provided both by credit refe" +
            "rence bureaus and/or by the applicant themselves.")]
        [System.Xml.Serialization.XmlElementAttribute("CreditHistory")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantCreditHistory> CreditHistory
        {
            get
            {
                return this._creditHistory;
            }
            set
            {
                this._creditHistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditHistory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditHistorySpecified
        {
            get
            {
                return (this.CreditHistory.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The amount of income declared by the company applicant for Lo Doc applications.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of income declared by the company applicant for Lo Doc applications.")]
        [System.Xml.Serialization.XmlElementAttribute("DeclaredIncome")]
        public PackageContentApplicationCompanyApplicantDeclaredIncome DeclaredIncome { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantDirector> _director;
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a director of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a director of the c" +
            "ompany.")]
        [System.Xml.Serialization.XmlElementAttribute("Director")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantDirector> Director
        {
            get
            {
                return this._director;
            }
            set
            {
                this._director = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Director collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectorSpecified
        {
            get
            {
                return (this.Director.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the applicant is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant is an existing customer of the lender being appli" +
            "ed to.")]
        [System.Xml.Serialization.XmlElementAttribute("ExistingCustomer")]
        public PackageContentApplicationCompanyApplicantExistingCustomer ExistingCustomer { get; set; }
        
        /// <summary>
        /// <para>Container element for the detailed financial analysis of the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the detailed financial analysis of the company")]
        [System.Xml.Serialization.XmlElementAttribute("FinancialAnalysis")]
        public PackageContentApplicationCompanyApplicantFinancialAnalysis FinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the previous financial year (immediately preceding the most recent full financial year), attributable to this applicant (for year = current year -2).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he previous financial year (immediately preceding the most recent full financial" +
            " year), attributable to this applicant (for year = current year -2).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomePrevious")]
        public PackageContentApplicationCompanyApplicantIncomePrevious IncomePrevious { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the prior financial year (two years prior to the most recent full financial year), attributable to this applicant (for year = current year -3).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he prior financial year (two years prior to the most recent full financial year)" +
            ", attributable to this applicant (for year = current year -3).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomePrior")]
        public PackageContentApplicationCompanyApplicantIncomePrior IncomePrior { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the most recent full financial year, attributable to this applicant (year = current year -1).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he most recent full financial year, attributable to this applicant (year = curre" +
            "nt year -1).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomeRecent")]
        public PackageContentApplicationCompanyApplicantIncomeRecent IncomeRecent { get; set; }
        
        /// <summary>
        /// <para>Details of the current year to date share of the gross (pre-tax) income or income-related amounts, attributable to this applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the current year to date share of the gross (pre-tax) income or income" +
            "-related amounts, attributable to this applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("IncomeYearToDate")]
        public PackageContentApplicationCompanyApplicantIncomeYearToDate IncomeYearToDate { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantPartner> _partner;
        
        /// <summary>
        /// <para>Container element for details of the partners that constitute this partnership.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for details of the partners that constitute this partnership.")]
        [System.Xml.Serialization.XmlElementAttribute("Partner")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantPartner> Partner
        {
            get
            {
                return this._partner;
            }
            set
            {
                this._partner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Partner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartnerSpecified
        {
            get
            {
                return (this.Partner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures information about any significant changes in circumstances that will adversely affect the applicants' ability to make contracted loan repayments; the nature of the change, and how they will collectively continue to make repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about any significant changes in circumstances that will adv" +
            "ersely affect the applicants\' ability to make contracted loan repayments; the na" +
            "ture of the change, and how they will collectively continue to make repayments.")]
        [System.Xml.Serialization.XmlElementAttribute("ResponsibleLending")]
        public ResponsibleLendingType ResponsibleLending { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantShareholder> _shareholder;
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a shareholder of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a shareholder of th" +
            "e company.")]
        [System.Xml.Serialization.XmlElementAttribute("Shareholder")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantShareholder> Shareholder
        {
            get
            {
                return this._shareholder;
            }
            set
            {
                this._shareholder = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shareholder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShareholderSpecified
        {
            get
            {
                return (this.Shareholder.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether this Party will allow their details to be used for direct marketing purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this Party will allow their details to be used for direct marke" +
            "ting purposes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowDirectMarketing")]
        public YesNoList AllowDirectMarketing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowDirectMarketing property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowDirectMarketingSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether this Party will allow their details to be disclosed to third parties affiliated with this lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this Party will allow their details to be disclosed to third pa" +
            "rties affiliated with this lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowThirdPartyDisclosure")]
        public YesNoList AllowThirdPartyDisclosure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowThirdPartyDisclosure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowThirdPartyDisclosureSpecified { get; set; }
        
        /// <summary>
        /// <para>Whether the loan party is a borrower or guarantor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whether the loan party is a borrower or guarantor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicantType")]
        public ApplicantTypeList ApplicantType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicantType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The business name or trading name of the company should be captured.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The business name or trading name of the company should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessName")]
        public string BusinessName { get; set; }
        
        /// <summary>
        /// <para>Indicates if the Business Name is the same as the Company Name.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the Business Name is the same as the Company Name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessNameSameAsCompanyName")]
        public YesNoList BusinessNameSameAsCompanyName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessNameSameAsCompanyName property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusinessNameSameAsCompanyNameSpecified { get; set; }
        
        /// <summary>
        /// <para>Legal structure of this business (only populated where this applicant is a Business Enterprise). Trust is not a valid entry as trust entity applicants need to be entered as a Trust Applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal structure of this business (only populated where this applicant is a Busine" +
            "ss Enterprise). Trust is not a valid entry as trust entity applicants need to be" +
            " entered as a Trust Applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessStructure")]
        public BusinessStructureExcludingTrustList BusinessStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusinessStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>The legal name of the company should be captured.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The legal name of the company should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>Captures the registered Company Number of the company applicant</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the registered Company Number of the company applicant")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyNumber")]
        public string CompanyNumber { get; set; }
        
        /// <summary>
        /// <para>Summarises whether there are any issues indicated the credit history of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Summarises whether there are any issues indicated the credit history of the appli" +
            "cant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditStatus")]
        public CreditStatusList CreditStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the date when the company was registered.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the date when the company was registered.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateRegistered", DataType="date")]
        public System.DateTime DateRegistered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateRegistered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateRegisteredSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains the name of the stock exchange that a public company is listed on. Is only relevant where company is of a publicly listed type.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the name of the stock exchange that a public company is listed on. Is on" +
            "ly relevant where company is of a publicly listed type.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExchangeListedOn")]
        public string ExchangeListedOn { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the company status is exempt or non-exempt.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the company status is exempt or non-exempt.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExemptStatus")]
        public ExemptStatusList ExemptStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExemptStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExemptStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>If registered for GST, the date from which the company is registered</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If registered for GST, the date from which the company is registered")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTRegisteredDate", DataType="date")]
        public System.DateTime GSTRegisteredDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTRegisteredDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTRegisteredDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The IRD Number of this Company Applicant.</para>
        /// <para>The Inland Revenue Department Number (or IRD Number) is a unique identifier (consisting of 8 or 9 numbers) issued by the New Zealand Inland Revenue Department.</para>
        /// <para xml:lang="en">Pattern: \d{8,9}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The IRD Number of this Company Applicant.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{8,9}")]
        [System.Xml.Serialization.XmlAttributeAttribute("IRDNumber")]
        public string IRDNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant is an existing customer of the lender being appli" +
            "ed to.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsExistingCustomer")]
        public YesNoList IsExistingCustomer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsExistingCustomer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsExistingCustomerSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicate if the company is a holding company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicate if the company is a holding company")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsHoldingCompany")]
        public YesNoList IsHoldingCompany { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsHoldingCompany property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsHoldingCompanySpecified { get; set; }
        
        /// <summary>
        /// <para>The licence number of the company should be captured.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The licence number of the company should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LicenceNumber")]
        public string LicenceNumber { get; set; }
        
        /// <summary>
        /// <para>The number of directors that company has on its Board of Directors.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of directors that company has on its Board of Directors.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfDirectors")]
        public string NumberOfDirectors { get; set; }
        
        /// <summary>
        /// <para>The number of partners that make up the partnership.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of partners that make up the partnership.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfPartners")]
        public string NumberOfPartners { get; set; }
        
        /// <summary>
        /// <para>The approximate number of shareholders of the company</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The approximate number of shareholders of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfShareholders")]
        public string NumberOfShareholders { get; set; }
        
        /// <summary>
        /// <para>Captures the NZBN of the company applicant</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the NZBN of the company applicant")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the business number has been verified by a search</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the business number has been verified by a search")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBNVerified")]
        public YesNoList NZBNVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZBNVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZBNVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the lender should consider the party to be the primary applicant when processing the loan application. The significance of the primary applicant to the application varies from lender to lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the lender should consider the party to be the primary applican" +
            "t when processing the loan application. The significance of the primary applican" +
            "t to the application varies from lender to lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryApplicant")]
        public YesNoList PrimaryApplicant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryApplicant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryApplicantSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a company is a public authority like a council or government department.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a company is a public authority like a council or government de" +
            "partment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PublicAuthority")]
        public YesNoList PublicAuthority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublicAuthority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicAuthoritySpecified { get; set; }
        
        /// <summary>
        /// <para>A field to indicate what is the reason for requesting or obtaining the loan.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A field to indicate what is the reason for requesting or obtaining the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ReasonForObtainingLoan")]
        public string ReasonForObtainingLoan { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the company is registered for GST</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the company is registered for GST")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredForGST")]
        public YesNoList RegisteredForGST { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredForGST property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredForGSTSpecified { get; set; }
        
        /// <summary>
        /// <para>The company is registered to use Look Through Company (LTC) rules for an income year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company is registered to use Look Through Company (LTC) rules for an income y" +
            "ear.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredForLTC")]
        public YesNoList RegisteredForLTC { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredForLTC property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredForLTCSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the country where the company is registered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the country where the company is registered.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredInCountry")]
        public CountryCodeList RegisteredInCountry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredInCountry property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredInCountrySpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this company applicant within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this company applicant within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicate if the business has been trading more than 2 years</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicate if the business has been trading more than 2 years")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradingMoreThanTwoYears")]
        public YesNoList TradingMoreThanTwoYears { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradingMoreThanTwoYears property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradingMoreThanTwoYearsSpecified { get; set; }
        
        /// <summary>
        /// <para>The company structure, in the form of the type of incorporation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company structure, in the form of the type of incorporation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TypeOfIncorporation")]
        public TypeOfIncorporationList TypeOfIncorporation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TypeOfIncorporation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeOfIncorporationSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Link to the company's current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the company\'s current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
        
        /// <summary>
        /// <para>Link to the natural person that is the sole trader legally liable for this business enterprise.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the natural person that is the sole trader legally liable for this busine" +
            "ss enterprise.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_SoleTrader")]
        public string X_SoleTrader { get; set; }
        
        /// <summary>
        /// <para>Link to the related company that is providing a trade reference.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the related company that is providing a trade reference.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_TradeReference")]
        public string X_TradeReference { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantAuthorisedSignatory", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantAuthorisedSignatory
    {
        
        /// <summary>
        /// <para>The position or job title of the person that is a signatory</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The position or job title of the person that is a signatory")]
        [System.Xml.Serialization.XmlAttributeAttribute("PositionTitle")]
        public string PositionTitle { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is an authorised signatory of the company.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is an authorised signa" +
            "tory of the company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Signatory")]
        public string X_Signatory { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantBeneficialOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantBeneficialOwner
    {
        
        /// <summary>
        /// <para>A cross reference to the beneficial owner.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the beneficial owner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_BeneficialOwner")]
        public string X_BeneficialOwner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantBusiness", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantBusiness
    {
        
        /// <summary>
        /// <para>An industry code, from a customised list supported by the lender where the lender requires a code that is not within ANZSIC, BIC or GICS.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An industry code, from a customised list supported by the lender where the lender" +
            " requires a code that is not within ANZSIC, BIC or GICS.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomIndustryCode")]
        public string CustomIndustryCode { get; set; }
        
        /// <summary>
        /// <para>A Global Industry Classification Standard (GICS) code.</para>
        /// <para>A pattern to restrict a Global Industry Classification Standard (GICS) code to be either 2, 4, 6, or 8 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{2}(\d{2})?(\d{2})?(\d{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Global Industry Classification Standard (GICS) code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{2}(\\d{2})?(\\d{2})?(\\d{2})?")]
        [System.Xml.Serialization.XmlAttributeAttribute("GICSCode")]
        public string GICSCode { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the Industry Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the Industry Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Industry")]
        public string Industry { get; set; }
        
        /// <summary>
        /// <para>The four digit industry code, from the ANZSIC list of codes. If the nominal code is two or three digits, add '0's to the end to make the four digit code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The four digit industry code, from the ANZSIC list of codes. If the nominal code " +
            "is two or three digits, add \'0\'s to the end to make the four digit code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndustryCode")]
        public AnzsicIndustryCodeList IndustryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustryCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndustryCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether this business is a franchise or has a future intention to become a franchise.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether this business is a franchise or has a future intention t" +
            "o become a franchise.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsAFranchise")]
        public YesNoIntentList IsAFranchise { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsAFranchise property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAFranchiseSpecified { get; set; }
        
        /// <summary>
        /// <para>The main activity of the business</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The main activity of the business")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
        
        /// <summary>
        /// <para>A Business Industry Classification Code.</para>
        /// <para>A pattern to restrict a Business Industry Classification Code to be exactly 1 alphabetic character followed by 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: [A-z]\d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Business Industry Classification Code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-z]\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandBICCode")]
        public string NewZealandBICCode { get; set; }
        
        /// <summary>
        /// <para>The number of employees the company has in the business.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of employees the company has in the business.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfEmployees")]
        public string NumberOfEmployees { get; set; }
        
        /// <summary>
        /// <para>The number of locations where the business operates should be captured.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of locations where the business operates should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfLocations")]
        public string NumberOfLocations { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the company owns the premises from which it operates the business.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the company owns the premises from which it operates the busine" +
            "ss.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OwnPremises")]
        public YesNoList OwnPremises { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnPremises property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnPremisesSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the company started operating the business described.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the company started operating the business described.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The business is a trading entity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The business is a trading entity.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradingEntity")]
        public YesNoList TradingEntity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradingEntity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradingEntitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantContact
    {
        
        /// <summary>
        /// <para>A contact person at the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A contact person at the company")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationCompanyApplicantContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Fax number for the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fax number for the company")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Mobile phone number for the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile phone number for the company.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeMobile")]
        public PhoneType OfficeMobile { get; set; }
        
        /// <summary>
        /// <para>Office number for the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office number for the company")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>The duration the company applicant was registered at this address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration the company applicant was registered at this address.")]
        [System.Xml.Serialization.XmlElementAttribute("PreviousRegisteredAddressDuration")]
        public DurationType PreviousRegisteredAddressDuration { get; set; }
        
        /// <summary>
        /// <para>The duration of the company applicant trading at this address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the company applicant trading at this address.")]
        [System.Xml.Serialization.XmlElementAttribute("PrincipalTradingAddressDuration")]
        public DurationType PrincipalTradingAddressDuration { get; set; }
        
        /// <summary>
        /// <para>The duration the company applicant has been registered at this address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration the company applicant has been registered at this address.")]
        [System.Xml.Serialization.XmlElementAttribute("RegisteredAddressDuration")]
        public DurationType RegisteredAddressDuration { get; set; }
        
        /// <summary>
        /// <para>An email address for the company</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address for the company")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Specifies the preferred method for contacting this applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the preferred method for contacting this applicant")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredContact")]
        public PreferredContactCompanyList PreferredContact { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreferredContactSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the company applicant ended registration at this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the company applicant ended registration at this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreviousRegisteredAddressEndDate", DataType="date")]
        public System.DateTime PreviousRegisteredAddressEndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreviousRegisteredAddressEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreviousRegisteredAddressEndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the company applicant registered this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the company applicant registered this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreviousRegisteredAddressStartDate", DataType="date")]
        public System.DateTime PreviousRegisteredAddressStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreviousRegisteredAddressStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreviousRegisteredAddressStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the company applicant started trading at this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the company applicant started trading at this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrincipalTradingAddressStartDate", DataType="date")]
        public System.DateTime PrincipalTradingAddressStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalTradingAddressStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalTradingAddressStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the company applicant registered at this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the company applicant registered at this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredAddressStartDate", DataType="date")]
        public System.DateTime RegisteredAddressStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredAddressStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredAddressStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A URL for the company's public accessible web site.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A URL for the company\'s public accessible web site.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Mailing address of the company</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mailing address of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MailingAddress")]
        public string X_MailingAddress { get; set; }
        
        /// <summary>
        /// <para>Previous registered address of the company</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Previous registered address of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PreviousRegisteredAddress")]
        public string X_PreviousRegisteredAddress { get; set; }
        
        /// <summary>
        /// <para>The official address of the company applicant where business is carried out.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The official address of the company applicant where business is carried out.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PrincipalTradingAddress")]
        public string X_PrincipalTradingAddress { get; set; }
        
        /// <summary>
        /// <para>Registered address of the company</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered address of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_RegisteredAddress")]
        public string X_RegisteredAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantContactContactPerson
    {
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>The role or job position of the contact person</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The role or job position of the contact person")]
        [System.Xml.Serialization.XmlAttributeAttribute("Role")]
        public string Role { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
        
        /// <summary>
        /// <para>A contact person at the company</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A contact person at the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContactPerson")]
        public string X_ContactPerson { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantCreditHistory", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantCreditHistory
    {
        
        /// <summary>
        /// <para>A comment about the applicant's credit history, possibly in mitigation or explanation of credit issues.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A comment about the applicant\'s credit history, possibly in mitigation or explana" +
            "tion of credit issues.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the credit issue is current. Selecting "No" means the issue described is a past credit issue.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the credit issue is current. Selecting \"No\" means the is" +
            "sue described is a past credit issue.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsCurrent")]
        public YesNoList IsCurrent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsCurrent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCurrentSpecified { get; set; }
        
        /// <summary>
        /// <para>Describes the type of Credit Issues the applicant has experienced.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Describes the type of Credit Issues the applicant has experienced.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Issue")]
        public CreditHistoryIssueList Issue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Issue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Credit History Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Credit History Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantDeclaredIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantDeclaredIncome
    {
        
        /// <summary>
        /// <para>The amount of income declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of income declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeAmount")]
        public decimal IncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The net amount of income declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net amount of income declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetIncomeAmount")]
        public decimal NetIncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetIncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetIncomeAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantDirector", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantDirector
    {
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a director of the company.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a director of the c" +
            "ompany.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Director")]
        public string X_Director { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantExistingCustomer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantExistingCustomer
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FinancialAccountType> _accountNumber;
        
        /// <summary>
        /// <para>Account details for an account held that identifies the party as an existing customer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account details for an account held that identifies the party as an existing cust" +
            "omer")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public System.Collections.Generic.List<FinancialAccountType> AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccountNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountNumberSpecified
        {
            get
            {
                return (this.AccountNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationCompanyApplicantExistingCustomer" /> class.</para>
        /// </summary>
        public PackageContentApplicationCompanyApplicantExistingCustomer()
        {
            this._accountNumber = new System.Collections.Generic.List<FinancialAccountType>();
        }
        
        /// <summary>
        /// <para>A unique number assigned by the lender used to identify the customer</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique number assigned by the lender used to identify the customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerNumber")]
        public string CustomerNumber { get; set; }
        
        /// <summary>
        /// <para>The approximate year that the applicant became a customer</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The approximate year that the applicant became a customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSince")]
        public string CustomerSince { get; set; }
        
        /// <summary>
        /// <para>The month (if known) that the company applicant became a customer (only if the year is also provided in 'CustomerSince').</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The month (if known) that the company applicant became a customer (only if the ye" +
            "ar is also provided in \'CustomerSince\').")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSinceMonth")]
        public MmMonthList CustomerSinceMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomerSinceMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerSinceMonthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantFinancialAnalysis", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantFinancialAnalysis
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationCompanyApplicantFinancialAnalysisCompanyFinancials> _companyFinancials;
        
        /// <summary>
        /// <para>Container for the reference to the financial data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for the reference to the financial data")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyFinancials")]
        public System.Collections.Generic.List<PackageContentApplicationCompanyApplicantFinancialAnalysisCompanyFinancials> CompanyFinancials
        {
            get
            {
                return this._companyFinancials;
            }
            set
            {
                this._companyFinancials = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyFinancials collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFinancialsSpecified
        {
            get
            {
                return (this.CompanyFinancials.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationCompanyApplicantFinancialAnalysis" /> class.</para>
        /// </summary>
        public PackageContentApplicationCompanyApplicantFinancialAnalysis()
        {
            this._companyFinancials = new System.Collections.Generic.List<PackageContentApplicationCompanyApplicantFinancialAnalysisCompanyFinancials>();
        }
        
        /// <summary>
        /// <para>Total Principle and Interest payments on borrowings due to be paid in the next 12 months</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Principle and Interest payments on borrowings due to be paid in the next 12" +
            " months")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnnualPaymentOnCommitments")]
        public decimal AnnualPaymentOnCommitments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualPaymentOnCommitments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnualPaymentOnCommitmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a complete financial analysis will be provided electronically, or only a summary view</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a complete financial analysis will be provided electroni" +
            "cally, or only a summary view")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompleteFinancialAnalysis")]
        public YesNoList CompleteFinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompleteFinancialAnalysis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompleteFinancialAnalysisSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantFinancialAnalysisCompanyFinancials", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantFinancialAnalysisCompanyFinancials
    {
        
        /// <summary>
        /// <para>Reference to the element containing the financial analysis for each financial year, to be provided when Complete Financial Analysis = "Yes"</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the element containing the financial analysis for each financial yea" +
            "r, to be provided when Complete Financial Analysis = \"Yes\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_CompanyFinancials")]
        public string X_CompanyFinancials { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomePrevious", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomePrevious
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationCompanyApplicantIncomePreviousAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Captures the company profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitAfterTax")]
        public decimal CompanyProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the company net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company net profit/profit before tax for the specified financial yea" +
            "r.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitBeforeTax")]
        public decimal CompanyProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the company's accountant for the full previous financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the company\'s accountant for the full previous financial year. This shoul" +
            "d be populated when the accountant for the specified period is different to that" +
            " declared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomePreviousAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomePreviousAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to director that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to director that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToDirector")]
        public decimal PaymentToDirector { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToDirector property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToDirectorSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Superannuation Excess amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation Excess amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomePrior", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomePrior
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationCompanyApplicantIncomePriorAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Captures the company profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitAfterTax")]
        public decimal CompanyProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the company net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company net profit/profit before tax for the specified financial yea" +
            "r.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitBeforeTax")]
        public decimal CompanyProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the Prior year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the Prior year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the company's accountant for the full prior financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the company\'s accountant for the full prior financial year. This should b" +
            "e populated when the accountant for the specified period is different to that de" +
            "clared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomePriorAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomePriorAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to director that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to director that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToDirector")]
        public decimal PaymentToDirector { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToDirector property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToDirectorSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Superannuation Excess amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation Excess amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomeRecent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomeRecent
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationCompanyApplicantIncomeRecentAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Captures the company profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitAfterTax")]
        public decimal CompanyProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the company net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company net profit/profit before tax for the specified financial yea" +
            "r.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitBeforeTax")]
        public decimal CompanyProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodeCompanyList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the Income evidence been sighted b the loan writer or assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the Income evidence been sighted b the loan writer or assessor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application where the applicant is self-employed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application where the applicant is self-employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the company's accountant for the full most recent financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the company\'s accountant for the full most recent financial year. This sh" +
            "ould be populated when the accountant for the specified period is different to t" +
            "hat declared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomeRecentAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomeRecentAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to director that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to director that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToDirector")]
        public decimal PaymentToDirector { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToDirector property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToDirectorSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Superannuation Excess amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation Excess amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomeYearToDate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomeYearToDate
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationCompanyApplicantIncomeYearToDateAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Captures the company profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitAfterTax")]
        public decimal CompanyProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the company net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the company net profit/profit before tax for the specified financial yea" +
            "r.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyProfitBeforeTax")]
        public decimal CompanyProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantIncomeYearToDateAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantIncomeYearToDateAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to director that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to director that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToDirector")]
        public decimal PaymentToDirector { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToDirector property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToDirectorSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Superannuation Excess amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Superannuation Excess amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantPartner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantPartner
    {
        
        /// <summary>
        /// <para>The Partner Type describes whether the partner is a general or limited partner.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Partner Type describes whether the partner is a general or limited partner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PartnerType")]
        public PartnerTypeList PartnerType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartnerType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartnerTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The ownership percentage for the specified partner.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The ownership percentage for the specified partner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PercentOwned")]
        public decimal PercentOwned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentOwned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentOwnedSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a partner of the business. These can be a person, a business enterprise or a trust.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a partner of the bu" +
            "siness. These can be a person, a business enterprise or a trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Partner")]
        public string X_Partner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyApplicantShareholder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyApplicantShareholder
    {
        
        /// <summary>
        /// <para>The ownership percentage for the specified shareholder</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The ownership percentage for the specified shareholder")]
        [System.Xml.Serialization.XmlAttributeAttribute("PercentOwned")]
        public decimal PercentOwned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentOwned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentOwnedSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a shareholder of the company.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a shareholder of th" +
            "e company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Shareholder")]
        public string X_Shareholder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancials", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancials
    {
        
        /// <summary>
        /// <para>Balance sheet financials</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Balance sheet financials")]
        [System.Xml.Serialization.XmlElementAttribute("BalanceSheet")]
        public PackageContentApplicationCompanyFinancialsBalanceSheet BalanceSheet { get; set; }
        
        /// <summary>
        /// <para>Equity data from the financial report</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equity data from the financial report")]
        [System.Xml.Serialization.XmlElementAttribute("CurrentMarketData")]
        public PackageContentApplicationCompanyFinancialsCurrentMarketData CurrentMarketData { get; set; }
        
        /// <summary>
        /// <para>Profit and Loss (income and expense) financials</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Profit and Loss (income and expense) financials")]
        [System.Xml.Serialization.XmlElementAttribute("ProfitAndLoss")]
        public PackageContentApplicationCompanyFinancialsProfitAndLoss ProfitAndLoss { get; set; }
        
        /// <summary>
        /// <para>The end date of the financials, generally a financial year end</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date of the financials, generally a financial year end")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this company financials within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this company financials within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date of the financials, generally a financial year start</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date of the financials, generally a financial year start")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancialsBalanceSheet", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancialsBalanceSheet
    {
        
        /// <summary>
        /// <para>Asset items from the financial report</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset items from the financial report")]
        [System.Xml.Serialization.XmlElementAttribute("Assets")]
        public PackageContentApplicationCompanyFinancialsBalanceSheetAssets Assets { get; set; }
        
        /// <summary>
        /// <para>Liability items from the financial report</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability items from the financial report")]
        [System.Xml.Serialization.XmlElementAttribute("Liabilities")]
        public PackageContentApplicationCompanyFinancialsBalanceSheetLiabilities Liabilities { get; set; }
        
        /// <summary>
        /// <para>Equity on this balance sheet.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Equity on this balance sheet.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Equity")]
        public decimal Equity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Equity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquitySpecified { get; set; }
        
        /// <summary>
        /// <para>(Total Assets - Total Liabilities)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("(Total Assets - Total Liabilities)")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetAssets")]
        public decimal NetAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Paid Up Capital</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Paid Up Capital")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaidUpCapital")]
        public decimal PaidUpCapital { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaidUpCapital property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaidUpCapitalSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount of retained earnings</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of retained earnings")]
        [System.Xml.Serialization.XmlAttributeAttribute("RetainedEarnings")]
        public decimal RetainedEarnings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RetainedEarnings property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetainedEarningsSpecified { get; set; }
        
        /// <summary>
        /// <para>Shareholder Funds on this balance sheet.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Shareholder Funds on this balance sheet.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ShareholderFunds")]
        public decimal ShareholderFunds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShareholderFunds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShareholderFundsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancialsBalanceSheetAssets", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancialsBalanceSheetAssets
    {
        
        /// <summary>
        /// <para>Cash at bank</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cash at bank")]
        [System.Xml.Serialization.XmlAttributeAttribute("Cash")]
        public decimal Cash { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cash property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashSpecified { get; set; }
        
        /// <summary>
        /// <para>As listed in financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("As listed in financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("CashAndCashEquivalents")]
        public decimal CashAndCashEquivalents { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashAndCashEquivalents property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashAndCashEquivalentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Intangible assets, or goodwill</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Intangible assets, or goodwill")]
        [System.Xml.Serialization.XmlAttributeAttribute("Intangibles")]
        public decimal Intangibles { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Intangibles property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntangiblesSpecified { get; set; }
        
        /// <summary>
        /// <para>Value of inventory, being materials, work in progress, and stock on hand</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Value of inventory, being materials, work in progress, and stock on hand")]
        [System.Xml.Serialization.XmlAttributeAttribute("Inventory")]
        public decimal Inventory { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Inventory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InventorySpecified { get; set; }
        
        /// <summary>
        /// <para>(Total Assets - Intangibles)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("(Total Assets - Intangibles)")]
        [System.Xml.Serialization.XmlAttributeAttribute("TangibleAssets")]
        public decimal TangibleAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TangibleAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TangibleAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Total assets</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total assets")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalAssets")]
        public decimal TotalAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Total current assets</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total current assets")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalCurrentAssets")]
        public decimal TotalCurrentAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCurrentAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCurrentAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Value of the trade debtors (receivables)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Value of the trade debtors (receivables)")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradeDebtors")]
        public decimal TradeDebtors { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradeDebtors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeDebtorsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancialsBalanceSheetLiabilities", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancialsBalanceSheetLiabilities
    {
        
        /// <summary>
        /// <para>Total Borrowings</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Borrowings")]
        [System.Xml.Serialization.XmlAttributeAttribute("DebtAtNominalValue")]
        public decimal DebtAtNominalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtAtNominalValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebtAtNominalValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Total current liabilities</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total current liabilities")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalCurrentLiabilities")]
        public decimal TotalCurrentLiabilities { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCurrentLiabilities property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCurrentLiabilitiesSpecified { get; set; }
        
        /// <summary>
        /// <para>Total liabilities</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total liabilities")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalLiabilities")]
        public decimal TotalLiabilities { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLiabilities property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalLiabilitiesSpecified { get; set; }
        
        /// <summary>
        /// <para>Value of the trade creditors (accounts payable)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Value of the trade creditors (accounts payable)")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradeCreditors")]
        public decimal TradeCreditors { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradeCreditors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeCreditorsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancialsCurrentMarketData", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancialsCurrentMarketData
    {
        
        /// <summary>
        /// <para>Number of Common Shares x current Market Price</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of Common Shares x current Market Price")]
        [System.Xml.Serialization.XmlAttributeAttribute("ValueOfCommonEquity")]
        public decimal ValueOfCommonEquity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValueOfCommonEquity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueOfCommonEquitySpecified { get; set; }
        
        /// <summary>
        /// <para>Market Value of any shares held by a minority shareholder (if any)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Market Value of any shares held by a minority shareholder (if any)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ValueOfMinorityInterests")]
        public decimal ValueOfMinorityInterests { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValueOfMinorityInterests property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueOfMinorityInterestsSpecified { get; set; }
        
        /// <summary>
        /// <para>Number of Preference Shares x current Market Price</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of Preference Shares x current Market Price")]
        [System.Xml.Serialization.XmlAttributeAttribute("ValueOfPreferredEquity")]
        public decimal ValueOfPreferredEquity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValueOfPreferredEquity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueOfPreferredEquitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationCompanyFinancialsProfitAndLoss", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationCompanyFinancialsProfitAndLoss
    {
        
        /// <summary>
        /// <para>Amortisation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationExpense")]
        public decimal AmortisationExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Cost of goods sold on this profit and loss statement.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cost of goods sold on this profit and loss statement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CostOfGoodsSold")]
        public decimal CostOfGoodsSold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CostOfGoodsSold property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostOfGoodsSoldSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepreciationExpense")]
        public decimal DepreciationExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepreciationExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Earnings before interest and tax</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earnings before interest and tax")]
        [System.Xml.Serialization.XmlAttributeAttribute("EBIT")]
        public decimal EBIT { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EBIT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EBITSpecified { get; set; }
        
        /// <summary>
        /// <para>Earnings before interest, tax, depreciation and amortisation</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Earnings before interest, tax, depreciation and amortisation")]
        [System.Xml.Serialization.XmlAttributeAttribute("EBITDA")]
        public decimal EBITDA { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EBITDA property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EBITDASpecified { get; set; }
        
        /// <summary>
        /// <para>Sales less cost of goods sold (COGS)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sales less cost of goods sold (COGS)")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossProfit")]
        public decimal GrossProfit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossProfit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossProfitSpecified { get; set; }
        
        /// <summary>
        /// <para>Income tax paid or refunded for the financial year. A positive number indicates tax paid, a negative number indicates tax refunded.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income tax paid or refunded for the financial year. A positive number indicates t" +
            "ax paid, a negative number indicates tax refunded.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeTax")]
        public decimal IncomeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Total interest expense as listed in the financial report, including leasing expenses</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total interest expense as listed in the financial report, including leasing expen" +
            "ses")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestExpense")]
        public decimal InterestExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Net profit before tax</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Net profit before tax")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetProfitBeforeTax")]
        public decimal NetProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Operating expenses incurred in the everyday running of the company.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Operating expenses incurred in the everyday running of the company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OperatingExpenses")]
        public decimal OperatingExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OperatingExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperatingExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>Gross payments paid to the directors of the company</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gross payments paid to the directors of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentsToDirectors")]
        public decimal PaymentsToDirectors { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentsToDirectors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsToDirectorsSpecified { get; set; }
        
        /// <summary>
        /// <para>Total sales revenue</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total sales revenue")]
        [System.Xml.Serialization.XmlAttributeAttribute("Sales")]
        public decimal Sales { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sales property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalesSpecified { get; set; }
        
        /// <summary>
        /// <para>Total Expenses on this profit and loss statement.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Expenses on this profit and loss statement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalExpenses")]
        public decimal TotalExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalExpensesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationContributionFunds", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationContributionFunds
    {
        
        /// <summary>
        /// <para>The amount of the particular contribution.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of the particular contribution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>A free form description of the contribution used when the selected Contribution Fund Type = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free form description of the contribution used when the selected Contribution F" +
            "und Type = \"Other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the contribution is borrowed from a third party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the contribution is borrowed from a third party.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Loan")]
        public YesNoList Loan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Loan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this contribution funds within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this contribution funds within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The type of the particular contribution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of the particular contribution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ContributionFundsTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the loan account (Loan Details element) to which the contribution funds belong.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the loan account (Loan Details element) to which the contrib" +
            "ution funds belong.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_AssociatedLoanAccount")]
        public string X_AssociatedLoanAccount { get; set; }
        
        /// <summary>
        /// <para>Reference to capture the bank account details for funds held with a financial institution.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to capture the bank account details for funds held with a financial ins" +
            "titution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_FundsHeldInAccount")]
        public string X_FundsHeldInAccount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDeclarations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDeclarations
    {
        
        /// <summary>
        /// <para>Declarations made by the broker with respect to the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declarations made by the broker with respect to the application.")]
        [System.Xml.Serialization.XmlElementAttribute("BrokerDeclarations")]
        public PackageContentApplicationDeclarationsBrokerDeclarations BrokerDeclarations { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDeclarationsBrokerDeclarations", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDeclarationsBrokerDeclarations
    {
        
        /// <summary>
        /// <para>Declaration from the broker that the applicant is the same as the person shown in the photograph in the documents provided with this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that the applicant is the same as the person shown in" +
            " the photograph in the documents provided with this application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicantIsTheSamePersonShownInThePhotograph")]
        public YesNoList ApplicantIsTheSamePersonShownInThePhotograph { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicantIsTheSamePersonShownInThePhotograph property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantIsTheSamePersonShownInThePhotographSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that the applicant's assets, income, liability and expense information provided within the application are those obtained from the applicant(s) during the preliminary assessment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that the applicant\'s assets, income, liability and ex" +
            "pense information provided within the application are those obtained from the ap" +
            "plicant(s) during the preliminary assessment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssetIncomeLiabilityAndExpenseObtained")]
        public YesNoList AssetIncomeLiabilityAndExpenseObtained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetIncomeLiabilityAndExpenseObtained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetIncomeLiabilityAndExpenseObtainedSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they are aware that any wilful breach of identification obligations is made punishable under the Anti-Money Laundering/ Counter-Terrorism Financing Act 2006.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they are aware that any wilful breach of identif" +
            "ication obligations is made punishable under the Anti-Money Laundering/ Counter-" +
            "Terrorism Financing Act 2006.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AwareThatWilfulBreachOfIdentificationIsPunishable")]
        public YesNoList AwareThatWilfulBreachOfIdentificationIsPunishable { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AwareThatWilfulBreachOfIdentificationIsPunishable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AwareThatWilfulBreachOfIdentificationIsPunishableSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Declaration from the broker that they have asked whether applicant/s has been a shareholder or an officer of any company in difficulties (including bankruptcy).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Declaration " +
            "from the broker that they have asked whether applicant/s has been a shareholder " +
            "or an officer of any company in difficulties (including bankruptcy).")]
        [System.Xml.Serialization.XmlAttributeAttribute("BeenShareholderOrOfficerOfACompanyInDifficulties")]
        public YesNoList BeenShareholderOrOfficerOfACompanyInDifficulties { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BeenShareholderOrOfficerOfACompanyInDifficulties property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeenShareholderOrOfficerOfACompanyInDifficultiesSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have reviewed the application and are satisfied that the applicant(s) can manage the loan Repayment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have reviewed the application and are satis" +
            "fied that the applicant(s) can manage the loan Repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CanManageLoanRepayment")]
        public YesNoList CanManageLoanRepayment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CanManageLoanRepayment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CanManageLoanRepaymentSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have completed the original documents detailed in this application and sighted it in the presence of all applicants.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have completed the original documents detai" +
            "led in this application and sighted it in the presence of all applicants.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompletedOriginalDocumentsAndSightedInThePresenceOfApplicant")]
        public YesNoList CompletedOriginalDocumentsAndSightedInThePresenceOfApplicant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompletedOriginalDocumentsAndSightedInThePresenceOfApplicant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompletedOriginalDocumentsAndSightedInThePresenceOfApplicantSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that the applicant(s) were provided with the credit guide prior to the lodgement of this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that the applicant(s) were provided with the credit g" +
            "uide prior to the lodgement of this application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditGuideProvided")]
        public YesNoList CreditGuideProvided { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditGuideProvided property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditGuideProvidedSpecified { get; set; }
        
        /// <summary>
        /// <para>Date and time of the broker's declaration.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of the broker\'s declaration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateAndTimeOfDeclaration", DataType="date")]
        public System.DateTime DateAndTimeOfDeclaration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateAndTimeOfDeclaration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAndTimeOfDeclarationSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have provided details of any conflicts of interest relating to this application(s).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have provided details of any conflicts of i" +
            "nterest relating to this application(s).")]
        [System.Xml.Serialization.XmlAttributeAttribute("DetailsOfConflictsOfInterestProvided")]
        public YesNoList DetailsOfConflictsOfInterestProvided { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DetailsOfConflictsOfInterestProvided property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailsOfConflictsOfInterestProvidedSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have no concern about applicant's identity and believe them to be who they say they are despite not being successfully electronically verified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have no concern about applicant\'s identity " +
            "and believe them to be who they say they are despite not being successfully elec" +
            "tronically verified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HaveNoConcernsAboutApplicantIdentity")]
        public YesNoList HaveNoConcernsAboutApplicantIdentity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HaveNoConcernsAboutApplicantIdentity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HaveNoConcernsAboutApplicantIdentitySpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that the interest only period aligns with the applicant's requirements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that the interest only period aligns with the applica" +
            "nt\'s requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyMeetsRequirements")]
        public YesNoList InterestOnlyMeetsRequirements { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestOnlyMeetsRequirements property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestOnlyMeetsRequirementsSpecified { get; set; }
        
        /// <summary>
        /// <para>The text of the declaration from the broker stating that the interest only period aligns with the applicant's requirements.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The text of the declaration from the broker stating that the interest only period" +
            " aligns with the applicant\'s requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyMeetsRequirementsDescription")]
        public string InterestOnlyMeetsRequirementsDescription { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that the applicant has had the additional risks and costs of an interest only term explained to them. The applicant has had the following explained: interest only loan repayments will not pay off any principal during the interest only term; the repayments required to pay out the loan will increase after the interest only period ends to cover both interest and principal reductions; and the applicant may pay more over the life of their loan than if there was no interest only term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Declaration from the broker that the applicant has had the additional risks and costs of an interest only term explained to them. The applicant has had the following explained: interest only loan repayments will not pay off any principal during the interest only term; the repayments required to pay out the loan will increase after the interest only period ends to cover both interest and principal reductions; and the applicant may pay more over the life of their loan than if there was no interest only term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyRisksExplained")]
        public YesNoList InterestOnlyRisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestOnlyRisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestOnlyRisksExplainedSpecified { get; set; }
        
        /// <summary>
        /// <para>The text of the declaration from the broker explaining the applicant has had the additional risks and costs of an interest only term explained to them.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The text of the declaration from the broker explaining the applicant has had the " +
            "additional risks and costs of an interest only term explained to them.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyRisksExplainedDescription")]
        public string InterestOnlyRisksExplainedDescription { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have informed the lender of any additional information, requirements and objectives of which they have been informed or have identified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have informed the lender of any additional " +
            "information, requirements and objectives of which they have been informed or hav" +
            "e identified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderInformedAboutAdditionalRequirementAndInformation")]
        public YesNoList LenderInformedAboutAdditionalRequirementAndInformation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderInformedAboutAdditionalRequirementAndInformation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderInformedAboutAdditionalRequirementAndInformationSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have explained Lenders Mortgage Insurance (LMI) to the applicant(s) where is applicable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they have explained Lenders Mortgage Insurance (" +
            "LMI) to the applicant(s) where is applicable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LMIApplicableAndExplainedToTheApplicant")]
        public YesNoList LMIApplicableAndExplainedToTheApplicant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LMIApplicableAndExplainedToTheApplicant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LMIApplicableAndExplainedToTheApplicantSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they made reasonable inquiries and can state that the product meets the applicant(s) requirements and objectives as outlined by the applicant(s) in this application form and consider the loan as not unsuitable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they made reasonable inquiries and can state tha" +
            "t the product meets the applicant(s) requirements and objectives as outlined by " +
            "the applicant(s) in this application form and consider the loan as not unsuitabl" +
            "e.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductMeetsApplicantRequirements")]
        public YesNoList ProductMeetsApplicantRequirements { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductMeetsApplicantRequirements property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductMeetsApplicantRequirementsSpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they have considered the costs, risks and benefits for the applicant(s) of the refinancing/debt consolidation, including: fees payable as a result of the refinancing/debt consolidation (both in ending the old loan and in establishing the new loan); a comparison of the interest rate of the current loan and the proposed new loan; a comparison of the loan term and repayment amount of the current loan and the proposed new loan and whether the applicant(s) would get improved cash flow as a result of the refinancing; whether any debt consolidation involved would achieve administrative convenience for the applicant(s); whether the applicant can afford to make the change to the product and meet the new payments without substantial hardship; and whether the applicant will end up paying more interest if debt is refinanced/ consolidated. I am satisfied that the refinancing/debt consolidation meets the applicant(s) requirements and objectives.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Declaration from the broker that they have considered the costs, risks and benefits for the applicant(s) of the refinancing/debt consolidation, including: fees payable as a result of the refinancing/debt consolidation (both in ending the old loan and in establishing the new loan); a comparison of the interest rate of the current loan and the proposed new loan; a comparison of the loan term and repayment amount of the current loan and the proposed new loan and whether the applicant(s) would get improved cash flow as a result of the refinancing; whether any debt consolidation involved would achieve administrative convenience for the applicant(s); whether the applicant can afford to make the change to the product and meet the new payments without substantial hardship; and whether the applicant will end up paying more interest if debt is refinanced/ consolidated. I am satisfied that the refinancing/debt consolidation meets the applicant(s) requirements and objectives.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RefinancingAndDebtConsolidationMeetsObjectives")]
        public YesNoList RefinancingAndDebtConsolidationMeetsObjectives { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinancingAndDebtConsolidationMeetsObjectives property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefinancingAndDebtConsolidationMeetsObjectivesSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Declaration from the broker that they have asked whether applicant/s has submitted similar application to other lenders.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Declaration " +
            "from the broker that they have asked whether applicant/s has submitted similar a" +
            "pplication to other lenders.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubmittedSimilarApplicationToOtherLenders")]
        public YesNoList SubmittedSimilarApplicationToOtherLenders { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubmittedSimilarApplicationToOtherLenders property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubmittedSimilarApplicationToOtherLendersSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Declaration from the broker that they have asked whether there is any unsatisfied judgement entered in any court against any applicant, or any company of which any applicant is or was a shareholder or officer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a future release. Declaration from the broker that they have asked whether there is any unsatisfied judgement entered in any court against any applicant, or any company of which any applicant is or was a shareholder or officer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnsatisfiedJudgmentAgainstAnyApplicantOrCompany")]
        public YesNoList UnsatisfiedJudgmentAgainstAnyApplicantOrCompany { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnsatisfiedJudgmentAgainstAnyApplicantOrCompany property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnsatisfiedJudgmentAgainstAnyApplicantOrCompanySpecified { get; set; }
        
        /// <summary>
        /// <para>Declaration from the broker that they are verifying that the data captured is correct.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Declaration from the broker that they are verifying that the data captured is cor" +
            "rect.")]
        [System.Xml.Serialization.XmlAttributeAttribute("VerifyThatTheDataCapturedIsCorrect")]
        public YesNoList VerifyThatTheDataCapturedIsCorrect { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VerifyThatTheDataCapturedIsCorrect property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerifyThatTheDataCapturedIsCorrectSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDepositAccountDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDepositAccountDetails
    {
        
        /// <summary>
        /// <para>Identifies the parties that are prospective owners of this account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the parties that are prospective owners of this account.")]
        [System.Xml.Serialization.XmlElementAttribute("AccountOwners")]
        public PercentOwnedType AccountOwners { get; set; }
        
        /// <summary>
        /// <para>Contains information relating to the commission to be paid to the business partner that has sourced the deposit account application for the lender. This partner is typically a third party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information relating to the commission to be paid to the business partne" +
            "r that has sourced the deposit account application for the lender. This partner " +
            "is typically a third party.")]
        [System.Xml.Serialization.XmlElementAttribute("Commission")]
        public PackageContentApplicationDepositAccountDetailsCommission Commission { get; set; }
        
        /// <summary>
        /// <para>Contains information specifying where the lender is to send the account documents once the deposit account has been approved. This nomination over-rides an equivalent one at the Application level.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information specifying where the lender is to send the account documents" +
            " once the deposit account has been approved. This nomination over-rides an equiv" +
            "alent one at the Application level.")]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationInstructions")]
        public DocumentationInstructionsType DocumentationInstructions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelected> _featuresSelected;
        
        /// <summary>
        /// <para>Contains information about the product features requested by the applicant or applicants.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the product features requested by the applicant or app" +
            "licants.")]
        [System.Xml.Serialization.XmlElementAttribute("FeaturesSelected")]
        public System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelected> FeaturesSelected
        {
            get
            {
                return this._featuresSelected;
            }
            set
            {
                this._featuresSelected = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FeaturesSelected collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeaturesSelectedSpecified
        {
            get
            {
                return (this.FeaturesSelected.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationDepositAccountDetails" /> class.</para>
        /// </summary>
        public PackageContentApplicationDepositAccountDetails()
        {
            this._featuresSelected = new System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelected>();
        }
        
        /// <summary>
        /// <para>Contains information about a package option that may be available for the individual deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about a package option that may be available for the individ" +
            "ual deposit account.")]
        [System.Xml.Serialization.XmlElementAttribute("Package")]
        public PackageContentApplicationDepositAccountDetailsPackage Package { get; set; }
        
        /// <summary>
        /// <para>Unique identifier assigned to the deposit account detail by the originator system.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identifier assigned to the deposit account detail by the originator system" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginatorReferenceID")]
        public string OriginatorReferenceID { get; set; }
        
        /// <summary>
        /// <para>Captures an identifying code for the deposit account product applied for. This code is typically issued by the Organisation and enables the Organisation's systems to uniquely identify the product.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an identifying code for the deposit account product applied for. This co" +
            "de is typically issued by the Organisation and enables the Organisation\'s system" +
            "s to uniquely identify the product.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Captures the name of the deposit account product applied for.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of the deposit account product applied for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductName")]
        public string ProductName { get; set; }
        
        /// <summary>
        /// <para>The interest rate that applies to the deposit account. Typically expressed as an annual interest rate.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The interest rate that applies to the deposit account. Typically expressed as an " +
            "annual interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProposedAnnualInterestRate")]
        public decimal ProposedAnnualInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProposedAnnualInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProposedAnnualInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this deposit account details within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this deposit account details within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates preferred frequency for statements</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates preferred frequency for statements")]
        [System.Xml.Serialization.XmlAttributeAttribute("StatementCycle")]
        public StatementCycleList StatementCycle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementCycle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementCycleSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of the deposit account such as transactional or term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of the deposit account such as transactional or term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public DepositAccountTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDepositAccountDetailsCommission", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDepositAccountDetailsCommission
    {
        
        /// <summary>
        /// <para>The amount of upfront commission to be paid to the sales channel in the event that deposit account application is successful.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of upfront commission to be paid to the sales channel in the event tha" +
            "t deposit account application is successful.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionAmount")]
        public decimal CommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a commission is payable to the sales channel in respect of the deposit account application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a commission is payable to the sales channel in respect of the " +
            "deposit account application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionPaid")]
        public YesNoList CommissionPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the commission plan involves payment of an upfront commission only, an upfront commission and a trail commission, a trail commission only, or another type of structure.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the commission plan involves payment of an upfront commission o" +
            "nly, an upfront commission and a trail commission, a trail commission only, or a" +
            "nother type of structure.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionStructure")]
        public CommissionStructureList CommissionStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the commission structure if an accurate description is not specified in the enumerated values. Must be provided when Commission Structure = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the commission structure if an accurate description is not speci" +
            "fied in the enumerated values. Must be provided when Commission Structure = \"Oth" +
            "er\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherCommissionStructureDescription")]
        public string OtherCommissionStructureDescription { get; set; }
        
        /// <summary>
        /// <para>A code that specifies a particular promotion or special commission offer that applies to the deposit account application, specified by the submitting sales channel in order to tag the deal with the promotion code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code that specifies a particular promotion or special commission offer that app" +
            "lies to the deposit account application, specified by the submitting sales chann" +
            "el in order to tag the deal with the promotion code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PromotionCode")]
        public string PromotionCode { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the sales channel is a third party referrer of business for the purpose of commission disclosure requirements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the sales channel is a third party referrer of business for the" +
            " purpose of commission disclosure requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ThirdPartyReferee")]
        public YesNoList ThirdPartyReferee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdPartyReferee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThirdPartyRefereeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the trail commission percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the trail commission percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Trail")]
        public decimal Trail { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Trail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrailSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDepositAccountDetailsFeaturesSelected", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDepositAccountDetailsFeaturesSelected
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelectedExtraFeature> _extraFeature;
        
        /// <summary>
        /// <para>Information about a product feature that is requested on the deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about a product feature that is requested on the deposit account.")]
        [System.Xml.Serialization.XmlElementAttribute("ExtraFeature")]
        public System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelectedExtraFeature> ExtraFeature
        {
            get
            {
                return this._extraFeature;
            }
            set
            {
                this._extraFeature = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExtraFeature collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraFeatureSpecified
        {
            get
            {
                return (this.ExtraFeature.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationDepositAccountDetailsFeaturesSelected" /> class.</para>
        /// </summary>
        public PackageContentApplicationDepositAccountDetailsFeaturesSelected()
        {
            this._extraFeature = new System.Collections.Generic.List<PackageContentApplicationDepositAccountDetailsFeaturesSelectedExtraFeature>();
        }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that a cheque book be issued for the deposit account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that a cheque book be issued for the dep" +
            "osit account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ChequeBook")]
        public YesNoList ChequeBook { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChequeBook property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChequeBookSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a credit card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a credit card.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditCard")]
        public YesNoList CreditCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a debit card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a debit card.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DebitCard")]
        public YesNoList DebitCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebitCardSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a deposit book</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a deposit book")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositBook")]
        public YesNoList DepositBook { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositBook property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositBookSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested an EFTPOS card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested an EFTPOS card.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EFTPOSCard")]
        public YesNoList EFTPOSCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EFTPOSCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EFTPOSCardSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested statements be delivered by email</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested statements be delivered by email")]
        [System.Xml.Serialization.XmlAttributeAttribute("StatementEmailDelivery")]
        public YesNoList StatementEmailDelivery { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementEmailDelivery property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementEmailDeliverySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested to receive paper statements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested to receive paper statements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StatementPaperDelivery")]
        public YesNoList StatementPaperDelivery { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementPaperDelivery property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementPaperDeliverySpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant that has selected these features (when this attribute is not populated, the selected features apply to the entire account).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant that has selected these features (when this attribute is not popula" +
            "ted, the selected features apply to the entire account).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDepositAccountDetailsFeaturesSelectedExtraFeature", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDepositAccountDetailsFeaturesSelectedExtraFeature
    {
        
        /// <summary>
        /// <para>Specific information, value or enumeration related to the specific feature (name).</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specific information, value or enumeration related to the specific feature (name)" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The name of the specific feature being requested. Free text field although deposit taking institutions may provide enumerations.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the specific feature being requested. Free text field although deposi" +
            "t taking institutions may provide enumerations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Extra Feature Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Extra Feature Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDepositAccountDetailsPackage", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDepositAccountDetailsPackage
    {
        
        /// <summary>
        /// <para>Captures a deposit taking institution's defined category to which the requested package belongs.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a deposit taking institution\'s defined category to which the requested p" +
            "ackage belongs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public string Category { get; set; }
        
        /// <summary>
        /// <para>A unique code representing the product package being requested by the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code representing the product package being requested by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Code")]
        public string Code { get; set; }
        
        /// <summary>
        /// <para>Membership Identifier of the applicant issued by the Organisation the applicant claims to belong to and therefore qualify for the package associated with that Organisation. May be provided when Organisation is specified.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Membership Identifier of the applicant issued by the Organisation the applicant c" +
            "laims to belong to and therefore qualify for the package associated with that Or" +
            "ganisation. May be provided when Organisation is specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MemberID")]
        public string MemberID { get; set; }
        
        /// <summary>
        /// <para>Captures the name of a package that the applicant is applying for. A package commonly gives the applicants certain benefits, such as an interest rate bonus. There may be rules that determine whether the applicants qualify for the package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of a package that the applicant is applying for. A package comm" +
            "only gives the applicants certain benefits, such as an interest rate bonus. Ther" +
            "e may be rules that determine whether the applicants qualify for the package.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>A unique code identifying an option that applies to a package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code identifying an option that applies to a package.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OptionCode")]
        public string OptionCode { get; set; }
        
        /// <summary>
        /// <para>A code or name that identifies the organisation under which the package is offered.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code or name that identifies the organisation under which the package is offere" +
            "d.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Organisation")]
        public string Organisation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationDetailedComment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationDetailedComment
    {
        
        /// <summary>
        /// <para>A free text comment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free text comment")]
        [System.Xml.Serialization.XmlElementAttribute("Comment")]
        public string Comment { get; set; }
        
        /// <summary>
        /// <para>Text description of the item the comment refers to</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Text description of the item the comment refers to")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContextDescription")]
        public string ContextDescription { get; set; }
        
        /// <summary>
        /// <para>The date that the comment was added to the file</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the comment was added to the file")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreatedDate", DataType="dateTime")]
        public System.DateTime CreatedDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this detailed comment within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this detailed comment within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Reference to the author of the comment</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the author of the comment")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Author")]
        public string X_Author { get; set; }
        
        /// <summary>
        /// <para>Pointer to the item that the comment refers to</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Pointer to the item that the comment refers to")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Context")]
        public string X_Context { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationFunder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationFunder
    {
        
        /// <summary>
        /// <para>Contains contact details for the funder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the funder.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationFunderContact Contact { get; set; }
        
        /// <summary>
        /// <para>The company name of the funder.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company name of the funder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The licence number.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The licence number.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LicenceNumber")]
        public string LicenceNumber { get; set; }
        
        /// <summary>
        /// <para>Alternative identifier by which the funder is known.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alternative identifier by which the funder is known.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIdentifier")]
        public string OtherIdentifier { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationFunderContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationFunderContact
    {
        
        /// <summary>
        /// <para>Contact person for the funder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contact person for the funder.")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationFunderContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Contains a contact fax number for the funder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact fax number for the funder.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Contains a contact phone number for the funder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact phone number for the funder.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>Email address for the funder.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Email address for the funder.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>An internet address for web content associated with the funder.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internet address for web content associated with the funder.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address should capture the funder's address.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address should capture the funder\'s address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationFunderContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationFunderContactContactPerson
    {
        
        /// <summary>
        /// <para>The email address of the contact person.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The email address of the contact person.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHousehold", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHousehold
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationHouseholdDependant> _dependant;
        
        /// <summary>
        /// <para>A person who depends on the applicant(s) for financial or other support</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person who depends on the applicant(s) for financial or other support")]
        [System.Xml.Serialization.XmlElementAttribute("Dependant")]
        public System.Collections.Generic.List<PackageContentApplicationHouseholdDependant> Dependant
        {
            get
            {
                return this._dependant;
            }
            set
            {
                this._dependant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Dependant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DependantSpecified
        {
            get
            {
                return (this.Dependant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationHousehold" /> class.</para>
        /// </summary>
        public PackageContentApplicationHousehold()
        {
            this._dependant = new System.Collections.Generic.List<PackageContentApplicationHouseholdDependant>();
        }
        
        /// <summary>
        /// <para>Education expenses contains information about the number and type of students attending school or otherwise participating in study. May be used as an input into the calculation of deemed education expenses in the lender's of living expense allowance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Education expenses contains information about the number and type of students att" +
            "ending school or otherwise participating in study. May be used as an input into " +
            "the calculation of deemed education expenses in the lender\'s of living expense a" +
            "llowance.")]
        [System.Xml.Serialization.XmlElementAttribute("EducationExpenses")]
        public PackageContentApplicationHouseholdEducationExpenses EducationExpenses { get; set; }
        
        /// <summary>
        /// <para>The set of expenses declared for the household, including Living Expenses and Other Commitments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The set of expenses declared for the household, including Living Expenses and Oth" +
            "er Commitments.")]
        [System.Xml.Serialization.XmlElementAttribute("ExpenseDetails")]
        public PackageContentApplicationHouseholdExpenseDetails ExpenseDetails { get; set; }
        
        /// <summary>
        /// <para>A descriptive name for the household</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A descriptive name for the household")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>The number of adults in the household</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of adults in the household")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfAdults")]
        public string NumberOfAdults { get; set; }
        
        /// <summary>
        /// <para>The number of dependants in this applicant household.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of dependants in this applicant household.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfDependants")]
        public string NumberOfDependants { get; set; }
        
        /// <summary>
        /// <para>The order of this household within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this household within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Unique identification for the household</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identification for the household")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdDependant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdDependant
    {
        
        /// <summary>
        /// <para>The age of the dependant at the time of submitting the application</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The age of the dependant at the time of submitting the application")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>The dependant's date of birth</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dependant\'s date of birth")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfBirth", DataType="date")]
        public System.DateTime DateOfBirth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfBirthSpecified { get; set; }
        
        /// <summary>
        /// <para>The name of the dependant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the dependant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Dependant Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Dependant Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdEducationExpenses", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdEducationExpenses
    {
        
        /// <summary>
        /// <para>Captures the number of adults participating in full-time study.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of adults participating in full-time study.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfAdultsInFullTimeStudy")]
        public string NumberOfAdultsInFullTimeStudy { get; set; }
        
        /// <summary>
        /// <para>Captures the number of adults participating in part-time study.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of adults participating in part-time study.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfAdultsInPartTimeStudy")]
        public string NumberOfAdultsInPartTimeStudy { get; set; }
        
        /// <summary>
        /// <para>Captures the number of dependants (children) attending private school.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of dependants (children) attending private school.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfChildrenInPrivateSchool")]
        public string NumberOfChildrenInPrivateSchool { get; set; }
        
        /// <summary>
        /// <para>Captures the number of dependants (children) attending public school.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of dependants (children) attending public school.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfChildrenInPublicSchool")]
        public string NumberOfChildrenInPublicSchool { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdExpenseDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdExpenseDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsLivingExpense> _livingExpense;
        
        /// <summary>
        /// <para>Contains the details of a single line item that forms part of the household's declared living expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the details of a single line item that forms part of the household\'s dec" +
            "lared living expenses.")]
        [System.Xml.Serialization.XmlElementAttribute("LivingExpense")]
        public System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsLivingExpense> LivingExpense
        {
            get
            {
                return this._livingExpense;
            }
            set
            {
                this._livingExpense = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LivingExpense collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingExpenseSpecified
        {
            get
            {
                return (this.LivingExpense.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationHouseholdExpenseDetails" /> class.</para>
        /// </summary>
        public PackageContentApplicationHouseholdExpenseDetails()
        {
            this._livingExpense = new System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsLivingExpense>();
            this._otherCommitment = new System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsOtherCommitment>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsOtherCommitment> _otherCommitment;
        
        /// <summary>
        /// <para>Contains the details of a single line item that forms part of the household's commitments other than living expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the details of a single line item that forms part of the household\'s com" +
            "mitments other than living expenses.")]
        [System.Xml.Serialization.XmlElementAttribute("OtherCommitment")]
        public System.Collections.Generic.List<PackageContentApplicationHouseholdExpenseDetailsOtherCommitment> OtherCommitment
        {
            get
            {
                return this._otherCommitment;
            }
            set
            {
                this._otherCommitment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherCommitment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherCommitmentSpecified
        {
            get
            {
                return (this.OtherCommitment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The total system calculated living expenses. This may be calculated using the Household Expenditure Measure (HEM) or calculated using a different method.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total system calculated living expenses. This may be calculated using the Hou" +
            "sehold Expenditure Measure (HEM) or calculated using a different method.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalSystemCalculatedLivingExpenses")]
        public PackageContentApplicationHouseholdExpenseDetailsTotalSystemCalculatedLivingExpenses TotalSystemCalculatedLivingExpenses { get; set; }
        
        /// <summary>
        /// <para>The total living expenses declared by the application parties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total living expenses declared by the application parties.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalUserStatedLivingExpenses")]
        public PackageContentApplicationHouseholdExpenseDetailsTotalUserStatedLivingExpenses TotalUserStatedLivingExpenses { get; set; }
        
        /// <summary>
        /// <para>The broker has verified the expense amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The broker has verified the expense amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BrokerVerifiedExpense")]
        public YesNoList BrokerVerifiedExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BrokerVerifiedExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrokerVerifiedExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Details given of the expenses and sources used to verify the expenses.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details given of the expenses and sources used to verify the expenses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BrokerVerifiedExpenseDetails")]
        public string BrokerVerifiedExpenseDetails { get; set; }
        
        /// <summary>
        /// <para>Details given when stated living expenses are less than calculated living expenses.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details given when stated living expenses are less than calculated living expense" +
            "s.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StatedLessThanCalculatedLivingExpensesDetails")]
        public string StatedLessThanCalculatedLivingExpensesDetails { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdExpenseDetailsLivingExpense", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdExpenseDetailsLivingExpense
    {
        
        /// <summary>
        /// <para>Where the party responsible for the expense needs to be established at an individual level, this element identifies the party that is responsible for the split and corresponding percentages. Each expense may be 'owned' by one or more parties, typically the applicants, so there may be more than one owner referenced. An expense may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the expense may be assigned.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Where the party responsible for the expense needs to be established at an individual level, this element identifies the party that is responsible for the split and corresponding percentages. Each expense may be 'owned' by one or more parties, typically the applicants, so there may be more than one owner referenced. An expense may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the expense may be assigned.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentResponsible")]
        public PercentOwnedType PercentResponsible { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of this particular living expense for the household as declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of this particular living expense for the household as declared" +
            " by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The category that this declared living expense falls under.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The category that this declared living expense falls under.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public LivingExpenseCategoryList Category { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Category property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategorySpecified { get; set; }
        
        /// <summary>
        /// <para>A plain text description that provides additional detail supporting the Living Expense for the household as declared by the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A plain text description that provides additional detail supporting the Living Ex" +
            "pense for the household as declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Where this living expense has an end date, this attribute contains that anticipated end date.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where this living expense has an end date, this attribute contains that anticipat" +
            "ed end date.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency that corresponds to the declared amount for this particular Living Expense.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency that corresponds to the declared amount for this particular Living " +
            "Expense.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Where this living expense starts in the future, this attribute contains the anticipated future start date.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where this living expense starts in the future, this attribute contains the antic" +
            "ipated future start date.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this living expense.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this living expense.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdExpenseDetailsOtherCommitment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdExpenseDetailsOtherCommitment
    {
        
        /// <summary>
        /// <para>Where the party responsible for the commitment needs to be established at an individual level, this element identifies the party that is responsible for the split and corresponding percentages. Each commitment may be 'owned' by one or more parties, typically the applicants, so there may be more than one owner referenced. A commitment may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the commitment may be assigned.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Where the party responsible for the commitment needs to be established at an individual level, this element identifies the party that is responsible for the split and corresponding percentages. Each commitment may be 'owned' by one or more parties, typically the applicants, so there may be more than one owner referenced. A commitment may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the commitment may be assigned.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentResponsible")]
        public PercentOwnedType PercentResponsible { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of this particular commitment for the household as declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of this particular commitment for the household as declared by " +
            "the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The category that this declared other commitment falls under.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The category that this declared other commitment falls under.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public OtherCommitmentCategoryList Category { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Category property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategorySpecified { get; set; }
        
        /// <summary>
        /// <para>A plain text description that provides additional detail supporting the commitment for the household as declared by the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A plain text description that provides additional detail supporting the commitmen" +
            "t for the household as declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Where this commitment has an end date, this attribute contains that anticipated end date.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where this commitment has an end date, this attribute contains that anticipated e" +
            "nd date.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency that corresponds to the declared amount for this particular commitment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency that corresponds to the declared amount for this particular commitm" +
            "ent.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Where this commitment starts in the future, this attribute contains the anticipated future start date.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where this commitment starts in the future, this attribute contains the anticipat" +
            "ed future start date.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this commitment.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this commitment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdExpenseDetailsTotalSystemCalculatedLivingExpens" +
        "es", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdExpenseDetailsTotalSystemCalculatedLivingExpenses
    {
        
        /// <summary>
        /// <para>The dollar amount of the total system calculated living expenses.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the total system calculated living expenses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency that corresponds to the amount for the total system calculated living expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency that corresponds to the amount for the total system calculated livi" +
            "ng expenses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationHouseholdExpenseDetailsTotalUserStatedLivingExpenses", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationHouseholdExpenseDetailsTotalUserStatedLivingExpenses
    {
        
        /// <summary>
        /// <para>The dollar amount of the total user stated living expenses.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the total user stated living expenses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency that corresponds to the amount for total user stated living expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency that corresponds to the amount for total user stated living expense" +
            "s.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationInsurance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationInsurance
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationInsuranceAssociatedLoanAccount> _associatedLoanAccount;
        
        /// <summary>
        /// <para>The loan accounts associated with the insurance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan accounts associated with the insurance.")]
        [System.Xml.Serialization.XmlElementAttribute("AssociatedLoanAccount")]
        public System.Collections.Generic.List<PackageContentApplicationInsuranceAssociatedLoanAccount> AssociatedLoanAccount
        {
            get
            {
                return this._associatedLoanAccount;
            }
            set
            {
                this._associatedLoanAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AssociatedLoanAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssociatedLoanAccountSpecified
        {
            get
            {
                return (this.AssociatedLoanAccount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationInsurance" /> class.</para>
        /// </summary>
        public PackageContentApplicationInsurance()
        {
            this._associatedLoanAccount = new System.Collections.Generic.List<PackageContentApplicationInsuranceAssociatedLoanAccount>();
            this._insuredParty = new System.Collections.Generic.List<PackageContentApplicationInsuranceInsuredParty>();
        }
        
        /// <summary>
        /// <para>The commission payable to the party writing the insurance policy.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The commission payable to the party writing the insurance policy.")]
        [System.Xml.Serialization.XmlElementAttribute("CommissionPayable")]
        public PackageContentApplicationInsuranceCommissionPayable CommissionPayable { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationInsuranceInsuredParty> _insuredParty;
        
        /// <summary>
        /// <para>Named party on the insurance entitled to make a claim on the policy.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Named party on the insurance entitled to make a claim on the policy.")]
        [System.Xml.Serialization.XmlElementAttribute("InsuredParty")]
        public System.Collections.Generic.List<PackageContentApplicationInsuranceInsuredParty> InsuredParty
        {
            get
            {
                return this._insuredParty;
            }
            set
            {
                this._insuredParty = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InsuredParty collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuredPartySpecified
        {
            get
            {
                return (this.InsuredParty.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Container element to capture insurance premium</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element to capture insurance premium")]
        [System.Xml.Serialization.XmlElementAttribute("Premium")]
        public PackageContentApplicationInsurancePremium Premium { get; set; }
        
        /// <summary>
        /// <para>Captures a plain text description of the insurance when the selected Insurance Type = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a plain text description of the insurance when the selected Insurance Ty" +
            "pe = \"Other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Captures the date that the policy is effective from</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date that the policy is effective from")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveDate", DataType="date")]
        public System.DateTime EffectiveDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the date that the policy expires</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date that the policy expires")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryDate", DataType="date")]
        public System.DateTime ExpiryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Defines the type of insurance held</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines the type of insurance held")]
        [System.Xml.Serialization.XmlAttributeAttribute("InsuranceType")]
        public InsuranceTypeList InsuranceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuranceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Defines the amount insured</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines the amount insured")]
        [System.Xml.Serialization.XmlAttributeAttribute("InsuredAmount")]
        public decimal InsuredAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsuredAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuredAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the name of insurer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of insurer")]
        [System.Xml.Serialization.XmlAttributeAttribute("Insurer")]
        public InsurerList Insurer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Insurer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsurerSpecified { get; set; }
        
        /// <summary>
        /// <para>For an Insurer not listed, the name of the Insurer</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an Insurer not listed, the name of the Insurer")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInsurerName")]
        public string OtherInsurerName { get; set; }
        
        /// <summary>
        /// <para>Captures the policy number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the policy number")]
        [System.Xml.Serialization.XmlAttributeAttribute("PolicyNumber")]
        public string PolicyNumber { get; set; }
        
        /// <summary>
        /// <para>The order of this insurance within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this insurance within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationInsuranceAssociatedLoanAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationInsuranceAssociatedLoanAccount
    {
        
        /// <summary>
        /// <para>The loan account that the insurance applies to</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan account that the insurance applies to")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_AssociatedLoanAccount")]
        public string X_AssociatedLoanAccount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationInsuranceCommissionPayable", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationInsuranceCommissionPayable
    {
        
        /// <summary>
        /// <para>The amount of commission to be paid to the party writing the insurance</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of commission to be paid to the party writing the insurance")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the percentage of commission payable</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the percentage of commission payable")]
        [System.Xml.Serialization.XmlAttributeAttribute("Percentage")]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>A reference to the Lender who pays the commission</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the Lender who pays the commission")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Payer")]
        public string X_Payer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationInsuranceInsuredParty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationInsuranceInsuredParty
    {
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is the insured party</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is the insured party")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_InsuredParty")]
        public string X_InsuredParty { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationInsurancePremium", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationInsurancePremium
    {
        
        /// <summary>
        /// <para>Captures the insurance premium amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the insurance premium amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the insurance premium payment frequency</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the insurance premium payment frequency")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLendingGuarantee", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLendingGuarantee
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeAssociatedLoanAccount> _associatedLoanAccount;
        
        /// <summary>
        /// <para>The loan account(s) being secured with this guarantee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan account(s) being secured with this guarantee")]
        [System.Xml.Serialization.XmlElementAttribute("AssociatedLoanAccount")]
        public System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeAssociatedLoanAccount> AssociatedLoanAccount
        {
            get
            {
                return this._associatedLoanAccount;
            }
            set
            {
                this._associatedLoanAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AssociatedLoanAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssociatedLoanAccountSpecified
        {
            get
            {
                return (this.AssociatedLoanAccount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLendingGuarantee" /> class.</para>
        /// </summary>
        public PackageContentApplicationLendingGuarantee()
        {
            this._associatedLoanAccount = new System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeAssociatedLoanAccount>();
            this._guarantor = new System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeGuarantor>();
            this._security = new System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeSecurity>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeGuarantor> _guarantor;
        
        /// <summary>
        /// <para>The loan party providing the guarantee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan party providing the guarantee.")]
        [System.Xml.Serialization.XmlElementAttribute("Guarantor")]
        public System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeGuarantor> Guarantor
        {
            get
            {
                return this._guarantor;
            }
            set
            {
                this._guarantor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Guarantor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuarantorSpecified
        {
            get
            {
                return (this.Guarantor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeSecurity> _security;
        
        /// <summary>
        /// <para>The security offered as a guarantee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security offered as a guarantee.")]
        [System.Xml.Serialization.XmlElementAttribute("Security")]
        public System.Collections.Generic.List<PackageContentApplicationLendingGuaranteeSecurity> Security
        {
            get
            {
                return this._security;
            }
            set
            {
                this._security = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Security collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecuritySpecified
        {
            get
            {
                return (this.Security.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>A dollar limit on the income amount that can be used as a servicing guarantee a for loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A dollar limit on the income amount that can be used as a servicing guarantee a f" +
            "or loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeLimitAmount")]
        public decimal IncomeLimitAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeLimitAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeLimitAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the income amount that can be used as a servicing guarantee a for loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the income amount that can be used as a servicing guarantee a fo" +
            "r loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeLimitFrequency")]
        public FrequencyShortList IncomeLimitFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeLimitFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeLimitFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar limit on the portion of the guarantor security property that can be used as a lending guarantee for the loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar limit on the portion of the guarantor security property that can be us" +
            "ed as a lending guarantee for the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Limit")]
        public decimal Limit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Limit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this lending guarantee within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this lending guarantee within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The type of guarantee that will be offered by the Guarantors in the application (security, income for serviceability or both).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of guarantee that will be offered by the Guarantors in the application (" +
            "security, income for serviceability or both).")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public LendingGuaranteeTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLendingGuaranteeAssociatedLoanAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLendingGuaranteeAssociatedLoanAccount
    {
        
        /// <summary>
        /// <para>The loan account(s) being secured with this guarantee</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan account(s) being secured with this guarantee")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_AssociatedLoanAccount")]
        public string X_AssociatedLoanAccount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLendingGuaranteeGuarantor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLendingGuaranteeGuarantor
    {
        
        /// <summary>
        /// <para>Specifies the level of access for each Guarantor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the level of access for each Guarantor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccessType")]
        public GuarantorAccessList AccessType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccessType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccessTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The loan party providing the guarantee</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan party providing the guarantee")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Guarantor")]
        public string X_Guarantor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLendingGuaranteeSecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLendingGuaranteeSecurity
    {
        
        /// <summary>
        /// <para>Security agreement details for this security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security agreement details for this security.")]
        [System.Xml.Serialization.XmlElementAttribute("SecurityAgreement")]
        public SecurityAgreementType SecurityAgreement { get; set; }
        
        /// <summary>
        /// <para>The priority of this lender's mortgage on the security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The priority of this lender\'s mortgage on the security property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Priority")]
        public SecurityPriorityList Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Priority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Security being offered, if any</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security being offered, if any")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiability", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiability
    {
        
        /// <summary>
        /// <para>Account details of the liability</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account details of the liability")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public FinancialAccountType AccountNumber { get; set; }
        
        /// <summary>
        /// <para>Container element for capturing Arrears detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing Arrears detail")]
        [System.Xml.Serialization.XmlElementAttribute("Arrears")]
        public PackageContentApplicationLiabilityArrears Arrears { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityContinuingRepayment> _continuingRepayment;
        
        /// <summary>
        /// <para>Details of the continuing repayment expense associated with this liability where it differs from the current repayment expense.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the continuing repayment expense associated with this liability where " +
            "it differs from the current repayment expense.")]
        [System.Xml.Serialization.XmlElementAttribute("ContinuingRepayment")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityContinuingRepayment> ContinuingRepayment
        {
            get
            {
                return this._continuingRepayment;
            }
            set
            {
                this._continuingRepayment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContinuingRepayment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContinuingRepaymentSpecified
        {
            get
            {
                return (this.ContinuingRepayment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLiability" /> class.</para>
        /// </summary>
        public PackageContentApplicationLiability()
        {
            this._continuingRepayment = new System.Collections.Generic.List<PackageContentApplicationLiabilityContinuingRepayment>();
            this._discountMargin = new System.Collections.Generic.List<PackageContentApplicationLiabilityDiscountMargin>();
            this._rateComposition = new System.Collections.Generic.List<PackageContentApplicationLiabilityRateComposition>();
            this._repayment = new System.Collections.Generic.List<PackageContentApplicationLiabilityRepayment>();
            this._security = new System.Collections.Generic.List<PackageContentApplicationLiabilitySecurity>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityDiscountMargin> _discountMargin;
        
        /// <summary>
        /// <para>The interest rate discount margin on the liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The interest rate discount margin on the liability.")]
        [System.Xml.Serialization.XmlElementAttribute("DiscountMargin")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityDiscountMargin> DiscountMargin
        {
            get
            {
                return this._discountMargin;
            }
            set
            {
                this._discountMargin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DiscountMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountMarginSpecified
        {
            get
            {
                return (this.DiscountMargin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Information specifying where correspondence is sent regarding this liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information specifying where correspondence is sent regarding this liability.")]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationInstructions")]
        public DocumentationInstructionsType DocumentationInstructions { get; set; }
        
        /// <summary>
        /// <para>Details of the original term of the credit product and any introductory terms, such as an interest only term or a fixed rate term that applies for an initial period at the start of the product.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the original term of the credit product and any introductory terms, su" +
            "ch as an interest only term or a fixed rate term that applies for an initial per" +
            "iod at the start of the product.")]
        [System.Xml.Serialization.XmlElementAttribute("OriginalTerm")]
        public PackageContentApplicationLiabilityOriginalTerm OriginalTerm { get; set; }
        
        /// <summary>
        /// <para>Contains information about a package option that previously was part of the lender's offer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about a package option that previously was part of the lende" +
            "r\'s offer.")]
        [System.Xml.Serialization.XmlElementAttribute("Package")]
        public PackageContentApplicationLiabilityPackage Package { get; set; }
        
        /// <summary>
        /// <para>Identifies the party/s that are responsible for the liability and the amount they are responsible for, either as a borrower or guarantor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the party/s that are responsible for the liability and the amount they" +
            " are responsible for, either as a borrower or guarantor.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PackageContentApplicationLiabilityPercentOwned PercentOwned { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityRateComposition> _rateComposition;
        
        /// <summary>
        /// <para>The structure of the interest rate to the borrower, based on the delivery rate with applied margins</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The structure of the interest rate to the borrower, based on the delivery rate wi" +
            "th applied margins")]
        [System.Xml.Serialization.XmlElementAttribute("RateComposition")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityRateComposition> RateComposition
        {
            get
            {
                return this._rateComposition;
            }
            set
            {
                this._rateComposition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RateComposition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateCompositionSpecified
        {
            get
            {
                return (this.RateComposition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Container element for capturing the remaining term of liabilities not being refinanced.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the remaining term of liabilities not being refin" +
            "anced.")]
        [System.Xml.Serialization.XmlElementAttribute("RemainingTerm")]
        public PackageContentApplicationLiabilityRemainingTerm RemainingTerm { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityRepayment> _repayment;
        
        /// <summary>
        /// <para>Details of the repayment expense associated with this loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the repayment expense associated with this loan")]
        [System.Xml.Serialization.XmlElementAttribute("Repayment")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityRepayment> Repayment
        {
            get
            {
                return this._repayment;
            }
            set
            {
                this._repayment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Repayment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentSpecified
        {
            get
            {
                return (this.Repayment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilitySecurity> _security;
        
        /// <summary>
        /// <para>Details to identify the security property for the loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details to identify the security property for the loan")]
        [System.Xml.Serialization.XmlElementAttribute("Security")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilitySecurity> Security
        {
            get
            {
                return this._security;
            }
            set
            {
                this._security = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Security collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecuritySpecified
        {
            get
            {
                return (this.Security.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The software application used by the liability originator.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The software application used by the liability originator.")]
        [System.Xml.Serialization.XmlElementAttribute("Software")]
        public PackageContentApplicationLiabilitySoftware Software { get; set; }
        
        /// <summary>
        /// <para>Captures the annual interest rate that applies to the liability</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the annual interest rate that applies to the liability")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnnualInterestRate")]
        public decimal AnnualInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnualInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the existing liability will be cleared, in whole or in part, using funds from a third party institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the existing liability will be cleared, in whole or in part, us" +
            "ing funds from a third party institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ClearingFromOtherSource")]
        public ClearingFromOtherSourceList ClearingFromOtherSource { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClearingFromOtherSource property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingFromOtherSourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the exact amount that will be refinanced for this liability using funds from a source that is not the new loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the exact amount that will be refinanced for this liability using funds " +
            "from a source that is not the new loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ClearingFromOtherSourceAmount")]
        public decimal ClearingFromOtherSourceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClearingFromOtherSourceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingFromOtherSourceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the existing loan will be cleared, in whole or in part, using funds from the loan being applied for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the existing loan will be cleared, in whole or in part, using f" +
            "unds from the loan being applied for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ClearingFromThisLoan")]
        public ClearingFromThisLoanList ClearingFromThisLoan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClearingFromThisLoan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingFromThisLoanSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the exact amount that will be refinanced for this liability using funds sourced from a new loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the exact amount that will be refinanced for this liability using funds " +
            "sourced from a new loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ClearingFromThisLoanAmount")]
        public decimal ClearingFromThisLoanAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClearingFromThisLoanAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingFromThisLoanAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the type of credit card</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of credit card")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditCardType")]
        public CreditCardTypeList CreditCardType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCardType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the limit for a credit card or a line of credit, or the scheduled balance for an amortising loan. This is typically the balance that the lender uses to assess the liability as the borrower is likely able to draw funds up to the limit, or to redraw principal repaid ahead of the scheduled balance.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Captures the limit for a credit card or a line of credit, or the scheduled balance for an amortising loan. This is typically the balance that the lender uses to assess the liability as the borrower is likely able to draw funds up to the limit, or to redraw principal repaid ahead of the scheduled balance.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditLimit")]
        public decimal CreditLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditLimitSpecified { get; set; }
        
        /// <summary>
        /// <para>A credit risk grade can be used to specify how likely the liability is to experience events such as payment defaults based on its history. A higher risk grade generally indicates higher risk.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A credit risk grade can be used to specify how likely the liability is to experie" +
            "nce events such as payment defaults based on its history. A higher risk grade ge" +
            "nerally indicates higher risk.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditRiskGrade")]
        public string CreditRiskGrade { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the liability when the selected Liability Type = "Other".</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the liability when the selected Liability Typ" +
            "e = \"Other\".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The applicant or financial system has declared a current arrears credit issue on this liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant or financial system has declared a current arrears credit issue on " +
            "this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasArrears")]
        public YesNoList HasArrears { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasArrears property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasArrearsSpecified { get; set; }
        
        /// <summary>
        /// <para>Used to indicate if the applicant or financial system has declared a previous arrears Credit Issue against this liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Used to indicate if the applicant or financial system has declared a previous arr" +
            "ears Credit Issue against this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasPreviousArrears")]
        public YesNoList HasPreviousArrears { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasPreviousArrears property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasPreviousArrearsSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the liability has any undrawn funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the liability has any undrawn funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasUndrawnFunds")]
        public YesNoList HasUndrawnFunds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasUndrawnFunds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasUndrawnFundsSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the liability's limit is currently exceeded.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the liability\'s limit is currently exceeded.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LimitExceededCurrently")]
        public YesNoList LimitExceededCurrently { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitExceededCurrently property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitExceededCurrentlySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the liability's limit previously been exceeded.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the liability\'s limit previously been exceeded.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LimitExceededPreviously")]
        public YesNoList LimitExceededPreviously { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitExceededPreviously property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitExceededPreviouslySpecified { get; set; }
        
        /// <summary>
        /// <para>Liability's loan to value ratio.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Liability\'s loan to value ratio.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LVR")]
        public decimal LVR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LVR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LVRSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures if the Liability is used to a negatively geared tax liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures if the Liability is used to a negatively geared tax liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NegativelyGeared")]
        public YesNoList NegativelyGeared { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NegativelyGeared property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegativelyGearedSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the percentage of the liability used for negative gearing.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the percentage of the liability used for negative gearing.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NegativelyGearedPercentage")]
        public decimal NegativelyGearedPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NegativelyGearedPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegativelyGearedPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the new limit of the liability when the applicant proposes that they will reduce the limit prior to or at settlement of the loan application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the new limit of the liability when the applicant proposes that they wil" +
            "l reduce the limit prior to or at settlement of the loan application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewLimit")]
        public decimal NewLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NewLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewLimitSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the original loan amount, being the credit limit for a line of credit, or the fully drawn principal amount for an amortising loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the original loan amount, being the credit limit for a line of credit, o" +
            "r the fully drawn principal amount for an amortising loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginalAmount")]
        public decimal OriginalAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginalAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the original loan purpose</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the original loan purpose")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginalLoanPurpose")]
        public PrimaryPurposeLoanPurposeList OriginalLoanPurpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginalLoanPurpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginalLoanPurposeSpecified { get; set; }
        
        /// <summary>
        /// <para>The origination date of the liability.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The origination date of the liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginationDate", DataType="date")]
        public System.DateTime OriginationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginationDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique identifier assigned to the liability by the originator system.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identifier assigned to the liability by the originator system.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginatorReferenceID")]
        public string OriginatorReferenceID { get; set; }
        
        /// <summary>
        /// <para>Captures the outstanding, current or unpaid balance of the liability.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the outstanding, current or unpaid balance of the liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OutstandingBalance")]
        public decimal OutstandingBalance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutstandingBalance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutstandingBalanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the liability is currently overdrawn.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the liability is currently overdrawn.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Overdrawn")]
        public YesNoList Overdrawn { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Overdrawn property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverdrawnSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures an identifying code for the existing liability. This code is typically issued by the lender and enables the lender's systems to uniquely identify the product.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an identifying code for the existing liability. This code is typically i" +
            "ssued by the lender and enables the lender\'s systems to uniquely identify the pr" +
            "oduct.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Captures the exact amount that will be refinanced for existing liabilities.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the exact amount that will be refinanced for existing liabilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RefinanceAmount")]
        public decimal RefinanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefinanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Borrowers must state the estimated cost associated with closing a credit facility. For each liability being refinanced the applicants will provide the Estimated Exit and Break Costs payable to the outgoing finance institution.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Borrowers must state the estimated cost associated with closing a credit facility" +
            ". For each liability being refinanced the applicants will provide the Estimated " +
            "Exit and Break Costs payable to the outgoing finance institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RefinanceCosts")]
        public decimal RefinanceCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinanceCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefinanceCostsSpecified { get; set; }
        
        /// <summary>
        /// <para>For a loan that has recently been repaid, the date that it was paid out</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a loan that has recently been repaid, the date that it was paid out")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaidDate", DataType="date")]
        public System.DateTime RepaidDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaidDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaidDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Estimate of the interest rate at the end of the fixed rate period or the end of the interest only period (whichever is longer). The revert interest rate will be an estimate based on the current variable rate.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Estimate of the interest rate at the end of the fixed rate period or the end of t" +
            "he interest only period (whichever is longer). The revert interest rate will be " +
            "an estimate based on the current variable rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RevertInterestRate")]
        public decimal RevertInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RevertInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RevertInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this liability within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this liability within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates that interest accrual and payments on the liability are currently suspended.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that interest accrual and payments on the liability are currently suspe" +
            "nded.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Suspended")]
        public YesNoList Suspended { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Suspended property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuspendedSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of liability that is being described. Types include credit card limits, HECS debt, existing loans, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of liability that is being described. Types include credit car" +
            "d limits, HECS debt, existing loans, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public LiabilityTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityArrears", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityArrears
    {
        
        /// <summary>
        /// <para>Captures the amount in arrears</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount in arrears")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the number of missed payments</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of missed payments")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfMissedPayments")]
        public string NumberOfMissedPayments { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityContinuingRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityContinuingRepayment
    {
        
        /// <summary>
        /// <para>The type of loan payment schedule.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of loan payment schedule.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanPaymentScheduleType")]
        public LoanPaymentScheduleTypeList LoanPaymentScheduleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanPaymentScheduleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanPaymentScheduleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the timing of payments with respect to their payment period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the timing of payments with respect to their payment period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTiming")]
        public PaymentTimingList PaymentTiming { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTiming property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTimingSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of repayment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The total number of loan repayments.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total number of loan repayments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RemainingRepayments")]
        public string RemainingRepayments { get; set; }
        
        /// <summary>
        /// <para>The repayment expense amount associated with repaying this liability.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment expense amount associated with repaying this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentAmount")]
        public decimal RepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment frequency of the repayment associated with this liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment frequency of the repayment associated with this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentFrequency")]
        public RepaymentFrequencyList RepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the expenses associated with this liability are tax deductible.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the expenses associated with this liability are tax deductible." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxDeductible")]
        public YesNoList TaxDeductible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDeductible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxDeductibleSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityDiscountMargin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityDiscountMargin
    {
        
        /// <summary>
        /// <para>The interest rate discount margin as a dollar amount.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The interest rate discount margin as a dollar amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountedAmount")]
        public decimal DiscountedAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountedAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountedAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The interest rate discount margin as a percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The interest rate discount margin as a percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountRate")]
        public decimal DiscountRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountRateSpecified { get; set; }
        
        /// <summary>
        /// <para>An explanation of why the applicant qualifies for or is entitled to the discount claimed.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An explanation of why the applicant qualifies for or is entitled to the discount " +
            "claimed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountReason")]
        public string DiscountReason { get; set; }
        
        /// <summary>
        /// <para>The duration over which the discount is to be applied.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration over which the discount is to be applied.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Duration")]
        public string Duration { get; set; }
        
        /// <summary>
        /// <para>The units of time of the specified duration.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time of the specified duration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DurationUnits")]
        public DurationUnitsList DurationUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DurationUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this discount margin within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this discount margin within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityOriginalTerm", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityOriginalTerm
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod> _distinctLoanPeriod;
        
        /// <summary>
        /// <para>A distinct loan period, where each period may have a different payment type, interest type, rate composition.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A distinct loan period, where each period may have a different payment type, inte" +
            "rest type, rate composition.")]
        [System.Xml.Serialization.XmlElementAttribute("DistinctLoanPeriod")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod> DistinctLoanPeriod
        {
            get
            {
                return this._distinctLoanPeriod;
            }
            set
            {
                this._distinctLoanPeriod = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistinctLoanPeriod collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistinctLoanPeriodSpecified
        {
            get
            {
                return (this.DistinctLoanPeriod.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLiabilityOriginalTerm" /> class.</para>
        /// </summary>
        public PackageContentApplicationLiabilityOriginalTerm()
        {
            this._distinctLoanPeriod = new System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod>();
        }
        
        /// <summary>
        /// <para>The date when the applicant will stop/stopped making Interest Only repayments on this liability.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date when the applicant will stop/stopped making Interest Only repayments on " +
            "this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyEndDate", DataType="date")]
        public System.DateTime InterestOnlyEndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestOnlyEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestOnlyEndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the original type of interest of the liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the original type of interest of the liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestType")]
        public InterestTypeList InterestType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The original duration of the fixed interest rate period, as a whole number multiple of the Units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original duration of the fixed interest rate period, as a whole number multip" +
            "le of the Units.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestTypeDuration")]
        public string InterestTypeDuration { get; set; }
        
        /// <summary>
        /// <para>The units of time that are used to define the duration of the fixed interest rate period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time that are used to define the duration of the fixed interest rate" +
            " period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestTypeUnits")]
        public LoanTermUnitsList InterestTypeUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestTypeUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the original type of repayment of the liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the original type of repayment of the liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The original duration of the interest only period, as a whole number multiple of the Units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original duration of the interest only period, as a whole number multiple of " +
            "the Units.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTypeDuration")]
        public string PaymentTypeDuration { get; set; }
        
        /// <summary>
        /// <para>The units of time that are used to define the duration of the interest only period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time that are used to define the duration of the interest only perio" +
            "d.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTypeUnits")]
        public LoanTermUnitsList PaymentTypeUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTypeUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the original duration of the total term, as a multiple of the units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the original duration of the total term, as a multiple of the units.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalTermDuration")]
        public string TotalTermDuration { get; set; }
        
        /// <summary>
        /// <para>The units of time that are used to define the duration of the total term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time that are used to define the duration of the total term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalTermUnits")]
        public LoanTermUnitsList TotalTermUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalTermUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTermUnitsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod
    {
        
        /// <summary>
        /// <para>The duration of the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the distinct loan period.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriodRepayment> _repayment;
        
        /// <summary>
        /// <para>A repayment that is made during this period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A repayment that is made during this period.")]
        [System.Xml.Serialization.XmlElementAttribute("Repayment")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriodRepayment> Repayment
        {
            get
            {
                return this._repayment;
            }
            set
            {
                this._repayment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Repayment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentSpecified
        {
            get
            {
                return (this.Repayment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod" /> class.</para>
        /// </summary>
        public PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriod()
        {
            this._repayment = new System.Collections.Generic.List<PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriodRepayment>();
        }
        
        /// <summary>
        /// <para>The end date of the distinct loan period.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date of the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of interest that is to be paid during the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of interest that is to be paid during the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestType")]
        public InterestTypeList InterestType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of repayment that is to be made during the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of repayment that is to be made during the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this distinct loan period within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this distinct loan period within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date of the distinct loan period.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date of the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the rate composition for this distinct loan period.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the rate composition for this distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_RateComposition")]
        public string X_RateComposition { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriodRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityOriginalTermDistinctLoanPeriodRepayment
    {
        
        /// <summary>
        /// <para>A cross reference to the continuing repayment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the continuing repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContinuingRepayment")]
        public string X_ContinuingRepayment { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the repayment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Repayment")]
        public string X_Repayment { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityPackage", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityPackage
    {
        
        /// <summary>
        /// <para>Category in which the package was offered by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Category in which the package was offered by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public string Category { get; set; }
        
        /// <summary>
        /// <para>A unique code representing the product package that was offered by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code representing the product package that was offered by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Code")]
        public string Code { get; set; }
        
        /// <summary>
        /// <para>Membership identifier of the applicant issued by the Organisation the applicant claims to belong to.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Membership identifier of the applicant issued by the Organisation the applicant c" +
            "laims to belong to.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MemberID")]
        public string MemberID { get; set; }
        
        /// <summary>
        /// <para>Name of a package that the applicant previously applied for.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of a package that the applicant previously applied for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>A unique code identifying an option that previously applied to a package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code identifying an option that previously applied to a package.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OptionCode")]
        public string OptionCode { get; set; }
        
        /// <summary>
        /// <para>A code or name that identifies the organisation under which the package was offered.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code or name that identifies the organisation under which the package was offer" +
            "ed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Organisation")]
        public string Organisation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityPercentOwned", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityPercentOwned
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilityPercentOwnedOwner> _owner;
        
        /// <summary>
        /// <para>The details of the ownership of this liability, either as borrower or guarantor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details of the ownership of this liability, either as borrower or guarantor.")]
        [System.Xml.Serialization.XmlElementAttribute("Owner")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilityPercentOwnedOwner> Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                this._owner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Owner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnerSpecified
        {
            get
            {
                return (this.Owner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLiabilityPercentOwned" /> class.</para>
        /// </summary>
        public PackageContentApplicationLiabilityPercentOwned()
        {
            this._owner = new System.Collections.Generic.List<PackageContentApplicationLiabilityPercentOwnedOwner>();
        }
        
        /// <summary>
        /// <para>Flag to indicate whether the ownership proportions are equal across all owners, specified individually for each one, or not specified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the ownership proportions are equal across all owners, s" +
            "pecified individually for each one, or not specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Proportions")]
        public ProportionsList Proportions { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Proportions property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProportionsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityPercentOwnedOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityPercentOwnedOwner
    {
        
        /// <summary>
        /// <para>Describes whether the linked party is a borrower or guarantor on this liability.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Describes whether the linked party is a borrower or guarantor on this liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OwnerType")]
        public ApplicantTypeList OwnerType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnerType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnerTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the percentage of the liability that the linked party is responsible for.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the percentage of the liability that the linked party is responsible for" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Percent")]
        public decimal Percent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentSpecified { get; set; }
        
        /// <summary>
        /// <para>A reference to a party that is an responsible for the liability.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to a party that is an responsible for the liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Party")]
        public string X_Party { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityRateComposition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityRateComposition
    {
        
        /// <summary>
        /// <para>The base rate on which other rates are calculated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The base rate on which other rates are calculated.")]
        [System.Xml.Serialization.XmlElementAttribute("BaseRate")]
        public PackageContentApplicationLiabilityRateCompositionBaseRate BaseRate { get; set; }
        
        /// <summary>
        /// <para>The customer risk margin added (as a percentage) based on the risk the customer presents to the bank.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The customer risk margin added (as a percentage) based on the risk the customer p" +
            "resents to the bank.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerRiskMargin")]
        public decimal CustomerRiskMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomerRiskMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerRiskMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>The details of the rate are disclosed to the customer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details of the rate are disclosed to the customer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DisclosedToCustomer")]
        public YesNoList DisclosedToCustomer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DisclosedToCustomer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisclosedToCustomerSpecified { get; set; }
        
        /// <summary>
        /// <para>The introductory margin added (as a percentage) during the introductory period or honeymoon period.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The introductory margin added (as a percentage) during the introductory period or" +
            " honeymoon period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntroductoryMargin")]
        public decimal IntroductoryMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntroductoryMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntroductoryMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment type margin added (as a percentage) based on the payment type.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment type margin added (as a percentage) based on the payment type.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTypeMargin")]
        public decimal PaymentTypeMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTypeMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>The pricing construct used to calculate the Total Interest Rate. For example, Base Rate + Term Premium + Product Margin + Customer Risk Margin.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The pricing construct used to calculate the Total Interest Rate. For example, Bas" +
            "e Rate + Term Premium + Product Margin + Customer Risk Margin.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PricingConstruct")]
        public string PricingConstruct { get; set; }
        
        /// <summary>
        /// <para>The product margin added (as a percentage) based on the specific product type.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The product margin added (as a percentage) based on the specific product type.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductMargin")]
        public decimal ProductMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>The term premium added (as a percentage) based on the loan term.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The term premium added (as a percentage) based on the loan term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TermPremium")]
        public decimal TermPremium { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TermPremium property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TermPremiumSpecified { get; set; }
        
        /// <summary>
        /// <para>The total interest rate for this rate composition scheme.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total interest rate for this rate composition scheme.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalInterestRate")]
        public decimal TotalInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityRateCompositionBaseRate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityRateCompositionBaseRate
    {
        
        /// <summary>
        /// <para>The base rate code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The base rate code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Code")]
        public string Code { get; set; }
        
        /// <summary>
        /// <para>The base rate name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The base rate name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>The base rate as a percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The base rate as a percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Rate")]
        public decimal Rate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityRemainingTerm", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityRemainingTerm
    {
        
        /// <summary>
        /// <para>The duration of the remaining term.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the remaining term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Duration")]
        public string Duration { get; set; }
        
        /// <summary>
        /// <para>The units used to define the duration of the remaining term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units used to define the duration of the remaining term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Units")]
        public LoanTermUnitsList Units { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Units property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilityRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilityRepayment
    {
        
        /// <summary>
        /// <para>The type of loan payment schedule.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of loan payment schedule.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanPaymentScheduleType")]
        public LoanPaymentScheduleTypeList LoanPaymentScheduleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanPaymentScheduleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanPaymentScheduleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the timing of payments with respect to their payment period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the timing of payments with respect to their payment period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTiming")]
        public PaymentTimingList PaymentTiming { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTiming property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTimingSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the type of repayment that is to be made during the specified term</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the type of repayment that is to be made during the specified term")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether payments are regular (same amount on regular intervals) or structured (irregular intervals and/or amounts).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether payments are regular (same amount on regular intervals) " +
            "or structured (irregular intervals and/or amounts).")]
        [System.Xml.Serialization.XmlAttributeAttribute("Regular")]
        public YesNoList Regular { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Regular property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegularSpecified { get; set; }
        
        /// <summary>
        /// <para>The total number of loan repayments.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total number of loan repayments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RemainingRepayments")]
        public string RemainingRepayments { get; set; }
        
        /// <summary>
        /// <para>The repayment expense amount associated with repaying this loan</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment expense amount associated with repaying this loan")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentAmount")]
        public decimal RepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment frequency of the repayment associated with this loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment frequency of the repayment associated with this loan")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentFrequency")]
        public RepaymentFrequencyList RepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the expenses associated with a liability are tax deductible (yes) or not tax deductible (no)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the expenses associated with a liability are tax deductible (ye" +
            "s) or not tax deductible (no)")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxDeductible")]
        public YesNoList TaxDeductible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDeductible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxDeductibleSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilitySecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilitySecurity
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLiabilitySecurityMortgagorDetails> _mortgagorDetails;
        
        /// <summary>
        /// <para>Details of the mortgagor(s) for the security for the liability</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the mortgagor(s) for the security for the liability")]
        [System.Xml.Serialization.XmlElementAttribute("MortgagorDetails")]
        public System.Collections.Generic.List<PackageContentApplicationLiabilitySecurityMortgagorDetails> MortgagorDetails
        {
            get
            {
                return this._mortgagorDetails;
            }
            set
            {
                this._mortgagorDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the MortgagorDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MortgagorDetailsSpecified
        {
            get
            {
                return (this.MortgagorDetails.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLiabilitySecurity" /> class.</para>
        /// </summary>
        public PackageContentApplicationLiabilitySecurity()
        {
            this._mortgagorDetails = new System.Collections.Generic.List<PackageContentApplicationLiabilitySecurityMortgagorDetails>();
        }
        
        /// <summary>
        /// <para>Security agreement details for this security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security agreement details for this security.")]
        [System.Xml.Serialization.XmlElementAttribute("SecurityAgreement")]
        public SecurityAgreementType SecurityAgreement { get; set; }
        
        /// <summary>
        /// <para>The identifying number of the mortgage that links the security to the loan</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The identifying number of the mortgage that links the security to the loan")]
        [System.Xml.Serialization.XmlAttributeAttribute("MortgageNumber")]
        public string MortgageNumber { get; set; }
        
        /// <summary>
        /// <para>The priority of this lender's mortgage on the security property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The priority of this lender\'s mortgage on the security property")]
        [System.Xml.Serialization.XmlAttributeAttribute("Priority")]
        public SecurityPriorityList Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Priority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified { get; set; }
        
        /// <summary>
        /// <para>The maximum dollar amount that the mortgagee is entitled to recover under the mortgage, to repay loaned funds including principal, interest and fees.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The maximum dollar amount that the mortgagee is entitled to recover under the mor" +
            "tgage, to repay loaned funds including principal, interest and fees.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PriorityAmount")]
        public decimal PriorityAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriorityAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriorityAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Contains a reference link to the security (real estate or non real estate asset)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference link to the security (real estate or non real estate asset)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilitySecurityMortgagorDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilitySecurityMortgagorDetails
    {
        
        /// <summary>
        /// <para>Flag to indicate whether a change of name form is required for the mortgage document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a change of name form is required for the mortgage docum" +
            "ent")]
        [System.Xml.Serialization.XmlAttributeAttribute("ChangeNameFormRequired")]
        public YesNoList ChangeNameFormRequired { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChangeNameFormRequired property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChangeNameFormRequiredSpecified { get; set; }
        
        /// <summary>
        /// <para>The name of the mortgagor matching the existing name on the record</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the mortgagor matching the existing name on the record")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Reference link to a mortgagor for the security. If a change of name is required, the new name will be constructed from the granular name fields of the linked Party</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference link to a mortgagor for the security. If a change of name is required, " +
            "the new name will be constructed from the granular name fields of the linked Par" +
            "ty")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Mortgagor")]
        public string X_Mortgagor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLiabilitySoftware", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLiabilitySoftware
    {
        
        /// <summary>
        /// <para>A description of the software provider, for example the company name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the software provider, for example the company name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The name of the software application used by the liability originator.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the software application used by the liability originator.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetails
    {
        
        /// <summary>
        /// <para>The level of authority required to operate the account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The level of authority required to operate the account.")]
        [System.Xml.Serialization.XmlElementAttribute("AuthorityToOperate")]
        public PackageContentApplicationLoanDetailsAuthorityToOperate AuthorityToOperate { get; set; }
        
        /// <summary>
        /// <para>Identifies the parties that are prospective borrowers on this loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the parties that are prospective borrowers on this loan account.")]
        [System.Xml.Serialization.XmlElementAttribute("Borrowers")]
        public PackageContentApplicationLoanDetailsBorrowers Borrowers { get; set; }
        
        /// <summary>
        /// <para>A bulk reduction is a scheduled future lump sum principal repayment. For example, the applicant may be yet to sell their home so take out bridging finance in order to fund the purchase of their new home pending the sale of their existing home. When the existing home is sold, they will make a lump sum payment in reduction of the loan. This payment is the bulk reduction. Another example would be where the applicant is expecting a superannuation payout.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A bulk reduction is a scheduled future lump sum principal repayment. For example, the applicant may be yet to sell their home so take out bridging finance in order to fund the purchase of their new home pending the sale of their existing home. When the existing home is sold, they will make a lump sum payment in reduction of the loan. This payment is the bulk reduction. Another example would be where the applicant is expecting a superannuation payout.")]
        [System.Xml.Serialization.XmlElementAttribute("BulkReduction")]
        public PackageContentApplicationLoanDetailsBulkReduction BulkReduction { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsCommission> _commission;
        
        /// <summary>
        /// <para>Contains information relating to the commission to be paid to the business partner that has sourced the loan application for the lender. This partner is typically a third party such as a mortgage aggregator or brokerage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information relating to the commission to be paid to the business partne" +
            "r that has sourced the loan application for the lender. This partner is typicall" +
            "y a third party such as a mortgage aggregator or brokerage.")]
        [System.Xml.Serialization.XmlElementAttribute("Commission")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsCommission> Commission
        {
            get
            {
                return this._commission;
            }
            set
            {
                this._commission = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Commission collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionSpecified
        {
            get
            {
                return (this.Commission.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetails" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetails()
        {
            this._commission = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsCommission>();
            this._discountMargin = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsDiscountMargin>();
            this._fundsDisbursement = new System.Collections.Generic.List<FundsDisbursementType>();
            this._guarantor = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsGuarantor>();
            this._lendingPurpose = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsLendingPurpose>();
            this._package = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsPackage>();
            this._rateComposition = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsRateComposition>();
            this._security = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsSecurity>();
            this._supplementaryCardholder = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsSupplementaryCardholder>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsDiscountMargin> _discountMargin;
        
        /// <summary>
        /// <para>Contains information about a discount in relation to the loan facility that the applicant claims they are entitled to. The discount claimed may be in the form of either a rate reduction margin or a dollar amount. The discount claimed is different from, and therefore may be in addition to, a general special offer that applies to all applicants, or discount that is available under a product package.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Contains information about a discount in relation to the loan facility that the applicant claims they are entitled to. The discount claimed may be in the form of either a rate reduction margin or a dollar amount. The discount claimed is different from, and therefore may be in addition to, a general special offer that applies to all applicants, or discount that is available under a product package.")]
        [System.Xml.Serialization.XmlElementAttribute("DiscountMargin")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsDiscountMargin> DiscountMargin
        {
            get
            {
                return this._discountMargin;
            }
            set
            {
                this._discountMargin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DiscountMargin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountMarginSpecified
        {
            get
            {
                return (this.DiscountMargin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains information specifying where the lender is to send the loan documents once the loan has been approved. This nomination over-rides an equivalent one at the Application level.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information specifying where the lender is to send the loan documents on" +
            "ce the loan has been approved. This nomination over-rides an equivalent one at t" +
            "he Application level.")]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationInstructions")]
        public DocumentationInstructionsType DocumentationInstructions { get; set; }
        
        /// <summary>
        /// <para>Indicates whether this loan is a Defence Service Housing loan under the program between the Commonwealth Government and Westpac Banking Corporation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this loan is a Defence Service Housing loan under the program b" +
            "etween the Commonwealth Government and Westpac Banking Corporation.")]
        [System.Xml.Serialization.XmlElementAttribute("DSH")]
        public PackageContentApplicationLoanDetailsDSH DSH { get; set; }
        
        /// <summary>
        /// <para>Contains information about the loan amount requested that applies only when the loan product being applied for is a reverse mortgage, or equity release.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the loan amount requested that applies only when the l" +
            "oan product being applied for is a reverse mortgage, or equity release.")]
        [System.Xml.Serialization.XmlElementAttribute("EquityRelease")]
        public PackageContentApplicationLoanDetailsEquityRelease EquityRelease { get; set; }
        
        /// <summary>
        /// <para>Contains information about the product features requested by the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the product features requested by the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("FeaturesSelected")]
        public PackageContentApplicationLoanDetailsFeaturesSelected FeaturesSelected { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FundsDisbursementType> _fundsDisbursement;
        
        /// <summary>
        /// <para>Specification of how funds are to be distributed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specification of how funds are to be distributed.")]
        [System.Xml.Serialization.XmlElementAttribute("FundsDisbursement")]
        public System.Collections.Generic.List<FundsDisbursementType> FundsDisbursement
        {
            get
            {
                return this._fundsDisbursement;
            }
            set
            {
                this._fundsDisbursement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FundsDisbursement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FundsDisbursementSpecified
        {
            get
            {
                return (this.FundsDisbursement.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsGuarantor> _guarantor;
        
        /// <summary>
        /// <para>A reference to the party that is applying to be a guarantor on this loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the party that is applying to be a guarantor on this loan account." +
            "")]
        [System.Xml.Serialization.XmlElementAttribute("Guarantor")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsGuarantor> Guarantor
        {
            get
            {
                return this._guarantor;
            }
            set
            {
                this._guarantor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Guarantor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuarantorSpecified
        {
            get
            {
                return (this.Guarantor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsLendingPurpose> _lendingPurpose;
        
        /// <summary>
        /// <para>Details of the purpose for which the applicant intends to use the loan funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the purpose for which the applicant intends to use the loan funds.")]
        [System.Xml.Serialization.XmlElementAttribute("LendingPurpose")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsLendingPurpose> LendingPurpose
        {
            get
            {
                return this._lendingPurpose;
            }
            set
            {
                this._lendingPurpose = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LendingPurpose collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LendingPurposeSpecified
        {
            get
            {
                return (this.LendingPurpose.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains information about the main purpose for which the applicant intends to use the loan funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the main purpose for which the applicant intends to us" +
            "e the loan funds.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanPurpose")]
        public PackageContentApplicationLoanDetailsLoanPurpose LoanPurpose { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsPackage> _package;
        
        /// <summary>
        /// <para>Contains information about a package option that may be available for the individual loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about a package option that may be available for the individ" +
            "ual loan account.")]
        [System.Xml.Serialization.XmlElementAttribute("Package")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsPackage> Package
        {
            get
            {
                return this._package;
            }
            set
            {
                this._package = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Package collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PackageSpecified
        {
            get
            {
                return (this.Package.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains information that specifies how the borrower(s) intend to make regular or structured repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information that specifies how the borrower(s) intend to make regular or" +
            " structured repayments.")]
        [System.Xml.Serialization.XmlElementAttribute("ProposedRepayment")]
        public PackageContentApplicationLoanDetailsProposedRepayment ProposedRepayment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsRateComposition> _rateComposition;
        
        /// <summary>
        /// <para>The structure of the interest rate to the borrower, based on the delivery rate with applied margins</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The structure of the interest rate to the borrower, based on the delivery rate wi" +
            "th applied margins")]
        [System.Xml.Serialization.XmlElementAttribute("RateComposition")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsRateComposition> RateComposition
        {
            get
            {
                return this._rateComposition;
            }
            set
            {
                this._rateComposition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RateComposition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateCompositionSpecified
        {
            get
            {
                return (this.RateComposition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsSecurity> _security;
        
        /// <summary>
        /// <para>Contains a reference to a security property that is submitted with the loan application, and information about the relationship between the subject loan account and that security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to a security property that is submitted with the loan appli" +
            "cation, and information about the relationship between the subject loan account " +
            "and that security property.")]
        [System.Xml.Serialization.XmlElementAttribute("Security")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsSecurity> Security
        {
            get
            {
                return this._security;
            }
            set
            {
                this._security = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Security collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecuritySpecified
        {
            get
            {
                return (this.Security.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The software application used by the loan originator.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The software application used by the loan originator.")]
        [System.Xml.Serialization.XmlElementAttribute("Software")]
        public PackageContentApplicationLoanDetailsSoftware Software { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsSupplementaryCardholder> _supplementaryCardholder;
        
        /// <summary>
        /// <para>Contains a link to a supplementary (non liable) cardholder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a link to a supplementary (non liable) cardholder.")]
        [System.Xml.Serialization.XmlElementAttribute("SupplementaryCardholder")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsSupplementaryCardholder> SupplementaryCardholder
        {
            get
            {
                return this._supplementaryCardholder;
            }
            set
            {
                this._supplementaryCardholder = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the SupplementaryCardholder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupplementaryCardholderSpecified
        {
            get
            {
                return (this.SupplementaryCardholder.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Details of the total term of the credit product and any introductory terms, such as an interest only term (including interest only reasons) or a fixed rate term that applies for an initial period at the start of the product.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the total term of the credit product and any introductory terms, such " +
            "as an interest only term (including interest only reasons) or a fixed rate term " +
            "that applies for an initial period at the start of the product.")]
        [System.Xml.Serialization.XmlElementAttribute("Term")]
        public PackageContentApplicationLoanDetailsTerm Term { get; set; }
        
        /// <summary>
        /// <para>Captures the loan amount as requested by the applicant for this loan account, exclusive of to-be-capitalised fees and/or LMI.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the loan amount as requested by the applicant for this loan account, exc" +
            "lusive of to-be-capitalised fees and/or LMI.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmountRequested")]
        public decimal AmountRequested { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmountRequested property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountRequestedSpecified { get; set; }
        
        /// <summary>
        /// <para>The proposed nominated balloon repayment amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The proposed nominated balloon repayment amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("BalloonRepaymentAmount")]
        public decimal BalloonRepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonRepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalloonRepaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The expected date of the proposed balloon repayment</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The expected date of the proposed balloon repayment")]
        [System.Xml.Serialization.XmlAttributeAttribute("BalloonRepaymentDate", DataType="date")]
        public System.DateTime BalloonRepaymentDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonRepaymentDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalloonRepaymentDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the date that the applicant estimates that the application will settle.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date that the applicant estimates that the application will settle.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedSettlementDate", DataType="date")]
        public System.DateTime EstimatedSettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedSettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedSettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the name of the loan funder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of the loan funder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Funder")]
        public FunderList Funder { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Funder property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FunderSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of credit facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of credit facility.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanType")]
        public LoanTypeList LoanType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Loan to value ratio.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan to value ratio.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LVR")]
        public decimal LVR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LVR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LVRSpecified { get; set; }
        
        /// <summary>
        /// <para>Where a lender requires that the applicant nominate one loan account/product as being the primary or main account within a package or portfolio or accounts, indicates whether this is the main account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where a lender requires that the applicant nominate one loan account/product as b" +
            "eing the primary or main account within a package or portfolio or accounts, indi" +
            "cates whether this is the main account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainProduct")]
        public YesNoList MainProduct { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MainProduct property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MainProductSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the interest and maintenance expense will be greater than the rental income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the interest and maintenance expense will be greater than the r" +
            "ental income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NegativelyGeared")]
        public YesNoList NegativelyGeared { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NegativelyGeared property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegativelyGearedSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a balloon repayment is proposed (yes) or not proposed (no)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a balloon repayment is proposed (yes) or not proposed (n" +
            "o)")]
        [System.Xml.Serialization.XmlAttributeAttribute("NominateBalloonRepayment")]
        public YesNoList NominateBalloonRepayment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NominateBalloonRepayment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NominateBalloonRepaymentSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique identifier assigned to the loan detail by the originator system</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identifier assigned to the loan detail by the originator system")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginatorReferenceID")]
        public string OriginatorReferenceID { get; set; }
        
        /// <summary>
        /// <para>Captures an identifying code for the loan product applied for. This code is typically issued by the lender and enables the lender's systems to uniquely identify the product.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an identifying code for the loan product applied for. This code is typic" +
            "ally issued by the lender and enables the lender\'s systems to uniquely identify " +
            "the product.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>Captures the name of the loan product applied for.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of the loan product applied for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductName")]
        public string ProductName { get; set; }
        
        /// <summary>
        /// <para>The interest rate that applies to the loan account. Typically expressed as an annual interest rate.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The interest rate that applies to the loan account. Typically expressed as an ann" +
            "ual interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProposedAnnualInterestRate")]
        public decimal ProposedAnnualInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProposedAnnualInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProposedAnnualInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Estimate of the interest rate at the end of the fixed rate period or the end of the interest only period (whichever is longer). The revert interest rate will be an estimate based on the current variable rate.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Estimate of the interest rate at the end of the fixed rate period or the end of t" +
            "he interest only period (whichever is longer). The revert interest rate will be " +
            "an estimate based on the current variable rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RevertInterestRate")]
        public decimal RevertInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RevertInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RevertInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Whether the credit product is to be secured or not.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whether the credit product is to be secured or not.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Secured")]
        public YesNoList Secured { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Secured property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecuredSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this loan details within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this loan details within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Captures a lender issued code that identifies a program of the lender that provides certain specified concessions for the loan applied for.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a lender issued code that identifies a program of the lender that provid" +
            "es certain specified concessions for the loan applied for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SpecialConcessionCode")]
        public string SpecialConcessionCode { get; set; }
        
        /// <summary>
        /// <para>Indicates preferred frequency for statements</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates preferred frequency for statements")]
        [System.Xml.Serialization.XmlAttributeAttribute("StatementCycle")]
        public StatementCycleList StatementCycle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementCycle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementCycleSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate if the loan repayments are tax deductible</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate if the loan repayments are tax deductible")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxDeductible")]
        public YesNoList TaxDeductible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDeductible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxDeductibleSpecified { get; set; }
        
        /// <summary>
        /// <para>Allow user to preconfigured the Loan attributes at the message receiving end</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allow user to preconfigured the Loan attributes at the message receiving end")]
        [System.Xml.Serialization.XmlAttributeAttribute("TemplateID")]
        public string TemplateID { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>For a loan application under a master agreement, the link to the agreement details</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a loan application under a master agreement, the link to the agreement detail" +
            "s")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MasterAgreement")]
        public string X_MasterAgreement { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsAuthorityToOperate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsAuthorityToOperate
    {
        
        /// <summary>
        /// <para>The method of operation for the account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The method of operation for the account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MethodOfOperation")]
        public MethodOfOperationList MethodOfOperation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MethodOfOperation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodOfOperationSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsBorrowers", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsBorrowers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsBorrowersOwner> _owner;
        
        /// <summary>
        /// <para>Container that associates a reference to an owner or other responsible party with the percentage of the item that they own or are responsible for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container that associates a reference to an owner or other responsible party with" +
            " the percentage of the item that they own or are responsible for.")]
        [System.Xml.Serialization.XmlElementAttribute("Owner")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsBorrowersOwner> Owner
        {
            get
            {
                return this._owner;
            }
            set
            {
                this._owner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Owner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnerSpecified
        {
            get
            {
                return (this.Owner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsBorrowers" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsBorrowers()
        {
            this._owner = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsBorrowersOwner>();
        }
        
        /// <summary>
        /// <para>Flag to indicate whether the ownership proportions are equal across all owners, specified individually for each one, or not specified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the ownership proportions are equal across all owners, s" +
            "pecified individually for each one, or not specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Proportions")]
        public ProportionsList Proportions { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Proportions property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProportionsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsBorrowersOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsBorrowersOwner
    {
        
        /// <summary>
        /// <para>Captures the percentage of the item that referenced party owns or is responsible for.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the percentage of the item that referenced party owns or is responsible " +
            "for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Percent")]
        public decimal Percent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to a party that is an owner of the item, or has a similar relationship such as a borrower or beneficiary.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to a party that is an owner of the item, or has a similar re" +
            "lationship such as a borrower or beneficiary.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Party")]
        public string X_Party { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsBulkReduction", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsBulkReduction
    {
        
        /// <summary>
        /// <para>The amount of the future bulk reduction repayment.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of the future bulk reduction repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which it is anticipated that the bulk reduction repayment will be made.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which it is anticipated that the bulk reduction repayment will be mad" +
            "e.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedDate", DataType="date")]
        public System.DateTime EstimatedDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsCommission", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsCommission
    {
        
        /// <summary>
        /// <para>The amount of upfront commission to be paid to the sales channel in the event that loan application settles.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of upfront commission to be paid to the sales channel in the event tha" +
            "t loan application settles.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionAmount")]
        public decimal CommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a commission is payable to the sales channel in respect of the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a commission is payable to the sales channel in respect of the " +
            "loan application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionPaid")]
        public YesNoList CommissionPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the commission plan involves payment of an upfront commission only, an upfront commission and a trail commission, a trail commission only, or another type of structure.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the commission plan involves payment of an upfront commission o" +
            "nly, an upfront commission and a trail commission, a trail commission only, or a" +
            "nother type of structure.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionStructure")]
        public CommissionStructureList CommissionStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the commission structure if an accurate description is not specified in the enumerated values. Must be provided when Commission Structure = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the commission structure if an accurate description is not speci" +
            "fied in the enumerated values. Must be provided when Commission Structure = \"Oth" +
            "er\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherCommissionStructureDescription")]
        public string OtherCommissionStructureDescription { get; set; }
        
        /// <summary>
        /// <para>A code that specifies a particular promotion or special commission offer that applies to the loan application, specified by the submitting sales channel in order to tag the deal with the promotion code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code that specifies a particular promotion or special commission offer that app" +
            "lies to the loan application, specified by the submitting sales channel in order" +
            " to tag the deal with the promotion code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PromotionCode")]
        public string PromotionCode { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the sales channel is a third party referrer of business for the purpose of commission disclosure requirements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the sales channel is a third party referrer of business for the" +
            " purpose of commission disclosure requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ThirdPartyReferee")]
        public YesNoList ThirdPartyReferee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdPartyReferee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThirdPartyRefereeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the trail commission percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the trail commission percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Trail")]
        public decimal Trail { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Trail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrailSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the upfront commission percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the upfront commission percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UpfrontPayment")]
        public decimal UpfrontPayment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpfrontPayment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpfrontPaymentSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsDiscountMargin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsDiscountMargin
    {
        
        /// <summary>
        /// <para>Captures the dollar amount of the discount the applicant claims they qualify for or are entitled to. The dollar amount is to be deducted from the calculated periodic repayment.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the dollar amount of the discount the applicant claims they qualify for " +
            "or are entitled to. The dollar amount is to be deducted from the calculated peri" +
            "odic repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountedAmount")]
        public decimal DiscountedAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountedAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountedAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the percentage rate discount the applicant claims they qualify for or are entitled to. If the discount is for 0.6% off the variable rate which is 6.5%, the value to be entered in this field should be '0.6'. If the borrower gets 0.5 in addition to 0.2, then the net Discount Rate will be 0.7</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Captures the percentage rate discount the applicant claims they qualify for or are entitled to. If the discount is for 0.6% off the variable rate which is 6.5%, the value to be entered in this field should be '0.6'. If the borrower gets 0.5 in addition to 0.2, then the net Discount Rate will be 0.7")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountRate")]
        public decimal DiscountRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures an explanation of why the applicant qualifies for or is entitled to the discount claimed.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an explanation of why the applicant qualifies for or is entitled to the " +
            "discount claimed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountReason")]
        public string DiscountReason { get; set; }
        
        /// <summary>
        /// <para>The duration over which the discount is to be applied</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration over which the discount is to be applied")]
        [System.Xml.Serialization.XmlAttributeAttribute("Duration")]
        public string Duration { get; set; }
        
        /// <summary>
        /// <para>The units of time of the specified duration</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time of the specified duration")]
        [System.Xml.Serialization.XmlAttributeAttribute("DurationUnits")]
        public DurationUnitsList DurationUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DurationUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this discount margin within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this discount margin within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsDSH", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsDSH
    {
        
        /// <summary>
        /// <para>Under the DSH loan program, a certificate of assignment assigns the subsidy that is paid by the Commonwealth to a credit provider if, in accordance with the certificate, the credit provider makes an advance to another person (the assignee). If there is an assignment certificate, the details of the certificate are captured here.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Under the DSH loan program, a certificate of assignment assigns the subsidy that is paid by the Commonwealth to a credit provider if, in accordance with the certificate, the credit provider makes an advance to another person (the assignee). If there is an assignment certificate, the details of the certificate are captured here.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssignmentCertificate")]
        public string AssignmentCertificate { get; set; }
        
        /// <summary>
        /// <para>Under the Defence Services Housing loan program, a certificate of entitlement certifies that a subsidy is payable by the Commonwealth to the credit provider if, in accordance with the agreement, the credit provider makes that advance to the applicant or the assignee of the applicant. If there is an entitlement certificate, details of the certificate must be provided.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Under the Defence Services Housing loan program, a certificate of entitlement certifies that a subsidy is payable by the Commonwealth to the credit provider if, in accordance with the agreement, the credit provider makes that advance to the applicant or the assignee of the applicant. If there is an entitlement certificate, details of the certificate must be provided.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EntitlementCertificate")]
        public string EntitlementCertificate { get; set; }
        
        /// <summary>
        /// <para>Under the Defence Services Housing loan program, the Commonwealth's file number for the qualifying applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Under the Defence Services Housing loan program, the Commonwealth\'s file number f" +
            "or the qualifying applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FileNumber")]
        public string FileNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates that the DSH loan being applied for is subsidised</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the DSH loan being applied for is subsidised")]
        [System.Xml.Serialization.XmlAttributeAttribute("Subsidised")]
        public YesNoList Subsidised { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subsidised property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubsidisedSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the DSH loan being applied for is a supplement to an existing DSH loan, whereby additional available DSH loan funds are advanced to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the DSH loan being applied for is a supplement to an existing DSH " +
            "loan, whereby additional available DSH loan funds are advanced to the applicant." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("Supplement")]
        public YesNoList Supplement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Supplement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupplementSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsEquityRelease", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsEquityRelease
    {
        
        /// <summary>
        /// <para>Captures information about the bond that the applicant intends to deposit with an aged-care facility when they taking up residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the bond that the applicant intends to deposit with an" +
            " aged-care facility when they taking up residence.")]
        [System.Xml.Serialization.XmlElementAttribute("AccommodationBond")]
        public PackageContentApplicationLoanDetailsEquityReleaseAccommodationBond AccommodationBond { get; set; }
        
        /// <summary>
        /// <para>For a reverse mortgage, contains information about the way that the applicant wants the loan funds to be advanced. The loan amount requested may be advanced in combinations of the following: 1. a lump sum paid at settlement; 2. instalment amounts paid periodically; and/or 3) a cash reserve amount that may be drawn down at will.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"For a reverse mortgage, contains information about the way that the applicant wants the loan funds to be advanced. The loan amount requested may be advanced in combinations of the following: 1. a lump sum paid at settlement; 2. instalment amounts paid periodically; and/or 3) a cash reserve amount that may be drawn down at will.")]
        [System.Xml.Serialization.XmlElementAttribute("Amount")]
        public PackageContentApplicationLoanDetailsEquityReleaseAmount Amount { get; set; }
        
        /// <summary>
        /// <para>Contains information about instalment payments, including the amount, number and regularity, and start date for the payments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about instalment payments, including the amount, number and " +
            "regularity, and start date for the payments.")]
        [System.Xml.Serialization.XmlElementAttribute("Instalments")]
        public PackageContentApplicationLoanDetailsEquityReleaseInstalments Instalments { get; set; }
        
        /// <summary>
        /// <para>An applicant for a reverse mortgage may specify that a percentage of the equity in the security property be protected against the increasing balance of the loan, to preserve it for the borrower's future needs. The lender cannot use proceeds of sale of the property that relate to the protected equity portion of the loan to repay the outstanding balance of the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An applicant for a reverse mortgage may specify that a percentage of the equity in the security property be protected against the increasing balance of the loan, to preserve it for the borrower's future needs. The lender cannot use proceeds of sale of the property that relate to the protected equity portion of the loan to repay the outstanding balance of the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProtectedEquity")]
        public YesNoList ProtectedEquity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProtectedEquity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProtectedEquitySpecified { get; set; }
        
        /// <summary>
        /// <para>If a percentage of the applicant's equity in the security property is to be protected, specifies the percentage of equity protected.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If a percentage of the applicant\'s equity in the security property is to be prote" +
            "cted, specifies the percentage of equity protected.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProtectedEquityPercentage")]
        public decimal ProtectedEquityPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProtectedEquityPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProtectedEquityPercentageSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsEquityReleaseAccommodationBond", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsEquityReleaseAccommodationBond
    {
        
        /// <summary>
        /// <para>For an accommodation bond, the expected date that the aged person will take up residence in the aged care facility must be provided.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an accommodation bond, the expected date that the aged person will take up re" +
            "sidence in the aged care facility must be provided.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpectedAdmissionDate", DataType="date")]
        public System.DateTime ExpectedAdmissionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpectedAdmissionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpectedAdmissionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>For an accommodation bond, the name of the aged care facility that will receive the accommodation bond must be provided - the "aged care facility name";</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an accommodation bond, the name of the aged care facility that will receive t" +
            "he accommodation bond must be provided - the \"aged care facility name\";")]
        [System.Xml.Serialization.XmlAttributeAttribute("ServiceProviderName")]
        public string ServiceProviderName { get; set; }
        
        /// <summary>
        /// <para>For an accommodation bond, the service provider number of the aged care facility, probably the unique RACS ID (Residential Aged Care Service) allocated by the Department of Health and Ageing must be provided</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an accommodation bond, the service provider number of the aged care facility," +
            " probably the unique RACS ID (Residential Aged Care Service) allocated by the De" +
            "partment of Health and Ageing must be provided")]
        [System.Xml.Serialization.XmlAttributeAttribute("ServiceProviderNumber")]
        public string ServiceProviderNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsEquityReleaseAmount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsEquityReleaseAmount
    {
        
        /// <summary>
        /// <para>For a reverse mortgage, captures the percentage of the value of the security property that the applicant requests to borrow. This is provided as an as an alternative to specifying an absolute loan amount. The actual loan amount will be calculated once the valuation of the security property has been completed.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"For a reverse mortgage, captures the percentage of the value of the security property that the applicant requests to borrow. This is provided as an as an alternative to specifying an absolute loan amount. The actual loan amount will be calculated once the valuation of the security property has been completed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CalculateAsPercentage")]
        public decimal CalculateAsPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CalculateAsPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalculateAsPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the amount of the total loan amount requested that is to be advanced to the applicant as a cash reserve. Also known as a line of credit.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the total loan amount requested that is to be advanced to " +
            "the applicant as a cash reserve. Also known as a line of credit.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CashReserve")]
        public decimal CashReserve { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CashReserve property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CashReserveSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the amount of the total loan amount requested that is to be advanced to the applicant in instalments. This amount is the sum of the instalment payments.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the total loan amount requested that is to be advanced to " +
            "the applicant in instalments. This amount is the sum of the instalment payments." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("InstalmentsAmount")]
        public decimal InstalmentsAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InstalmentsAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstalmentsAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the amount of the total loan amount requested that is to be advanced to the applicant as a lump sum at settlement.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the total loan amount requested that is to be advanced to " +
            "the applicant as a lump sum at settlement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LumpSum")]
        public decimal LumpSum { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LumpSum property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LumpSumSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount of the loan advanced may vary if the amount the security property is valued at differs from the applicant's estimate of its value. The applicant may be able to specify what component of the payment should be varied in this situation. The applicant may specify that one of the lump sum amount OR the cash reserve amount OR the periodic payment be varied by any shortfall or surplus when the valuation amount differs from the applicant's estimate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The amount of the loan advanced may vary if the amount the security property is valued at differs from the applicant's estimate of its value. The applicant may be able to specify what component of the payment should be varied in this situation. The applicant may specify that one of the lump sum amount OR the cash reserve amount OR the periodic payment be varied by any shortfall or surplus when the valuation amount differs from the applicant's estimate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("VaryOnValuation")]
        public VaryOnValuationList VaryOnValuation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VaryOnValuation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VaryOnValuationSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsEquityReleaseInstalments", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsEquityReleaseInstalments
    {
        
        /// <summary>
        /// <para>For instalment payments with a specified amount, the amount of the monthly (or other period ) payments must be provided.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For instalment payments with a specified amount, the amount of the monthly (or ot" +
            "her period ) payments must be provided.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmountPerInstalment")]
        public decimal AmountPerInstalment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmountPerInstalment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountPerInstalmentSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of instalment payments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of instalment payments")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public InstalmentsFrequencyList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant may elect to have their instalment payments indexed in order to adjust for inflation. The applicant must be able to specify if their instalment payments are to be indexed, and if so the rate of indexation to be applied.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant may elect to have their instalment payments indexed in order to adj" +
            "ust for inflation. The applicant must be able to specify if their instalment pay" +
            "ments are to be indexed, and if so the rate of indexation to be applied.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Indexed")]
        public YesNoList Indexed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Indexed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexedSpecified { get; set; }
        
        /// <summary>
        /// <para>If instalment payments are to be indexed, specifies the percentage rate of indexation to be applied.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If instalment payments are to be indexed, specifies the percentage rate of indexa" +
            "tion to be applied.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndexRate")]
        public decimal IndexRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndexRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexRateSpecified { get; set; }
        
        /// <summary>
        /// <para>For instalment payments without a specified amount, the number of instalment payments to be made must be provided</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For instalment payments without a specified amount, the number of instalment paym" +
            "ents to be made must be provided")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfInstalments")]
        public string NumberOfInstalments { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsFeaturesSelected", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsFeaturesSelected
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedExtraFeature> _extraFeature;
        
        /// <summary>
        /// <para>Information about a product feature that is requested on the loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about a product feature that is requested on the loan account.")]
        [System.Xml.Serialization.XmlElementAttribute("ExtraFeature")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedExtraFeature> ExtraFeature
        {
            get
            {
                return this._extraFeature;
            }
            set
            {
                this._extraFeature = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ExtraFeature collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraFeatureSpecified
        {
            get
            {
                return (this.ExtraFeature.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsFeaturesSelected" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsFeaturesSelected()
        {
            this._extraFeature = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedExtraFeature>();
            this._offsetAccount = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedOffsetAccount>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedOffsetAccount> _offsetAccount;
        
        /// <summary>
        /// <para>Identifies the BSB, Account Number and Account Name for the offset account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the BSB, Account Number and Account Name for the offset account.")]
        [System.Xml.Serialization.XmlElementAttribute("OffsetAccount")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsFeaturesSelectedOffsetAccount> OffsetAccount
        {
            get
            {
                return this._offsetAccount;
            }
            set
            {
                this._offsetAccount = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OffsetAccount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetAccountSpecified
        {
            get
            {
                return (this.OffsetAccount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that a cheque book be issued for the loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that a cheque book be issued for the loa" +
            "n account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ChequeBook")]
        public YesNoList ChequeBook { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChequeBook property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChequeBookSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a credit card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a credit card.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditCard")]
        public YesNoList CreditCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a debit card.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a debit card.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DebitCard")]
        public YesNoList DebitCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebitCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebitCardSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant has requested a deposit book</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant has requested a deposit book")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositBook")]
        public YesNoList DepositBook { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositBook property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositBookSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the loan product allows them to temporarily pause making repayments while they are not earning a regular income or for some other acceptable reason.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the loan product allows them to tem" +
            "porarily pause making repayments while they are not earning a regular income or " +
            "for some other acceptable reason.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HolidayLeave")]
        public YesNoList HolidayLeave { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HolidayLeave property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HolidayLeaveSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that a 100% offset account facility be established for the loan account.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that a 100% offset account facility be e" +
            "stablished for the loan account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Offset")]
        public YesNoList Offset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Offset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies the percentage of the balance in the offset account that should be used to reduce the outstanding balance on the loan account when calculating interest payable. Typically 100%, but some lenders offer partial offset accounts.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the percentage of the balance in the offset account that should be used" +
            " to reduce the outstanding balance on the loan account when calculating interest" +
            " payable. Typically 100%, but some lenders offer partial offset accounts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OffsetPercentage")]
        public decimal OffsetPercentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OffsetPercentage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetPercentageSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the loan product allows them to reduce their repayments while they are not earning a regular income because they are taking maternity/parental leave.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the loan product allows them to red" +
            "uce their repayments while they are not earning a regular income because they ar" +
            "e taking maternity/parental leave.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ParentalLeave")]
        public YesNoList ParentalLeave { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParentalLeave property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentalLeaveSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that an offset account be established for the loan account with less than 100% offset of the balance in the offset account against the outstanding loan balance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that an offset account be established fo" +
            "r the loan account with less than 100% offset of the balance in the offset accou" +
            "nt against the outstanding loan balance.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PartialOffset")]
        public YesNoList PartialOffset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartialOffset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartialOffsetSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the loan facility be portable between security properties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the loan facility be portable betwe" +
            "en security properties.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Portability")]
        public YesNoList Portability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Portability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortabilitySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the loan funds be drawn down progressively, typically against progress of stages under a construction contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the loan funds be drawn down progre" +
            "ssively, typically against progress of stages under a construction contract.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProgressiveDraw")]
        public YesNoList ProgressiveDraw { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProgressiveDraw property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProgressiveDrawSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the interest rate for a fixed rate product be 'locked' until settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the interest rate for a fixed rate " +
            "product be \'locked\' until settlement")]
        [System.Xml.Serialization.XmlAttributeAttribute("RateLock")]
        public YesNoList RateLock { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RateLock property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateLockSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant requests that the loan product permit the redraw of loan principal that has been repaid in advance of the amortisation schedule for the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant requests that the loan product permit the redraw " +
            "of loan principal that has been repaid in advance of the amortisation schedule f" +
            "or the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Redraw")]
        public YesNoList Redraw { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Redraw property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedrawSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the applicant requests that the loan amount be split between two or more separate accounts or split facilities.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicant requests that the loan amount be split between two o" +
            "r more separate accounts or split facilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SplitLoan")]
        public YesNoList SplitLoan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SplitLoan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SplitLoanSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsFeaturesSelectedExtraFeature", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsFeaturesSelectedExtraFeature
    {
        
        /// <summary>
        /// <para>Specific information, value or enumeration related to the specific feature (name).</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specific information, value or enumeration related to the specific feature (name)" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The name of the specific feature being requested. Free text field although lenders may provide enumerations</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the specific feature being requested. Free text field although lender" +
            "s may provide enumerations")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Extra Feature Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Extra Feature Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsFeaturesSelectedOffsetAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsFeaturesSelectedOffsetAccount
    {
        
        /// <summary>
        /// <para>Account number details such as BSB, Account Number and Account Name for the offset account</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account number details such as BSB, Account Number and Account Name for the offse" +
            "t account")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public FinancialAccountType AccountNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the Offset Account detailed is an existing Offset Account or not</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the Offset Account detailed is an existing Offset Account or no" +
            "t")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsExisting")]
        public YesNoList IsExisting { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsExisting property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsExistingSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Offset Account Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Offset Account Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to an account (a Non Real Estate Asset element) to be used as the offset account.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to an account (a Non Real Estate Asset element) to be used as t" +
            "he offset account.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Account")]
        public string X_Account { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsGuarantor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsGuarantor
    {
        
        /// <summary>
        /// <para>A reference to the party that is applying to be a guarantor on this loan account.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the party that is applying to be a guarantor on this loan account." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Guarantor")]
        public string X_Guarantor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsLendingPurpose", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsLendingPurpose
    {
        
        /// <summary>
        /// <para>Captures the free text description of the ABS Lending Purpose Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the free text description of the ABS Lending Purpose Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ABSLendingPurpose")]
        public string ABSLendingPurpose { get; set; }
        
        /// <summary>
        /// <para>Captures the ABS code for this purpose for which the loan funds will be used by the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the ABS code for this purpose for which the loan funds will be used by t" +
            "he applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ABSLendingPurposeCode")]
        public AbsLendingPurposeCodeList ABSLendingPurposeCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ABSLendingPurposeCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ABSLendingPurposeCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a description of the purpose if none of the purposes specified in the lender's enumerated list of purposes adequately described the true purpose.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a description of the purpose if none of the purposes specified in the le" +
            "nder\'s enumerated list of purposes adequately described the true purpose.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Whether all or part of this credit facility will be used to refinance in full or in part one or many existing credit facilities.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whether all or part of this credit facility will be used to refinance in full or " +
            "in part one or many existing credit facilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludesRefinancing")]
        public YesNoList IncludesRefinancing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncludesRefinancing property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludesRefinancingSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the lender-specified code for this purpose for which the loan funds will be used by the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the lender-specified code for this purpose for which the loan funds will" +
            " be used by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderCode")]
        public string LenderCode { get; set; }
        
        /// <summary>
        /// <para>The amount of the loan funds that will be used for the specified purpose.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of the loan funds that will be used for the specified purpose.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PurposeAmount")]
        public decimal PurposeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurposeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The purpose for which the loan funds will be used.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purpose for which the loan funds will be used.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PurposeOfFunds")]
        public PurposeOfFundsList PurposeOfFunds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurposeOfFunds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeOfFundsSpecified { get; set; }
        
        /// <summary>
        /// <para>Borrowers should inform the lender of the reason for refinancing liabilities</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Borrowers should inform the lender of the reason for refinancing liabilities")]
        [System.Xml.Serialization.XmlAttributeAttribute("RefinancingReason")]
        public PrincipalRefinancingReasonList RefinancingReason { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RefinancingReason property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefinancingReasonSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Lending Purpose Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Lending Purpose Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsLoanPurpose", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsLoanPurpose
    {
        
        /// <summary>
        /// <para>Captures whether the loan is regulated by the NCCP. This determination is made by the lender based on information provided by the applicant about the purpose for which the loan funds will be used, so this field is unlikely to be requested from the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Captures whether the loan is regulated by the NCCP. This determination is made by the lender based on information provided by the applicant about the purpose for which the loan funds will be used, so this field is unlikely to be requested from the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NCCPStatus")]
        public NccpStatusList NCCPStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NCCPStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NCCPStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's intention as to who will occupy the dwelling after the purchase completes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s intention as to who will occupy the dwelling after the purchase c" +
            "ompletes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupancy")]
        public OccupancyList Occupancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Occupancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant intends to use the loan funds to fund the building of an owner/builder constructed property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant intends to use the loan funds to fund the buildin" +
            "g of an owner/builder constructed property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OwnerBuilderApplication")]
        public YesNoList OwnerBuilderApplication { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnerBuilderApplication property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnerBuilderApplicationSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the primary purpose for which the loan funds will be used by the applicant. Categories reflect the categories used in classifying a loan as regulated or unregulated under the NCCP.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the primary purpose for which the loan funds will be used by the applica" +
            "nt. Categories reflect the categories used in classifying a loan as regulated or" +
            " unregulated under the NCCP.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryPurpose")]
        public PrimaryPurposeLoanPurposeList PrimaryPurpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryPurpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryPurposeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsPackage", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsPackage
    {
        
        /// <summary>
        /// <para>Captures a lender defined category to which the requested package belongs.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a lender defined category to which the requested package belongs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public string Category { get; set; }
        
        /// <summary>
        /// <para>A unique code representing the product package being requested by the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code representing the product package being requested by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Code")]
        public string Code { get; set; }
        
        /// <summary>
        /// <para>Membership Identifier of the applicant issued by the Organisation the applicant claims to belong to and therefore qualify for the package associated with that Organisation. May be provided when Organisation is specified.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Membership Identifier of the applicant issued by the Organisation the applicant c" +
            "laims to belong to and therefore qualify for the package associated with that Or" +
            "ganisation. May be provided when Organisation is specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MemberID")]
        public string MemberID { get; set; }
        
        /// <summary>
        /// <para>Captures the name of a package that the applicant is applying for. A package commonly gives the borrowers certain benefits, such as an interest rate and fee discounts, for a fee. There may be rules that determine whether the applicants qualify for the package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Captures the name of a package that the applicant is applying for. A package commonly gives the borrowers certain benefits, such as an interest rate and fee discounts, for a fee. There may be rules that determine whether the applicants qualify for the package.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>A unique code identifying an option that applies to a package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique code identifying an option that applies to a package.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OptionCode")]
        public string OptionCode { get; set; }
        
        /// <summary>
        /// <para>A code or name that identifies the organisation under which the package is offered.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code or name that identifies the organisation under which the package is offere" +
            "d.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Organisation")]
        public string Organisation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsProposedRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsProposedRepayment
    {
        
        /// <summary>
        /// <para>Details of the credit card to be used for repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the credit card to be used for repayments")]
        [System.Xml.Serialization.XmlElementAttribute("CreditCard")]
        public PackageContentApplicationLoanDetailsProposedRepaymentCreditCard CreditCard { get; set; }
        
        /// <summary>
        /// <para>Captures BSB, Account Number and Account Name for the account from which the repayments will be made.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures BSB, Account Number and Account Name for the account from which the repa" +
            "yments will be made.")]
        [System.Xml.Serialization.XmlElementAttribute("FromAccount")]
        public FinancialAccountType FromAccount { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentRegularRepayment> _regularRepayment;
        
        /// <summary>
        /// <para>Container element for information associated with regular repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for information associated with regular repayments")]
        [System.Xml.Serialization.XmlElementAttribute("RegularRepayment")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentRegularRepayment> RegularRepayment
        {
            get
            {
                return this._regularRepayment;
            }
            set
            {
                this._regularRepayment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RegularRepayment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegularRepaymentSpecified
        {
            get
            {
                return (this.RegularRepayment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsProposedRepayment" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsProposedRepayment()
        {
            this._regularRepayment = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentRegularRepayment>();
        }
        
        /// <summary>
        /// <para>Container element used when structured repayments rather than regular repayments are proposed or advised</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element used when structured repayments rather than regular repayments " +
            "are proposed or advised")]
        [System.Xml.Serialization.XmlElementAttribute("StructuredPayments")]
        public PackageContentApplicationLoanDetailsProposedRepaymentStructuredPayments StructuredPayments { get; set; }
        
        /// <summary>
        /// <para>The preferred start (anniversary) date for regular repayments</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred start (anniversary) date for regular repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnniversaryDate", DataType="date")]
        public System.DateTime AnniversaryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnniversaryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnniversaryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the repayment method that will be used to repay the loan when Method = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the repayment method that will be used to repay the loan when Me" +
            "thod = \"Other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Specifies the payment method that will be used to effect the transfer of repayments on the loan to the lender. Examples include salary sacrifice, direct debit and Bpay.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the payment method that will be used to effect the transfer of repaymen" +
            "ts on the loan to the lender. Examples include salary sacrifice, direct debit an" +
            "d Bpay.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Method")]
        public ProposedRepaymentMethodList Method { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Method property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the timing of payments with respect to their payment period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the timing of payments with respect to their payment period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTiming")]
        public PaymentTimingList PaymentTiming { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTiming property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTimingSpecified { get; set; }
        
        /// <summary>
        /// <para>An optional partial-period payment to bring payment periods for several loans onto a common anniversary date (this is a total amount, so it includes GST and Stamp Duty).</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An optional partial-period payment to bring payment periods for several loans ont" +
            "o a common anniversary date (this is a total amount, so it includes GST and Stam" +
            "p Duty).")]
        [System.Xml.Serialization.XmlAttributeAttribute("PerDiemPaymentAmount")]
        public decimal PerDiemPaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerDiemPaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerDiemPaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The proposed date of the per diem payment</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The proposed date of the per diem payment")]
        [System.Xml.Serialization.XmlAttributeAttribute("PerDiemPaymentDate", DataType="date")]
        public System.DateTime PerDiemPaymentDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerDiemPaymentDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerDiemPaymentDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the GST portion of within the Per Diem Payment Amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the GST portion of within the Per Diem Payment Amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("PerDiemPaymentGSTAmount")]
        public decimal PerDiemPaymentGSTAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerDiemPaymentGSTAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerDiemPaymentGSTAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the Stamp Duty portion of the Per Diem Payment Amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the Stamp Duty portion of the Per Diem Payment Amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("PerDiemPaymentStampDutyAmount")]
        public decimal PerDiemPaymentStampDutyAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerDiemPaymentStampDutyAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerDiemPaymentStampDutyAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether payments are regular (same amount on regular intervals) or structured (irregular intervals and/or amounts)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether payments are regular (same amount on regular intervals) " +
            "or structured (irregular intervals and/or amounts)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Regular")]
        public YesNoList Regular { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Regular property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegularSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsProposedRepaymentCreditCard", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsProposedRepaymentCreditCard
    {
        
        /// <summary>
        /// <para>Cardholder name on the credit card to be used for repayments</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cardholder name on the credit card to be used for repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("CardHolderName")]
        public string CardHolderName { get; set; }
        
        /// <summary>
        /// <para>Month of expiry date of the credit card to be used for repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Month of expiry date of the credit card to be used for repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryMonth")]
        public MmMonthList ExpiryMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryMonthSpecified { get; set; }
        
        /// <summary>
        /// <para>Year of expiry date of the credit card to be used for repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of expiry date of the credit card to be used for repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryYear")]
        public YyYearList ExpiryYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit card number to be used for repayments</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit card number to be used for repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Type of credit card to be used for repayments</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of credit card to be used for repayments")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public CreditCardTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsProposedRepaymentRegularRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsProposedRepaymentRegularRepayment
    {
        
        /// <summary>
        /// <para>Preferred or nominated total regular repayment amount (incorporating any GST or Stamp Duty in the case of Equipment Finance Transactions)</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Preferred or nominated total regular repayment amount (incorporating any GST or S" +
            "tamp Duty in the case of Equipment Finance Transactions)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The day of the month that the regular repayment will be made.</para>
        /// <para>A pattern restricting the day of the month to a number between 1 and 31.</para>
        /// <para xml:lang="en">Pattern: 0?[1-9]|[12][0-9]|3[01].</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The day of the month that the regular repayment will be made.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0?[1-9]|[12][0-9]|3[01]")]
        [System.Xml.Serialization.XmlAttributeAttribute("DayOfMonth")]
        public string DayOfMonth { get; set; }
        
        /// <summary>
        /// <para>The day of the week that the regular repayment will be made.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The day of the week that the regular repayment will be made.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DayOfWeek")]
        public DayOfWeekList DayOfWeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DayOfWeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DayOfWeekSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment will be made at the end of the end of the period e.g. end of month (EOM), end of quarter (EOQ), or end of year (EOY).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment will be made at the end of the end of the period e.g. end of month (E" +
            "OM), end of quarter (EOQ), or end of year (EOY).")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndOfPeriod")]
        public YesNoList EndOfPeriod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndOfPeriod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndOfPeriodSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the applicants' preferred period for making loan repayments for the loan account. Captured when the loan product selected offers a range of repayment periods, enabling the applicant to nominate a period which best suits their needs in terms of income and the desire to reduce interest over the life of the loan by accelerating the reduction of the principal balance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Captures the applicants' preferred period for making loan repayments for the loan account. Captured when the loan product selected offers a range of repayment periods, enabling the applicant to nominate a period which best suits their needs in terms of income and the desire to reduce interest over the life of the loan by accelerating the reduction of the principal balance.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The time interval at which the repayment is repeated. Expressed as a multiple of the specified frequency.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The time interval at which the repayment is repeated. Expressed as a multiple of " +
            "the specified frequency.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FrequencyInterval")]
        public string FrequencyInterval { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the GST incorporated into the Regular Payment (typically used in Equipment Finance Transactions).</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the GST incorporated into the Regular Payment (typically use" +
            "d in Equipment Finance Transactions).")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTAmount")]
        public decimal GSTAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of loan payment schedule.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of loan payment schedule.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanPaymentScheduleType")]
        public LoanPaymentScheduleTypeList LoanPaymentScheduleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanPaymentScheduleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanPaymentScheduleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the Stamp Duty incorporated into the Regular Payment (typically used in Equipment Finance Transactions).</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the Stamp Duty incorporated into the Regular Payment (typica" +
            "lly used in Equipment Finance Transactions).")]
        [System.Xml.Serialization.XmlAttributeAttribute("StampDutyAmount")]
        public decimal StampDutyAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StampDutyAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StampDutyAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the total number of loan repayments.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total number of loan repayments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalRepayments")]
        public string TotalRepayments { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The week within the period that the regular repayment will be made.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The week within the period that the regular repayment will be made.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Week")]
        public WeekList Week { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Week property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeekSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsProposedRepaymentStructuredPayments", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsProposedRepaymentStructuredPayments
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentStructuredPaymentsPayment> _payment;
        
        /// <summary>
        /// <para>Details of itemised proposed payments. A given loan may have differing payment regimes at different periods in its total term (e.g. a fixed rate IO loan may have an initial Fixed Rate IO period, followed by a Variable Rate Interest Only period, followed by a Variable Rate Principal and Interest period.)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Details of itemised proposed payments. A given loan may have differing payment regimes at different periods in its total term (e.g. a fixed rate IO loan may have an initial Fixed Rate IO period, followed by a Variable Rate Interest Only period, followed by a Variable Rate Principal and Interest period.)")]
        [System.Xml.Serialization.XmlElementAttribute("Payment")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentStructuredPaymentsPayment> Payment
        {
            get
            {
                return this._payment;
            }
            set
            {
                this._payment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Payment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentSpecified
        {
            get
            {
                return (this.Payment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsProposedRepaymentStructuredPayments" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsProposedRepaymentStructuredPayments()
        {
            this._payment = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsProposedRepaymentStructuredPaymentsPayment>();
        }
        
        /// <summary>
        /// <para>Although structured payments may have arbitrary payment dates, the base frequency defines the fundamental unit of time used for determining payment dates and interest payment calculations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Although structured payments may have arbitrary payment dates, the base frequency" +
            " defines the fundamental unit of time used for determining payment dates and int" +
            "erest payment calculations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BaseFrequency")]
        public FrequencyFullList BaseFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BaseFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BaseFrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsProposedRepaymentStructuredPaymentsPayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsProposedRepaymentStructuredPaymentsPayment
    {
        
        /// <summary>
        /// <para>Captures the total amount of the payment in the payment period, being the calculated repayment amount plus any service fee, GST or Stamp Duty.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total amount of the payment in the payment period, being the calcula" +
            "ted repayment amount plus any service fee, GST or Stamp Duty.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The date of the specified payment</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the specified payment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Date", DataType="date")]
        public System.DateTime Date { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the GST incorporated into this Structured Payment (typically used in Equipment Finance Transactions).</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the GST incorporated into this Structured Payment (typically" +
            " used in Equipment Finance Transactions).")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTAmount")]
        public decimal GSTAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the sequence number of the payment or payment period.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the sequence number of the payment or payment period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the Stamp Duty incorporated into this Structured Payment (typically used in Equipment Finance Transactions).</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the Stamp Duty incorporated into this Structured Payment (ty" +
            "pically used in Equipment Finance Transactions).")]
        [System.Xml.Serialization.XmlAttributeAttribute("StampDutyAmount")]
        public decimal StampDutyAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StampDutyAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StampDutyAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Payment Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Payment Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsRateComposition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsRateComposition
    {
        
        /// <summary>
        /// <para>Indicates the introducer margin percentage</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the introducer margin percentage")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntroducerMargin")]
        public decimal IntroducerMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntroducerMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntroducerMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>The introductory margin added (as a percentage) during the introductory period or honeymoon period.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The introductory margin added (as a percentage) during the introductory period or" +
            " honeymoon period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntroductoryMargin")]
        public decimal IntroductoryMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntroductoryMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntroductoryMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the originator margin percentage</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the originator margin percentage")]
        [System.Xml.Serialization.XmlAttributeAttribute("OriginatorMargin")]
        public decimal OriginatorMargin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OriginatorMargin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginatorMarginSpecified { get; set; }
        
        /// <summary>
        /// <para>Upfront fixed amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upfront fixed amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubsidyBaseAmount")]
        public decimal SubsidyBaseAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubsidyBaseAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubsidyBaseAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Upfront commission percent</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Upfront commission percent")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubsidyBasePercent")]
        public decimal SubsidyBasePercent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubsidyBasePercent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubsidyBasePercentSpecified { get; set; }
        
        /// <summary>
        /// <para>Rate added to the borrower rate</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Rate added to the borrower rate")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubsidyRateSacrifice")]
        public decimal SubsidyRateSacrifice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubsidyRateSacrifice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubsidyRateSacrificeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsSecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsSecurity
    {
        
        /// <summary>
        /// <para>Security agreement details for this security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security agreement details for this security.")]
        [System.Xml.Serialization.XmlElementAttribute("SecurityAgreement")]
        public SecurityAgreementType SecurityAgreement { get; set; }
        
        /// <summary>
        /// <para>Specifies the priority of the new mortgage that is offered as security for the loans being applied for. When the mortgage is already held by the lender being applied to, this is the priority of that existing mortgage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the priority of the new mortgage that is offered as security for the lo" +
            "ans being applied for. When the mortgage is already held by the lender being app" +
            "lied to, this is the priority of that existing mortgage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Priority")]
        public SecurityPriorityList Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Priority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to a security (real estate or non real estate asset) that is submitted with the loan application, and information about the relationship between the subject loan account and that security.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to a security (real estate or non real estate asset) that is" +
            " submitted with the loan application, and information about the relationship bet" +
            "ween the subject loan account and that security.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsSoftware", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsSoftware
    {
        
        /// <summary>
        /// <para>A description of the software provider, for example the company name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the software provider, for example the company name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The name of the software application used by the loan originator.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the software application used by the loan originator.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsSupplementaryCardholder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsSupplementaryCardholder
    {
        
        /// <summary>
        /// <para>Link to the loan party, related party or household dependant that will be a supplementary (non liable) cardholder.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the loan party, related party or household dependant that will be a suppl" +
            "ementary (non liable) cardholder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_SupplementaryCardholder")]
        public string X_SupplementaryCardholder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsTerm", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsTerm
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriod> _distinctLoanPeriod;
        
        /// <summary>
        /// <para>A distinct loan period, where each period may have a different payment type, interest type, rate composition.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A distinct loan period, where each period may have a different payment type, inte" +
            "rest type, rate composition.")]
        [System.Xml.Serialization.XmlElementAttribute("DistinctLoanPeriod")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriod> DistinctLoanPeriod
        {
            get
            {
                return this._distinctLoanPeriod;
            }
            set
            {
                this._distinctLoanPeriod = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DistinctLoanPeriod collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistinctLoanPeriodSpecified
        {
            get
            {
                return (this.DistinctLoanPeriod.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsTerm" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsTerm()
        {
            this._distinctLoanPeriod = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriod>();
            this._interestOnlyReason = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermInterestOnlyReason>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermInterestOnlyReason> _interestOnlyReason;
        
        /// <summary>
        /// <para>The applicants' reasons for applying for an interest-only term within this loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants\' reasons for applying for an interest-only term within this loan.")]
        [System.Xml.Serialization.XmlElementAttribute("InterestOnlyReason")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermInterestOnlyReason> InterestOnlyReason
        {
            get
            {
                return this._interestOnlyReason;
            }
            set
            {
                this._interestOnlyReason = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InterestOnlyReason collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestOnlyReasonSpecified
        {
            get
            {
                return (this.InterestOnlyReason.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The length of time until the loan will be reviewed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The length of time until the loan will be reviewed.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanReviewPeriod")]
        public DurationType LoanReviewPeriod { get; set; }
        
        /// <summary>
        /// <para>Captures the type of interest that is to be paid during the specified term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the type of interest that is to be paid during the specified term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestType")]
        public InterestTypeList InterestType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The duration of the fixed interest rate period, as a whole number multiple of the Units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the fixed interest rate period, as a whole number multiple of the" +
            " Units.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestTypeDuration")]
        public string InterestTypeDuration { get; set; }
        
        /// <summary>
        /// <para>The units of time that are used to define the duration of the fixed interest rate period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time that are used to define the duration of the fixed interest rate" +
            " period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestTypeUnits")]
        public LoanTermUnitsList InterestTypeUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestTypeUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which the loan will be reviewed.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the loan will be reviewed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanReviewDate", DataType="date")]
        public System.DateTime LoanReviewDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanReviewDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanReviewDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the type of repayment that is to be made during the specified term</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the type of repayment that is to be made during the specified term")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The duration of the interest only period, as a whole number multiple of the Units.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the interest only period, as a whole number multiple of the Units" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTypeDuration")]
        public string PaymentTypeDuration { get; set; }
        
        /// <summary>
        /// <para>The units of time that are used to define the duration of the interest only period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of time that are used to define the duration of the interest only perio" +
            "d.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTypeUnits")]
        public LoanTermUnitsList PaymentTypeUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTypeUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>The Duration of the specified loan term, as a multiple of the Units</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Duration of the specified loan term, as a multiple of the Units")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalTermDuration")]
        public string TotalTermDuration { get; set; }
        
        /// <summary>
        /// <para>The type of loan term should indicate that the loan term is either the total length of the term or the amortised term as required by the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of loan term should indicate that the loan term is either the total leng" +
            "th of the term or the amortised term as required by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalTermType")]
        public TotalTermTypeList TotalTermType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalTermType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTermTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period described by the number specified for term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period described by the number specified for term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalTermUnits")]
        public LoanTermUnitsList TotalTermUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalTermUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTermUnitsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsTermDistinctLoanPeriod", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsTermDistinctLoanPeriod
    {
        
        /// <summary>
        /// <para>The duration of the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the distinct loan period.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriodRepayment> _repayment;
        
        /// <summary>
        /// <para>A repayment that is made during this period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A repayment that is made during this period.")]
        [System.Xml.Serialization.XmlElementAttribute("Repayment")]
        public System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriodRepayment> Repayment
        {
            get
            {
                return this._repayment;
            }
            set
            {
                this._repayment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Repayment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentSpecified
        {
            get
            {
                return (this.Repayment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationLoanDetailsTermDistinctLoanPeriod" /> class.</para>
        /// </summary>
        public PackageContentApplicationLoanDetailsTermDistinctLoanPeriod()
        {
            this._repayment = new System.Collections.Generic.List<PackageContentApplicationLoanDetailsTermDistinctLoanPeriodRepayment>();
        }
        
        /// <summary>
        /// <para>The end date of the distinct loan period.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date of the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of interest that is to be paid during the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of interest that is to be paid during the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestType")]
        public InterestTypeList InterestType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of repayment that is to be made during the distinct loan period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of repayment that is to be made during the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentType")]
        public PaymentTypeList PaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this distinct loan period within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this distinct loan period within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date of the distinct loan period.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date of the distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the rate composition for this distinct loan period.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the rate composition for this distinct loan period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_RateComposition")]
        public string X_RateComposition { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsTermDistinctLoanPeriodRepayment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsTermDistinctLoanPeriodRepayment
    {
        
        /// <summary>
        /// <para>A cross reference to the repayment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Repayment")]
        public string X_Repayment { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationLoanDetailsTermInterestOnlyReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationLoanDetailsTermInterestOnlyReason
    {
        
        /// <summary>
        /// <para>A free-text description provided by the applicant/s that provides further detail regarding this reason for applying for an interest-only term within this loan.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text description provided by the applicant/s that provides further detail " +
            "regarding this reason for applying for an interest-only term within this loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The reason that the applicant is applying for an interest-only term within this loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason that the applicant is applying for an interest-only term within this l" +
            "oan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Reason")]
        public InterestOnlyReasonList Reason { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reason property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReasonSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this interest-only reason.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this interest-only reason.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationMasterAgreement", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationMasterAgreement
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationMasterAgreementAccountToIncorporate> _accountToIncorporate;
        
        /// <summary>
        /// <para>For a new agreement that will incorporate existing loan accounts, container for the existing account(s)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a new agreement that will incorporate existing loan accounts, container for t" +
            "he existing account(s)")]
        [System.Xml.Serialization.XmlElementAttribute("AccountToIncorporate")]
        public System.Collections.Generic.List<PackageContentApplicationMasterAgreementAccountToIncorporate> AccountToIncorporate
        {
            get
            {
                return this._accountToIncorporate;
            }
            set
            {
                this._accountToIncorporate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccountToIncorporate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountToIncorporateSpecified
        {
            get
            {
                return (this.AccountToIncorporate.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationMasterAgreement" /> class.</para>
        /// </summary>
        public PackageContentApplicationMasterAgreement()
        {
            this._accountToIncorporate = new System.Collections.Generic.List<PackageContentApplicationMasterAgreementAccountToIncorporate>();
            this._security = new System.Collections.Generic.List<PackageContentApplicationMasterAgreementSecurity>();
        }
        
        /// <summary>
        /// <para>Identifies the parties that are owners on this master agreement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the parties that are owners on this master agreement.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationMasterAgreementSecurity> _security;
        
        /// <summary>
        /// <para>The security offered under the master agreement finance facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The security offered under the master agreement finance facility.")]
        [System.Xml.Serialization.XmlElementAttribute("Security")]
        public System.Collections.Generic.List<PackageContentApplicationMasterAgreementSecurity> Security
        {
            get
            {
                return this._security;
            }
            set
            {
                this._security = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Security collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecuritySpecified
        {
            get
            {
                return (this.Security.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Total approved loan amount.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total approved loan amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApprovedLimit")]
        public decimal ApprovedLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovedLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedLimitSpecified { get; set; }
        
        /// <summary>
        /// <para>For an existing agreement, the date of the agreement</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an existing agreement, the date of the agreement")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfExecution", DataType="date")]
        public System.DateTime DateOfExecution { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfExecution property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfExecutionSpecified { get; set; }
        
        /// <summary>
        /// <para>A name or description of the facility</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A name or description of the facility")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>For an existing agreement, the end date of the agreement</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an existing agreement, the end date of the agreement")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>For an existing agreement, the lender's identifier of the agreement</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an existing agreement, the lender\'s identifier of the agreement")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderAgreementNumber")]
        public string LenderAgreementNumber { get; set; }
        
        /// <summary>
        /// <para>For a master facility, the requested total umbrella limit</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a master facility, the requested total umbrella limit")]
        [System.Xml.Serialization.XmlAttributeAttribute("MasterFacilityLimit")]
        public decimal MasterFacilityLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MasterFacilityLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MasterFacilityLimitSpecified { get; set; }
        
        /// <summary>
        /// <para>An identifying code for the master agreement finance facility product. This code is typically issued by the lender and enables the lender's systems to uniquely identify the product.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An identifying code for the master agreement finance facility product. This code " +
            "is typically issued by the lender and enables the lender\'s systems to uniquely i" +
            "dentify the product.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductCode")]
        public string ProductCode { get; set; }
        
        /// <summary>
        /// <para>The name of the master agreement finance facility product.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the master agreement finance facility product.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductName")]
        public string ProductName { get; set; }
        
        /// <summary>
        /// <para>Purpose of the master agreement.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Purpose of the master agreement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Purpose")]
        public string Purpose { get; set; }
        
        /// <summary>
        /// <para>The order of this master agreement within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this master agreement within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>A flag to indicate whether the master agreement exists or is being requested</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A flag to indicate whether the master agreement exists or is being requested")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public MasterAgreementStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of agreement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of agreement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public MasterAgreementTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationMasterAgreementAccountToIncorporate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationMasterAgreementAccountToIncorporate
    {
        
        /// <summary>
        /// <para>For a new agreement that will incorporate existing loan accounts, pointer to the existing account(s)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a new agreement that will incorporate existing loan accounts, pointer to the " +
            "existing account(s)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ExistingAccount")]
        public string X_ExistingAccount { get; set; }
        
        /// <summary>
        /// <para>A cross reference to a new account that is being incorporated into the master agreement.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to a new account that is being incorporated into the master agr" +
            "eement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_NewAccount")]
        public string X_NewAccount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationMasterAgreementSecurity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationMasterAgreementSecurity
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Identifies the parties that are owners on this master agreement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Identifies t" +
            "he parties that are owners on this master agreement.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        /// <summary>
        /// <para>Security agreement details for this security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Security agreement details for this security.")]
        [System.Xml.Serialization.XmlElementAttribute("SecurityAgreement")]
        public SecurityAgreementType SecurityAgreement { get; set; }
        
        /// <summary>
        /// <para>The priority of this lender's mortgage on the security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The priority of this lender\'s mortgage on the security property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Priority")]
        public SecurityPriorityList Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Priority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the security being offered.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the security being offered.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAsset
    {
        
        /// <summary>
        /// <para>Agricultural equipment, crops and livestock as assets</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Agricultural equipment, crops and livestock as assets")]
        [System.Xml.Serialization.XmlElementAttribute("AgriculturalAsset")]
        public PackageContentApplicationNonRealEstateAssetAgriculturalAsset AgriculturalAsset { get; set; }
        
        /// <summary>
        /// <para>Aircraft including fixed and rotary winged aircraft, light and ultralight craft</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aircraft including fixed and rotary winged aircraft, light and ultralight craft")]
        [System.Xml.Serialization.XmlElementAttribute("Aircraft")]
        public PackageContentApplicationNonRealEstateAssetAircraft Aircraft { get; set; }
        
        /// <summary>
        /// <para>Container element for capturing Business details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing Business details")]
        [System.Xml.Serialization.XmlElementAttribute("Business")]
        public PackageContentApplicationNonRealEstateAssetBusiness Business { get; set; }
        
        /// <summary>
        /// <para>Container element for Cleaning Equipment asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Cleaning Equipment asset")]
        [System.Xml.Serialization.XmlElementAttribute("CleaningEquipment")]
        public PackageContentApplicationNonRealEstateAssetCleaningEquipment CleaningEquipment { get; set; }
        
        /// <summary>
        /// <para>Details of the purchase/sale price as specified in the Contract of Sale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the purchase/sale price as specified in the Contract of Sale")]
        [System.Xml.Serialization.XmlElementAttribute("ContractDetails")]
        public PackageContentApplicationNonRealEstateAssetContractDetails ContractDetails { get; set; }
        
        /// <summary>
        /// <para>Container element for Earth Moving Mining and Construction asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Earth Moving Mining and Construction asset")]
        [System.Xml.Serialization.XmlElementAttribute("EarthMovingMiningAndConstruction")]
        public PackageContentApplicationNonRealEstateAssetEarthMovingMiningAndConstruction EarthMovingMiningAndConstruction { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetEncumbrance> _encumbrance;
        
        /// <summary>
        /// <para>An encumbrance is a burden, impairment or third party right over property, that often makes it less valuable or easy for the owner to deal with. There may be multiple encumbrances over a single item of property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An encumbrance is a burden, impairment or third party right over property, that o" +
            "ften makes it less valuable or easy for the owner to deal with. There may be mul" +
            "tiple encumbrances over a single item of property.")]
        [System.Xml.Serialization.XmlElementAttribute("Encumbrance")]
        public System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetEncumbrance> Encumbrance
        {
            get
            {
                return this._encumbrance;
            }
            set
            {
                this._encumbrance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Encumbrance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EncumbranceSpecified
        {
            get
            {
                return (this.Encumbrance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationNonRealEstateAsset" /> class.</para>
        /// </summary>
        public PackageContentApplicationNonRealEstateAsset()
        {
            this._encumbrance = new System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetEncumbrance>();
            this._insurance = new System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetInsurance>();
        }
        
        /// <summary>
        /// <para>The estimated value of the asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated value of the asset")]
        [System.Xml.Serialization.XmlElementAttribute("EstimatedValue")]
        public PackageContentApplicationNonRealEstateAssetEstimatedValue EstimatedValue { get; set; }
        
        /// <summary>
        /// <para>Captures the details of a financial account asset or security - e.g. Cash, cash equivalents, and accounts at financial institutions</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the details of a financial account asset or security - e.g. Cash, cash e" +
            "quivalents, and accounts at financial institutions")]
        [System.Xml.Serialization.XmlElementAttribute("FinancialAsset")]
        public PackageContentApplicationNonRealEstateAssetFinancialAsset FinancialAsset { get; set; }
        
        /// <summary>
        /// <para>Container element for Hospitality and Leisure asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Hospitality and Leisure asset")]
        [System.Xml.Serialization.XmlElementAttribute("HospitalityAndLeisure")]
        public PackageContentApplicationNonRealEstateAssetHospitalityAndLeisure HospitalityAndLeisure { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetInsurance> _insurance;
        
        /// <summary>
        /// <para>Insurance associated with the non real estate asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance associated with the non real estate asset.")]
        [System.Xml.Serialization.XmlElementAttribute("Insurance")]
        public System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetInsurance> Insurance
        {
            get
            {
                return this._insurance;
            }
            set
            {
                this._insurance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Insurance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceSpecified
        {
            get
            {
                return (this.Insurance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Container element for IT and AV Equipment asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for IT and AV Equipment asset")]
        [System.Xml.Serialization.XmlElementAttribute("ITAndAVEquipment")]
        public PackageContentApplicationNonRealEstateAssetITAndAVEquipment ITAndAVEquipment { get; set; }
        
        /// <summary>
        /// <para>Container element for Materials Handling and Lifting asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Materials Handling and Lifting asset")]
        [System.Xml.Serialization.XmlElementAttribute("MaterialsHandlingAndLifting")]
        public PackageContentApplicationNonRealEstateAssetMaterialsHandlingAndLifting MaterialsHandlingAndLifting { get; set; }
        
        /// <summary>
        /// <para>Container element for Medical Equipment asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Medical Equipment asset")]
        [System.Xml.Serialization.XmlElementAttribute("MedicalEquipment")]
        public PackageContentApplicationNonRealEstateAssetMedicalEquipment MedicalEquipment { get; set; }
        
        /// <summary>
        /// <para>Container element for Mobile Computing asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Mobile Computing asset")]
        [System.Xml.Serialization.XmlElementAttribute("MobileComputing")]
        public PackageContentApplicationNonRealEstateAssetMobileComputing MobileComputing { get; set; }
        
        /// <summary>
        /// <para>Contains information about an asset that is a motor vehicle.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about an asset that is a motor vehicle.")]
        [System.Xml.Serialization.XmlElementAttribute("MotorVehicle")]
        public PackageContentApplicationNonRealEstateAssetMotorVehicle MotorVehicle { get; set; }
        
        /// <summary>
        /// <para>Container element for Office Equipment asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Office Equipment asset")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeEquipment")]
        public PackageContentApplicationNonRealEstateAssetOfficeEquipment OfficeEquipment { get; set; }
        
        /// <summary>
        /// <para>Container element for other assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for other assets.")]
        [System.Xml.Serialization.XmlElementAttribute("OtherAsset")]
        public PackageContentApplicationNonRealEstateAssetOtherAsset OtherAsset { get; set; }
        
        /// <summary>
        /// <para>An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        /// <summary>
        /// <para>Container element for Plant Equipment and Industrial asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Plant Equipment and Industrial asset")]
        [System.Xml.Serialization.XmlElementAttribute("PlantEquipmentAndIndustrial")]
        public PackageContentApplicationNonRealEstateAssetPlantEquipmentAndIndustrial PlantEquipmentAndIndustrial { get; set; }
        
        /// <summary>
        /// <para>Contains information about the asset in relation to its registration with the personal property security register</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the asset in relation to its registration with the per" +
            "sonal property security register")]
        [System.Xml.Serialization.XmlElementAttribute("PPSR")]
        public PackageContentApplicationNonRealEstateAssetPPSR PPSR { get; set; }
        
        /// <summary>
        /// <para>Container element for Tools of Trade asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Tools of Trade asset")]
        [System.Xml.Serialization.XmlElementAttribute("ToolsOfTrade")]
        public PackageContentApplicationNonRealEstateAssetToolsOfTrade ToolsOfTrade { get; set; }
        
        /// <summary>
        /// <para>A boat or other vessel that travels on water.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A boat or other vessel that travels on water.")]
        [System.Xml.Serialization.XmlElementAttribute("Watercraft")]
        public PackageContentApplicationNonRealEstateAssetWatercraft Watercraft { get; set; }
        
        /// <summary>
        /// <para>Indicates that the Borrower has entered into a Contract Of Sale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Borrower has entered into a Contract Of Sale")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractOfSale")]
        public YesNoList ContractOfSale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractOfSale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractOfSaleSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether there is an encumbrance on the Non-Real Estate Asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether there is an encumbrance on the Non-Real Estate Asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Encumbered")]
        public YesNoList Encumbered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Encumbered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EncumberedSpecified { get; set; }
        
        /// <summary>
        /// <para>Defines the type of Equipment Finance transaction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Defines the type of Equipment Finance transaction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialTransactionType")]
        public FinancialTransactionTypeList FinancialTransactionType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialTransactionType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialTransactionTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the non-real estate asset is being offered as the primary security for the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the non-real estate asset is being offered as the primary secur" +
            "ity for the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimarySecurity")]
        public YesNoList PrimarySecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimarySecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimarySecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this non-real estate asset within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this non-real estate asset within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the asset will be sold prior to or at settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the asset will be sold prior to or at settlement")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBeSold")]
        public YesNoList ToBeSold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBeSold property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBeSoldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the asset is to be used as security for the new or refinanced loan(s)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the asset is to be used as security for the new or refinanced l" +
            "oan(s)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBeUsedAsSecurity")]
        public YesNoList ToBeUsedAsSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBeUsedAsSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBeUsedAsSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the current status of the applicants' ownership of the property, or the transaction that is proposed by them in relation to the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the current status of the applicants\' ownership of the property, or the" +
            " transaction that is proposed by them in relation to the property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Transaction")]
        public AssetTransactionList Transaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Transaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates what the type of non real estate asset being described.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates what the type of non real estate asset being described.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public NonRealEstateAssetTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique identification assigned to the Asset</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique identification assigned to the Asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Link to Vendor Tax Invoice details.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to Vendor Tax Invoice details.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_VendorTaxInvoice")]
        public string X_VendorTaxInvoice { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetAgriculturalAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetAgriculturalAsset
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>The crop growing area.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The crop growing area.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CropArea")]
        public decimal CropArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CropArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CropAreaSpecified { get; set; }
        
        /// <summary>
        /// <para>Unit of measure for the crop growing area.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measure for the crop growing area.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CropAreaUnits")]
        public LandAreaUnitsList CropAreaUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CropAreaUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CropAreaUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total engine hours</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total engine hours")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineHoursTotal")]
        public string EngineHoursTotal { get; set; }
        
        /// <summary>
        /// <para>Identification number of the engine</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identification number of the engine")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineID")]
        public string EngineID { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>The calendar year in which the harvest is expected.</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The calendar year in which the harvest is expected.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpectedHarvestYear")]
        public string ExpectedHarvestYear { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the agricultural asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the agricultural asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the agricultural asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the agricultural asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>Date of expiry of registration.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of expiry of registration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationExpiryDate", DataType="date")]
        public System.DateTime RegistrationExpiryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegistrationExpiryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegistrationExpiryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Registration identifier for the asset e.g. license plate number.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registration identifier for the asset e.g. license plate number.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationNumber")]
        public string RegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>Comments on any service history that will impact on the value of the asset.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on any service history that will impact on the value of the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ServicingHistory")]
        public string ServicingHistory { get; set; }
        
        /// <summary>
        /// <para>The specific type of agricultural asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of agricultural asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public AgriculturalAssetTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetAircraft", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetAircraft
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Total hours on airframe as per log book.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total hours on airframe as per log book.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AirFrameHours")]
        public string AirFrameHours { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the aircraft</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the aircraft")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total engine hours</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total engine hours")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineHoursTotal")]
        public string EngineHoursTotal { get; set; }
        
        /// <summary>
        /// <para>Time to run until next service, in hours.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Time to run until next service, in hours.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineHoursTTR")]
        public string EngineHoursTTR { get; set; }
        
        /// <summary>
        /// <para>Identification number of the engine</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identification number of the engine")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineID")]
        public string EngineID { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the aircraft</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the aircraft")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the aircraft</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the aircraft")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>Date of expiry of registration.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of expiry of registration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationExpiryDate", DataType="date")]
        public System.DateTime RegistrationExpiryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegistrationExpiryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegistrationExpiryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Registration identifier for the asset e.g. license plate number.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registration identifier for the asset e.g. license plate number.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationNumber")]
        public string RegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>Comments on any service history that will impact on the value of the asset.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on any service history that will impact on the value of the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ServicingHistory")]
        public string ServicingHistory { get; set; }
        
        /// <summary>
        /// <para>The specific type of aircraft</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of aircraft")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public AircraftTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetBusiness", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetBusiness
    {
        
        /// <summary>
        /// <para>Container element for the detailed financial analysis of the business</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the detailed financial analysis of the business")]
        [System.Xml.Serialization.XmlElementAttribute("FinancialAnalysis")]
        public PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysis FinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para>The name of the business</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the business")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessName")]
        public string BusinessName { get; set; }
        
        /// <summary>
        /// <para>Description of the businesses main activity</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the businesses main activity")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysis", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysis
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysisCompanyFinancials> _companyFinancials;
        
        /// <summary>
        /// <para>Container for the reference to the financial data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for the reference to the financial data")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyFinancials")]
        public System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysisCompanyFinancials> CompanyFinancials
        {
            get
            {
                return this._companyFinancials;
            }
            set
            {
                this._companyFinancials = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyFinancials collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFinancialsSpecified
        {
            get
            {
                return (this.CompanyFinancials.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysis" /> class.</para>
        /// </summary>
        public PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysis()
        {
            this._companyFinancials = new System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysisCompanyFinancials>();
        }
        
        /// <summary>
        /// <para>Total Principle and Interest payments on borrowings due to be paid in the next 12 months</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Principle and Interest payments on borrowings due to be paid in the next 12" +
            " months")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnnualPaymentOnCommitments")]
        public decimal AnnualPaymentOnCommitments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualPaymentOnCommitments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnualPaymentOnCommitmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a complete financial analysis will be provided electronically, or only a summary view</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a complete financial analysis will be provided electroni" +
            "cally, or only a summary view")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompleteFinancialAnalysis")]
        public YesNoList CompleteFinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompleteFinancialAnalysis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompleteFinancialAnalysisSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysisCompanyFinanc" +
        "ials", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetBusinessFinancialAnalysisCompanyFinancials
    {
        
        /// <summary>
        /// <para>Reference to the element containing the financial analysis for each financial year, to be provided when Complete Financial Analysis = "Yes"</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the element containing the financial analysis for each financial yea" +
            "r, to be provided when Complete Financial Analysis = \"Yes\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_CompanyFinancials")]
        public string X_CompanyFinancials { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetCleaningEquipment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetCleaningEquipment
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Cleaning Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Cleaning Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Cleaning Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Cleaning Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Cleaning Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Cleaning Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific type of Cleaning Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Cleaning Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public CleaningEquipmentTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetContractDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetContractDetails
    {
        
        /// <summary>
        /// <para>The date of the Contract of Sale.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the Contract of Sale.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractDate", DataType="date")]
        public System.DateTime ContractDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the total purchase/sale price as specified in the Contract of Sale, inclusive of any GST component</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total purchase/sale price as specified in the Contract of Sale, incl" +
            "usive of any GST component")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractPriceAmount")]
        public decimal ContractPriceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractPriceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractPriceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the total amount that is or was payable as a deposit for the security property being purchased.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total amount that is or was payable as a deposit for the security pr" +
            "operty being purchased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositAmount")]
        public decimal DepositAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the amount of the purchase deposit that has been paid by the applicants as at the dateType the application is submitted.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the purchase deposit that has been paid by the applicants " +
            "as at the dateType the application is submitted.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositPaid")]
        public decimal DepositPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>The purchase date of the asset, or the proposed settlement date for an asset being purchased or sold</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purchase date of the asset, or the proposed settlement date for an asset bein" +
            "g purchased or sold")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedSettlementDate", DataType="date")]
        public System.DateTime EstimatedSettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedSettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedSettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>the GST component of the total contract price amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("the GST component of the total contract price amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTAmount")]
        public decimal GSTAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Tick the box is GST is included in purchase price</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tick the box is GST is included in purchase price")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTInclusive")]
        public YesNoList GSTInclusive { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTInclusive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTInclusiveSpecified { get; set; }
        
        /// <summary>
        /// <para>Tick the box if GST is to be overwritten using a modified figure from the calculated one</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tick the box if GST is to be overwritten using a modified figure from the calcula" +
            "ted one")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTOverwritten")]
        public YesNoList GSTOverwritten { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTOverwritten property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTOverwrittenSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the amount of income tax (GST) credits that are claimed</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This is the amount of income tax (GST) credits that are claimed")]
        [System.Xml.Serialization.XmlAttributeAttribute("InputTaxCredit")]
        public decimal InputTaxCredit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InputTaxCredit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InputTaxCreditSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the insurance premium amount included on the invoice. For Motor vehicles this relates to CHP insurance only</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This is the insurance premium amount included on the invoice. For Motor vehicles " +
            "this relates to CHP insurance only")]
        [System.Xml.Serialization.XmlAttributeAttribute("InsurancePremium")]
        public decimal InsurancePremium { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InsurancePremium property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsurancePremiumSpecified { get; set; }
        
        /// <summary>
        /// <para>To be completed for Finance Lease only. This applies to cars with a GST inclusive value over the LCT threshold</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("To be completed for Finance Lease only. This applies to cars with a GST inclusive" +
            " value over the LCT threshold")]
        [System.Xml.Serialization.XmlAttributeAttribute("LuxuryCarTax")]
        public decimal LuxuryCarTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LuxuryCarTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LuxuryCarTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Net Trade In Value.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Net Trade In Value.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetTradeIn")]
        public decimal NetTradeIn { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetTradeIn property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetTradeInSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-claimable GST Amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-claimable GST Amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonClaimableGST")]
        public decimal NonClaimableGST { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonClaimableGST property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonClaimableGSTSpecified { get; set; }
        
        /// <summary>
        /// <para>This is the on road costs.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This is the on road costs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnRoadCosts")]
        public decimal OnRoadCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnRoadCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnRoadCostsSpecified { get; set; }
        
        /// <summary>
        /// <para>Other costs being financed such as extended warranty or gap insurance</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other costs being financed such as extended warranty or gap insurance")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherCost")]
        public decimal OtherCost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherCost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherCostSpecified { get; set; }
        
        /// <summary>
        /// <para>Cost of registration, amount included in the price.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cost of registration, amount included in the price.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationCost")]
        public decimal RegistrationCost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegistrationCost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegistrationCostSpecified { get; set; }
        
        /// <summary>
        /// <para>Stamp duty amount, included on the invoice</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Stamp duty amount, included on the invoice")]
        [System.Xml.Serialization.XmlAttributeAttribute("StampDuty")]
        public decimal StampDuty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StampDuty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StampDutySpecified { get; set; }
        
        /// <summary>
        /// <para>Type of supplier, in the context of the purchase of the asset from the supplier</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of supplier, in the context of the purchase of the asset from the supplier")]
        [System.Xml.Serialization.XmlAttributeAttribute("SupplierType")]
        public SupplierTypeList SupplierType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SupplierType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupplierTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The net of the total purchase price including GST, luxury car tax, stamp duty, registration etc minus deposit, trade-in.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net of the total purchase price including GST, luxury car tax, stamp duty, re" +
            "gistration etc minus deposit, trade-in.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalCost")]
        public decimal TotalCost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCostSpecified { get; set; }
        
        /// <summary>
        /// <para>Trade-in amount</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Trade-in amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradeInAmount")]
        public decimal TradeInAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradeInAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeInAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Amount of existing finance owing on the trade in, if applicable.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount of existing finance owing on the trade in, if applicable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TradeInExistingFinance")]
        public decimal TradeInExistingFinance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TradeInExistingFinance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeInExistingFinanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the Vendor of a purchased Asset</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the Vendor of a purchased Asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Vendor")]
        public string X_Vendor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetEarthMovingMiningAndConstruction", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetEarthMovingMiningAndConstruction
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Earth Moving Mining And Construction equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Earth Moving Mining And Construction equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Earth Moving Mining And Construction Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Earth Moving Mining And Construction Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Earth Moving Mining And Construction Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Earth Moving Mining And Construction Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific subtype of Earth Moving Mining And Construction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific subtype of Earth Moving Mining And Construction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Subtype")]
        public EarthMovingMiningAndConstructionSubtypeList Subtype { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subtype property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The specific type of Earth Moving Mining And Construction Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Earth Moving Mining And Construction Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public EarthMovingMiningAndConstructionTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetEncumbrance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetEncumbrance
    {
        
        /// <summary>
        /// <para>A description of the encumbrance that is being specified as applying to the property.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the encumbrance that is being specified as applying to the prope" +
            "rty.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The number issued by the relevant Office to identify the encumbrance, if registered.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number issued by the relevant Office to identify the encumbrance, if register" +
            "ed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredNumber")]
        public string RegisteredNumber { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Encumbrance Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Encumbrance Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetEstimatedValue", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetEstimatedValue
    {
        
        /// <summary>
        /// <para>The residual value or final payment for the asset at the end of the term, as a $ amount.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The residual value or final payment for the asset at the end of the term, as a $ " +
            "amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BalloonRVAmount")]
        public decimal BalloonRVAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonRVAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalloonRVAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the residual value for the asset is a percentage or a fixed dollar amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the residual value for the asset is a percentage or a fi" +
            "xed dollar amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BalloonRVInputPattern")]
        public BalloonRVInputPatternList BalloonRVInputPattern { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonRVInputPattern property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalloonRVInputPatternSpecified { get; set; }
        
        /// <summary>
        /// <para>The residual value or final payment for the asset at the end of the term, as a % amount.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The residual value or final payment for the asset at the end of the term, as a % " +
            "amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BalloonRVPercent")]
        public decimal BalloonRVPercent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalloonRVPercent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalloonRVPercentSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the estimate was based on the valuation of the applicant or a certified valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the estimate was based on the valuation of the applicant or a c" +
            "ertified valuer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateBasis")]
        public EstimateBasisNonRealEstateAssetList EstimateBasis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimateBasis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimateBasisSpecified { get; set; }
        
        /// <summary>
        /// <para>The estimate of the owners liability to pay capital gains tax on disposal of the asset. Relevant to the lender in determining the net proceeds likely to be realised by the owner if they sell the asset for the estimated value.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimate of the owners liability to pay capital gains tax on disposal of the " +
            "asset. Relevant to the lender in determining the net proceeds likely to be reali" +
            "sed by the owner if they sell the asset for the estimated value.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedCGTLiability")]
        public decimal EstimatedCGTLiability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedCGTLiability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedCGTLiabilitySpecified { get; set; }
        
        /// <summary>
        /// <para>The minimum residual value of the asset, typically based on ATO guidelines. Can be used as part of the depreciation schedule.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The minimum residual value of the asset, typically based on ATO guidelines. Can b" +
            "e used as part of the depreciation schedule.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MinimumResidualValue")]
        public decimal MinimumResidualValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumResidualValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumResidualValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the depreciation schedule is straight line or diminishing value</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the depreciation schedule is straight line or diminishin" +
            "g value")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxDepreciationMethod")]
        public TaxDepreciationMethodList TaxDepreciationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDepreciationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxDepreciationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>The depreciation rate of the asset, if known</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The depreciation rate of the asset, if known")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxDepreciationRate")]
        public decimal TaxDepreciationRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxDepreciationRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxDepreciationRateSpecified { get; set; }
        
        /// <summary>
        /// <para>The estimated value of the non real estate asset.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated value of the non real estate asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Value")]
        public decimal Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetFinancialAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetFinancialAsset
    {
        
        /// <summary>
        /// <para>Account details for the financial account asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account details for the financial account asset")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public FinancialAccountType AccountNumber { get; set; }
        
        /// <summary>
        /// <para>Container element for financial assets that are shares</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for financial assets that are shares")]
        [System.Xml.Serialization.XmlElementAttribute("Shares")]
        public PackageContentApplicationNonRealEstateAssetFinancialAssetShares Shares { get; set; }
        
        /// <summary>
        /// <para>A description of the account</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the account")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Indicates if any amount is to be transferred to the SMSF.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if any amount is to be transferred to the SMSF.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TransferOwnershipToSMSF")]
        public YesNoList TransferOwnershipToSMSF { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransferOwnershipToSMSF property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransferOwnershipToSMSFSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of financial asset</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of financial asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public FinancialAssetTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetFinancialAssetShares", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetFinancialAssetShares
    {
        
        /// <summary>
        /// <para>The rights and restrictions attached to shares in a class distinguish it from other classes.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rights and restrictions attached to shares in a class distinguish it from oth" +
            "er classes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ClassOfShare")]
        public string ClassOfShare { get; set; }
        
        /// <summary>
        /// <para>Holder Identification Number (HIN) uniquely identifies an individual as the holder of shares on the CHESS subregister.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Holder Identification Number (HIN) uniquely identifies an individual as the holde" +
            "r of shares on the CHESS subregister.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HolderIdentificationNumber")]
        public string HolderIdentificationNumber { get; set; }
        
        /// <summary>
        /// <para>The company which has issued the shares.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company which has issued the shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IssuingCompany")]
        public string IssuingCompany { get; set; }
        
        /// <summary>
        /// <para>Number of shares owned by the individual.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of shares owned by the individual.")]
        [System.Xml.Serialization.XmlAttributeAttribute("QuantityOfShares")]
        public string QuantityOfShares { get; set; }
        
        /// <summary>
        /// <para>When the Financial Asset Type = "Shares and Debentures", indicates the type of shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When the Financial Asset Type = \"Shares and Debentures\", indicates the type of sh" +
            "ares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ShareTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetHospitalityAndLeisure", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetHospitalityAndLeisure
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Hospitality And Leisure Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Hospitality And Leisure Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Hospitality And Leisure Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Hospitality And Leisure Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Hospitality And Leisure Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Hospitality And Leisure Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific type of Hospitality And Leisure Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Hospitality And Leisure Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public HospitalityAndLeisureTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetInsurance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetInsurance
    {
        
        /// <summary>
        /// <para>Link to Insurance details</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to Insurance details")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Insurance")]
        public string X_Insurance { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetITAndAVEquipment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetITAndAVEquipment
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the IT and AV Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the IT and AV Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the IT and AV Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the IT and AV Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the IT and AV Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the IT and AV Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific type of IT and AV Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of IT and AV Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ItAndAVEquipmentTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetMaterialsHandlingAndLifting", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetMaterialsHandlingAndLifting
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Materials Handling and Lifting Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Materials Handling and Lifting Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Materials Handling and Lifting Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Materials Handling and Lifting Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Materials Handling and Lifting Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Materials Handling and Lifting Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific subtype of Materials Handling and Lifting Equipment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific subtype of Materials Handling and Lifting Equipment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Subtype")]
        public MaterialsHandlingAndLiftingSubtypeList Subtype { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subtype property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The specific type of Materials Handling and Lifting Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Materials Handling and Lifting Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public MaterialsHandlingAndLiftingTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetMedicalEquipment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetMedicalEquipment
    {
        
        /// <summary>
        /// <para>The condition of the medical equipment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The condition of the medical equipment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the Medical Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Medical Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the medical equipment.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the medical equipment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the medical equipment.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the medical equipment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>The specific type of Medical Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Medical Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public MedicalEquipmentTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetMobileComputing", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetMobileComputing
    {
        
        /// <summary>
        /// <para>The condition of the mobile computing device.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The condition of the mobile computing device.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the Mobile Computing device</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Mobile Computing device")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the mobile computing device.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the mobile computing device.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the mobile computing device.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the mobile computing device.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>The specific type of Mobile Computing device</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Mobile Computing device")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public MobileComputingTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetMotorVehicle", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetMotorVehicle
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Sub-model designation of a motor vehicle, e.g. Sportivo</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Sub-model designation of a motor vehicle, e.g. Sportivo")]
        [System.Xml.Serialization.XmlAttributeAttribute("Badge")]
        public string Badge { get; set; }
        
        /// <summary>
        /// <para>Vehicle body type, e.g. Sedan</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle body type, e.g. Sedan")]
        [System.Xml.Serialization.XmlAttributeAttribute("Body")]
        public string Body { get; set; }
        
        /// <summary>
        /// <para>Vehicle colour</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle colour")]
        [System.Xml.Serialization.XmlAttributeAttribute("Colour")]
        public string Colour { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>Number of cylinders in the engine</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of cylinders in the engine")]
        [System.Xml.Serialization.XmlAttributeAttribute("Cylinders")]
        public string Cylinders { get; set; }
        
        /// <summary>
        /// <para>A description of the motor vehicle</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the motor vehicle")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Number of doors</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Number of doors")]
        [System.Xml.Serialization.XmlAttributeAttribute("Doors")]
        public string Doors { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>The displacement of the engine, generally expressed in CCs</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The displacement of the engine, generally expressed in CCs")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineCapacity")]
        public decimal EngineCapacity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EngineCapacity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EngineCapacitySpecified { get; set; }
        
        /// <summary>
        /// <para>Total engine hours</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total engine hours")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineHoursTotal")]
        public string EngineHoursTotal { get; set; }
        
        /// <summary>
        /// <para>Identification number of the engine</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identification number of the engine")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineID")]
        public string EngineID { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of fuel used to power the vehicle</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of fuel used to power the vehicle")]
        [System.Xml.Serialization.XmlAttributeAttribute("FuelType")]
        public string FuelType { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The odometer reading for a vehicle, in kms</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The odometer reading for a vehicle, in kms")]
        [System.Xml.Serialization.XmlAttributeAttribute("Kilometres")]
        public string Kilometres { get; set; }
        
        /// <summary>
        /// <para>Captures the make of the vehicle, such as Holden</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the make of the vehicle, such as Holden")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>Captures the model of the vehicle</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the model of the vehicle")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Description of optional items included in the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of optional items included in the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("Options")]
        public string Options { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>Date of expiry of registration.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Date of expiry of registration.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationExpiryDate", DataType="date")]
        public System.DateTime RegistrationExpiryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegistrationExpiryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegistrationExpiryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Registration identifier for the asset e.g. license plate number.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registration identifier for the asset e.g. license plate number.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegistrationNumber")]
        public string RegistrationNumber { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>For a vehicle model such as a car that is manufactured with a series indicator, a description of the series. E.g. Series II</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a vehicle model such as a car that is manufactured with a series indicator, a" +
            " description of the series. E.g. Series II")]
        [System.Xml.Serialization.XmlAttributeAttribute("Series")]
        public string Series { get; set; }
        
        /// <summary>
        /// <para>The specific subtype of Motor Vehicle.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific subtype of Motor Vehicle.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Subtype")]
        public VehicleSubtypeList Subtype { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Subtype property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubtypeSpecified { get; set; }
        
        /// <summary>
        /// <para>For a motor vehicle, the type of transmission</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a motor vehicle, the type of transmission")]
        [System.Xml.Serialization.XmlAttributeAttribute("Transmission")]
        public string Transmission { get; set; }
        
        /// <summary>
        /// <para>Vehicle type describes the type of vehicle such as a bike, large vehicle, 4WD, medium vehicle, small vehicle, or small/medium vehicle.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Vehicle type describes the type of vehicle such as a bike, large vehicle, 4WD, me" +
            "dium vehicle, small vehicle, or small/medium vehicle.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public VehicleTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>For a motor vehicle model that is produced in variants, a description of the variant</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a motor vehicle model that is produced in variants, a description of the vari" +
            "ant")]
        [System.Xml.Serialization.XmlAttributeAttribute("Variant")]
        public string Variant { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Captures the year in which the vehicle was first registered or the model year.</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the year in which the vehicle was first registered or the model year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetOfficeEquipment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetOfficeEquipment
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Office Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Office Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Office Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Office Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Office Equipment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Office Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>The specific type of Office Equipment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Office Equipment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public OfficeEquipmentTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetOtherAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetOtherAsset
    {
        
        /// <summary>
        /// <para>Description of the asset, especially if Other Asset type is "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Description of the asset, especially if Other Asset type is \"Other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Container element for other non real estate assets</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for other non real estate assets")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public OtherAssetTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetPlantEquipmentAndIndustrial", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetPlantEquipmentAndIndustrial
    {
        
        /// <summary>
        /// <para>Type of additional ID, such as Microdot, UPC, GTIN, Asset Number</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of additional ID, such as Microdot, UPC, GTIN, Asset Number")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDType")]
        public string AdditionalIDType { get; set; }
        
        /// <summary>
        /// <para>For an additional ID, the value of the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For an additional ID, the value of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("AdditionalIDValue")]
        public string AdditionalIDValue { get; set; }
        
        /// <summary>
        /// <para>Age in years. 0=New (alternatively, use year of manufacture)</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age in years. 0=New (alternatively, use year of manufacture)")]
        [System.Xml.Serialization.XmlAttributeAttribute("Age")]
        public string Age { get; set; }
        
        /// <summary>
        /// <para>Asset condition</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset condition")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>Comments on the general condition and appearance of the asset e.g. good working order.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on the general condition and appearance of the asset e.g. good working o" +
            "rder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionDescription")]
        public string ConditionDescription { get; set; }
        
        /// <summary>
        /// <para>A description of the Plant Equipment and Industrial</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Plant Equipment and Industrial")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Effective life of the asset in years, as determined by the ATO</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Effective life of the asset in years, as determined by the ATO")]
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveLife")]
        public decimal EffectiveLife { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveLife property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveLifeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total engine hours</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total engine hours")]
        [System.Xml.Serialization.XmlAttributeAttribute("EngineHoursTotal")]
        public string EngineHoursTotal { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>On Business Premises, On-site and returned to Business Premises each day, On-site until job is complete</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("On Business Premises, On-site and returned to Business Premises each day, On-site" +
            " until job is complete")]
        [System.Xml.Serialization.XmlAttributeAttribute("GoodToBeUsedLocation")]
        public GoodToBeUsedLocationList GoodToBeUsedLocation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodToBeUsedLocation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodToBeUsedLocationSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the Plant Equipment and Industrial</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the Plant Equipment and Industrial")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the Plant Equipment and Industrial</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the Plant Equipment and Industrial")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>Other information which may impact the value of the asset</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Other information which may impact the value of the asset")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherInformation")]
        public string OtherInformation { get; set; }
        
        /// <summary>
        /// <para>Quantity of assets. Typically "1", however for assets that are not individually registrable, indicates the number of items for a bulk grouping of assets being purchased and financed</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantity of assets. Typically \"1\", however for assets that are not individually r" +
            "egistrable, indicates the number of items for a bulk grouping of assets being pu" +
            "rchased and financed")]
        [System.Xml.Serialization.XmlAttributeAttribute("Quantity")]
        public string Quantity { get; set; }
        
        /// <summary>
        /// <para>The uniquely identifiable manufacturer serial number associated with the asset such as VIN</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The uniquely identifiable manufacturer serial number associated with the asset su" +
            "ch as VIN")]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialNumber")]
        public string SerialNumber { get; set; }
        
        /// <summary>
        /// <para>Comments on any service history that will impact on the value of the asset.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Comments on any service history that will impact on the value of the asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ServicingHistory")]
        public string ServicingHistory { get; set; }
        
        /// <summary>
        /// <para>The specific type of Plant Equipment and Industrial</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Plant Equipment and Industrial")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public PlantEquipmentAndIndustrialTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>Location of Goods (address)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Location of Goods (address)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_GoodToBeUsedAddress")]
        public string X_GoodToBeUsedAddress { get; set; }
        
        /// <summary>
        /// <para>Year of Manufacture</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of Manufacture")]
        [System.Xml.Serialization.XmlAttributeAttribute("Year")]
        public string Year { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetPPSR", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetPPSR
    {
        
        /// <summary>
        /// <para>Type of collateral as defined by the PPS, Consumer means personal property held by an individual and is not used to carry on an enterprise that has an ABN. Commercial is personal property other than consumer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of collateral as defined by the PPS, Consumer means personal property held b" +
            "y an individual and is not used to carry on an enterprise that has an ABN. Comme" +
            "rcial is personal property other than consumer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CollateralType")]
        public CollateralTypeList CollateralType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CollateralType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollateralTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. PPSR Description of proceeds to be claimed.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. PPSR Descrip" +
            "tion of proceeds to be claimed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DescriptionOfProceeds")]
        public string DescriptionOfProceeds { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Flag to indicate whether the PPSR registration will be a Purchase Money Security Interest. Select Yes where the lender is providing finance for the acquisition of the asset being offered as security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a future release. Flag to indicate whether the PPSR registration will be a Purchase Money Security Interest. Select Yes where the lender is providing finance for the acquisition of the asset being offered as security.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PMSI")]
        public YesNoList PMSI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PMSI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PMSISpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the asset is registrable on the PPSR</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the asset is registrable on the PPSR")]
        [System.Xml.Serialization.XmlAttributeAttribute("PPSRegistrable")]
        public YesNoList PPSRegistrable { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PPSRegistrable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PPSRegistrableSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. PPSR flag to indicate if proceeds are to be claimed</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. PPSR flag to" +
            " indicate if proceeds are to be claimed")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProceedsToBeClaimed")]
        public YesNoList ProceedsToBeClaimed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProceedsToBeClaimed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProceedsToBeClaimedSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. PPSR flag to indicate whether assets are subject to control</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. PPSR flag to" +
            " indicate whether assets are subject to control")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubjectToControl")]
        public YesNoList SubjectToControl { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubjectToControl property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubjectToControlSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. Flag to indicate whether PPSR registration subordinate to another security interest</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. Flag to indi" +
            "cate whether PPSR registration subordinate to another security interest")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubordinateRegistration")]
        public YesNoList SubordinateRegistration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SubordinateRegistration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubordinateRegistrationSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a future release. PPSR Registration number that this registration is subordinate to</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a future release. PPSR Registr" +
            "ation number that this registration is subordinate to")]
        [System.Xml.Serialization.XmlAttributeAttribute("SubordinateToNumber")]
        public string SubordinateToNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetToolsOfTrade", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetToolsOfTrade
    {
        
        /// <summary>
        /// <para>The condition of the tools of trade.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The condition of the tools of trade.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Condition")]
        public ConditionList Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the Tools of Trade</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the Tools of Trade")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>The make of the tools of trade.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The make of the tools of trade.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Make")]
        public string Make { get; set; }
        
        /// <summary>
        /// <para>The model of the tools of trade.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The model of the tools of trade.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Model")]
        public string Model { get; set; }
        
        /// <summary>
        /// <para>The specific type of Tools of Trade</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The specific type of Tools of Trade")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ToolsOfTradeTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetWatercraft", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetWatercraft
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetWatercraftOutboardMotor> _outboardMotor;
        
        /// <summary>
        /// <para>An engine that has a propeller and a manufacturer's number, designed to be attached to a boat or vessel and intended for use to propel a boat or vessel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An engine that has a propeller and a manufacturer\'s number, designed to be attach" +
            "ed to a boat or vessel and intended for use to propel a boat or vessel.")]
        [System.Xml.Serialization.XmlElementAttribute("OutboardMotor")]
        public System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetWatercraftOutboardMotor> OutboardMotor
        {
            get
            {
                return this._outboardMotor;
            }
            set
            {
                this._outboardMotor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OutboardMotor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutboardMotorSpecified
        {
            get
            {
                return (this.OutboardMotor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationNonRealEstateAssetWatercraft" /> class.</para>
        /// </summary>
        public PackageContentApplicationNonRealEstateAssetWatercraft()
        {
            this._outboardMotor = new System.Collections.Generic.List<PackageContentApplicationNonRealEstateAssetWatercraftOutboardMotor>();
        }
        
        /// <summary>
        /// <para>Method to calculate excess usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Method to calculate excess usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExcessUsageCalculationMethod")]
        public ExcessUsageCalculationMethodList ExcessUsageCalculationMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcessUsageCalculationMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcessUsageCalculationMethodSpecified { get; set; }
        
        /// <summary>
        /// <para>A Hull Identification Number (HIN) consist of a unique letters and numbers permanently marked on the hull of the vessel to positively identify a vessel. Boat manufacturers have been required to mark all new vessels with a HIN meeting the required international standard (ISO 10087:1995(E)) since February 2001.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A Hull Identification Number (HIN) consist of a unique letters and numbers permanently marked on the hull of the vessel to positively identify a vessel. Boat manufacturers have been required to mark all new vessels with a HIN meeting the required international standard (ISO 10087:1995(E)) since February 2001.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HullIdentificationNumber")]
        public string HullIdentificationNumber { get; set; }
        
        /// <summary>
        /// <para>Allowed usage based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowed usage based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncludedUsage")]
        public string IncludedUsage { get; set; }
        
        /// <summary>
        /// <para>Age of the equipment based on the applicable unit of measurement.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Age of the equipment based on the applicable unit of measurement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageAtStart")]
        public string UsageAtStart { get; set; }
        
        /// <summary>
        /// <para>Unit of measurement to quantify the usage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unit of measurement to quantify the usage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UsageUnitOfMeasurement")]
        public UsageUnitOfMeasurementList UsageUnitOfMeasurement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsageUnitOfMeasurement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageUnitOfMeasurementSpecified { get; set; }
        
        /// <summary>
        /// <para>A number (e.g. 345678) allocated to the ship or watercraft by the Shipping Registration Office to registered ships via Maritime Safety Authority (MSA).</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A number (e.g. 345678) allocated to the ship or watercraft by the Shipping Regist" +
            "ration Office to registered ships via Maritime Safety Authority (MSA).")]
        [System.Xml.Serialization.XmlAttributeAttribute("WatercraftOfficialNumber")]
        public string WatercraftOfficialNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationNonRealEstateAssetWatercraftOutboardMotor", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationNonRealEstateAssetWatercraftOutboardMotor
    {
        
        /// <summary>
        /// <para>The identifying numbers/letters that are stamped or attached to an outboard motor by its manufacturer.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The identifying numbers/letters that are stamped or attached to an outboard motor" +
            " by its manufacturer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OutboardMotorManufacturerNumber")]
        public string OutboardMotorManufacturerNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOtherExpense", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOtherExpense
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Container element for capturing Arrears detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Containe" +
            "r element for capturing Arrears detail")]
        [System.Xml.Serialization.XmlElementAttribute("Arrears")]
        public PackageContentApplicationOtherExpenseArrears Arrears { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Identifies the 'owners' of the expense item and the amount they are responsible for. An expense may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An expense may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the expense may be assigned.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"This item is now deprecated and will be deleted in a release in Q1 2017. Identifies the 'owners' of the expense item and the amount they are responsible for. An expense may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An expense may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the expense may be assigned.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. The amount of the expense paid or incurred in the period specified for the expense item.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. The amou" +
            "nt of the expense paid or incurred in the period specified for the expense item." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Specifies the category of expense that is being described</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Specifie" +
            "s the category of expense that is being described")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public OtherExpenseCategoryList Category { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Category property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategorySpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures a plain text description of the expense when the selected Expense Type = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " a plain text description of the expense when the selected Expense Type = \"Other" +
            "\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures the end date of the period for which the expense being described is paid</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " the end date of the period for which the expense being described is paid")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. The frequency or payment period for the expense paid or incurred in the period specified for the expense item.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. The freq" +
            "uency or payment period for the expense paid or incurred in the period specified" +
            " for the expense item.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Used to indicate if the applicant has declared an arrears Credit Issue</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Used to " +
            "indicate if the applicant has declared an arrears Credit Issue")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasArrears")]
        public YesNoList HasArrears { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasArrears property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasArrearsSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this other expense within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this other expense within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures the start date of the period for which the expense being described is paid</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " the start date of the period for which the expense being described is paid")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Specifies the type of expense that is being described.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Specifie" +
            "s the type of expense that is being described.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public OtherExpenseTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. System a" +
            "ssigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOtherExpenseArrears", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOtherExpenseArrears
    {
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures the amount in arrears</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " the amount in arrears")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures the number of missed payments</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " the number of missed payments")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfMissedPayments")]
        public string NumberOfMissedPayments { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in Q1 2017. Captures whether the amount in arrears is to be paid out from the Loan</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in Q1 2017. Captures" +
            " whether the amount in arrears is to be paid out from the Loan")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBePaidOut")]
        public YesNoList ToBePaidOut { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBePaidOut property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBePaidOutSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOtherIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOtherIncome
    {
        
        /// <summary>
        /// <para>An income item may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An income item may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the income may be assigned.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An income item may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An income item may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the income may be assigned.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        /// <summary>
        /// <para>The gross amount of income received in the period specified for the income item.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross amount of income received in the period specified for the income item.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the benefits, especially if the benefit type is "other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the benefits, especially if the benefit type " +
            "is \"other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("BenefitsDescription")]
        public string BenefitsDescription { get; set; }
        
        /// <summary>
        /// <para>Captures the country in which the income is earned or sourced.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the country in which the income is earned or sourced.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Country")]
        public CountryCodeList Country { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Country property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountrySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the income when the selected Income Type = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the income when the selected Income Type = \"O" +
            "ther\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Captures the end date of the period for which the income being described is earned or received.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the end date of the period for which the income being described is earne" +
            "d or received.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving other income gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving other income gross amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Where the applicant has indicated government benefits as an income source, the type of benefits should be captured. Such as family, unemployed or widow's allowance.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where the applicant has indicated government benefits as an income source, the ty" +
            "pe of benefits should be captured. Such as family, unemployed or widow\'s allowan" +
            "ce.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GovernmentBenefitsType")]
        public GovernmentBenefitsTypeList GovernmentBenefitsType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GovernmentBenefitsType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GovernmentBenefitsTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the GST incorporated into the regular income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the GST incorporated into the regular income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTAmount")]
        public decimal GSTAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies how the applicant intends to substantiate the income item.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies how the applicant intends to substantiate the income item.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeVerification")]
        public IncomeVerificationList IncomeVerification { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeVerification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeVerificationSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the income is subject to tax, and not one of the following categories: exempt income; non-assessable non-exempt income; or other non taxable amounts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the income is subject to tax, and not one of the following cate" +
            "gories: exempt income; non-assessable non-exempt income; or other non taxable am" +
            "ounts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsTaxable")]
        public YesNoList IsTaxable { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsTaxable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTaxableSpecified { get; set; }
        
        /// <summary>
        /// <para>The net amount of income received in the period specified for the income item.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net amount of income received in the period specified for the income item.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetAmount")]
        public decimal NetAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving other income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving other income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetAmountFrequency")]
        public FrequencyShortList NetAmountFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetAmountFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetAmountFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The number of times the income is earned or received in the period specified.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of times the income is earned or received in the period specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfRepeats")]
        public string NumberOfRepeats { get; set; }
        
        /// <summary>
        /// <para>The income amount received in the previous year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The income amount received in the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreviousYearAmount")]
        public decimal PreviousYearAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreviousYearAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreviousYearAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The original currency that the income was earned in. For example US Dollars, British Pounds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original currency that the income was earned in. For example US Dollars, Brit" +
            "ish Pounds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryForeignCurrency")]
        public CurrencyCodeList PrimaryForeignCurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryForeignCurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryForeignCurrencySpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodeOtherList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the Income evidence been sighted by the loan writer or assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the Income evidence been sighted by the loan writer or assessor" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this other income within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this other income within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Captures the start date of the period for which the income being described is earned or received.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the start date of the period for which the income being described is ear" +
            "ned or received.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Income taxed indicates whether the income has already been subjected to tax and therefore whether a net amount or gross amount has been supplied.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income taxed indicates whether the income has already been subjected to tax and t" +
            "herefore whether a net amount or gross amount has been supplied.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Taxed")]
        public YesNoList Taxed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taxed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxedSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies what type of income is described by the income item.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies what type of income is described by the income item.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public OtherIncomeTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the asset (a Real Estate Asset element or Non Real Estate Asset element) from which this income is generated.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the asset (a Real Estate Asset element or Non Real Estate As" +
            "set element) from which this income is generated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Asset")]
        public string X_Asset { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverview", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverview
    {
        
        /// <summary>
        /// <para>The branch that the applicants request that the requested loan accounts should be domiciled.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The branch that the applicants request that the requested loan accounts should be" +
            " domiciled.")]
        [System.Xml.Serialization.XmlElementAttribute("BranchDomicile")]
        public PackageContentApplicationOverviewBranchDomicile BranchDomicile { get; set; }
        
        /// <summary>
        /// <para>The branch that the applicants request that the documents for the loan be made available for signing prior to settlement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The branch that the applicants request that the documents for the loan be made av" +
            "ailable for signing prior to settlement.")]
        [System.Xml.Serialization.XmlElementAttribute("BranchSign")]
        public PackageContentApplicationOverviewBranchSign BranchSign { get; set; }
        
        /// <summary>
        /// <para>Details on the bridging finance request.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details on the bridging finance request.")]
        [System.Xml.Serialization.XmlElementAttribute("BridgingFinance")]
        public PackageContentApplicationOverviewBridgingFinance BridgingFinance { get; set; }
        
        /// <summary>
        /// <para>Gives a broad indication of what the main application type is for, particularly if the lender has different loan processing arrangements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gives a broad indication of what the main application type is for, particularly i" +
            "f the lender has different loan processing arrangements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicationType")]
        public ApplicationTypeList ApplicationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicationTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>A unique identifier assigned to the application by the organisation that is submitting the application to the lender. Used by the loan writer to identify the application in their business systems.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to the application by the organisation that is submi" +
            "tting the application to the lender. Used by the loan writer to identify the app" +
            "lication in their business systems.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BrokerApplicationReferenceNumber")]
        public string BrokerApplicationReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>A number to identify the specific submission for an application in the broker's business system. In combination with the Broker Application Reference Number the Broker Application Sequence Number helps uniquely identifies both initial submission and resubmissions of the same application.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A number to identify the specific submission for an application in the broker's business system. In combination with the Broker Application Reference Number the Broker Application Sequence Number helps uniquely identifies both initial submission and resubmissions of the same application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BrokerApplicationSequenceNumber")]
        public string BrokerApplicationSequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates that the loan application is for two or more loan accounts with different products.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the loan application is for two or more loan accounts with differe" +
            "nt products.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CombinationLoan")]
        public YesNoList CombinationLoan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CombinationLoan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CombinationLoanSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the level of income verification documentation that the applicants will provide to the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the level of income verification documentation that the applicants will " +
            "provide to the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocType")]
        public ApplicationDocTypeList DocType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the date on which the application is expected to be settled</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date on which the application is expected to be settled")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpectedSettlementDate", DataType="date")]
        public System.DateTime ExpectedSettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpectedSettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpectedSettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether it is a fast refinance application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether it is a fast refinance application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FastRefinance")]
        public YesNoList FastRefinance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FastRefinance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FastRefinanceSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to note whether the loan application includes funds for bridging between a purchase and a subsequent sale.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to note whether the loan application includes funds for bridging between a p" +
            "urchase and a subsequent sale.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsBridgingFinance")]
        public YesNoList IsBridgingFinance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsBridgingFinance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsBridgingFinanceSpecified { get; set; }
        
        /// <summary>
        /// <para>A unique identifier assigned to the application by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to the application by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderApplicationReferenceNumber")]
        public string LenderApplicationReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>A unique identifier assigned to a Preapproval application by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to a Preapproval application by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderPreapprovalReferenceNumber")]
        public string LenderPreapprovalReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>A unique identifier assigned to the application by the point of sale system provider. Used by the point of sale system provider to identify the application in their application capture system.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to the application by the point of sale system provi" +
            "der. Used by the point of sale system provider to identify the application in th" +
            "eir application capture system.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LodgementReferenceNumber")]
        public string LodgementReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>A number to identify the specific submission for an application that has been resubmitted.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A number to identify the specific submission for an application that has been res" +
            "ubmitted.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LodgementSequenceNumber")]
        public string LodgementSequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate if the application is propack.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate if the application is propack.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProPack")]
        public YesNoList ProPack { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProPack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProPackSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to note whether the loan application is for a self managed superfund.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to note whether the loan application is for a self managed superfund.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SMSFLoan")]
        public YesNoList SMSFLoan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SMSFLoan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SMSFLoanSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverviewBranchDomicile", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverviewBranchDomicile
    {
        
        /// <summary>
        /// <para>Contains contact details for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationOverviewBranchDomicileContact Contact { get; set; }
        
        /// <summary>
        /// <para>Captures the BSB of the branch the applicants request that the requested loan accounts should be domiciled.</para>
        /// <para>A pattern to restrict BSB values to be exactly 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the BSB of the branch the applicants request that the requested loan acc" +
            "ounts should be domiciled.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("BSB")]
        public string BSB { get; set; }
        
        /// <summary>
        /// <para>The internal name given to a branch location by a lender or creditor may be captured where one exists.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The internal name given to a branch location by a lender or creditor may be captu" +
            "red where one exists.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InternalName")]
        public string InternalName { get; set; }
        
        /// <summary>
        /// <para>An internal identification number given to a branch location by a lender or creditor may be captured where one exists.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internal identification number given to a branch location by a lender or credi" +
            "tor may be captured where one exists.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InternalNumber")]
        public string InternalNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverviewBranchDomicileContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverviewBranchDomicileContact
    {
        
        /// <summary>
        /// <para>A fax number for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fax number for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>An office phone number for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An office phone number for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverviewBranchSign", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverviewBranchSign
    {
        
        /// <summary>
        /// <para>Contains contact details for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationOverviewBranchSignContact Contact { get; set; }
        
        /// <summary>
        /// <para>Captures the BSB of the branch the applicants request that the documents for the loan be made available for signing prior to settlement.</para>
        /// <para>A pattern to restrict BSB values to be exactly 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the BSB of the branch the applicants request that the documents for the " +
            "loan be made available for signing prior to settlement.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("BSB")]
        public string BSB { get; set; }
        
        /// <summary>
        /// <para>The internal name given to a branch location by a lender or creditor may be captured where one exists.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The internal name given to a branch location by a lender or creditor may be captu" +
            "red where one exists.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InternalName")]
        public string InternalName { get; set; }
        
        /// <summary>
        /// <para>An internal identification number given to a branch location by a lender or creditor may be captured where one exists.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internal identification number given to a branch location by a lender or credi" +
            "tor may be captured where one exists.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InternalNumber")]
        public string InternalNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverviewBranchSignContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverviewBranchSignContact
    {
        
        /// <summary>
        /// <para>A fax number for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fax number for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>An office phone number for the branch.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An office phone number for the branch.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationOverviewBridgingFinance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationOverviewBridgingFinance
    {
        
        /// <summary>
        /// <para>The estimated period of time required for the bridging finance, in months.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated period of time required for the bridging finance, in months.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BridgingTerm")]
        public string BridgingTerm { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether interest on the bridged finance is to be capitalised.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether interest on the bridged finance is to be capitalised.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CapitaliseInterest")]
        public YesNoList CapitaliseInterest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CapitaliseInterest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapitaliseInterestSpecified { get; set; }
        
        /// <summary>
        /// <para>The end amount of the bridging loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end amount of the bridging loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDebt")]
        public decimal EndDebt { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDebt property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDebtSpecified { get; set; }
        
        /// <summary>
        /// <para>The estimated cost of selling the to-be-sold property.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated cost of selling the to-be-sold property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedSellingCosts")]
        public decimal EstimatedSellingCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedSellingCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedSellingCostsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicant
    {
        
        /// <summary>
        /// <para>Container element for the applicant contact details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the applicant contact details")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationPersonApplicantContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantCreditHistory> _creditHistory;
        
        /// <summary>
        /// <para>Contains details of an applicant's credit history as provided both by credit reference bureaus and/or by the applicant themselves.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details of an applicant\'s credit history as provided both by credit refe" +
            "rence bureaus and/or by the applicant themselves.")]
        [System.Xml.Serialization.XmlElementAttribute("CreditHistory")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantCreditHistory> CreditHistory
        {
            get
            {
                return this._creditHistory;
            }
            set
            {
                this._creditHistory = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CreditHistory collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditHistorySpecified
        {
            get
            {
                return (this.CreditHistory.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationPersonApplicant" /> class.</para>
        /// </summary>
        public PackageContentApplicationPersonApplicant()
        {
            this._creditHistory = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantCreditHistory>();
            this._employment = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmployment>();
            this._insurance = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantInsurance>();
            this._proofOfIdentity = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantProofOfIdentity>();
        }
        
        /// <summary>
        /// <para>Contains information specifying where the lender is to send the loan documents once the loan has been approved. A nomination of authority at the Loan level will over-ride this nomination.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information specifying where the lender is to send the loan documents on" +
            "ce the loan has been approved. A nomination of authority at the Loan level will " +
            "over-ride this nomination.")]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationInstructions")]
        public PackageContentApplicationPersonApplicantDocumentationInstructions DocumentationInstructions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmployment> _employment;
        
        /// <summary>
        /// <para>Contains information about the persons current or previous employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the persons current or previous employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Employment")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmployment> Employment
        {
            get
            {
                return this._employment;
            }
            set
            {
                this._employment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Employment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmploymentSpecified
        {
            get
            {
                return (this.Employment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the applicant is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant is an existing customer of the lender being appli" +
            "ed to.")]
        [System.Xml.Serialization.XmlElementAttribute("ExistingCustomer")]
        public PackageContentApplicationPersonApplicantExistingCustomer ExistingCustomer { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantInsurance> _insurance;
        
        /// <summary>
        /// <para>Insurance associated with the person applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance associated with the person applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Insurance")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantInsurance> Insurance
        {
            get
            {
                return this._insurance;
            }
            set
            {
                this._insurance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Insurance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceSpecified
        {
            get
            {
                return (this.Insurance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Container for details related to the applicants marital status</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for details related to the applicants marital status")]
        [System.Xml.Serialization.XmlElementAttribute("MaritalStatusDetails")]
        public PackageContentApplicationPersonApplicantMaritalStatusDetails MaritalStatusDetails { get; set; }
        
        /// <summary>
        /// <para>Contains information about one of the applicant's next of kin.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about one of the applicant\'s next of kin.")]
        [System.Xml.Serialization.XmlElementAttribute("NextOfKin")]
        public PackageContentApplicationPersonApplicantNextOfKin NextOfKin { get; set; }
        
        /// <summary>
        /// <para>Joint Borrowers who reside at the same address may choose to nominate one of them as the person who will receive notices and other documents relating to the loan, so that they do not have to each receive their own copy of any notices and other documents</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Joint Borrowers who reside at the same address may choose to nominate one of them" +
            " as the person who will receive notices and other documents relating to the loan" +
            ", so that they do not have to each receive their own copy of any notices and oth" +
            "er documents")]
        [System.Xml.Serialization.XmlElementAttribute("NominatedBorrower")]
        public PackageContentApplicationPersonApplicantNominatedBorrower NominatedBorrower { get; set; }
        
        /// <summary>
        /// <para>The name of the person applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the person applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("PersonName")]
        public PersonNameType PersonName { get; set; }
        
        /// <summary>
        /// <para>Container element for details of a power of attorney granted by the party</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for details of a power of attorney granted by the party")]
        [System.Xml.Serialization.XmlElementAttribute("PowerOfAttorney")]
        public PackageContentApplicationPersonApplicantPowerOfAttorney PowerOfAttorney { get; set; }
        
        /// <summary>
        /// <para>The previous name of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The previous name of the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("PreviousName")]
        public PackageContentApplicationPersonApplicantPreviousName PreviousName { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the Party has agreed to allow disclosure and contains details of identity and credit checks.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the Party has agreed to allow disclosure and contains details o" +
            "f identity and credit checks.")]
        [System.Xml.Serialization.XmlElementAttribute("Privacy")]
        public PackageContentApplicationPersonApplicantPrivacy Privacy { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantProofOfIdentity> _proofOfIdentity;
        
        /// <summary>
        /// <para>Contains details of a document used to verify identity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details of a document used to verify identity.")]
        [System.Xml.Serialization.XmlElementAttribute("ProofOfIdentity")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantProofOfIdentity> ProofOfIdentity
        {
            get
            {
                return this._proofOfIdentity;
            }
            set
            {
                this._proofOfIdentity = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ProofOfIdentity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofOfIdentitySpecified
        {
            get
            {
                return (this.ProofOfIdentity.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Captures information about any significant changes in circumstances that will adversely affect the applicant's ability to make contracted loan repayments; the nature of the change, and how they will continue to make repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about any significant changes in circumstances that will adv" +
            "ersely affect the applicant\'s ability to make contracted loan repayments; the na" +
            "ture of the change, and how they will continue to make repayments.")]
        [System.Xml.Serialization.XmlElementAttribute("ResponsibleLending")]
        public ResponsibleLendingType ResponsibleLending { get; set; }
        
        /// <summary>
        /// <para>Container element for details on the party's will</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for details on the party\'s will")]
        [System.Xml.Serialization.XmlElementAttribute("Will")]
        public PackageContentApplicationPersonApplicantWill Will { get; set; }
        
        /// <summary>
        /// <para>Whether the loan party is an borrower or guarantor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whether the loan party is an borrower or guarantor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicantType")]
        public ApplicantTypeList ApplicantType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicantType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The country that the person is a citizen of.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The country that the person is a citizen of.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Citizenship")]
        public CountryCodeList Citizenship { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Citizenship property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CitizenshipSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the person is a director of a company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the person is a director of a company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyDirector")]
        public YesNoList CompanyDirector { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyDirector property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyDirectorSpecified { get; set; }
        
        /// <summary>
        /// <para>The country in which this applicant was born.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The country in which this applicant was born.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CountryOfBirth")]
        public CountryCodeList CountryOfBirth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryOfBirth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountryOfBirthSpecified { get; set; }
        
        /// <summary>
        /// <para>Summarises whether there are any issues indicated the credit history of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Summarises whether there are any issues indicated the credit history of the appli" +
            "cant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditStatus")]
        public CreditStatusList CreditStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the date of birth for the applicant.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date of birth for the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfBirth", DataType="date")]
        public System.DateTime DateOfBirth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfBirthSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which the applicant became a citizen.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the applicant became a citizen.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfCitizenship", DataType="date")]
        public System.DateTime DateOfCitizenship { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfCitizenship property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfCitizenshipSpecified { get; set; }
        
        /// <summary>
        /// <para>For a reverse mortgage, each applicant should specify if they have discussed the loan application with their beneficiaries. Beneficiaries will be materially affected by an equity release loan so it is important to confirm that they have been consulted.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a reverse mortgage, each applicant should specify if they have discussed the " +
            "loan application with their beneficiaries. Beneficiaries will be materially affe" +
            "cted by an equity release loan so it is important to confirm that they have been" +
            " consulted.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscussedWithBeneficiaries")]
        public YesNoList DiscussedWithBeneficiaries { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscussedWithBeneficiaries property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscussedWithBeneficiariesSpecified { get; set; }
        
        /// <summary>
        /// <para>The person should indicate whether they are eligible for a First Home Owners Grants as per the state governments requirements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person should indicate whether they are eligible for a First Home Owners Gran" +
            "ts as per the state governments requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EligibleForFHOG")]
        public YesNoList EligibleForFHOG { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EligibleForFHOG property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EligibleForFHOGSpecified { get; set; }
        
        /// <summary>
        /// <para>Eligible for Kainga Ora first home grant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Eligible for Kainga Ora first home grant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EligibleForKaingaOra")]
        public YesNoList EligibleForKaingaOra { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EligibleForKaingaOra property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EligibleForKaingaOraSpecified { get; set; }
        
        /// <summary>
        /// <para>The person should indicate whether they are a first home buyer in accordance with the State Revenue Office's definition of a first home buyer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person should indicate whether they are a first home buyer in accordance with" +
            " the State Revenue Office\'s definition of a first home buyer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstHomeBuyer")]
        public YesNoList FirstHomeBuyer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstHomeBuyer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstHomeBuyerSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the gender of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the gender of the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Gender")]
        public GenderList Gender { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gender property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenderSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the party's property is being dealt with under a will that is being executed by an Executor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the party\'s property is being dealt with under a will that is bein" +
            "g executed by an Executor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasAWill")]
        public YesNoList HasAWill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasAWill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasAWillSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the person has a previous name</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the person has a previous name")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasPreviousName")]
        public YesNoList HasPreviousName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasPreviousName property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasPreviousNameSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the person came to this country to take up permanent residence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the person came to this country to take up permanent residence." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("Immigrant")]
        public YesNoList Immigrant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Immigrant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImmigrantSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the person arrived in this country to take up permanent residency.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the person arrived in this country to take up permanent residency.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ImmigrationDate", DataType="date")]
        public System.DateTime ImmigrationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ImmigrationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImmigrationDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The person should indicate whether they have received independent financial advice during the loan process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person should indicate whether they have received independent financial advic" +
            "e during the loan process.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndependentFinancialAdvice")]
        public YesNoList IndependentFinancialAdvice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndependentFinancialAdvice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndependentFinancialAdviceSpecified { get; set; }
        
        /// <summary>
        /// <para>The person should indicate whether they have received independent legal advice during the loan process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person should indicate whether they have received independent legal advice du" +
            "ring the loan process.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndependentLegalAdvice")]
        public YesNoList IndependentLegalAdvice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndependentLegalAdvice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndependentLegalAdviceSpecified { get; set; }
        
        /// <summary>
        /// <para>The IRD Number of this Applicant.</para>
        /// <para>The Inland Revenue Department Number (or IRD Number) is a unique identifier (consisting of 8 or 9 numbers) issued by the New Zealand Inland Revenue Department.</para>
        /// <para xml:lang="en">Pattern: \d{8,9}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The IRD Number of this Applicant.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{8,9}")]
        [System.Xml.Serialization.XmlAttributeAttribute("IRDNumber")]
        public string IRDNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant is an existing customer of the lender being appli" +
            "ed to.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsExistingCustomer")]
        public YesNoList IsExistingCustomer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsExistingCustomer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsExistingCustomerSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant is classified as a staff member of the lender being applied to. This may indicate that the applicant is entitled to a staff offer on the loan, or that specific risk controls should be applied in processing the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Indicates whether the applicant is classified as a staff member of the lender being applied to. This may indicate that the applicant is entitled to a staff offer on the loan, or that specific risk controls should be applied in processing the loan application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsLenderStaff")]
        public YesNoList IsLenderStaff { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsLenderStaff property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLenderStaffSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the borrower is nominating another borrower to receive notices jointly.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the borrower is nominating another borrower to receive n" +
            "otices jointly.")]
        [System.Xml.Serialization.XmlAttributeAttribute("JointNomination")]
        public YesNoList JointNomination { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JointNomination property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JointNominationSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the applicant will file a joint statement of financial position with their spouse</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the applicant will file a joint statement of financial p" +
            "osition with their spouse")]
        [System.Xml.Serialization.XmlAttributeAttribute("JointStatementOfPosition")]
        public YesNoList JointStatementOfPosition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JointStatementOfPosition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JointStatementOfPositionSpecified { get; set; }
        
        /// <summary>
        /// <para>The marital status of the applicant should be indicated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The marital status of the applicant should be indicated")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaritalStatus")]
        public MaritalStatusList MaritalStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaritalStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaritalStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The months a person has worked in their current profession should be captured.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The months a person has worked in their current profession should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MonthsInCurrentProfession")]
        public decimal MonthsInCurrentProfession { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MonthsInCurrentProfession property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthsInCurrentProfessionSpecified { get; set; }
        
        /// <summary>
        /// <para>The mother's maiden name should be captured where this is used by the lender for identification purposes.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The mother\'s maiden name should be captured where this is used by the lender for " +
            "identification purposes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MothersMaidenName")]
        public string MothersMaidenName { get; set; }
        
        /// <summary>
        /// <para>The city, town, village or isolated dwelling in which this applicant was born.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The city, town, village or isolated dwelling in which this applicant was born.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PlaceOfBirth")]
        public string PlaceOfBirth { get; set; }
        
        /// <summary>
        /// <para>Flag to Indicate that the party has granted a power of attorney and that the agent will execute the loan documentation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to Indicate that the party has granted a power of attorney and that the agen" +
            "t will execute the loan documentation")]
        [System.Xml.Serialization.XmlAttributeAttribute("POAGranted")]
        public YesNoList POAGranted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the POAGranted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool POAGrantedSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the lender should consider the party to be the primary applicant when processing the loan application. The significance of the primary applicant to the application varies from lender to lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the lender should consider the party to be the primary applican" +
            "t when processing the loan application. The significance of the primary applican" +
            "t to the application varies from lender to lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryApplicant")]
        public YesNoList PrimaryApplicant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryApplicant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryApplicantSpecified { get; set; }
        
        /// <summary>
        /// <para>The country(ies) that the person is a resident of</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The country(ies) that the person is a resident of")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrincipalForeignResidence")]
        public CountryCodeList PrincipalForeignResidence { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalForeignResidence property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalForeignResidenceSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the applicant's residency status as either a permanent resident, temporary resident or non-resident.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the applicant\'s residency status as either a permanent resident, tempor" +
            "ary resident or non-resident.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ResidencyStatus")]
        public ResidencyStatusList ResidencyStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ResidencyStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResidencyStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this person applicant within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this person applicant within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>For a reverse mortgage, each applicant may confirm (yes/no), that their application was not made under duress (from children, siblings etc.)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a reverse mortgage, each applicant may confirm (yes/no), that their applicati" +
            "on was not made under duress (from children, siblings etc.)")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnderDuress")]
        public YesNoList UnderDuress { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnderDuress property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnderDuressSpecified { get; set; }
        
        /// <summary>
        /// <para>For a reverse mortgage, each applicant may confirm (yes/no) that they understand what they are applying for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a reverse mortgage, each applicant may confirm (yes/no) that they understand " +
            "what they are applying for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnderstandApplication")]
        public YesNoList UnderstandApplication { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnderstandApplication property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnderstandApplicationSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Link to the person's current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the person\'s current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
        
        /// <summary>
        /// <para>Links to a Household element</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Links to a Household element")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Household")]
        public string X_Household { get; set; }
        
        /// <summary>
        /// <para>Link to a related party who is providing a personal reference.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to a related party who is providing a personal reference.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PersonalReference")]
        public string X_PersonalReference { get; set; }
        
        /// <summary>
        /// <para>Link to the applicant's solicitor</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the applicant\'s solicitor")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Solicitor")]
        public string X_Solicitor { get; set; }
        
        /// <summary>
        /// <para>The years a person has worked in their current profession should be captured. Note: this is different to the number of years with a current or previous employer.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The years a person has worked in their current profession should be captured. Not" +
            "e: this is different to the number of years with a current or previous employer." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("YearsInCurrentProfession")]
        public decimal YearsInCurrentProfession { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the YearsInCurrentProfession property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YearsInCurrentProfessionSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContact
    {
        
        /// <summary>
        /// <para>The current address details for the applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current address details for the applicant")]
        [System.Xml.Serialization.XmlElementAttribute("CurrentAddress")]
        public PackageContentApplicationPersonApplicantContactCurrentAddress CurrentAddress { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactEmailAddress> _emailAddress;
        
        /// <summary>
        /// <para>Email address of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Email address of the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("EmailAddress")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactEmailAddress> EmailAddress
        {
            get
            {
                return this._emailAddress;
            }
            set
            {
                this._emailAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EmailAddress collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmailAddressSpecified
        {
            get
            {
                return (this.EmailAddress.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationPersonApplicantContact" /> class.</para>
        /// </summary>
        public PackageContentApplicationPersonApplicantContact()
        {
            this._emailAddress = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactEmailAddress>();
            this._priorAddress = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactPriorAddress>();
        }
        
        /// <summary>
        /// <para>Home phone captures the phone number used predominantly while this person is at home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home phone captures the phone number used predominantly while this person is at h" +
            "ome.")]
        [System.Xml.Serialization.XmlElementAttribute("HomePhone")]
        public PhoneType HomePhone { get; set; }
        
        /// <summary>
        /// <para>Applicant mobile number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Applicant mobile number.")]
        [System.Xml.Serialization.XmlElementAttribute("Mobile")]
        public PhoneType Mobile { get; set; }
        
        /// <summary>
        /// <para>The address details for the applicant following settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The address details for the applicant following settlement")]
        [System.Xml.Serialization.XmlElementAttribute("PostSettlementAddress")]
        public PackageContentApplicationPersonApplicantContactPostSettlementAddress PostSettlementAddress { get; set; }
        
        /// <summary>
        /// <para>Container element for an address previous to the current address</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for an address previous to the current address")]
        [System.Xml.Serialization.XmlElementAttribute("PreviousAddress")]
        public PackageContentApplicationPersonApplicantContactPreviousAddress PreviousAddress { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactPriorAddress> _priorAddress;
        
        /// <summary>
        /// <para>Container element for an address prior to the 'previous' address</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for an address prior to the \'previous\' address")]
        [System.Xml.Serialization.XmlElementAttribute("PriorAddress")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantContactPriorAddress> PriorAddress
        {
            get
            {
                return this._priorAddress;
            }
            set
            {
                this._priorAddress = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PriorAddress collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriorAddressSpecified
        {
            get
            {
                return (this.PriorAddress.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Where an applicant has a work number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where an applicant has a work number.")]
        [System.Xml.Serialization.XmlElementAttribute("WorkPhone")]
        public PhoneType WorkPhone { get; set; }
        
        /// <summary>
        /// <para>Specifies the preferred method for contacting this applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the preferred method for contacting this applicant")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredContact")]
        public PreferredContactPersonList PreferredContact { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreferredContactSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContactCurrentAddress", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContactCurrentAddress
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration at the current address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration at the current address.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>Indicates the housing status of this applicant e.g. Whether they are boarding, renting, own their own home, living with parents, other, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the housing status of this applicant e.g. Whether they are boarding, re" +
            "nting, own their own home, living with parents, other, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HousingStatus")]
        public HousingStatusList HousingStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HousingStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HousingStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the applicant moved to the residential address</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the applicant moved to the residential address")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference to the detail of the landlord of the applicant's current address.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the detail of the landlord of the applicant\'s current address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Landlord")]
        public string X_Landlord { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's current address for mailing documents</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s current address for mailing documents")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MailingAddress")]
        public string X_MailingAddress { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's current residential address</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s current residential address")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ResidentialAddress")]
        public string X_ResidentialAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContactEmailAddress", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContactEmailAddress
    {
        
        /// <summary>
        /// <para>An email address for the person</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address for the person")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Specify whether the applicant email address is personal or from work</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specify whether the applicant email address is personal or from work")]
        [System.Xml.Serialization.XmlAttributeAttribute("EmailType")]
        public ContactEmailTypeList EmailType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmailTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Email Address Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Email Address Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContactPostSettlementAddress", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContactPostSettlementAddress
    {
        
        /// <summary>
        /// <para>Indicates the housing status of this applicant e.g. Whether they are boarding, renting, own their own home, living with parents, other, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the housing status of this applicant e.g. Whether they are boarding, re" +
            "nting, own their own home, living with parents, other, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HousingStatus")]
        public HousingStatusList HousingStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HousingStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HousingStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which the post settlement residential address will be effective.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the post settlement residential address will be effective.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's address for mailing documents after settlement</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s address for mailing documents after settlement")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MailingAddress")]
        public string X_MailingAddress { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's residential address after settlement</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s residential address after settlement")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ResidentialAddress")]
        public string X_ResidentialAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContactPreviousAddress", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContactPreviousAddress
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration at the previous address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration at the previous address.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>The date that the applicant left this address</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the applicant left this address")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the housing status of this applicant e.g. Whether they are boarding, renting, own their own home, living with parents, other, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the housing status of this applicant e.g. Whether they are boarding, re" +
            "nting, own their own home, living with parents, other, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HousingStatus")]
        public HousingStatusList HousingStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HousingStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HousingStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the applicant moved to this address</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the applicant moved to this address")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's previous residential address</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s previous residential address")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ResidentialAddress")]
        public string X_ResidentialAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantContactPriorAddress", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantContactPriorAddress
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration at the prior address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration at the prior address.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>The date that the applicant left this address</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the applicant left this address")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the housing status of this applicant e.g. Whether they are boarding, renting, own their own home, living with parents, other, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the housing status of this applicant e.g. Whether they are boarding, re" +
            "nting, own their own home, living with parents, other, etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HousingStatus")]
        public HousingStatusList HousingStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HousingStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HousingStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the applicant moved to this address</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the applicant moved to this address")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference to the applicant's prior residential address</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the applicant\'s prior residential address")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ResidentialAddress")]
        public string X_ResidentialAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantCreditHistory", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantCreditHistory
    {
        
        /// <summary>
        /// <para>A comment about the applicant's credit history, possibly in mitigation or explanation of credit issues.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A comment about the applicant\'s credit history, possibly in mitigation or explana" +
            "tion of credit issues.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the credit issue is current. Selecting "No" means the issue described is a past credit issue.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the credit issue is current. Selecting \"No\" means the is" +
            "sue described is a past credit issue.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsCurrent")]
        public YesNoList IsCurrent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsCurrent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCurrentSpecified { get; set; }
        
        /// <summary>
        /// <para>Describes the type of Credit Issues the applicant has experienced</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Describes the type of Credit Issues the applicant has experienced")]
        [System.Xml.Serialization.XmlAttributeAttribute("Issue")]
        public CreditHistoryIssueList Issue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Issue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Credit History Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Credit History Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantDocumentationInstructions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantDocumentationInstructions
    {
        
        /// <summary>
        /// <para>Captures whether the documentation is to be sent by email or by post.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the documentation is to be sent by email or by post.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Method")]
        public DocumentationInstructionsMethodList Method { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Method property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicator for the party selected to receive loan documentation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicator for the party selected to receive loan documentation")]
        [System.Xml.Serialization.XmlAttributeAttribute("SendDocumentsTo")]
        public SendDocumentsToPersonList SendDocumentsTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendDocumentsTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SendDocumentsToSpecified { get; set; }
        
        /// <summary>
        /// <para>The nominated authority for receiving the loan documents</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The nominated authority for receiving the loan documents")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_NominatedAuthority")]
        public string X_NominatedAuthority { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmployment", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmployment
    {
        
        /// <summary>
        /// <para>Indicates that the employment is foreign employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the employment is foreign employment.")]
        [System.Xml.Serialization.XmlElementAttribute("ForeignEmployed")]
        public PackageContentApplicationPersonApplicantEmploymentForeignEmployed ForeignEmployed { get; set; }
        
        /// <summary>
        /// <para>Where the applicant is unemployed, the details should be submitted, if relevant to this instance of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where the applicant is unemployed, the details should be submitted, if relevant t" +
            "o this instance of employment.")]
        [System.Xml.Serialization.XmlElementAttribute("NotEmployed")]
        public PackageContentApplicationPersonApplicantEmploymentNotEmployed NotEmployed { get; set; }
        
        /// <summary>
        /// <para>Wrapper to contain details regarding PAYE employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wrapper to contain details regarding PAYE employment.")]
        [System.Xml.Serialization.XmlElementAttribute("PAYE")]
        public PackageContentApplicationPersonApplicantEmploymentPAYE PAYE { get; set; }
        
        /// <summary>
        /// <para>Self-employed refers to people who 'work for themselves' in either wholly owned or part-owned organisations, including when operating as a (paid) Director. The organisation may or may not employ other people.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Self-employed refers to people who \'work for themselves\' in either wholly owned o" +
            "r part-owned organisations, including when operating as a (paid) Director. The o" +
            "rganisation may or may not employ other people.")]
        [System.Xml.Serialization.XmlElementAttribute("SelfEmployed")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployed SelfEmployed { get; set; }
        
        /// <summary>
        /// <para>The order of this employment within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this employment within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentForeignEmployed", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentForeignEmployed
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration of employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>Details of the income income-related amounts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the income income-related amounts.")]
        [System.Xml.Serialization.XmlElementAttribute("Income")]
        public PackageContentApplicationPersonApplicantEmploymentForeignEmployedIncome Income { get; set; }
        
        /// <summary>
        /// <para>The employer is related to the person applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employer is related to the person applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("RelatedEmployer")]
        public PackageContentApplicationPersonApplicantEmploymentForeignEmployedRelatedEmployer RelatedEmployer { get; set; }
        
        /// <summary>
        /// <para>When the applicant is employed on a part time or casual basis the average hours per week need to be collected for serviceability calculations.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When the applicant is employed on a part time or casual basis the average hours p" +
            "er week need to be collected for serviceability calculations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AverageHoursPerWeek")]
        public decimal AverageHoursPerWeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AverageHoursPerWeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageHoursPerWeekSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether the employment type is fulltime, part-time, contract, temporary, casual, commission only or seasonal.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether the employment type is fulltime, part-time," +
            " contract, temporary, casual, commission only or seasonal.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Basis")]
        public ForeignEmployedBasisList Basis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Basis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasisSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the person has a company supplied (and paid) car</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the person has a company supplied (and paid) car")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyCar")]
        public YesNoList CompanyCar { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyCar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyCarSpecified { get; set; }
        
        /// <summary>
        /// <para>An industry code, from a customised list supported by the lender where the lender requires a code that is not within ANZSIC, BIC or GICS.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An industry code, from a customised list supported by the lender where the lender" +
            " requires a code that is not within ANZSIC, BIC or GICS.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomIndustryCode")]
        public string CustomIndustryCode { get; set; }
        
        /// <summary>
        /// <para>A custom occupation code. A free text field for any other occupation code used by an entity.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A custom occupation code. A free text field for any other occupation code used by" +
            " an entity.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomOccupationCode")]
        public string CustomOccupationCode { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether the employer type belongs to the Public (government) or Private sectors.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether the employer type belongs to the Public (go" +
            "vernment) or Private sectors.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EmployerType")]
        public EmployerTypeList EmployerType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployerType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date indicates when the applicant finalised their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date indicates when the applicant finalised their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A Global Industry Classification Standard (GICS) code.</para>
        /// <para>A pattern to restrict a Global Industry Classification Standard (GICS) code to be either 2, 4, 6, or 8 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{2}(\d{2})?(\d{2})?(\d{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Global Industry Classification Standard (GICS) code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{2}(\\d{2})?(\\d{2})?(\\d{2})?")]
        [System.Xml.Serialization.XmlAttributeAttribute("GICSCode")]
        public string GICSCode { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the Industry Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the Industry Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Industry")]
        public string Industry { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate what type of business they are working in</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate what type of business they are working in")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
        
        /// <summary>
        /// <para>Text description of the person's role or occupation for this employment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Text description of the person\'s role or occupation for this employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupation")]
        public string Occupation { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether they are on probation with their current employer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether they are on probation with their current em" +
            "ployer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnProbation")]
        public YesNoList OnProbation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnProbation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnProbationSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should submit their position title relating to this instance of employment.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should submit their position title relating to this instance of emp" +
            "loyment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PositionTitle")]
        public string PositionTitle { get; set; }
        
        /// <summary>
        /// <para>Captures the date on which the applicant's probation period ends.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date on which the applicant\'s probation period ends.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProbationDateEnds", DataType="date")]
        public System.DateTime ProbationDateEnds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProbationDateEnds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbationDateEndsSpecified { get; set; }
        
        /// <summary>
        /// <para>The date of commencement of the probation period.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of commencement of the probation period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProbationDateStarts", DataType="date")]
        public System.DateTime ProbationDateStarts { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProbationDateStarts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbationDateStartsSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this foreign employed within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this foreign employed within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date indicates when the applicant commenced their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date indicates when the applicant commenced their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The current or previous status of the employment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current or previous status of the employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public EmploymentStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The employer details for this instance of ForeignEmployed employment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employer details for this instance of ForeignEmployed employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Employer")]
        public string X_Employer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentForeignEmployedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentForeignEmployedIncome
    {
        
        /// <summary>
        /// <para>The gross bonus income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross bonus income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BonusAmount")]
        public decimal BonusAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BonusAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross bonus income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross bonus income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BonusFrequency")]
        public FrequencyShortList BonusFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BonusFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross car allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross car allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarAllowanceAmount")]
        public decimal CarAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross car allowance income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross car allowance income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarAllowanceFrequency")]
        public FrequencyShortList CarAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross commission income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross commission income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionAmount")]
        public decimal CommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross commission income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross commission income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionFrequency")]
        public FrequencyShortList CommissionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross regular overtime income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross regular overtime income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossRegularOvertimeAmount")]
        public decimal GrossRegularOvertimeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossRegularOvertimeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossRegularOvertimeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross regular overtime income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross regular overtime income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossRegularOvertimeFrequency")]
        public FrequencyShortList GrossRegularOvertimeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossRegularOvertimeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossRegularOvertimeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross salary income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross salary income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossSalaryAmount")]
        public decimal GrossSalaryAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossSalaryAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossSalaryAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross salary income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross salary income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossSalaryFrequency")]
        public FrequencyShortList GrossSalaryFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossSalaryFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossSalaryFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net bonus income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net bonus income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetBonusAmount")]
        public decimal NetBonusAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetBonusAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetBonusAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving bonus income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving bonus income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetBonusFrequency")]
        public FrequencyShortList NetBonusFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetBonusFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetBonusFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net car allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net car allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCarAllowanceAmount")]
        public decimal NetCarAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCarAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCarAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving car allowance income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving car allowance income net amount" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCarAllowanceFrequency")]
        public FrequencyShortList NetCarAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCarAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCarAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net commission income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net commission income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCommissionAmount")]
        public decimal NetCommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving commission income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving commission income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCommissionFrequency")]
        public FrequencyShortList NetCommissionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCommissionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCommissionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net regular overtime income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net regular overtime income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRegularOvertimeAmount")]
        public decimal NetRegularOvertimeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRegularOvertimeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRegularOvertimeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving regular overtime income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving regular overtime income net amo" +
            "unt.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRegularOvertimeFrequency")]
        public FrequencyShortList NetRegularOvertimeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRegularOvertimeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRegularOvertimeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net salary income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net salary income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSalaryAmount")]
        public decimal NetSalaryAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSalaryAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSalaryAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving salary income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving salary income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSalaryFrequency")]
        public FrequencyShortList NetSalaryFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSalaryFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSalaryFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net work allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net work allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkAllowanceAmount")]
        public decimal NetWorkAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving work allowance income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving work allowance income net amoun" +
            "t.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkAllowanceFrequency")]
        public FrequencyShortList NetWorkAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net workers compensation income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net workers compensation income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkersCompensationAmount")]
        public decimal NetWorkersCompensationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkersCompensationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkersCompensationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving workers compensation income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving workers compensation income net" +
            " amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkersCompensationFrequency")]
        public FrequencyShortList NetWorkersCompensationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkersCompensationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkersCompensationFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that evidence of this income has been sighted by the loan writer or assessor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that evidence of this income has been sighted by the loan writer or ass" +
            "essor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The gross work allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross work allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkAllowanceAmount")]
        public decimal WorkAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross work allowance income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross work allowance income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkAllowanceFrequency")]
        public FrequencyShortList WorkAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross workers compensation income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross workers compensation income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkersCompensationAmount")]
        public decimal WorkersCompensationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkersCompensationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkersCompensationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross workers compensation income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross workers compensation income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkersCompensationFrequency")]
        public FrequencyShortList WorkersCompensationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkersCompensationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkersCompensationFrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentForeignEmployedRelatedEmployer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentForeignEmployedRelatedEmployer
    {
        
        /// <summary>
        /// <para>The person applicant acknowledges that their employer is a related entity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person applicant acknowledges that their employer is a related entity.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Acknowledgement")]
        public YesNoList Acknowledgement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Acknowledgement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcknowledgementSpecified { get; set; }
        
        /// <summary>
        /// <para>The details provided by the broker in case there is any conflict due to the employer's relationship with the person applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details provided by the broker in case there is any conflict due to the emplo" +
            "yer\'s relationship with the person applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentNotEmployed", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentNotEmployed
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration of employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>Income details for this period without employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Income details for this period without employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Income")]
        public PackageContentApplicationPersonApplicantEmploymentNotEmployedIncome Income { get; set; }
        
        /// <summary>
        /// <para>The end date indicates when the applicant finished being not employed.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date indicates when the applicant finished being not employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants should indicate whether they perform home duties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants should indicate whether they perform home duties.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeDuties")]
        public YesNoList HomeDuties { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeDuties property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeDutiesSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants should indicate whether they are receiving unemployment benefits.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants should indicate whether they are receiving unemployment benefits.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnBenefits")]
        public YesNoList OnBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants should indicate whether they are retired</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants should indicate whether they are retired")]
        [System.Xml.Serialization.XmlAttributeAttribute("Retired")]
        public YesNoList Retired { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Retired property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetiredSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this not employed within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this not employed within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date indicates when the applicant commenced being not employed.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date indicates when the applicant commenced being not employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The current or previous status of the employment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current or previous status of the employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public EmploymentStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants should indicate whether they are currently a student.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants should indicate whether they are currently a student.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Student")]
        public YesNoList Student { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Student property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StudentSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentNotEmployedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentNotEmployedIncome
    {
        
        /// <summary>
        /// <para>Captures the government benefits income gross amount received by the applicant, excluding Jobseeker Support (New Zealand) and Newstart Allowance (Australia) which are captured separately.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the government benefits income gross amount received by the applicant, e" +
            "xcluding Jobseeker Support (New Zealand) and Newstart Allowance (Australia) whic" +
            "h are captured separately.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GovernmentBenefitsAmount")]
        public decimal GovernmentBenefitsAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GovernmentBenefitsAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GovernmentBenefitsAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the frequency at which the applicant is receiving government benefits income gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the frequency at which the applicant is receiving government benefits in" +
            "come gross amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GovernmentBenefitsFrequency")]
        public FrequencyShortList GovernmentBenefitsFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GovernmentBenefitsFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GovernmentBenefitsFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the gross Jobseeker Support income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the gross Jobseeker Support income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("JobseekerSupportAmount")]
        public decimal JobseekerSupportAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JobseekerSupportAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobseekerSupportAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the frequency at which the applicant is receiving Jobseeker Support income gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the frequency at which the applicant is receiving Jobseeker Support inco" +
            "me gross amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("JobseekerSupportFrequency")]
        public FrequencyShortList JobseekerSupportFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JobseekerSupportFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobseekerSupportFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net government benefits income amount received by the applicant, excluding Jobseeker Support (New Zealand) and Newstart Allowance (Australia) which are captured separately.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net government benefits income amount received by the applicant, exc" +
            "luding Jobseeker Support (New Zealand) and Newstart Allowance (Australia) which " +
            "are captured separately.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetGovernmentBenefitsAmount")]
        public decimal NetGovernmentBenefitsAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetGovernmentBenefitsAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetGovernmentBenefitsAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving government benefits income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving government benefits income net " +
            "amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetGovernmentBenefitsFrequency")]
        public FrequencyShortList NetGovernmentBenefitsFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetGovernmentBenefitsFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetGovernmentBenefitsFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net Jobseeker Support income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net Jobseeker Support income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetJobseekerSupportAmount")]
        public decimal NetJobseekerSupportAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetJobseekerSupportAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetJobseekerSupportAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving government Jobseeker Support income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving government Jobseeker Support in" +
            "come net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetJobseekerSupportFrequency")]
        public FrequencyShortList NetJobseekerSupportFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetJobseekerSupportFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetJobseekerSupportFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a net income amount received by the applicant, that is not captured elsewhere.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a net income amount received by the applicant, that is not captured else" +
            "where.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetOtherIncomeAmount")]
        public decimal NetOtherIncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetOtherIncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetOtherIncomeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving other income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving other income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetOtherIncomeFrequency")]
        public FrequencyShortList NetOtherIncomeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetOtherIncomeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetOtherIncomeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net pension income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net pension income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetPrivatePensionAmount")]
        public decimal NetPrivatePensionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetPrivatePensionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetPrivatePensionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving private pension income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving private pension income net amou" +
            "nt.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetPrivatePensionFrequency")]
        public FrequencyShortList NetPrivatePensionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetPrivatePensionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetPrivatePensionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net superannuation amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net superannuation amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSuperannuationAmount")]
        public decimal NetSuperannuationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSuperannuationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSuperannuationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving superannuation income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving superannuation income net amoun" +
            "t.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSuperannuationFrequency")]
        public FrequencyShortList NetSuperannuationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSuperannuationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSuperannuationFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a gross income amount received by the applicant, that is not captured elsewhere.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a gross income amount received by the applicant, that is not captured el" +
            "sewhere.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIncomeAmount")]
        public decimal OtherIncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherIncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherIncomeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the other income.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the other income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIncomeDescription")]
        public string OtherIncomeDescription { get; set; }
        
        /// <summary>
        /// <para>Captures the frequency at which the applicant is receiving other income gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the frequency at which the applicant is receiving other income gross amo" +
            "unt.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIncomeFrequency")]
        public FrequencyShortList OtherIncomeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherIncomeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherIncomeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the gross pension income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the gross pension income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrivatePensionAmount")]
        public decimal PrivatePensionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrivatePensionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrivatePensionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the frequency at which the applicant is receiving private pension income gross amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the frequency at which the applicant is receiving private pension income" +
            " gross amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrivatePensionFrequency")]
        public FrequencyShortList PrivatePensionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrivatePensionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrivatePensionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodeNotEmployedList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the Income evidence been sighted by the loan writer or assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the Income evidence been sighted by the loan writer or assessor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the superannuation income received by the applicant is from a Self Managed Super Fund.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the superannuation income received by the applicant is f" +
            "rom a Self Managed Super Fund.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SMSF")]
        public YesNoList SMSF { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SMSF property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SMSFSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the gross superannuation amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the gross superannuation amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationAmount")]
        public decimal SuperannuationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the frequency at which the applicant is receiving superannuation income gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the frequency at which the applicant is receiving superannuation income " +
            "gross amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationFrequency")]
        public FrequencyShortList SuperannuationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationFrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentPAYE", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentPAYE
    {
        
        /// <summary>
        /// <para>Container element for capturing the duration of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration of employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>Details of the income or income-related amounts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the income or income-related amounts.")]
        [System.Xml.Serialization.XmlElementAttribute("Income")]
        public PackageContentApplicationPersonApplicantEmploymentPAYEIncome Income { get; set; }
        
        /// <summary>
        /// <para>The employer is related to the person applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The employer is related to the person applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("RelatedEmployer")]
        public PackageContentApplicationPersonApplicantEmploymentPAYERelatedEmployer RelatedEmployer { get; set; }
        
        /// <summary>
        /// <para>The ANZSCO occupation code specifying the person's role or occupation in this employment. This attribute is restricted to the list of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded the ASCO Occupation Codes, although the superseded codes still remain in common use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The ANZSCO occupation code specifying the person's role or occupation in this employment. This attribute is restricted to the list of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded the ASCO Occupation Codes, although the superseded codes still remain in common use.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ANZSCOOccupationCode")]
        public AnzscoOccupationCodeList ANZSCOOccupationCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANZSCOOccupationCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANZSCOOccupationCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>When the applicant is employed on a part time or casual basis the average hours per week need to be collected for serviceability calculations.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When the applicant is employed on a part time or casual basis the average hours p" +
            "er week need to be collected for serviceability calculations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AverageHoursPerWeek")]
        public decimal AverageHoursPerWeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AverageHoursPerWeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageHoursPerWeekSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether the employment type is fulltime, part-time, contract, temporary, casual, commission only or seasonal.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether the employment type is fulltime, part-time," +
            " contract, temporary, casual, commission only or seasonal.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Basis")]
        public PayeBasisList Basis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Basis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasisSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the person has a company supplied (and paid) car</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the person has a company supplied (and paid) car")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyCar")]
        public YesNoList CompanyCar { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompanyCar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyCarSpecified { get; set; }
        
        /// <summary>
        /// <para>An industry code, from a customised list supported by the lender where the lender requires a code that is not within ANZSIC, BIC or GICS.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An industry code, from a customised list supported by the lender where the lender" +
            " requires a code that is not within ANZSIC, BIC or GICS.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomIndustryCode")]
        public string CustomIndustryCode { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether the employer type belongs to the Public (government) or Private sectors.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether the employer type belongs to the Public (go" +
            "vernment) or Private sectors.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EmployerType")]
        public EmployerTypeList EmployerType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmployerType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date indicates when the applicant finalised their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date indicates when the applicant finalised their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A Global Industry Classification Standard (GICS) code.</para>
        /// <para>A pattern to restrict a Global Industry Classification Standard (GICS) code to be either 2, 4, 6, or 8 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{2}(\d{2})?(\d{2})?(\d{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Global Industry Classification Standard (GICS) code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{2}(\\d{2})?(\\d{2})?(\\d{2})?")]
        [System.Xml.Serialization.XmlAttributeAttribute("GICSCode")]
        public string GICSCode { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the Industry Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the Industry Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Industry")]
        public string Industry { get; set; }
        
        /// <summary>
        /// <para>The four digit industry code, from the ANZSIC list of codes. If the nominal code is two or three digits, add '0's to the end to make the four digit code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The four digit industry code, from the ANZSIC list of codes. If the nominal code " +
            "is two or three digits, add \'0\'s to the end to make the four digit code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndustryCode")]
        public AnzsicIndustryCodeList IndustryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustryCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndustryCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate what type of business they are working in</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate what type of business they are working in")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
        
        /// <summary>
        /// <para>A Business Industry Classification Code.</para>
        /// <para>A pattern to restrict a Business Industry Classification Code to be exactly 1 alphabetic character followed by 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: [A-z]\d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Business Industry Classification Code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-z]\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandBICCode")]
        public string NewZealandBICCode { get; set; }
        
        /// <summary>
        /// <para>Text description of the person's role or occupation for this employment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Text description of the person\'s role or occupation for this employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupation")]
        public string Occupation { get; set; }
        
        /// <summary>
        /// <para>An ABS occupation code specifying the person's role or occupation in this employment. This attribute remains but is likely to be deprecated in the future, with the ANZSCOOccupationCode attribute being restricted to the more recent ANZSCO Occupation Codes published by the ABS on 26/03/2013.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An ABS occupation code specifying the person's role or occupation in this employment. This attribute remains but is likely to be deprecated in the future, with the ANZSCOOccupationCode attribute being restricted to the more recent ANZSCO Occupation Codes published by the ABS on 26/03/2013.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OccupationCode")]
        public AbsOccupationCodeList OccupationCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OccupationCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupationCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether they are on probation with their current employer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether they are on probation with their current em" +
            "ployer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnProbation")]
        public YesNoList OnProbation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnProbation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnProbationSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should submit their position title relating to this instance of employment.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should submit their position title relating to this instance of emp" +
            "loyment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PositionTitle")]
        public string PositionTitle { get; set; }
        
        /// <summary>
        /// <para>Captures the date on which the applicant's probation period ends.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the date on which the applicant\'s probation period ends.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProbationDateEnds", DataType="date")]
        public System.DateTime ProbationDateEnds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProbationDateEnds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbationDateEndsSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this PAYE within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this PAYE within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date indicates when the applicant commenced their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date indicates when the applicant commenced their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The current or previous status of the employment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current or previous status of the employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public EmploymentStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The applicant should capture the employer details for this instance of PAYE employment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should capture the employer details for this instance of PAYE emplo" +
            "yment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Employer")]
        public string X_Employer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentPAYEIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentPAYEIncome
    {
        
        /// <summary>
        /// <para>The gross bonus income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross bonus income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BonusAmount")]
        public decimal BonusAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BonusAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross bonus income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross bonus income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BonusFrequency")]
        public FrequencyShortList BonusFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BonusFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross car allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross car allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarAllowanceAmount")]
        public decimal CarAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross car allowance income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross car allowance income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarAllowanceFrequency")]
        public FrequencyShortList CarAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross commission income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross commission income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionAmount")]
        public decimal CommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross commission income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross commission income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionFrequency")]
        public FrequencyShortList CommissionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross regular overtime income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross regular overtime income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossRegularOvertimeAmount")]
        public decimal GrossRegularOvertimeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossRegularOvertimeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossRegularOvertimeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Gross Regular Overtime Amount is a condition of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Gross Regular Overtime Amount is a condition of employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossRegularOvertimeAmountConditionOfEmployment")]
        public YesNoList GrossRegularOvertimeAmountConditionOfEmployment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossRegularOvertimeAmountConditionOfEmployment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossRegularOvertimeAmountConditionOfEmploymentSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross regular overtime income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross regular overtime income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossRegularOvertimeFrequency")]
        public FrequencyShortList GrossRegularOvertimeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossRegularOvertimeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossRegularOvertimeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross salary income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross salary income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossSalaryAmount")]
        public decimal GrossSalaryAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossSalaryAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossSalaryAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross salary income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross salary income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GrossSalaryFrequency")]
        public FrequencyShortList GrossSalaryFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrossSalaryFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrossSalaryFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net bonus income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net bonus income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetBonusAmount")]
        public decimal NetBonusAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetBonusAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetBonusAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving bonus income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving bonus income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetBonusFrequency")]
        public FrequencyShortList NetBonusFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetBonusFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetBonusFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net car allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net car allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCarAllowanceAmount")]
        public decimal NetCarAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCarAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCarAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving car allowance income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving car allowance income net amount" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCarAllowanceFrequency")]
        public FrequencyShortList NetCarAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCarAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCarAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net commission income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net commission income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCommissionAmount")]
        public decimal NetCommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving commission income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving commission income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetCommissionFrequency")]
        public FrequencyShortList NetCommissionFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetCommissionFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetCommissionFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net regular overtime income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net regular overtime income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRegularOvertimeAmount")]
        public decimal NetRegularOvertimeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRegularOvertimeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRegularOvertimeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving regular overtime income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving regular overtime income net amo" +
            "unt.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRegularOvertimeFrequency")]
        public FrequencyShortList NetRegularOvertimeFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRegularOvertimeFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRegularOvertimeFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net salary income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net salary income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSalaryAmount")]
        public decimal NetSalaryAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSalaryAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSalaryAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving salary income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving salary income net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetSalaryFrequency")]
        public FrequencyShortList NetSalaryFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetSalaryFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetSalaryFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net work allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net work allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkAllowanceAmount")]
        public decimal NetWorkAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving work allowance income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving work allowance income net amoun" +
            "t.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkAllowanceFrequency")]
        public FrequencyShortList NetWorkAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net workers compensation income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net workers compensation income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkersCompensationAmount")]
        public decimal NetWorkersCompensationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkersCompensationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkersCompensationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency at which the applicant is receiving workers compensation income net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency at which the applicant is receiving workers compensation income net" +
            " amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetWorkersCompensationFrequency")]
        public FrequencyShortList NetWorkersCompensationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetWorkersCompensationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetWorkersCompensationFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodePAYEList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that evidence of this income has been sighted by the loan writer or assessor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that evidence of this income has been sighted by the loan writer or ass" +
            "essor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The gross work allowance amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross work allowance amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkAllowanceAmount")]
        public decimal WorkAllowanceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkAllowanceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkAllowanceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Work Allowance Amount is a condition of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Work Allowance Amount is a condition of employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkAllowanceAmountConditionOfEmployment")]
        public YesNoList WorkAllowanceAmountConditionOfEmployment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkAllowanceAmountConditionOfEmployment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkAllowanceAmountConditionOfEmploymentSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross work allowance income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross work allowance income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkAllowanceFrequency")]
        public FrequencyShortList WorkAllowanceFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkAllowanceFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkAllowanceFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross workers compensation income amount received by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross workers compensation income amount received by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkersCompensationAmount")]
        public decimal WorkersCompensationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkersCompensationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkersCompensationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the gross workers compensation income payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the gross workers compensation income payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkersCompensationFrequency")]
        public FrequencyShortList WorkersCompensationFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkersCompensationFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkersCompensationFrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentPAYERelatedEmployer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentPAYERelatedEmployer
    {
        
        /// <summary>
        /// <para>The person applicant acknowledges that their employer is a related entity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The person applicant acknowledges that their employer is a related entity.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Acknowledgement")]
        public YesNoList Acknowledgement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Acknowledgement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcknowledgementSpecified { get; set; }
        
        /// <summary>
        /// <para>The details provided by the broker in case there is any conflict due to the employer's relationship with the person applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details provided by the broker in case there is any conflict due to the emplo" +
            "yer\'s relationship with the person applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployed", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployed
    {
        
        /// <summary>
        /// <para>Container element for self employed business details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for self employed business details")]
        [System.Xml.Serialization.XmlElementAttribute("Business")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusiness Business { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the income or income-related amounts in the previous financial year (immediately preceding the most recent full financial year), attributable to this applicant (for year = current year -2).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the income or income-related amounts in the previous fina" +
            "ncial year (immediately preceding the most recent full financial year), attribut" +
            "able to this applicant (for year = current year -2).")]
        [System.Xml.Serialization.XmlElementAttribute("BusinessIncomePrevious")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrevious BusinessIncomePrevious { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the income or income-related amounts in the prior financial year (two years prior to the most recent full financial year), attributable to this applicant (for year = current year -3).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the income or income-related amounts in the prior financi" +
            "al year (two years prior to the most recent full financial year), attributable t" +
            "o this applicant (for year = current year -3).")]
        [System.Xml.Serialization.XmlElementAttribute("BusinessIncomePrior")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrior BusinessIncomePrior { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the income or income-related amounts in the most recent full financial year, attributable to this applicant (year = current year -1).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the income or income-related amounts in the most recent f" +
            "ull financial year, attributable to this applicant (year = current year -1).")]
        [System.Xml.Serialization.XmlElementAttribute("BusinessIncomeRecent")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecent BusinessIncomeRecent { get; set; }
        
        /// <summary>
        /// <para>Details of the current year to date share of the gross (pre-tax) income or income-related amounts, attributable to this applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the current year to date share of the gross (pre-tax) income or income" +
            "-related amounts, attributable to this applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("BusinessIncomeYearToDate")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDate BusinessIncomeYearToDate { get; set; }
        
        /// <summary>
        /// <para>The amount of income declared by the person applicant for Lo Doc applications.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of income declared by the person applicant for Lo Doc applications.")]
        [System.Xml.Serialization.XmlElementAttribute("DeclaredIncome")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedDeclaredIncome DeclaredIncome { get; set; }
        
        /// <summary>
        /// <para>Container element for capturing the duration of employment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for capturing the duration of employment.")]
        [System.Xml.Serialization.XmlElementAttribute("Duration")]
        public DurationType Duration { get; set; }
        
        /// <summary>
        /// <para>The detailed financial analysis of a self employed applicant's company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The detailed financial analysis of a self employed applicant\'s company")]
        [System.Xml.Serialization.XmlElementAttribute("FinancialAnalysis")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysis FinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para>The ANZSCO occupation code specifying the person's role or occupation in this employment. This attribute is restricted to the list of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded the ASCO Occupation Codes, although the superseded codes still remain in common use.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The ANZSCO occupation code specifying the person's role or occupation in this employment. This attribute is restricted to the list of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded the ASCO Occupation Codes, although the superseded codes still remain in common use.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ANZSCOOccupationCode")]
        public AnzscoOccupationCodeList ANZSCOOccupationCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANZSCOOccupationCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANZSCOOccupationCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>When the applicant is employed on a part time or casual basis the average hours per week need to be collected for serviceability calculations.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When the applicant is employed on a part time or casual basis the average hours p" +
            "er week need to be collected for serviceability calculations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AverageHoursPerWeek")]
        public decimal AverageHoursPerWeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AverageHoursPerWeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageHoursPerWeekSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate whether the employment type is fulltime, part-time or casual.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate whether the employment type is fulltime, part-time " +
            "or casual.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Basis")]
        public SelfEmployedBasisList Basis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Basis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasisSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date indicates when the applicant finalised their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date indicates when the applicant finalised their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Text description of the person's role or occupation for this employment</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Text description of the person\'s role or occupation for this employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupation")]
        public string Occupation { get; set; }
        
        /// <summary>
        /// <para>An ABS occupation code specifying the person's role or occupation in this employment. This attribute remains but is likely to be deprecated in the future, with the ANZSCOOccupationCode attribute being restricted to the more recent ANZSCO Occupation Codes published by the ABS on 26/03/2013.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An ABS occupation code specifying the person's role or occupation in this employment. This attribute remains but is likely to be deprecated in the future, with the ANZSCOOccupationCode attribute being restricted to the more recent ANZSCO Occupation Codes published by the ABS on 26/03/2013.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OccupationCode")]
        public AbsOccupationCodeList OccupationCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OccupationCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupationCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this self employed within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this self employed within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>The start date indicates when the applicant commenced their employment.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date indicates when the applicant commenced their employment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The current or previous status of the employment</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The current or previous status of the employment")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public EmploymentStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Link to the Applicant's accountant</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the Applicant\'s accountant")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
        
        /// <summary>
        /// <para>The applicant should capture their company details for this instance of self-employment.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should capture their company details for this instance of self-empl" +
            "oyment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Employer")]
        public string X_Employer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusiness", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusiness
    {
        
        /// <summary>
        /// <para>An industry code, from a customised list supported by the lender where the lender requires a code that is not within ANZSIC, BIC or GICS.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An industry code, from a customised list supported by the lender where the lender" +
            " requires a code that is not within ANZSIC, BIC or GICS.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomIndustryCode")]
        public string CustomIndustryCode { get; set; }
        
        /// <summary>
        /// <para>A Global Industry Classification Standard (GICS) code.</para>
        /// <para>A pattern to restrict a Global Industry Classification Standard (GICS) code to be either 2, 4, 6, or 8 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{2}(\d{2})?(\d{2})?(\d{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Global Industry Classification Standard (GICS) code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{2}(\\d{2})?(\\d{2})?(\\d{2})?")]
        [System.Xml.Serialization.XmlAttributeAttribute("GICSCode")]
        public string GICSCode { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the Industry Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the Industry Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Industry")]
        public string Industry { get; set; }
        
        /// <summary>
        /// <para>Captures the ANZSIC industry code</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the ANZSIC industry code")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndustryCode")]
        public AnzsicIndustryCodeList IndustryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustryCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndustryCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures whether the business is a franchise</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the business is a franchise")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsAFranchise")]
        public YesNoList IsAFranchise { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsAFranchise property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAFranchiseSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant should indicate what type of business they are working in</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant should indicate what type of business they are working in")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
        
        /// <summary>
        /// <para>A Business Industry Classification Code.</para>
        /// <para>A pattern to restrict a Business Industry Classification Code to be exactly 1 alphabetic character followed by 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: [A-z]\d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Business Industry Classification Code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-z]\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandBICCode")]
        public string NewZealandBICCode { get; set; }
        
        /// <summary>
        /// <para>The number of employees in the business.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of employees in the business.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfEmployees")]
        public string NumberOfEmployees { get; set; }
        
        /// <summary>
        /// <para>The number of locations where the business operates should be captured.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of locations where the business operates should be captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfLocations")]
        public string NumberOfLocations { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the sole trader or partners own the premises from which the business is operated</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the sole trader or partners own the premises from which the bus" +
            "iness is operated")]
        [System.Xml.Serialization.XmlAttributeAttribute("OwnPremises")]
        public YesNoList OwnPremises { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnPremises property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnPremisesSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the self employed business.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the self employed business.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrevi" +
        "ous", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrevious
    {
        
        /// <summary>
        /// <para>Container element for Previous Business Income Addback</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Previous Business Income Addback")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePreviousAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Container element for any foreign sourced income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for any foreign sourced income")]
        [System.Xml.Serialization.XmlElementAttribute("ForeignSourcedIncome")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePreviousForeignSourcedIncome ForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the applicant received any income from foreign sources</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the applicant received any income from foreign sources")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasForeignSourcedIncome")]
        public YesNoList HasForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasForeignSourcedIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasForeignSourcedIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application where the applicant is self-employed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application where the applicant is self-employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the person's accountant for the full previous financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the person\'s accountant for the full previous financial year. This should" +
            " be populated when the accountant for the specified period is different to that " +
            "declared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrevi" +
        "ousAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePreviousAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Excess superannuation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excess superannuation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrevi" +
        "ousForeignSourcedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePreviousForeignSourcedIncome
    {
        
        /// <summary>
        /// <para>The amount of foreign sourced income in New Zealand Dollars</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of foreign sourced income in New Zealand Dollars")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZDAmount")]
        public decimal NZDAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZDAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZDAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The original currency that the income was earned in. For example US Dollars, British Pounds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original currency that the income was earned in. For example US Dollars, Brit" +
            "ish Pounds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryForeignCurrency")]
        public CurrencyCodeList PrimaryForeignCurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryForeignCurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryForeignCurrencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrior" +
        "", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrior
    {
        
        /// <summary>
        /// <para>Container element for Prior Business Income Addback</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Prior Business Income Addback")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePriorAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Container element for any foreign sourced income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for any foreign sourced income")]
        [System.Xml.Serialization.XmlElementAttribute("ForeignSourcedIncome")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePriorForeignSourcedIncome ForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the applicant received any income from foreign sources</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the applicant received any income from foreign sources")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasForeignSourcedIncome")]
        public YesNoList HasForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasForeignSourcedIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasForeignSourcedIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the Prior year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the Prior year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application where the applicant is self-employed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application where the applicant is self-employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the person's accountant for the full prior financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the person\'s accountant for the full prior financial year. This should be" +
            " populated when the accountant for the specified period is different to that dec" +
            "lared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrior" +
        "Addback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePriorAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Excess superannuation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excess superannuation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePrior" +
        "ForeignSourcedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomePriorForeignSourcedIncome
    {
        
        /// <summary>
        /// <para>The amount of foreign sourced income in New Zealand Dollars</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of foreign sourced income in New Zealand Dollars")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZDAmount")]
        public decimal NZDAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZDAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZDAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The original currency that the income was earned in. For example US Dollars, British Pounds</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original currency that the income was earned in. For example US Dollars, Brit" +
            "ish Pounds")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryForeignCurrency")]
        public CurrencyCodeList PrimaryForeignCurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryForeignCurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryForeignCurrencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecen" +
        "t", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecent
    {
        
        /// <summary>
        /// <para>Container element for Recent Business Income Addback</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Recent Business Income Addback")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecentAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Container element for any foreign sourced income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for any foreign sourced income")]
        [System.Xml.Serialization.XmlElementAttribute("ForeignSourcedIncome")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecentForeignSourcedIncome ForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the applicant received any income from foreign sources</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the applicant received any income from foreign sources")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasForeignSourcedIncome")]
        public YesNoList HasForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasForeignSourcedIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasForeignSourcedIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodeSelfEmployedList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the Income evidence been sighted by the loan writer or assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the Income evidence been sighted by the loan writer or assessor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application where the applicant is self-employed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application where the applicant is self-employed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the person's accountant for the full most recent financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the person\'s accountant for the full most recent financial year. This sho" +
            "uld be populated when the accountant for the specified period is different to th" +
            "at declared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecen" +
        "tAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecentAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Excess superannuation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excess superannuation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecen" +
        "tForeignSourcedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeRecentForeignSourcedIncome
    {
        
        /// <summary>
        /// <para>The amount of foreign sourced income in New Zealand Dollars</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of foreign sourced income in New Zealand Dollars")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZDAmount")]
        public decimal NZDAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZDAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZDAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The original currency that the income was earned in. For example US Dollars, British Pounds</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original currency that the income was earned in. For example US Dollars, Brit" +
            "ish Pounds")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryForeignCurrency")]
        public CurrencyCodeList PrimaryForeignCurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryForeignCurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryForeignCurrencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearT" +
        "oDate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDate
    {
        
        /// <summary>
        /// <para>Container element for Year To Date Business Income Addback</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Year To Date Business Income Addback")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDateAddback Addback { get; set; }
        
        /// <summary>
        /// <para>Container element for any foreign sourced income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for any foreign sourced income")]
        [System.Xml.Serialization.XmlElementAttribute("ForeignSourcedIncome")]
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDateForeignSourcedIncome ForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Has the applicant received any income from foreign sources</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Has the applicant received any income from foreign sources")]
        [System.Xml.Serialization.XmlAttributeAttribute("HasForeignSourcedIncome")]
        public YesNoList HasForeignSourcedIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasForeignSourcedIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasForeignSourcedIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearT" +
        "oDateAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDateAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Car expense amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Car expense amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarExpense")]
        public decimal CarExpense { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarExpense property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarExpenseSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Excess superannuation amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Excess superannuation amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearT" +
        "oDateForeignSourcedIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedBusinessIncomeYearToDateForeignSourcedIncome
    {
        
        /// <summary>
        /// <para>The amount of foreign sourced income in New Zealand Dollars</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of foreign sourced income in New Zealand Dollars")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZDAmount")]
        public decimal NZDAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZDAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZDAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The original currency that the income was earned in. For example US Dollars, British Pounds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The original currency that the income was earned in. For example US Dollars, Brit" +
            "ish Pounds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryForeignCurrency")]
        public CurrencyCodeList PrimaryForeignCurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryForeignCurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryForeignCurrencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedDeclaredIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedDeclaredIncome
    {
        
        /// <summary>
        /// <para>The gross income amount declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross income amount declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeAmount")]
        public decimal IncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The net amount of income declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net amount of income declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetIncomeAmount")]
        public decimal NetIncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetIncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetIncomeAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysis", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysis
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysisCompanyFinancials> _companyFinancials;
        
        /// <summary>
        /// <para>Container for the reference to the financial data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for the reference to the financial data")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyFinancials")]
        public System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysisCompanyFinancials> CompanyFinancials
        {
            get
            {
                return this._companyFinancials;
            }
            set
            {
                this._companyFinancials = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyFinancials collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFinancialsSpecified
        {
            get
            {
                return (this.CompanyFinancials.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysis" /> class.</para>
        /// </summary>
        public PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysis()
        {
            this._companyFinancials = new System.Collections.Generic.List<PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysisCompanyFinancials>();
        }
        
        /// <summary>
        /// <para>Total Principle and Interest payments on borrowings due to be paid in the next 12 months</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Principle and Interest payments on borrowings due to be paid in the next 12" +
            " months")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnnualPaymentOnCommitments")]
        public decimal AnnualPaymentOnCommitments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualPaymentOnCommitments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnualPaymentOnCommitmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a complete financial analysis will be provided electronically, or only a summary view</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a complete financial analysis will be provided electroni" +
            "cally, or only a summary view")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompleteFinancialAnalysis")]
        public YesNoList CompleteFinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompleteFinancialAnalysis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompleteFinancialAnalysisSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysisCo" +
        "mpanyFinancials", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantEmploymentSelfEmployedFinancialAnalysisCompanyFinancials
    {
        
        /// <summary>
        /// <para>Reference to the element containing the financial analysis for each financial year, to be provided when Complete Financial Analysis = "Yes"</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the element containing the financial analysis for each financial yea" +
            "r, to be provided when Complete Financial Analysis = \"Yes\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_CompanyFinancials")]
        public string X_CompanyFinancials { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantExistingCustomer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantExistingCustomer
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FinancialAccountType> _accountNumber;
        
        /// <summary>
        /// <para>Account details for an account held that identifies the party as an existing customer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account details for an account held that identifies the party as an existing cust" +
            "omer")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public System.Collections.Generic.List<FinancialAccountType> AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccountNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountNumberSpecified
        {
            get
            {
                return (this.AccountNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationPersonApplicantExistingCustomer" /> class.</para>
        /// </summary>
        public PackageContentApplicationPersonApplicantExistingCustomer()
        {
            this._accountNumber = new System.Collections.Generic.List<FinancialAccountType>();
        }
        
        /// <summary>
        /// <para>A unique number assigned by the lender used to identify the customer</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique number assigned by the lender used to identify the customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerNumber")]
        public string CustomerNumber { get; set; }
        
        /// <summary>
        /// <para>The approximate year that the applicant became a customer</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The approximate year that the applicant became a customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSince")]
        public string CustomerSince { get; set; }
        
        /// <summary>
        /// <para>The month (if known) that the person applicant became a customer (only if the year is also provided in 'CustomerSince').</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The month (if known) that the person applicant became a customer (only if the yea" +
            "r is also provided in \'CustomerSince\').")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSinceMonth")]
        public MmMonthList CustomerSinceMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomerSinceMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerSinceMonthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantInsurance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantInsurance
    {
        
        /// <summary>
        /// <para>Link to Insurance details</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to Insurance details")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Insurance")]
        public string X_Insurance { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantMaritalStatusDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantMaritalStatusDetails
    {
        
        /// <summary>
        /// <para>Indicates the date a person's marital status last changed</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the date a person\'s marital status last changed")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaritalStatusChangeDate", DataType="date")]
        public System.DateTime MaritalStatusChangeDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaritalStatusChangeDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaritalStatusChangeDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the spouse of this applicant, generally either a co-applicant or a Related Party.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the spouse of this applicant, generally either a co-applicant or a Relate" +
            "d Party.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Spouse")]
        public string X_Spouse { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantNextOfKin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantNextOfKin
    {
        
        /// <summary>
        /// <para>Specifies the relationship the applicant has with the next of kin.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the relationship the applicant has with the next of kin.")]
        [System.Xml.Serialization.XmlAttributeAttribute("KinRelationship")]
        public KinRelationshipList KinRelationship { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KinRelationship property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KinRelationshipSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the applicant's next of kin</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the applicant\'s next of kin")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Person")]
        public string X_Person { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantNominatedBorrower", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantNominatedBorrower
    {
        
        /// <summary>
        /// <para>Link to nominated borrower</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to nominated borrower")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Nominee")]
        public string X_Nominee { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantPowerOfAttorney", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantPowerOfAttorney
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DealingNumberType> _dealingNumber;
        
        /// <summary>
        /// <para>The power of attorney (POA) dealing for this person applicant including the registered number, book number or state in which the POA is in place.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The power of attorney (POA) dealing for this person applicant including the regis" +
            "tered number, book number or state in which the POA is in place.")]
        [System.Xml.Serialization.XmlElementAttribute("DealingNumber")]
        public System.Collections.Generic.List<DealingNumberType> DealingNumber
        {
            get
            {
                return this._dealingNumber;
            }
            set
            {
                this._dealingNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DealingNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DealingNumberSpecified
        {
            get
            {
                return (this.DealingNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationPersonApplicantPowerOfAttorney" /> class.</para>
        /// </summary>
        public PackageContentApplicationPersonApplicantPowerOfAttorney()
        {
            this._dealingNumber = new System.Collections.Generic.List<DealingNumberType>();
        }
        
        /// <summary>
        /// <para>Indicates the type of power granted to the POA Holder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of power granted to the POA Holder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public PowerOfAttorneyTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a link to the holder of the Power of Attorney to capture their name.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a link to the holder of the Power of Attorney to capture their name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_POAHolder")]
        public string X_POAHolder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantPreviousName", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantPreviousName
    {
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>A person's other name. Also referred to as their 'middle name'. For example - where someone's name is Frederick Joseph Gilbert - 'Joseph' would be considered their other name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s other name. Also referred to as their \'middle name\'. For example - whe" +
            "re someone\'s name is Frederick Joseph Gilbert - \'Joseph\' would be considered the" +
            "ir other name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MiddleNames")]
        public string MiddleNames { get; set; }
        
        /// <summary>
        /// <para>The reason an applicant changed their previous name should be captured</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason an applicant changed their previous name should be captured")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameChangeReason")]
        public string NameChangeReason { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantPrivacy", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantPrivacy
    {
        
        /// <summary>
        /// <para>Indicates whether this Party will allow a credit check using their personal details as a reference.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this Party will allow a credit check using their personal detai" +
            "ls as a reference.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowCreditCheck")]
        public YesNoList AllowCreditCheck { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowCreditCheck property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowCreditCheckSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether this Party will allow their personal details to be used for direct marketing purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this Party will allow their personal details to be used for dir" +
            "ect marketing purposes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowDirectMarketing")]
        public YesNoList AllowDirectMarketing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowDirectMarketing property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowDirectMarketingSpecified { get; set; }
        
        /// <summary>
        /// <para>Each party may indicate if they are willing to be contacted for telemarketing</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Each party may indicate if they are willing to be contacted for telemarketing")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowTelemarketing")]
        public YesNoList AllowTelemarketing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowTelemarketing property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowTelemarketingSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether this Party will allow their personal details to be disclosed to third parties affiliated with this lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether this Party will allow their personal details to be disclosed to" +
            " third parties affiliated with this lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowThirdPartyDisclosure")]
        public YesNoList AllowThirdPartyDisclosure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowThirdPartyDisclosure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowThirdPartyDisclosureSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates if the applicant has signed a Credit Authority form to request a credit report</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the applicant has signed a Credit Authority form to request a credit" +
            " report")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditAuthoritySigned")]
        public YesNoList CreditAuthoritySigned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditAuthoritySigned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditAuthoritySignedSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which the applicant signed the privacy consent/declaration that supports the responses provided to the privacy questions.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which the applicant signed the privacy consent/declaration that suppo" +
            "rts the responses provided to the privacy questions.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateSigned", DataType="date")]
        public System.DateTime DateSigned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateSigned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSignedSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates if the applicant has signed a Privacy Act consent form</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the applicant has signed a Privacy Act consent form")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrivacyActConsentSigned")]
        public YesNoList PrivacyActConsentSigned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrivacyActConsentSigned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrivacyActConsentSignedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantProofOfIdentity", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantProofOfIdentity
    {
        
        /// <summary>
        /// <para>For Australian documents, the state of issue</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For Australian documents, the state of issue")]
        [System.Xml.Serialization.XmlAttributeAttribute("AustralianStateOfIssue")]
        public AuStateList AustralianStateOfIssue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AustralianStateOfIssue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AustralianStateOfIssueSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a certified copy of the proof of identity type has been provided.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a certified copy of the proof of identity type has been provide" +
            "d.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CertifiedCopy")]
        public YesNoList CertifiedCopy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertifiedCopy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CertifiedCopySpecified { get; set; }
        
        /// <summary>
        /// <para>The country from which the ID was issued</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The country from which the ID was issued")]
        [System.Xml.Serialization.XmlAttributeAttribute("CountryOfIssue")]
        public CountryCodeList CountryOfIssue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryOfIssue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountryOfIssueSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the date when the document was verified.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the date when the document was verified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateDocumentVerified", DataType="date")]
        public System.DateTime DateDocumentVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateDocumentVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateDocumentVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>The date of issue or start date of the ID</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of issue or start date of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfIssue", DataType="date")]
        public System.DateTime DateOfIssue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfIssue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfIssueSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the applicants date of birth is verified by the document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the applicants date of birth is verified by the document")]
        [System.Xml.Serialization.XmlAttributeAttribute("DOBVerified")]
        public YesNoList DOBVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DOBVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DOBVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>Indication of whether the document is photographic, non photographic or secondary</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indication of whether the document is photographic, non photographic or secondary" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocumentCategory")]
        public DocumentCategoryList DocumentCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocumentCategory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentCategorySpecified { get; set; }
        
        /// <summary>
        /// <para>The identifying number of the document</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The identifying number of the document")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocumentNumber")]
        public string DocumentNumber { get; set; }
        
        /// <summary>
        /// <para>The type of supporting document provided to verify the Party's identity.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of supporting document provided to verify the Party\'s identity.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocumentType")]
        public DocumentTypeList DocumentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocumentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The end date or expiry date of the ID</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date or expiry date of the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryDate", DataType="date")]
        public System.DateTime ExpiryDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the document identifies the party by their previous name</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the document identifies the party by their previous name")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsPreviousNameIdentification")]
        public YesNoList IsPreviousNameIdentification { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsPreviousNameIdentification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPreviousNameIdentificationSpecified { get; set; }
        
        /// <summary>
        /// <para>The organisation that issued the ID</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The organisation that issued the ID")]
        [System.Xml.Serialization.XmlAttributeAttribute("IssuingOrganisation")]
        public string IssuingOrganisation { get; set; }
        
        /// <summary>
        /// <para>The middle name of the individual as it appears on the form of identification. This data is sometimes required for bureau matching and for this reason may be captured separately to the full name that appears on the form of identification.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The middle name of the individual as it appears on the form of identification. Th" +
            "is data is sometimes required for bureau matching and for this reason may be cap" +
            "tured separately to the full name that appears on the form of identification.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MiddleNameOnDocument")]
        public string MiddleNameOnDocument { get; set; }
        
        /// <summary>
        /// <para>The name of the person for which the document is providing evidence of their identity</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the person for which the document is providing evidence of their iden" +
            "tity")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameOnDocument")]
        public string NameOnDocument { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the applicants name is verified by the document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the applicants name is verified by the document")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameVerified")]
        public YesNoList NameVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the document is an original</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the document is an original")]
        [System.Xml.Serialization.XmlAttributeAttribute("Original")]
        public YesNoList Original { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Original property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OriginalSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a brief description of the proof of identity document if Document Type = 'Other'</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a brief description of the proof of identity document if Document Type =" +
            " \'Other\'")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherDescription")]
        public string OtherDescription { get; set; }
        
        /// <summary>
        /// <para>Captures whether the photograph of the applicant on the provided proof of identity document has been verified.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the photograph of the applicant on the provided proof of identit" +
            "y document has been verified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PhotographVerified")]
        public YesNoList PhotographVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhotographVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotographVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>Holds the city where the document was issued. For overseas documents, the place or state of issue.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Holds the city where the document was issued. For overseas documents, the place o" +
            "r state of issue.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PlaceOfIssue")]
        public string PlaceOfIssue { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the applicants residential is verified by the document</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the applicants residential is verified by the document")]
        [System.Xml.Serialization.XmlAttributeAttribute("ResidentialAddressVerified")]
        public YesNoList ResidentialAddressVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ResidentialAddressVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResidentialAddressVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this proof of identity within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this proof of identity within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the signature of this Party has been verified by an approved representative of the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the signature of this Party has been verified by an approved re" +
            "presentative of the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SignatureVerified")]
        public YesNoList SignatureVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SignatureVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignatureVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Indicates the location where the document was verified.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the location where the document was verified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_LocationDocumentVerified")]
        public string X_LocationDocumentVerified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationPersonApplicantWill", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationPersonApplicantWill
    {
        
        /// <summary>
        /// <para>Captures information about the executor of the will.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the executor of the will.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Executor")]
        public string X_Executor { get; set; }
        
        /// <summary>
        /// <para>Specifies details of the party that currently has custody of the will. This may be the same person as the Executor, or different to the Executor. When different to the Executor then the Executor should also be identified.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies details of the party that currently has custody of the will. This may b" +
            "e the same person as the Executor, or different to the Executor. When different " +
            "to the Executor then the Executor should also be identified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_WillHeldBy")]
        public string X_WillHeldBy { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationProductSet", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationProductSet
    {
        
        /// <summary>
        /// <para>Contact details for the product set.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contact details for the product set.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationProductSetContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationProductSetProduct> _product;
        
        /// <summary>
        /// <para>A product that belongs to this set.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A product that belongs to this set.")]
        [System.Xml.Serialization.XmlElementAttribute("Product")]
        public System.Collections.Generic.List<PackageContentApplicationProductSetProduct> Product
        {
            get
            {
                return this._product;
            }
            set
            {
                this._product = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Product collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductSpecified
        {
            get
            {
                return (this.Product.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationProductSet" /> class.</para>
        /// </summary>
        public PackageContentApplicationProductSet()
        {
            this._product = new System.Collections.Generic.List<PackageContentApplicationProductSetProduct>();
        }
        
        /// <summary>
        /// <para>A unique identifier assigned to the product set by the point of sale system provider.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to the product set by the point of sale system provi" +
            "der.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LodgementReferenceNumber")]
        public string LodgementReferenceNumber { get; set; }
        
        /// <summary>
        /// <para>The order of this product set within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this product set within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the primary applicant for this set (a Person Applicant element, Company Applicant element, or Trust Applicant element).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the primary applicant for this set (a Person Applicant eleme" +
            "nt, Company Applicant element, or Trust Applicant element).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PrimaryApplicant")]
        public string X_PrimaryApplicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationProductSetContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationProductSetContact
    {
        
        /// <summary>
        /// <para>Mailing address of the product set.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mailing address of the product set.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MailingAddress")]
        public string X_MailingAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationProductSetProduct", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationProductSetProduct
    {
        
        /// <summary>
        /// <para>A cross reference to a financial product that belongs to this set.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to a financial product that belongs to this set.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_FinancialProduct")]
        public string X_FinancialProduct { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAsset
    {
        
        /// <summary>
        /// <para>Contains information about real estate that is commercial.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about real estate that is commercial.")]
        [System.Xml.Serialization.XmlElementAttribute("Commercial")]
        public PackageContentApplicationRealEstateAssetCommercial Commercial { get; set; }
        
        /// <summary>
        /// <para>Contains information relating to the construction of a dwelling on a security property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information relating to the construction of a dwelling on a security pro" +
            "perty.")]
        [System.Xml.Serialization.XmlElementAttribute("ConstructionDetails")]
        public PackageContentApplicationRealEstateAssetConstructionDetails ConstructionDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the purchase/sale price as specified in the Contract of Sale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the purchase/sale price as specified in the Contract of Sale")]
        [System.Xml.Serialization.XmlElementAttribute("ContractDetails")]
        public PackageContentApplicationRealEstateAssetContractDetails ContractDetails { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetEncumbrance> _encumbrance;
        
        /// <summary>
        /// <para>An encumbrance is a burden, impairment or third party right over property, that often makes it less valuable or easy for the owner to deal with. There may be multiple encumbrances over a single piece of real property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An encumbrance is a burden, impairment or third party right over property, that o" +
            "ften makes it less valuable or easy for the owner to deal with. There may be mul" +
            "tiple encumbrances over a single piece of real property.")]
        [System.Xml.Serialization.XmlElementAttribute("Encumbrance")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetEncumbrance> Encumbrance
        {
            get
            {
                return this._encumbrance;
            }
            set
            {
                this._encumbrance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Encumbrance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EncumbranceSpecified
        {
            get
            {
                return (this.Encumbrance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationRealEstateAsset" /> class.</para>
        /// </summary>
        public PackageContentApplicationRealEstateAsset()
        {
            this._encumbrance = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetEncumbrance>();
            this._insurance = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetInsurance>();
            this._propertyFeatures = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetPropertyFeatures>();
            this._rentalIncome = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetRentalIncome>();
            this._title = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetTitle>();
        }
        
        /// <summary>
        /// <para>Contains details about the estimated value of the property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details about the estimated value of the property")]
        [System.Xml.Serialization.XmlElementAttribute("EstimatedValue")]
        public PackageContentApplicationRealEstateAssetEstimatedValue EstimatedValue { get; set; }
        
        /// <summary>
        /// <para>The industrial type indicates whether the property is used for non-specialised industrial purposes or light industrial purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The industrial type indicates whether the property is used for non-specialised in" +
            "dustrial purposes or light industrial purposes.")]
        [System.Xml.Serialization.XmlElementAttribute("Industrial")]
        public PackageContentApplicationRealEstateAssetIndustrial Industrial { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetInsurance> _insurance;
        
        /// <summary>
        /// <para>Insurance associated with the real estate asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Insurance associated with the real estate asset.")]
        [System.Xml.Serialization.XmlElementAttribute("Insurance")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetInsurance> Insurance
        {
            get
            {
                return this._insurance;
            }
            set
            {
                this._insurance = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Insurance collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceSpecified
        {
            get
            {
                return (this.Insurance.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement. If the percentage ownership is not shown, then ownership is assumed to be in equal parts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"An asset may be owned by one or more parties, typically the applicants, so there may be more than one owner referenced. An asset may also be partially owned by a non-applicant, such as an applicant's spouse, in which case the third party owner may be referenced, or less than 100% ownership of the asset may be assigned. If the asset is to be purchased, then this indicates the expected ownership arrangement post-settlement. If the percentage ownership is not shown, then ownership is assumed to be in equal parts.")]
        [System.Xml.Serialization.XmlElementAttribute("PercentOwned")]
        public PercentOwnedType PercentOwned { get; set; }
        
        /// <summary>
        /// <para>Expense associated with an investment property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Expense associated with an investment property.")]
        [System.Xml.Serialization.XmlElementAttribute("PropertyExpense")]
        public PackageContentApplicationRealEstateAssetPropertyExpense PropertyExpense { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetPropertyFeatures> _propertyFeatures;
        
        /// <summary>
        /// <para>Container for information about the property's features.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for information about the property\'s features.")]
        [System.Xml.Serialization.XmlElementAttribute("PropertyFeatures")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetPropertyFeatures> PropertyFeatures
        {
            get
            {
                return this._propertyFeatures;
            }
            set
            {
                this._propertyFeatures = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PropertyFeatures collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertyFeaturesSpecified
        {
            get
            {
                return (this.PropertyFeatures.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The results returned by a third party property search service. These services can return reports for clients, value estimates, and other property data for the specified property address. Lenders may base their decision whether to order or skip a full valuation report using the data returned by the search service.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The results returned by a third party property search service. These services can return reports for clients, value estimates, and other property data for the specified property address. Lenders may base their decision whether to order or skip a full valuation report using the data returned by the search service.")]
        [System.Xml.Serialization.XmlElementAttribute("PropertySearchValidation")]
        public PackageContentApplicationRealEstateAssetPropertySearchValidation PropertySearchValidation { get; set; }
        
        /// <summary>
        /// <para>Captures the property type, like House, Unit, Villa etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the property type, like House, Unit, Villa etc.")]
        [System.Xml.Serialization.XmlElementAttribute("PropertyType")]
        public PackageContentApplicationRealEstateAssetPropertyType PropertyType { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetRentalIncome> _rentalIncome;
        
        /// <summary>
        /// <para>Information about rental income earned from the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about rental income earned from the property.")]
        [System.Xml.Serialization.XmlElementAttribute("RentalIncome")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetRentalIncome> RentalIncome
        {
            get
            {
                return this._rentalIncome;
            }
            set
            {
                this._rentalIncome = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RentalIncome collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentalIncomeSpecified
        {
            get
            {
                return (this.RentalIncome.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Details regarding the specification of an agent (solicitor or conveyancer) to act for the borrowers or vendors at settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details regarding the specification of an agent (solicitor or conveyancer) to act" +
            " for the borrowers or vendors at settlement")]
        [System.Xml.Serialization.XmlElementAttribute("Representation")]
        public PackageContentApplicationRealEstateAssetRepresentation Representation { get; set; }
        
        /// <summary>
        /// <para>Contains information about real estate that is residential.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about real estate that is residential.")]
        [System.Xml.Serialization.XmlElementAttribute("Residential")]
        public PackageContentApplicationRealEstateAssetResidential Residential { get; set; }
        
        /// <summary>
        /// <para>Contains information about real estate that is rural.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about real estate that is rural.")]
        [System.Xml.Serialization.XmlElementAttribute("Rural")]
        public PackageContentApplicationRealEstateAssetRural Rural { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetTitle> _title;
        
        /// <summary>
        /// <para>Contains information relating to the title details for the real property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information relating to the title details for the real property.")]
        [System.Xml.Serialization.XmlElementAttribute("Title")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetTitle> Title
        {
            get
            {
                return this._title;
            }
            set
            {
                this._title = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Title collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSpecified
        {
            get
            {
                return (this.Title.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains details of the party who the lender's valuer should contact to arrange an inspection of the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details of the party who the lender\'s valuer should contact to arrange a" +
            "n inspection of the property.")]
        [System.Xml.Serialization.XmlElementAttribute("VisitContact")]
        public PackageContentApplicationRealEstateAssetVisitContact VisitContact { get; set; }
        
        /// <summary>
        /// <para>Captures information about the zoning of the land under the relevant planning scheme.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information about the zoning of the land under the relevant planning sch" +
            "eme.")]
        [System.Xml.Serialization.XmlElementAttribute("Zoning")]
        public PackageContentApplicationRealEstateAssetZoning Zoning { get; set; }
        
        /// <summary>
        /// <para>Indicates that the applicant has not yet identified a specific property for purchase but that this property represents a general description of the type of property they are looking to purchase, so an approval in principle is sought from the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the applicant has not yet identified a specific property for purch" +
            "ase but that this property represents a general description of the type of prope" +
            "rty they are looking to purchase, so an approval in principle is sought from the" +
            " lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApprovalInPrinciple")]
        public YesNoList ApprovalInPrinciple { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApprovalInPrinciple property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovalInPrincipleSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant is going to perform construction work on the security property. Lender may use this as indicator that the loan being sought is or should be a construction loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant is going to perform construction work on the secu" +
            "rity property. Lender may use this as indicator that the loan being sought is or" +
            " should be a construction loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Construction")]
        public YesNoList Construction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Construction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the Borrower has entered into a Contract Of Sale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Borrower has entered into a Contract Of Sale")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractOfSale")]
        public YesNoList ContractOfSale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractOfSale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractOfSaleSpecified { get; set; }
        
        /// <summary>
        /// <para>The source of data used in searching information about a real estate property. Information provided may relate to property address, size, value and other features.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The source of data used in searching information about a real estate property. In" +
            "formation provided may relate to property address, size, value and other feature" +
            "s.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DataSource")]
        public DataSourceList DataSource { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataSource property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether there is an encumbrance on the Real Estate Asset.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether there is an encumbrance on the Real Estate Asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Encumbered")]
        public YesNoList Encumbered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Encumbered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EncumberedSpecified { get; set; }
        
        /// <summary>
        /// <para>Specified the capacity in which the owners hold, or will hold in the case of a proposed purchase, their interest in the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specified the capacity in which the owners hold, or will hold in the case of a pr" +
            "oposed purchase, their interest in the property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Holding")]
        public HoldingList Holding { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Holding property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HoldingSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate the existence of a letter of intent saying that a security is being bought for investment and not for resale</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate the existence of a letter of intent saying that a security is be" +
            "ing bought for investment and not for resale")]
        [System.Xml.Serialization.XmlAttributeAttribute("InvestmentPropertyLetter")]
        public YesNoList InvestmentPropertyLetter { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvestmentPropertyLetter property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvestmentPropertyLetterSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether an agent is being specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether an agent is being specified")]
        [System.Xml.Serialization.XmlAttributeAttribute("LegalRepresentation")]
        public YesNoList LegalRepresentation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LegalRepresentation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegalRepresentationSpecified { get; set; }
        
        /// <summary>
        /// <para>There is more than one dwelling on this real estate asset. The characteristics of each dwelling may be captured using a separate 'Property Features' element.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("There is more than one dwelling on this real estate asset. The characteristics of" +
            " each dwelling may be captured using a separate \'Property Features\' element.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MultipleDwellings")]
        public YesNoList MultipleDwellings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MultipleDwellings property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultipleDwellingsSpecified { get; set; }
        
        /// <summary>
        /// <para>List of approved National Rental Affordability Scheme consortium.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("List of approved National Rental Affordability Scheme consortium.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NRASConsortium")]
        public NrasConsortiumList NRASConsortium { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NRASConsortium property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NRASConsortiumSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the property is an approved dwelling under the National Rental Affordability Scheme</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the property is an approved dwelling under the National " +
            "Rental Affordability Scheme")]
        [System.Xml.Serialization.XmlAttributeAttribute("NRASProperty")]
        public YesNoList NRASProperty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NRASProperty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NRASPropertySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates who occupies the dwelling on the property. Where the property is being purchased, this is the purchaser's intention as to who will occupy the dwelling after the purchase completes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates who occupies the dwelling on the property. Where the property is being " +
            "purchased, this is the purchaser\'s intention as to who will occupy the dwelling " +
            "after the purchase completes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupancy")]
        public OccupancyList Occupancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Occupancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates if the property is an On Market Transaction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the property is an On Market Transaction")]
        [System.Xml.Serialization.XmlAttributeAttribute("OnMarketTransaction")]
        public YesNoList OnMarketTransaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnMarketTransaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnMarketTransactionSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the primary land use of the property, for example, Single Unit Dwelling</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the primary land use of the property, for example, Single Unit Dwelling")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryLandUse")]
        public string PrimaryLandUse { get; set; }
        
        /// <summary>
        /// <para>Indicates the primary or predominant purpose for which the owners hold the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the primary or predominant purpose for which the owners hold the proper" +
            "ty.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryPurpose")]
        public PrimaryPurposeRealEstateAssetList PrimaryPurpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryPurpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryPurposeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the property will be the primary security for the loan(s). Primary security is to be contrasted with collateral securities, which equally secure the borrowings but which are stamped collateral to the primary security.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the property will be the primary security for the loan(s). Prim" +
            "ary security is to be contrasted with collateral securities, which equally secur" +
            "e the borrowings but which are stamped collateral to the primary security.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimarySecurity")]
        public YesNoList PrimarySecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimarySecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimarySecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies what the primary usage of the property is, as reflected as a choice of elements (Industrial | Commercial | Rural | Residential)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies what the primary usage of the property is, as reflected as a choice of " +
            "elements (Industrial | Commercial | Rural | Residential)")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryUsage")]
        public PrimaryUsageList PrimaryUsage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryUsage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryUsageSpecified { get; set; }
        
        /// <summary>
        /// <para>The property ID from the data provider</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property ID from the data provider")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyID")]
        public string PropertyID { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the property is subject to assignment of or a wrap contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the property is subject to assignment of or a wrap contract.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PurchaseUnderAOCWrap")]
        public YesNoList PurchaseUnderAOCWrap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PurchaseUnderAOCWrap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurchaseUnderAOCWrapSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this realestate asset within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this realestate asset within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates the state of any current dwelling on the property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the state of any current dwelling on the property")]
        [System.Xml.Serialization.XmlAttributeAttribute("Status")]
        public RealEstateAssetStatusList Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the asset will be sold prior to or at settlement</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the asset will be sold prior to or at settlement")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBeSold")]
        public YesNoList ToBeSold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBeSold property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBeSoldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the asset is to be used as security for the new or refinanced loan(s)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the asset is to be used as security for the new or refinanced l" +
            "oan(s)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToBeUsedAsSecurity")]
        public YesNoList ToBeUsedAsSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToBeUsedAsSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBeUsedAsSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the current status of the applicants' ownership of the property, or the transaction that is proposed by them in relation to the property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the current status of the applicants\' ownership of the property, or the" +
            " transaction that is proposed by them in relation to the property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Transaction")]
        public AssetTransactionList Transaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Transaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Expected or intended valuation type if such a recommendation is being made, e.g. may be used by a mortgage manager to inform the funder, or by a broker who is authorised to order valuations for the lender</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Expected or intended valuation type if such a recommendation is being made, e.g. " +
            "may be used by a mortgage manager to inform the funder, or by a broker who is au" +
            "thorised to order valuations for the lender")]
        [System.Xml.Serialization.XmlAttributeAttribute("ValuationProgram")]
        public ValuationProgramList ValuationProgram { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValuationProgram property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuationProgramSpecified { get; set; }
        
        /// <summary>
        /// <para>Address should capture the location details of real estate asset.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address should capture the location details of real estate asset.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
        
        /// <summary>
        /// <para>link to the agent managing the property on behalf of the owner.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("link to the agent managing the property on behalf of the owner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PropertyAgent")]
        public string X_PropertyAgent { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetCommercial", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetCommercial
    {
        
        /// <summary>
        /// <para>The type of the commercial property if the type is 'Other'.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of the commercial property if the type is \'Other\'.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherCommercialDetails")]
        public string OtherCommercialDetails { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of commercial property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of commercial property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public CommercialTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetConstructionDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetConstructionDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRealEstateAssetConstructionDetailsConstructionStage> _constructionStage;
        
        /// <summary>
        /// <para>Payments are made to the builder in stages under a standard building contract. Certain information may be captured about each construction stage. This container will occur for each stage under the contract.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Payments are made to the builder in stages under a standard building contract. Ce" +
            "rtain information may be captured about each construction stage. This container " +
            "will occur for each stage under the contract.")]
        [System.Xml.Serialization.XmlElementAttribute("ConstructionStage")]
        public System.Collections.Generic.List<PackageContentApplicationRealEstateAssetConstructionDetailsConstructionStage> ConstructionStage
        {
            get
            {
                return this._constructionStage;
            }
            set
            {
                this._constructionStage = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ConstructionStage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionStageSpecified
        {
            get
            {
                return (this.ConstructionStage.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationRealEstateAssetConstructionDetails" /> class.</para>
        /// </summary>
        public PackageContentApplicationRealEstateAssetConstructionDetails()
        {
            this._constructionStage = new System.Collections.Generic.List<PackageContentApplicationRealEstateAssetConstructionDetailsConstructionStage>();
        }
        
        /// <summary>
        /// <para>Contains information about the experience of an owner builder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the experience of an owner builder.")]
        [System.Xml.Serialization.XmlElementAttribute("OwnerBuilderExperience")]
        public PackageContentApplicationRealEstateAssetConstructionDetailsOwnerBuilderExperience OwnerBuilderExperience { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the builder is the owner or a licensed builder.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the builder is the owner or a licensed builder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BuilderType")]
        public BuilderTypeList BuilderType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuilderType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuilderTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The contracted or estimated build price for the dwelling</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contracted or estimated build price for the dwelling")]
        [System.Xml.Serialization.XmlAttributeAttribute("BuildPriceAmount")]
        public decimal BuildPriceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildPriceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildPriceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the licensed builder or owner builder holds a policy of insurance in relation to the construction works that are proposed to be completed. Work in the event of the death, disappearance or insolvency of the contractor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the licensed builder or owner builder holds a policy of insuran" +
            "ce in relation to the construction works that are proposed to be completed. Work" +
            " in the event of the death, disappearance or insolvency of the contractor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConstructionInsuranceHeld")]
        public YesNoList ConstructionInsuranceHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionInsuranceHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionInsuranceHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the owner of the property being constructed is in possession of a copy of the builders registration or building licence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owner of the property being constructed is in possession of" +
            " a copy of the builders registration or building licence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CopyBuildersLicenceHeld")]
        public YesNoList CopyBuildersLicenceHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CopyBuildersLicenceHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CopyBuildersLicenceHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a copy of the home owners warranty certificate is held</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a copy of the home owners warranty certificate is held")]
        [System.Xml.Serialization.XmlAttributeAttribute("CopyHomeOwnersWarrantyCertificateHeld")]
        public YesNoList CopyHomeOwnersWarrantyCertificateHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CopyHomeOwnersWarrantyCertificateHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CopyHomeOwnersWarrantyCertificateHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the owner of the property being constructed is in possession of building plans for the dwelling to be constructed that have been formally approved by the council responsible for planning in the area in which the property is located.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the owner of the property being constructed is in possession of bu" +
            "ilding plans for the dwelling to be constructed that have been formally approved" +
            " by the council responsible for planning in the area in which the property is lo" +
            "cated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CouncilApprovalHeld")]
        public YesNoList CouncilApprovalHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CouncilApprovalHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CouncilApprovalHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the owner of the property is in possession of a detailed schedule listing the costings that make up the contract price.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owner of the property is in possession of a detailed schedu" +
            "le listing the costings that make up the contract price.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DetailedCostingsHeld")]
        public YesNoList DetailedCostingsHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DetailedCostingsHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailedCostingsHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>The date on which construction is expected to be completed.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date on which construction is expected to be completed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedCompletionDate", DataType="date")]
        public System.DateTime EstimatedCompletionDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedCompletionDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedCompletionDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that contract to construct the dwelling is for a fixed price amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that contract to construct the dwelling is for a fixed price amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FixedPriceContract")]
        public YesNoList FixedPriceContract { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FixedPriceContract property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedPriceContractSpecified { get; set; }
        
        /// <summary>
        /// <para>The amount of the loan funds that are to be initially advanced by the lender.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of the loan funds that are to be initially advanced by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InitialAmount")]
        public decimal InitialAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InitialAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitialAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>In the case of a purchase involving a house and land package, the amount of the contract price that is attributed to the purchase of the land.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("In the case of a purchase involving a house and land package, the amount of the c" +
            "ontract price that is attributed to the purchase of the land.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LandValue")]
        public decimal LandValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LandValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LandValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the estimate was based on the Purchase Price or Estimated Market Value</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the estimate was based on the Purchase Price or Estimated Marke" +
            "t Value")]
        [System.Xml.Serialization.XmlAttributeAttribute("LandValueBasis")]
        public LandValueEstimateBasisList LandValueBasis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LandValueBasis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LandValueBasisSpecified { get; set; }
        
        /// <summary>
        /// <para>Satisfactory 'tentative on completion' valuation held</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Satisfactory \'tentative on completion\' valuation held")]
        [System.Xml.Serialization.XmlAttributeAttribute("SatisfactoryTOCValuationHeld")]
        public YesNoList SatisfactoryTOCValuationHeld { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SatisfactoryTOCValuationHeld property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SatisfactoryTOCValuationHeldSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the owner of the property is in possession of a signed contract for the proposed type of construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owner of the property is in possession of a signed contract" +
            " for the proposed type of construction")]
        [System.Xml.Serialization.XmlAttributeAttribute("SignedContract")]
        public YesNoList SignedContract { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SignedContract property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignedContractSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate if the customer has 10% of the loan amount as cash on hand to cover any discrepancies</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate if the customer has 10% of the loan amount as cash on hand to co" +
            "ver any discrepancies")]
        [System.Xml.Serialization.XmlAttributeAttribute("TenPercentOfLendingAsCash")]
        public YesNoList TenPercentOfLendingAsCash { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TenPercentOfLendingAsCash property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenPercentOfLendingAsCashSpecified { get; set; }
        
        /// <summary>
        /// <para>The total cost of the contract. Will be the total construction amount in the case of a building contract, or the full contract price for a house and land package</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total cost of the contract. Will be the total construction amount in the case" +
            " of a building contract, or the full contract price for a house and land package" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalAmount")]
        public decimal TotalAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the type of construction</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of construction")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ConstructionTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference link to the Builder Contact details and used when Builder Type is not "Owner Builder"</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference link to the Builder Contact details and used when Builder Type is not \"" +
            "Owner Builder\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Builder")]
        public string X_Builder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetConstructionDetailsConstructionStage", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetConstructionDetailsConstructionStage
    {
        
        /// <summary>
        /// <para>The amount that is to be paid under the contract at completion of the specified construction stage.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount that is to be paid under the contract at completion of the specified c" +
            "onstruction stage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StageAmount")]
        public decimal StageAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StageAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StageAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the construction stage. Common stages include laying of slab, framing, lockup, completion.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the construction stage. Common stages include laying of slab, fr" +
            "aming, lockup, completion.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StageDescription")]
        public string StageDescription { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Construction Stage Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Construction Stage Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetConstructionDetailsOwnerBuilderExperience" +
        "", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetConstructionDetailsOwnerBuilderExperience
    {
        
        /// <summary>
        /// <para>Indicates whether the owner builder has completed a similar project within the last 2 years</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owner builder has completed a similar project within the la" +
            "st 2 years")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompletedSimilarProjectInLast2Years")]
        public YesNoList CompletedSimilarProjectInLast2Years { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompletedSimilarProjectInLast2Years property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompletedSimilarProjectInLast2YearsSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant, as an owner / builder, has minimal experience working in the building industry and this is their first time as an owner / builder</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant, as an owner / builder, has minimal experience wo" +
            "rking in the building industry and this is their first time as an owner / builde" +
            "r")]
        [System.Xml.Serialization.XmlAttributeAttribute("MinimalExperience")]
        public YesNoList MinimalExperience { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimalExperience property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimalExperienceSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the owner builder's other building experience.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the owner builder\'s other building experience" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherExperience")]
        public string OtherExperience { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the applicant, as an owner / builder, has experience working in the building industry</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant, as an owner / builder, has experience working in" +
            " the building industry")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorksInBuildingIndustry")]
        public YesNoList WorksInBuildingIndustry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorksInBuildingIndustry property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorksInBuildingIndustrySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetContractDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetContractDetails
    {
        
        /// <summary>
        /// <para>Flag to indicate whether the transacting parties are arms length parties</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the transacting parties are arms length parties")]
        [System.Xml.Serialization.XmlAttributeAttribute("ArmsLengthTransaction")]
        public YesNoList ArmsLengthTransaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ArmsLengthTransaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArmsLengthTransactionSpecified { get; set; }
        
        /// <summary>
        /// <para>The date of the Contract of Sale.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the Contract of Sale.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractDate", DataType="date")]
        public System.DateTime ContractDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the total purchase/sale price as specified in the Contract of Sale.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total purchase/sale price as specified in the Contract of Sale.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContractPriceAmount")]
        public decimal ContractPriceAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContractPriceAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractPriceAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the total amount that is or was payable as a deposit for the security property being purchased.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the total amount that is or was payable as a deposit for the security pr" +
            "operty being purchased.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositAmount")]
        public decimal DepositAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the amount of the purchase deposit that has been paid by the applicants as at the date the application is submitted.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the purchase deposit that has been paid by the applicants " +
            "as at the date the application is submitted.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositPaid")]
        public decimal DepositPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the percentage of the purchase price that the applicant will be required to provide as a deposit to the vendor if they enter into a contract to purchase a security property.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the percentage of the purchase price that the applicant will be required" +
            " to provide as a deposit to the vendor if they enter into a contract to purchase" +
            " a security property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DepositPercentageRequested")]
        public decimal DepositPercentageRequested { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DepositPercentageRequested property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepositPercentageRequestedSpecified { get; set; }
        
        /// <summary>
        /// <para>The purchase date of the property, or the proposed settlement date for a property being purchased or sold</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purchase date of the property, or the proposed settlement date for a property" +
            " being purchased or sold")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedSettlementDate", DataType="date")]
        public System.DateTime EstimatedSettlementDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedSettlementDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedSettlementDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When a Contract of Sale is signed in SA and QLD, Finance Date is the date by which the loan must get formal approval.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When a Contract of Sale is signed in SA and QLD, Finance Date is the date by whic" +
            "h the loan must get formal approval.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinanceApprovalDate", DataType="date")]
        public System.DateTime FinanceApprovalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinanceApprovalDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinanceApprovalDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the Contract of Sale uses a form that has been developed for use by real estate agents, as opposed to lawyers and conveyancers. Relevant in States where this practice has not been superseded by a standard form contract of sale.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Contract of Sale uses a form that has been developed for use b" +
            "y real estate agents, as opposed to lawyers and conveyancers. Relevant in States" +
            " where this practice has not been superseded by a standard form contract of sale" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("LicencedRealEstateAgentContract")]
        public YesNoList LicencedRealEstateAgentContract { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LicencedRealEstateAgentContract property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LicencedRealEstateAgentContractSpecified { get; set; }
        
        /// <summary>
        /// <para>The value of the property, as used for the calculation of stamp duty</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value of the property, as used for the calculation of stamp duty")]
        [System.Xml.Serialization.XmlAttributeAttribute("TransferOfLandAmount")]
        public decimal TransferOfLandAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransferOfLandAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransferOfLandAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference link to the Settlement Vendor Contact details</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference link to the Settlement Vendor Contact details")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Vendor")]
        public string X_Vendor { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetEncumbrance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetEncumbrance
    {
        
        /// <summary>
        /// <para>A description of the encumbrance that is being specified as applying to the real property. An encumbrance may be registered with the Titles Office, in which case the registered encumbrance number may be provided.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the encumbrance that is being specified as applying to the real " +
            "property. An encumbrance may be registered with the Titles Office, in which case" +
            " the registered encumbrance number may be provided.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The number issued by the Titles Office to identify the encumbrance, if registered. May be provided if the encumbrance has been registered with the Titles Office.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number issued by the Titles Office to identify the encumbrance, if registered" +
            ". May be provided if the encumbrance has been registered with the Titles Office." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredNumber")]
        public string RegisteredNumber { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Encumbrance Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Encumbrance Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetEstimatedValue", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetEstimatedValue
    {
        
        /// <summary>
        /// <para>Indicates whether the estimate was based on the valuation of the applicant or a certified valuer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the estimate was based on the valuation of the applicant or a c" +
            "ertified valuer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateBasis")]
        public EstimateBasisRealEstateAssetList EstimateBasis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimateBasis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimateBasisSpecified { get; set; }
        
        /// <summary>
        /// <para>The estimate of the owners liability to pay capital gains tax on disposal of the asset. Relevant to the lender in determining the net proceeds likely to be realised by the owner if they sell the asset for the estimated value.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimate of the owners liability to pay capital gains tax on disposal of the " +
            "asset. Relevant to the lender in determining the net proceeds likely to be reali" +
            "sed by the owner if they sell the asset for the estimated value.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedCGTLiability")]
        public decimal EstimatedCGTLiability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedCGTLiability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedCGTLiabilitySpecified { get; set; }
        
        /// <summary>
        /// <para>The methodology used for estimating the value.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The methodology used for estimating the value.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateMethodology")]
        public EstimateMethodologyList EstimateMethodology { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimateMethodology property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimateMethodologySpecified { get; set; }
        
        /// <summary>
        /// <para>The estimated value of the real estate.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated value of the real estate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Value")]
        public decimal Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the valuation was carried out.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the valuation was carried out.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ValuedDate", DataType="date")]
        public System.DateTime ValuedDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ValuedDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuedDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Reference to the valuation firm that provided a certified or electronic valuation</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the valuation firm that provided a certified or electronic valuation" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Valuer")]
        public string X_Valuer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetIndustrial", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetIndustrial
    {
        
        /// <summary>
        /// <para>The type of the industrial property if the type is 'Other'.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of the industrial property if the type is \'Other\'.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIndustrialDetails")]
        public string OtherIndustrialDetails { get; set; }
        
        /// <summary>
        /// <para>The industrial type indicates whether the property is used for non-specialised industrial purposes or light industrial purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The industrial type indicates whether the property is used for non-specialised in" +
            "dustrial purposes or light industrial purposes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public IndustrialTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetInsurance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetInsurance
    {
        
        /// <summary>
        /// <para>Link to Insurance details</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to Insurance details")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Insurance")]
        public string X_Insurance { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetPropertyExpense", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetPropertyExpense
    {
        
        /// <summary>
        /// <para>Dollar amount of investment property expense.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Dollar amount of investment property expense.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the expense occurrence.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the expense occurrence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetPropertyFeatures", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetPropertyFeatures
    {
        
        /// <summary>
        /// <para>A general description of the features of the property</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A general description of the features of the property")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllPropertyFeatures")]
        public string AllPropertyFeatures { get; set; }
        
        /// <summary>
        /// <para>The floor area of the building on the property, in sqm. Where is more than one dwelling or structure on the property, then the lender's policy will determine how the applicant is to calculate the floor area. For a residential property, generally speaking this is the living area.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The floor area of the building on the property, in sqm. Where is more than one dwelling or structure on the property, then the lender's policy will determine how the applicant is to calculate the floor area. For a residential property, generally speaking this is the living area.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FloorArea")]
        public decimal FloorArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FloorArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorAreaSpecified { get; set; }
        
        /// <summary>
        /// <para>The land area of the property. The units of measurement must also be specified with this figure.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The land area of the property. The units of measurement must also be specified wi" +
            "th this figure.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LandArea")]
        public decimal LandArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LandArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LandAreaSpecified { get; set; }
        
        /// <summary>
        /// <para>The units of measurement for the stated land area</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The units of measurement for the stated land area")]
        [System.Xml.Serialization.XmlAttributeAttribute("LandAreaUnits")]
        public LandAreaUnitsList LandAreaUnits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LandAreaUnits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LandAreaUnitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the number of bathrooms in the dwelling.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of bathrooms in the dwelling.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfBathrooms")]
        public string NumberOfBathrooms { get; set; }
        
        /// <summary>
        /// <para>Captures the number of bedrooms in the dwelling.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of bedrooms in the dwelling.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfBedrooms")]
        public string NumberOfBedrooms { get; set; }
        
        /// <summary>
        /// <para>Captures the number of car spaces in the dwelling.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of car spaces in the dwelling.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfCarSpaces")]
        public string NumberOfCarSpaces { get; set; }
        
        /// <summary>
        /// <para>Captures the number of dwellings on the property.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the number of dwellings on the property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfDwellings")]
        public string NumberOfDwellings { get; set; }
        
        /// <summary>
        /// <para>Indicates the type of pool on the property</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of pool on the property")]
        [System.Xml.Serialization.XmlAttributeAttribute("PoolType")]
        public PoolTypeList PoolType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PoolType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PoolTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the property</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the property")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyDescription")]
        public string PropertyDescription { get; set; }
        
        /// <summary>
        /// <para>A unique identifier assigned to the property by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique identifier assigned to the property by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyID")]
        public string PropertyID { get; set; }
        
        /// <summary>
        /// <para>Captures the location of the property's images</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the location of the property\'s images")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyImage")]
        public string PropertyImage { get; set; }
        
        /// <summary>
        /// <para>Specifies the material that the roof is constructed from.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the material that the roof is constructed from.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RoofMaterial")]
        public string RoofMaterial { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of walls of the property</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of walls of the property")]
        [System.Xml.Serialization.XmlAttributeAttribute("WallMaterial")]
        public string WallMaterial { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetPropertySearchValidation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetPropertySearchValidation
    {
        
        /// <summary>
        /// <para>The names of the property owners as returned by the third-party search service.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The names of the property owners as returned by the third-party search service.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OwnerNames")]
        public string OwnerNames { get; set; }
        
        /// <summary>
        /// <para>A short description that includes the reason why the Result value is Warning or Refer.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A short description that includes the reason why the Result value is Warning or R" +
            "efer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Reason")]
        public string Reason { get; set; }
        
        /// <summary>
        /// <para>The property search validation result.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property search validation result.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Result")]
        public PropertySearchValidationResultList Result { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Result property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified { get; set; }
        
        /// <summary>
        /// <para>The link to the report generated by the third-party search service for the current property.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The link to the report generated by the third-party search service for the curren" +
            "t property.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("URL")]
        public string URL { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetPropertyType", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetPropertyType
    {
        
        /// <summary>
        /// <para>Captures the property category type</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the property category type")]
        [System.Xml.Serialization.XmlAttributeAttribute("CategoryTypeName")]
        public string CategoryTypeName { get; set; }
        
        /// <summary>
        /// <para>Contains information about the property type</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the property type")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyTypeCode")]
        public string PropertyTypeCode { get; set; }
        
        /// <summary>
        /// <para>Captures the property type, like House, Unit, Villa etc.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the property type, like House, Unit, Villa etc.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyTypeName")]
        public string PropertyTypeName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetRentalIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetRentalIncome
    {
        
        /// <summary>
        /// <para>Indicates whether the applicant can provide the lender with evidence that the property is tenanted, typically in the form of a lease.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the applicant can provide the lender with evidence that the pro" +
            "perty is tenanted, typically in the form of a lease.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EvidenceOfTenancy")]
        public YesNoList EvidenceOfTenancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EvidenceOfTenancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EvidenceOfTenancySpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of rental payments gross amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of rental payments gross amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The net amount of rent that is paid under the lease. The frequency (weekly, monthly etc.) for the rental amount specified should also be explicitly specified.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net amount of rent that is paid under the lease. The frequency (weekly, month" +
            "ly etc.) for the rental amount specified should also be explicitly specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRentalAmount")]
        public decimal NetRentalAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRentalAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRentalAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of rental payments net amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of rental payments net amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetRentalAmountFrequency")]
        public FrequencyShortList NetRentalAmountFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetRentalAmountFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetRentalAmountFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The gross amount of rent that is paid under the lease. The frequency (weekly, monthly etc.) for the rental amount specified should also be explicitly specified.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The gross amount of rent that is paid under the lease. The frequency (weekly, mon" +
            "thly etc.) for the rental amount specified should also be explicitly specified.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RentalAmount")]
        public decimal RentalAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RentalAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentalAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The rental property is considered to be short-term rental accommodation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The rental property is considered to be short-term rental accommodation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ShortTermRentalAccommodation")]
        public YesNoList ShortTermRentalAccommodation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortTermRentalAccommodation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortTermRentalAccommodationSpecified { get; set; }
        
        /// <summary>
        /// <para>A free text field to further describe the rental income accommodation arrangement.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free text field to further describe the rental income accommodation arrangement" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("ShortTermRentalDescription")]
        public string ShortTermRentalDescription { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the party that owns the rental income.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the party that owns the rental income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Owner")]
        public string X_Owner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetRepresentation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetRepresentation
    {
        
        /// <summary>
        /// <para>Identifies who will be representing the applicant(s) at settlement. Points to the Related Party acting as representative.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies who will be representing the applicant(s) at settlement. Points to the" +
            " Related Party acting as representative.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Conveyancer")]
        public string X_Conveyancer { get; set; }
        
        /// <summary>
        /// <para>Identifies who will be representing the vendor(s) at settlement. Points to the Related Party acting as representative.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies who will be representing the vendor(s) at settlement. Points to the Re" +
            "lated Party acting as representative.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_VendorConveyancer")]
        public string X_VendorConveyancer { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetResidential", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetResidential
    {
        
        /// <summary>
        /// <para>The type of the dwelling if the type is 'Other'.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of the dwelling if the type is \'Other\'.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherResidentialDetails")]
        public string OtherResidentialDetails { get; set; }
        
        /// <summary>
        /// <para>Specifies what type of dwelling is, or is to be, located on the residential property. For an established or new dwelling, specifies what type of dwelling is currently located on the residential property. For an off-the-plan purchase or construction loan, specifies what type of dwelling will be constructed. If vacant property is notionally Residential but without an intention to build in the immediate future, then the type would remain Vacant Land</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Specifies what type of dwelling is, or is to be, located on the residential property. For an established or new dwelling, specifies what type of dwelling is currently located on the residential property. For an off-the-plan purchase or construction loan, specifies what type of dwelling will be constructed. If vacant property is notionally Residential but without an intention to build in the immediate future, then the type would remain Vacant Land")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ResidentialTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the owners of the property own or will own following purchase of the subject property, 25% or more by number of the units in the complex in which the subject property is located.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owners of the property own or will own following purchase o" +
            "f the subject property, 25% or more by number of the units in the complex in whi" +
            "ch the subject property is located.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WillOwn25PercentOfComplex")]
        public YesNoList WillOwn25PercentOfComplex { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WillOwn25PercentOfComplex property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WillOwn25PercentOfComplexSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the owners of the property own or will own following purchase of the subject property, 3 or more units in the complex in which the subject property is located.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the owners of the property own or will own following purchase o" +
            "f the subject property, 3 or more units in the complex in which the subject prop" +
            "erty is located.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WillOwn3UnitsInComplex")]
        public YesNoList WillOwn3UnitsInComplex { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WillOwn3UnitsInComplex property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WillOwn3UnitsInComplexSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetRural", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetRural
    {
        
        /// <summary>
        /// <para>The number of buildings on the rural property should be indicated.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of buildings on the rural property should be indicated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfBuildings")]
        public string NumberOfBuildings { get; set; }
        
        /// <summary>
        /// <para>The usage of the rural property if the usage is 'Other'.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The usage of the rural property if the usage is \'Other\'.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherRuralDetails")]
        public string OtherRuralDetails { get; set; }
        
        /// <summary>
        /// <para>The size of the rural property should be indicated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The size of the rural property should be indicated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public RuralTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The purpose of the rural property and how it is used should be indicated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purpose of the rural property and how it is used should be indicated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Usage")]
        public RuralUsageList Usage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Usage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetTitle", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetTitle
    {
        
        /// <summary>
        /// <para>Name of the County on the land title.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Name of the County on the land title.")]
        [System.Xml.Serialization.XmlAttributeAttribute("County")]
        public string County { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a paper duplicate Certificate of Title has been issued.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a paper duplicate Certificate of Title has been issued.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DuplicateTitleIssued")]
        public YesNoList DuplicateTitleIssued { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DuplicateTitleIssued property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DuplicateTitleIssuedSpecified { get; set; }
        
        /// <summary>
        /// <para>Folio of the land title.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Folio of the land title.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Folio")]
        public string Folio { get; set; }
        
        /// <summary>
        /// <para>Lot identifier of the land title.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lot identifier of the land title.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lot")]
        public string Lot { get; set; }
        
        /// <summary>
        /// <para>Contains the Lot Plan detail</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the Lot Plan detail")]
        [System.Xml.Serialization.XmlAttributeAttribute("LotPlan")]
        public string LotPlan { get; set; }
        
        /// <summary>
        /// <para>Additional details in relation to the land title. Should be used when the complete title information cannot be captured in the specific title related data fields.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Additional details in relation to the land title. Should be used when the complet" +
            "e title information cannot be captured in the specific title related data fields" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherDetails")]
        public string OtherDetails { get; set; }
        
        /// <summary>
        /// <para>Should be provided when Title Type = Torrens Title. Name of the Parish on the land title.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Should be provided when Title Type = Torrens Title. Name of the Parish on the lan" +
            "d title.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Parish")]
        public string Parish { get; set; }
        
        /// <summary>
        /// <para>A Document ID that identifies a Registry Plan within a Land Registry.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Document ID that identifies a Registry Plan within a Land Registry.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Plan")]
        public string Plan { get; set; }
        
        /// <summary>
        /// <para>Plan Type for a torrens title</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Plan Type for a torrens title")]
        [System.Xml.Serialization.XmlAttributeAttribute("PlanType")]
        public PlanTypeList PlanType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains the Real Property Descriptor</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the Real Property Descriptor")]
        [System.Xml.Serialization.XmlAttributeAttribute("RealPropertyDescriptor")]
        public string RealPropertyDescriptor { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of title scheme that the owners derive their tenure or estate from.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of title scheme that the owners derive their tenure or estate " +
            "from.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TenureType")]
        public TenureTypeList TenureType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TenureType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenureTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>An Identifier that identifies a Land Title, used where a text string for the title reference is suitable in the case that lot/plan or volume/folio identification is not suitable.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An Identifier that identifies a Land Title, used where a text string for the titl" +
            "e reference is suitable in the case that lot/plan or volume/folio identification" +
            " is not suitable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TitleReference")]
        public string TitleReference { get; set; }
        
        /// <summary>
        /// <para>Specifies the type of title regime that the property is governed by.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the type of title regime that the property is governed by.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TitleSystem")]
        public TitleSystemList TitleSystem { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TitleSystem property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleSystemSpecified { get; set; }
        
        /// <summary>
        /// <para>Should be provided when Title Type = Unregistered. A description of the land that is the subject of the unregistered interest in the subject property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Should be provided when Title Type = Unregistered. A description of the land that" +
            " is the subject of the unregistered interest in the subject property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnregisteredLand")]
        public YesNoList UnregisteredLand { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnregisteredLand property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnregisteredLandSpecified { get; set; }
        
        /// <summary>
        /// <para>Should be provided when Title Type = Unregistered. A description of the plan that is the subject of the unregistered interest in the subject property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Should be provided when Title Type = Unregistered. A description of the plan that" +
            " is the subject of the unregistered interest in the subject property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnregisteredPlan")]
        public YesNoList UnregisteredPlan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnregisteredPlan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnregisteredPlanSpecified { get; set; }
        
        /// <summary>
        /// <para>Should be provided when Title Type = "Torrens Title".</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Should be provided when Title Type = \"Torrens Title\".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Volume")]
        public string Volume { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetVisitContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetVisitContact
    {
        
        /// <summary>
        /// <para>The property may be accessible by boat only, a fact that is relevant to the valuer. If so, this should be specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property may be accessible by boat only, a fact that is relevant to the value" +
            "r. If so, this should be specified")]
        [System.Xml.Serialization.XmlAttributeAttribute("BoatAccessOnly")]
        public YesNoList BoatAccessOnly { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BoatAccessOnly property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoatAccessOnlySpecified { get; set; }
        
        /// <summary>
        /// <para>Captures information or instructions which are of importance to the lender or valuer in arranging access to the property to conduct a valuation inspection.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures information or instructions which are of importance to the lender or val" +
            "uer in arranging access to the property to conduct a valuation inspection.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>The property may be accessible by 4WD only, a fact that is relevant to the valuer. If so, this should be specified</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The property may be accessible by 4WD only, a fact that is relevant to the valuer" +
            ". If so, this should be specified")]
        [System.Xml.Serialization.XmlAttributeAttribute("FourWDAccessOnly")]
        public YesNoList FourWDAccessOnly { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FourWDAccessOnly property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FourWDAccessOnlySpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies the relationship of the valuation contact to the property to be inspected.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the relationship of the valuation contact to the property to be inspect" +
            "ed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public VisitContactTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The party that should be contacted to arrange site visit</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party that should be contacted to arrange site visit")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContactParty")]
        public string X_ContactParty { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRealEstateAssetZoning", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRealEstateAssetZoning
    {
        
        /// <summary>
        /// <para>Specifies the zoning of the property under the applicable planning scheme/regulations.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the zoning of the property under the applicable planning scheme/regulat" +
            "ions.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public string Type { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompany", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompany
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedCompanyBeneficialOwner> _beneficialOwner;
        
        /// <summary>
        /// <para>A beneficial owner of the related company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A beneficial owner of the related company.")]
        [System.Xml.Serialization.XmlElementAttribute("BeneficialOwner")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedCompanyBeneficialOwner> BeneficialOwner
        {
            get
            {
                return this._beneficialOwner;
            }
            set
            {
                this._beneficialOwner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeneficialOwner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeneficialOwnerSpecified
        {
            get
            {
                return (this.BeneficialOwner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationRelatedCompany" /> class.</para>
        /// </summary>
        public PackageContentApplicationRelatedCompany()
        {
            this._beneficialOwner = new System.Collections.Generic.List<PackageContentApplicationRelatedCompanyBeneficialOwner>();
            this._director = new System.Collections.Generic.List<PackageContentApplicationRelatedCompanyDirector>();
            this._partner = new System.Collections.Generic.List<PackageContentApplicationRelatedCompanyPartner>();
            this._shareholder = new System.Collections.Generic.List<PackageContentApplicationRelatedCompanyShareholder>();
        }
        
        /// <summary>
        /// <para>Container element for the related company contact details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the related company contact details")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationRelatedCompanyContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedCompanyDirector> _director;
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a director of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a director of the c" +
            "ompany.")]
        [System.Xml.Serialization.XmlElementAttribute("Director")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedCompanyDirector> Director
        {
            get
            {
                return this._director;
            }
            set
            {
                this._director = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Director collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectorSpecified
        {
            get
            {
                return (this.Director.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedCompanyPartner> _partner;
        
        /// <summary>
        /// <para>Container element for details of the partners that constitute this partnership.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for details of the partners that constitute this partnership.")]
        [System.Xml.Serialization.XmlElementAttribute("Partner")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedCompanyPartner> Partner
        {
            get
            {
                return this._partner;
            }
            set
            {
                this._partner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Partner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartnerSpecified
        {
            get
            {
                return (this.Partner.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationRelatedCompanyShareholder> _shareholder;
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a shareholder of the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a shareholder of th" +
            "e company.")]
        [System.Xml.Serialization.XmlElementAttribute("Shareholder")]
        public System.Collections.Generic.List<PackageContentApplicationRelatedCompanyShareholder> Shareholder
        {
            get
            {
                return this._shareholder;
            }
            set
            {
                this._shareholder = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Shareholder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShareholderSpecified
        {
            get
            {
                return (this.Shareholder.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The business name or trading name of the company</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The business name or trading name of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessName")]
        public string BusinessName { get; set; }
        
        /// <summary>
        /// <para>Indicates if the Business Name is the same as the Company Name.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the Business Name is the same as the Company Name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessNameSameAsCompanyName")]
        public YesNoList BusinessNameSameAsCompanyName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessNameSameAsCompanyName property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusinessNameSameAsCompanyNameSpecified { get; set; }
        
        /// <summary>
        /// <para>Legal structure of this business (only populated where this applicant is a Business Enterprise).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Legal structure of this business (only populated where this applicant is a Busine" +
            "ss Enterprise).")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessStructure")]
        public BusinessStructureFullList BusinessStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusinessStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>The registered name of the company</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The registered name of the company")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The registered Company Number of the related company.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The registered Company Number of the related company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyNumber")]
        public string CompanyNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates the date when the company was registered.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the date when the company was registered.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateRegistered", DataType="date")]
        public System.DateTime DateRegistered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateRegistered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateRegisteredSpecified { get; set; }
        
        /// <summary>
        /// <para>If registered for GST, the date from which the company is registered</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If registered for GST, the date from which the company is registered")]
        [System.Xml.Serialization.XmlAttributeAttribute("GSTRegisteredDate", DataType="date")]
        public System.DateTime GSTRegisteredDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GSTRegisteredDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GSTRegisteredDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The number of directors of the related company.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of directors of the related company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfDirectors")]
        public string NumberOfDirectors { get; set; }
        
        /// <summary>
        /// <para>The number of partners that make up the partnership.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of partners that make up the partnership.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfPartners")]
        public string NumberOfPartners { get; set; }
        
        /// <summary>
        /// <para>The number of shareholders of the related company.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of shareholders of the related company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfShareholders")]
        public string NumberOfShareholders { get; set; }
        
        /// <summary>
        /// <para>The NZBN of the related company</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The NZBN of the related company")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate that the business number has been verified by a search</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that the business number has been verified by a search")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBNVerified")]
        public YesNoList NZBNVerified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NZBNVerified property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NZBNVerifiedSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the company is registered for GST</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the company is registered for GST")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredForGST")]
        public YesNoList RegisteredForGST { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredForGST property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredForGSTSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the country where the company is registered.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the country where the company is registered.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredInCountry")]
        public CountryCodeList RegisteredInCountry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredInCountry property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredInCountrySpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this related company within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this related company within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyBeneficialOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyBeneficialOwner
    {
        
        /// <summary>
        /// <para>A cross reference to the beneficial owner.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the beneficial owner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_BeneficialOwner")]
        public string X_BeneficialOwner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyContact
    {
        
        /// <summary>
        /// <para>A primary contact person at the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A primary contact person at the company")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationRelatedCompanyContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>A fax number for the related company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A fax number for the related company")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Mobile phone number for the related company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile phone number for the related company.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeMobile")]
        public PhoneType OfficeMobile { get; set; }
        
        /// <summary>
        /// <para>An office phone number for the related company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An office phone number for the related company")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>An email address for the related company</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address for the related company")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>A URL for the company's public accessible web site.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A URL for the company\'s public accessible web site.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address details for the party related to the application at the time of the application submission, and where this information is required by the lender</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address details for the party related to the application at the time of the appli" +
            "cation submission, and where this information is required by the lender")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyContactContactPerson
    {
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>The role or job position of the contact person</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The role or job position of the contact person")]
        [System.Xml.Serialization.XmlAttributeAttribute("Role")]
        public string Role { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
        
        /// <summary>
        /// <para>A reference to the primary contact person</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the primary contact person")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContactPerson")]
        public string X_ContactPerson { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyDirector", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyDirector
    {
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a director of the company.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a director of the c" +
            "ompany.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Director")]
        public string X_Director { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyPartner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyPartner
    {
        
        /// <summary>
        /// <para>The Partner Type describes whether the partner is a general or limited partner.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Partner Type describes whether the partner is a general or limited partner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PartnerType")]
        public PartnerTypeList PartnerType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartnerType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartnerTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The ownership percentage for the specified partner.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The ownership percentage for the specified partner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PercentOwned")]
        public decimal PercentOwned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentOwned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentOwnedSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a partner of the business. These can be a person, a business enterprise or a trust.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a partner of the bu" +
            "siness. These can be a person, a business enterprise or a trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Partner")]
        public string X_Partner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedCompanyShareholder", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedCompanyShareholder
    {
        
        /// <summary>
        /// <para>The ownership percentage for the specified shareholder.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The ownership percentage for the specified shareholder.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PercentOwned")]
        public decimal PercentOwned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PercentOwned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PercentOwnedSpecified { get; set; }
        
        /// <summary>
        /// <para>Contains a reference to an applicant or related party that is a shareholder of the company.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a reference to an applicant or related party that is a shareholder of th" +
            "e company.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Shareholder")]
        public string X_Shareholder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedPerson
    {
        
        /// <summary>
        /// <para>Container element for the related person contact details</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the related person contact details")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationRelatedPersonContact Contact { get; set; }
        
        /// <summary>
        /// <para>The name of the related person.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the related person.")]
        [System.Xml.Serialization.XmlElementAttribute("PersonName")]
        public PersonNameType PersonName { get; set; }
        
        /// <summary>
        /// <para>The related person's date of birth.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The related person\'s date of birth.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateOfBirth", DataType="date")]
        public System.DateTime DateOfBirth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfBirthSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this related person within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this related person within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationRelatedPersonContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationRelatedPersonContact
    {
        
        /// <summary>
        /// <para>A home phone number for the related party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A home phone number for the related party.")]
        [System.Xml.Serialization.XmlElementAttribute("HomePhone")]
        public PhoneType HomePhone { get; set; }
        
        /// <summary>
        /// <para>A mobile number for the related party</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A mobile number for the related party")]
        [System.Xml.Serialization.XmlElementAttribute("Mobile")]
        public PhoneType Mobile { get; set; }
        
        /// <summary>
        /// <para>A work phone number for the related party.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A work phone number for the related party.")]
        [System.Xml.Serialization.XmlElementAttribute("WorkPhone")]
        public PhoneType WorkPhone { get; set; }
        
        /// <summary>
        /// <para>An email address for the related person</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address for the related person")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Specify whether the email address is home or work</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specify whether the email address is home or work")]
        [System.Xml.Serialization.XmlAttributeAttribute("EmailType")]
        public ContactEmailTypeList EmailType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmailTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Specifies the preferred method for contacting this person</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the preferred method for contacting this person")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredContact")]
        public PreferredContactPersonList PreferredContact { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreferredContactSpecified { get; set; }
        
        /// <summary>
        /// <para>Address details for the party related to the application at the time of the application submission, and where this information is required by the lender</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address details for the party related to the application at the time of the appli" +
            "cation submission, and where this information is required by the lender")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannel", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannel
    {
        
        /// <summary>
        /// <para>The company that the loan writer aggregates under</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company that the loan writer aggregates under")]
        [System.Xml.Serialization.XmlElementAttribute("Aggregator")]
        public PackageContentApplicationSalesChannelAggregator Aggregator { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSalesChannelCommission> _commission;
        
        /// <summary>
        /// <para>Contains information relating to the commission to be paid to the business partner that has sourced the loan application for the lender. This partner is typically a third party such as a mortgage aggregator or brokerage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information relating to the commission to be paid to the business partne" +
            "r that has sourced the loan application for the lender. This partner is typicall" +
            "y a third party such as a mortgage aggregator or brokerage.")]
        [System.Xml.Serialization.XmlElementAttribute("Commission")]
        public System.Collections.Generic.List<PackageContentApplicationSalesChannelCommission> Commission
        {
            get
            {
                return this._commission;
            }
            set
            {
                this._commission = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Commission collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionSpecified
        {
            get
            {
                return (this.Commission.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationSalesChannel" /> class.</para>
        /// </summary>
        public PackageContentApplicationSalesChannel()
        {
            this._commission = new System.Collections.Generic.List<PackageContentApplicationSalesChannelCommission>();
        }
        
        /// <summary>
        /// <para>The company or bank branch that the loan writer works at</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company or bank branch that the loan writer works at")]
        [System.Xml.Serialization.XmlElementAttribute("Company")]
        public PackageContentApplicationSalesChannelCompany Company { get; set; }
        
        /// <summary>
        /// <para>Details of an enterprise or individual who introduced one or more applicants to the sales channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of an enterprise or individual who introduced one or more applicants to t" +
            "he sales channel.")]
        [System.Xml.Serialization.XmlElementAttribute("Introducer")]
        public PackageContentApplicationSalesChannelIntroducer Introducer { get; set; }
        
        /// <summary>
        /// <para>The loan writer details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The loan writer details.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanWriter")]
        public PackageContentApplicationSalesChannelLoanWriter LoanWriter { get; set; }
        
        /// <summary>
        /// <para>The type of sales channel that is submitting the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of sales channel that is submitting the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public SalesChannelTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelAggregator", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelAggregator
    {
        
        /// <summary>
        /// <para>Container element for Aggregator Contact information</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Aggregator Contact information")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationSalesChannelAggregatorContact Contact { get; set; }
        
        /// <summary>
        /// <para>Captures a number such as the accreditation number for the aggregator that has been assigned by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a number such as the accreditation number for the aggregator that has be" +
            "en assigned by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccreditationNumber")]
        public string AccreditationNumber { get; set; }
        
        /// <summary>
        /// <para>Captures the legal name of the aggregator</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the legal name of the aggregator")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The NZBN of the aggregator</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The NZBN of the aggregator")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>Captures an alternative identifier by which the aggregator is known, typically issued by the originating organisation rather than the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an alternative identifier by which the aggregator is known, typically is" +
            "sued by the originating organisation rather than the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIdentifier")]
        public string OtherIdentifier { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelAggregatorContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelAggregatorContact
    {
        
        /// <summary>
        /// <para>Contains a contact fax number for the aggregator.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact fax number for the aggregator.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Contains a contact phone number for the aggregator.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact phone number for the aggregator.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>Captures an email address for the sales aggregator submitting the loan application.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an email address for the sales aggregator submitting the loan applicatio" +
            "n.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>An internet address for web content associated with the aggregator</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internet address for web content associated with the aggregator")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address details for the aggregator at the time of the application submission.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address details for the aggregator at the time of the application submission.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelCommission", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelCommission
    {
        
        /// <summary>
        /// <para>The party that will be paid the commission.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party that will be paid the commission.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Beneficiary")]
        public CommissionBeneficiaryList Beneficiary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Beneficiary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeneficiarySpecified { get; set; }
        
        /// <summary>
        /// <para>The amount of upfront commission to be paid to the sales channel in the event that loan application settles.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of upfront commission to be paid to the sales channel in the event tha" +
            "t loan application settles.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionAmount")]
        public decimal CommissionAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether a commission is payable to the sales channel in respect of the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether a commission is payable to the sales channel in respect of the " +
            "loan application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionPaid")]
        public YesNoList CommissionPaid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionPaid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionPaidSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the commission plan involves payment of an upfront commission only, an upfront commission and a trail commission, a trail commission only, or another type of structure.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the commission plan involves payment of an upfront commission o" +
            "nly, an upfront commission and a trail commission, a trail commission only, or a" +
            "nother type of structure.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CommissionStructure")]
        public CommissionStructureList CommissionStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommissionStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommissionStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the commission structure if an accurate description is not specified in the enumerated values. Must be provided when Commission Structure = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the commission structure if an accurate description is not speci" +
            "fied in the enumerated values. Must be provided when Commission Structure = \"Oth" +
            "er\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherCommissionStructureDescription")]
        public string OtherCommissionStructureDescription { get; set; }
        
        /// <summary>
        /// <para>A code that specifies a particular promotion or special commission offer that applies to the loan application, specified by the submitting sales channel in order to tag the deal with the promotion code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A code that specifies a particular promotion or special commission offer that app" +
            "lies to the loan application, specified by the submitting sales channel in order" +
            " to tag the deal with the promotion code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PromotionCode")]
        public string PromotionCode { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the sales channel is a third party referrer of business for the purpose of commission disclosure requirements.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the sales channel is a third party referrer of business for the" +
            " purpose of commission disclosure requirements.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ThirdPartyReferee")]
        public YesNoList ThirdPartyReferee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThirdPartyReferee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThirdPartyRefereeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the trail commission percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the trail commission percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Trail")]
        public decimal Trail { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Trail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrailSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the upfront commission percentage.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the upfront commission percentage.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UpfrontPayment")]
        public decimal UpfrontPayment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpfrontPayment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpfrontPaymentSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelCompany", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelCompany
    {
        
        /// <summary>
        /// <para>Container element for contact details of the Sales Channel Company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for contact details of the Sales Channel Company")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationSalesChannelCompanyContact Contact { get; set; }
        
        /// <summary>
        /// <para>Captures a number such as the accreditation number for the company that has been assigned by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a number such as the accreditation number for the company that has been " +
            "assigned by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccreditationNumber")]
        public string AccreditationNumber { get; set; }
        
        /// <summary>
        /// <para>For a loan originating at a bank branch, the Bank/State/Branch number of the branch. This information may be collected where an application is originated by lending staff e.g. a Home Finance Manager.</para>
        /// <para>A pattern to restrict BSB values to be exactly 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a loan originating at a bank branch, the Bank/State/Branch number of the bran" +
            "ch. This information may be collected where an application is originated by lend" +
            "ing staff e.g. a Home Finance Manager.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("BSB")]
        public string BSB { get; set; }
        
        /// <summary>
        /// <para>The name of the broker company or bank branch.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the broker company or bank branch.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The NZBN of the broker company or bank branch.</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The NZBN of the broker company or bank branch.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>Captures an alternative identifier by which the company is known, typically issued by the originating organisation rather than the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an alternative identifier by which the company is known, typically issue" +
            "d by the originating organisation rather than the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIdentifier")]
        public string OtherIdentifier { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelCompanyContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelCompanyContact
    {
        
        /// <summary>
        /// <para>Contact person for the sales channel.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contact person for the sales channel.")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationSalesChannelCompanyContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Contains a contact fax number for the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact fax number for the company.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Contains a contact phone number for the company.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact phone number for the company.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>Captures an email address for the sales channel company submitting the loan application.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an email address for the sales channel company submitting the loan appli" +
            "cation.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>An internet address for web content associated with the company</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internet address for web content associated with the company")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address details for the sales channel company at the time of the application submission.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address details for the sales channel company at the time of the application subm" +
            "ission.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelCompanyContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelCompanyContactContactPerson
    {
        
        /// <summary>
        /// <para>The email address of the contact person.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The email address of the contact person.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>The role or job position of the contact person in the sales channel.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The role or job position of the contact person in the sales channel.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Role")]
        public string Role { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
        
        /// <summary>
        /// <para>A reference to the contact person.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the contact person.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContactPerson")]
        public string X_ContactPerson { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelIntroducer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelIntroducer
    {
        
        /// <summary>
        /// <para>The name of the enterprise that made the introduction.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the enterprise that made the introduction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>The name of the individual who made the introduction or the name of an individual contact within the enterprise that made the introduction.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the individual who made the introduction or the name of an individual" +
            " contact within the enterprise that made the introduction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContactName")]
        public string ContactName { get; set; }
        
        /// <summary>
        /// <para>An identifier assigned to the introducer by the lender. Allows the lender to uniquely identify the introducer.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An identifier assigned to the introducer by the lender. Allows the lender to uniq" +
            "uely identify the introducer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntroducerID")]
        public string IntroducerID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelLoanWriter", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelLoanWriter
    {
        
        /// <summary>
        /// <para>Contains contact details for the Sales Channel Loan Writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the Sales Channel Loan Writer")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationSalesChannelLoanWriterContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSalesChannelLoanWriterDelegatedRecipient> _delegatedRecipient;
        
        /// <summary>
        /// <para>A recipient specified and delegated by the loan writer to receive correspondence related to this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A recipient specified and delegated by the loan writer to receive correspondence " +
            "related to this application.")]
        [System.Xml.Serialization.XmlElementAttribute("DelegatedRecipient")]
        public System.Collections.Generic.List<PackageContentApplicationSalesChannelLoanWriterDelegatedRecipient> DelegatedRecipient
        {
            get
            {
                return this._delegatedRecipient;
            }
            set
            {
                this._delegatedRecipient = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DelegatedRecipient collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DelegatedRecipientSpecified
        {
            get
            {
                return (this.DelegatedRecipient.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationSalesChannelLoanWriter" /> class.</para>
        /// </summary>
        public PackageContentApplicationSalesChannelLoanWriter()
        {
            this._delegatedRecipient = new System.Collections.Generic.List<PackageContentApplicationSalesChannelLoanWriterDelegatedRecipient>();
        }
        
        /// <summary>
        /// <para>Captures a number such as the accreditation number for the loan writer that has been assigned by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a number such as the accreditation number for the loan writer that has b" +
            "een assigned by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccreditationNumber")]
        public string AccreditationNumber { get; set; }
        
        /// <summary>
        /// <para>Captures the department within the sales channel that the loan writer belongs to.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the department within the sales channel that the loan writer belongs to." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("Department")]
        public string Department { get; set; }
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>Captures the name of the manager of the individual loan writer. Typically used when the sales channel is internal to the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of the manager of the individual loan writer. Typically used wh" +
            "en the sales channel is internal to the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ManagerName")]
        public string ManagerName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures an alternative identifier by which the loan writer is known, typically issued by the originating organisation rather than the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures an alternative identifier by which the loan writer is known, typically i" +
            "ssued by the originating organisation rather than the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherIdentifier")]
        public string OtherIdentifier { get; set; }
        
        /// <summary>
        /// <para>Captures a description of the role of the individual loan writer. Typically used when the sales channel is internal to the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a description of the role of the individual loan writer. Typically used " +
            "when the sales channel is internal to the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PersonRole")]
        public string PersonRole { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
        
        /// <summary>
        /// <para>A unique ID to reference the loan writer.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique ID to reference the loan writer.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelLoanWriterContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelLoanWriterContact
    {
        
        /// <summary>
        /// <para>Contains a fax number for the loan writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a fax number for the loan writer")]
        [System.Xml.Serialization.XmlElementAttribute("Fax")]
        public PhoneType Fax { get; set; }
        
        /// <summary>
        /// <para>Contains a mobile number for the loan writer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a mobile number for the loan writer")]
        [System.Xml.Serialization.XmlElementAttribute("Mobile")]
        public PhoneType Mobile { get; set; }
        
        /// <summary>
        /// <para>Contains a contact phone number for the loan writer.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains a contact phone number for the loan writer.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>An email address should be captured for the broker or lender staff submitting the home loan application.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address should be captured for the broker or lender staff submitting the" +
            " home loan application.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>An internet address for web content associated with the loan writer.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An internet address for web content associated with the loan writer.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Address details for the loan writer at the time of the application submission.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Address details for the loan writer at the time of the application submission.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Address")]
        public string X_Address { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSalesChannelLoanWriterDelegatedRecipient", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSalesChannelLoanWriterDelegatedRecipient
    {
        
        /// <summary>
        /// <para>An email address of the delegated recipient provided by the loan writer to received the correspondence related to this application.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address of the delegated recipient provided by the loan writer to receiv" +
            "ed the correspondence related to this application.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummary", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummary
    {
        
        /// <summary>
        /// <para>Contains information specifying where the lender is to send the loan documents once the loan has been approved. A nomination of authority at the Loan level will over-ride this nomination.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information specifying where the lender is to send the loan documents on" +
            "ce the loan has been approved. A nomination of authority at the Loan level will " +
            "over-ride this nomination.")]
        [System.Xml.Serialization.XmlElementAttribute("DocumentationInstructions")]
        public DocumentationInstructionsType DocumentationInstructions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSummaryFee> _fee;
        
        /// <summary>
        /// <para>Contains information about a fee that is payable in connection with the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about a fee that is payable in connection with the loan appl" +
            "ication.")]
        [System.Xml.Serialization.XmlElementAttribute("Fee")]
        public System.Collections.Generic.List<PackageContentApplicationSummaryFee> Fee
        {
            get
            {
                return this._fee;
            }
            set
            {
                this._fee = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Fee collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeeSpecified
        {
            get
            {
                return (this.Fee.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationSummary" /> class.</para>
        /// </summary>
        public PackageContentApplicationSummary()
        {
            this._fee = new System.Collections.Generic.List<PackageContentApplicationSummaryFee>();
            this._serviceabilityResults = new System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResults>();
        }
        
        /// <summary>
        /// <para>Contains the various calculated loan to valuation ratio (LVR) values relative to the lending scenario described by the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the various calculated loan to valuation ratio (LVR) values relative to " +
            "the lending scenario described by the application.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanToValuationRatio")]
        public PackageContentApplicationSummaryLoanToValuationRatio LoanToValuationRatio { get; set; }
        
        /// <summary>
        /// <para>Summary information relating to the exposure of loan parties and/or the institution providing funds or credit to loan parties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Summary information relating to the exposure of loan parties and/or the instituti" +
            "on providing funds or credit to loan parties.")]
        [System.Xml.Serialization.XmlElementAttribute("RolledUpAmounts")]
        public PackageContentApplicationSummaryRolledUpAmounts RolledUpAmounts { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResults> _serviceabilityResults;
        
        /// <summary>
        /// <para>Contains summary information regarding the serviceability results calculated for this group of loan parties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains summary information regarding the serviceability results calculated for " +
            "this group of loan parties.")]
        [System.Xml.Serialization.XmlElementAttribute("ServiceabilityResults")]
        public System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResults> ServiceabilityResults
        {
            get
            {
                return this._serviceabilityResults;
            }
            set
            {
                this._serviceabilityResults = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ServiceabilityResults collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceabilityResultsSpecified
        {
            get
            {
                return (this.ServiceabilityResults.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The date that the fees were disclosed to the borrower may be specified</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the fees were disclosed to the borrower may be specified")]
        [System.Xml.Serialization.XmlAttributeAttribute("FeesDisclosureDate", DataType="date")]
        public System.DateTime FeesDisclosureDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FeesDisclosureDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeesDisclosureDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryFee", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryFee
    {
        
        /// <summary>
        /// <para>The details of the account from which the fees should be paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The details of the account from which the fees should be paid.")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public FinancialAccountType AccountNumber { get; set; }
        
        /// <summary>
        /// <para>The length of time that the fee is applicable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The length of time that the fee is applicable.")]
        [System.Xml.Serialization.XmlElementAttribute("ApplicableDuration")]
        public DurationType ApplicableDuration { get; set; }
        
        /// <summary>
        /// <para>Details of the credit card to be used to pay fees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the credit card to be used to pay fees")]
        [System.Xml.Serialization.XmlElementAttribute("CreditCard")]
        public PackageContentApplicationSummaryFeeCreditCard CreditCard { get; set; }
        
        /// <summary>
        /// <para>The account into which the fees should be paid.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The account into which the fees should be paid.")]
        [System.Xml.Serialization.XmlElementAttribute("PayableToAccount")]
        public FinancialAccountType PayableToAccount { get; set; }
        
        /// <summary>
        /// <para>The fee as a percentage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The fee as a percentage.")]
        [System.Xml.Serialization.XmlElementAttribute("Percentage")]
        public PackageContentApplicationSummaryFeePercentage Percentage { get; set; }
        
        /// <summary>
        /// <para>The estimated or approximate amount of the fee.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated or approximate amount of the fee.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures whether the fees are to be capitalised against the loan amount</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the fees are to be capitalised against the loan amount")]
        [System.Xml.Serialization.XmlAttributeAttribute("CapitaliseFee")]
        public YesNoList CapitaliseFee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CapitaliseFee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapitaliseFeeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the general category of fees such as bank fees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the general category of fees such as bank fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public FeeCategoryList Category { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Category property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CategorySpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the fee type if an accurate description is not specified in the enumerated values. Must be provided when Fee Type = "Other"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the fee type if an accurate description is not specified in the " +
            "enumerated values. Must be provided when Fee Type = \"Other\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The frequency of the fee payments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the fee payments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyFullList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the fee amount is estimated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the fee amount is estimated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsEstimated")]
        public YesNoList IsEstimated { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsEstimated property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsEstimatedSpecified { get; set; }
        
        /// <summary>
        /// <para>The number of repeats of the fee payments.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of repeats of the fee payments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfRepeats")]
        public string NumberOfRepeats { get; set; }
        
        /// <summary>
        /// <para>Captures whether the fee has already been paid</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the fee has already been paid")]
        [System.Xml.Serialization.XmlAttributeAttribute("Paid")]
        public YesNoList Paid { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Paid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaidSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the name of the party that the fee is payable to.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the name of the party that the fee is payable to.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PayableTo")]
        public string PayableTo { get; set; }
        
        /// <summary>
        /// <para>The borrower-selected method of paying the fee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The borrower-selected method of paying the fee")]
        [System.Xml.Serialization.XmlAttributeAttribute("PayFeesFrom")]
        public PayFeesFromList PayFeesFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PayFeesFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayFeesFromSpecified { get; set; }
        
        /// <summary>
        /// <para>The timing of the fee payment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The timing of the fee payment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentTiming")]
        public FeePaymentTimingList PaymentTiming { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentTiming property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTimingSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date of the fee payments.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date of the fee payments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the type of fee being described</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of fee being described")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public FeeTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Fee Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Fee Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to an account (either a Financial Asset element, a Liability element, or a Loan Details element) from which the fee should be paid.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to an account (either a Financial Asset element, a Liability el" +
            "ement, or a Loan Details element) from which the fee should be paid.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Account")]
        public string X_Account { get; set; }
        
        /// <summary>
        /// <para>Link to the unique identifier (UniqueID) for the financial product that relates to the fee being incurred.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the unique identifier (UniqueID) for the financial product that relates t" +
            "o the fee being incurred.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_FinancialProduct")]
        public string X_FinancialProduct { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the product set (a Product Set element) to which the fee is assigned.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the product set (a Product Set element) to which the fee is " +
            "assigned.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ProductSet")]
        public string X_ProductSet { get; set; }
        
        /// <summary>
        /// <para>Link to the unique identifier (UniqueID) for the security that relates to the fee being incurred.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the unique identifier (UniqueID) for the security that relates to the fee" +
            " being incurred.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Security")]
        public string X_Security { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryFeeCreditCard", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryFeeCreditCard
    {
        
        /// <summary>
        /// <para>Cardholder name on the credit card to be used to pay fees</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cardholder name on the credit card to be used to pay fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("CardHolderName")]
        public string CardHolderName { get; set; }
        
        /// <summary>
        /// <para>Month of expiry date of the credit card to be used to pay fees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Month of expiry date of the credit card to be used to pay fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryMonth")]
        public MmMonthList ExpiryMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryMonthSpecified { get; set; }
        
        /// <summary>
        /// <para>Year of expiry date of the credit card to be used to pay fees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Year of expiry date of the credit card to be used to pay fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExpiryYear")]
        public YyYearList ExpiryYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpiryYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiryYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Credit card number to be used to pay fees</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Credit card number to be used to pay fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Type of credit card to be used to pay fees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Type of credit card to be used to pay fees")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public CreditCardTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The party that the credit card belong to and that will be used to pay the fee.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party that the credit card belong to and that will be used to pay the fee.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_CardHolder")]
        public string X_CardHolder { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryFeePercentage", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryFeePercentage
    {
        
        /// <summary>
        /// <para>Indicates which amount is used as the base value to calculate the fee, when the fee is given as a percentage rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates which amount is used as the base value to calculate the fee, when the f" +
            "ee is given as a percentage rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CalculationBasis")]
        public CalculationBasisList CalculationBasis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CalculationBasis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalculationBasisSpecified { get; set; }
        
        /// <summary>
        /// <para>The percentage rate of the fee.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The percentage rate of the fee.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Rate")]
        public decimal Rate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryLoanToValuationRatio", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryLoanToValuationRatio
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSummaryLoanToValuationRatioContributingValuation> _contributingValuation;
        
        /// <summary>
        /// <para>Contains links to the valuation that was used as the basis for this ratio calculation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains links to the valuation that was used as the basis for this ratio calcula" +
            "tion.")]
        [System.Xml.Serialization.XmlElementAttribute("ContributingValuation")]
        public System.Collections.Generic.List<PackageContentApplicationSummaryLoanToValuationRatioContributingValuation> ContributingValuation
        {
            get
            {
                return this._contributingValuation;
            }
            set
            {
                this._contributingValuation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContributingValuation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContributingValuationSpecified
        {
            get
            {
                return (this.ContributingValuation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationSummaryLoanToValuationRatio" /> class.</para>
        /// </summary>
        public PackageContentApplicationSummaryLoanToValuationRatio()
        {
            this._contributingValuation = new System.Collections.Generic.List<PackageContentApplicationSummaryLoanToValuationRatioContributingValuation>();
        }
        
        /// <summary>
        /// <para>The basic LVR for the entire application. The calculation of this value can be specific so it is left to the parties making use of this LVR to agree on the calculation to be used.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The basic LVR for the entire application. The calculation of this value can be sp" +
            "ecific so it is left to the parties making use of this LVR to agree on the calcu" +
            "lation to be used.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicationLVR")]
        public decimal ApplicationLVR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationLVR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicationLVRSpecified { get; set; }
        
        /// <summary>
        /// <para>The peak debt LVR calculated for bridging loan applications. The calculation of this value can be specific so it is left to the parties making use of this LVR to agree on the calculation to be used.</para>
        /// <para>Local type that is a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The peak debt LVR calculated for bridging loan applications. The calculation of t" +
            "his value can be specific so it is left to the parties making use of this LVR to" +
            " agree on the calculation to be used.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PeakDebtLVR")]
        public decimal PeakDebtLVR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PeakDebtLVR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeakDebtLVRSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryLoanToValuationRatioContributingValuation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryLoanToValuationRatioContributingValuation
    {
        
        /// <summary>
        /// <para>Link to a valuation that was used in the calculation of this Loan To Valuation Ratio</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to a valuation that was used in the calculation of this Loan To Valuation Ra" +
            "tio")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Valuation")]
        public string X_Valuation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryRolledUpAmounts", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryRolledUpAmounts
    {
        
        /// <summary>
        /// <para>Amount that represents the total liabilities held by applicants and guarantors including approved loans that are not yet drawn.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount that represents the total liabilities held by applicants and guarantors in" +
            "cluding approved loans that are not yet drawn.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalCreditLimitAmount")]
        public decimal TotalCreditLimitAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalCreditLimitAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCreditLimitAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Amount that represents the total assets value to be used as security held by applicants.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amount that represents the total assets value to be used as security held by appl" +
            "icants.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalSecurityAmount")]
        public decimal TotalSecurityAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalSecurityAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSecurityAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResults", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResults
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResultsApplicant> _applicant;
        
        /// <summary>
        /// <para>Loan applicant/s (borrower/s or guarantor/s) that are included in this group.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan applicant/s (borrower/s or guarantor/s) that are included in this group.")]
        [System.Xml.Serialization.XmlElementAttribute("Applicant")]
        public System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResultsApplicant> Applicant
        {
            get
            {
                return this._applicant;
            }
            set
            {
                this._applicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Applicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantSpecified
        {
            get
            {
                return (this.Applicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationSummaryServiceabilityResults" /> class.</para>
        /// </summary>
        public PackageContentApplicationSummaryServiceabilityResults()
        {
            this._applicant = new System.Collections.Generic.List<PackageContentApplicationSummaryServiceabilityResultsApplicant>();
        }
        
        /// <summary>
        /// <para>Contains the net disposable income calculated for the application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the net disposable income calculated for the application.")]
        [System.Xml.Serialization.XmlElementAttribute("NetDisposableIncome")]
        public PackageContentApplicationSummaryServiceabilityResultsNetDisposableIncome NetDisposableIncome { get; set; }
        
        /// <summary>
        /// <para>The total income of the application parties before accounting for taxes and deductions.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total income of the application parties before accounting for taxes and deduc" +
            "tions.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalGrossIncome")]
        public PackageContentApplicationSummaryServiceabilityResultsTotalGrossIncome TotalGrossIncome { get; set; }
        
        /// <summary>
        /// <para>The total income of the application parties after all deductions such as taxes have been taken.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total income of the application parties after all deductions such as taxes ha" +
            "ve been taken.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalNetIncome")]
        public PackageContentApplicationSummaryServiceabilityResultsTotalNetIncome TotalNetIncome { get; set; }
        
        /// <summary>
        /// <para>The total system calculated expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total system calculated expenses.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalSystemCalculatedExpenses")]
        public PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedExpenses TotalSystemCalculatedExpenses { get; set; }
        
        /// <summary>
        /// <para>The estimated living expenses calculated by or on behalf of the application capture or origination system.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated living expenses calculated by or on behalf of the application captu" +
            "re or origination system.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalSystemCalculatedLivingExpenses")]
        public PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedLivingExpenses TotalSystemCalculatedLivingExpenses { get; set; }
        
        /// <summary>
        /// <para>The total of living expenses declared by the application parties.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total of living expenses declared by the application parties.")]
        [System.Xml.Serialization.XmlElementAttribute("TotalUserStatedLivingExpenses")]
        public PackageContentApplicationSummaryServiceabilityResultsTotalUserStatedLivingExpenses TotalUserStatedLivingExpenses { get; set; }
        
        /// <summary>
        /// <para>Captures the debt servicing ratio that applies to the parties to the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the debt servicing ratio that applies to the parties to the application." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("DSR")]
        public decimal DSR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DSR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DSRSpecified { get; set; }
        
        /// <summary>
        /// <para>Debt to income ratio (DTI). The total credit limit of all debts to the gross annual income ratio that applies to the parties to the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Debt to income ratio (DTI). The total credit limit of all debts to the gross annu" +
            "al income ratio that applies to the parties to the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DTI")]
        public decimal DTI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DTI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DTISpecified { get; set; }
        
        /// <summary>
        /// <para>An identifer that can be used to identify the group.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An identifer that can be used to identify the group.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GroupIdentifier")]
        public string GroupIdentifier { get; set; }
        
        /// <summary>
        /// <para>If these serviceability results are for a group, this defines a name assigned to the group.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If these serviceability results are for a group, this defines a name assigned to " +
            "the group.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GroupName")]
        public string GroupName { get; set; }
        
        /// <summary>
        /// <para>Loan to income ratio (LTI). The total loan repayment amounts to total actual gross income ratio that applies to the parties to the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Loan to income ratio (LTI). The total loan repayment amounts to total actual gros" +
            "s income ratio that applies to the parties to the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LTI")]
        public decimal LTI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LTI property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LTISpecified { get; set; }
        
        /// <summary>
        /// <para>Maximum recommended amount of the loan, combining the individual commitments.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Maximum recommended amount of the loan, combining the individual commitments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaximumLoanAmount")]
        public decimal MaximumLoanAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaximumLoanAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumLoanAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount of the maximum recommended sum of gross repayments for this borrower or borrowers.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount of the maximum recommended sum of gross repayments for this bor" +
            "rower or borrowers.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaximumRepaymentAmount")]
        public decimal MaximumRepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaximumRepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumRepaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the maximum recommended sum of gross repayments for this borrower or borrowers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the maximum recommended sum of gross repayments for this borrowe" +
            "r or borrowers.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaximumRepaymentFrequency")]
        public RepaymentFrequencyList MaximumRepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaximumRepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumRepaymentFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>Monthly mortgage repayment to income measure (MRIM). The monthly mortgage repayment to sensitised monthly income ratio that applies to the parties to the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Monthly mortgage repayment to income measure (MRIM). The monthly mortgage repayme" +
            "nt to sensitised monthly income ratio that applies to the parties to the applica" +
            "tion.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MRIM")]
        public decimal MRIM { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MRIM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MRIMSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net surplus ratio that applies to the parties to the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net surplus ratio that applies to the parties to the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NSR")]
        public decimal NSR { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NSR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NSRSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures whether the parties to the loan are able to service the funds they will be liable for should the application be successful.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures whether the parties to the loan are able to service the funds they will " +
            "be liable for should the application be successful.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Serviceable")]
        public YesNoList Serviceable { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Serviceable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceableSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsApplicant
    {
        
        /// <summary>
        /// <para>Reference to the loan party that is included in this group.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the loan party that is included in this group.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Party")]
        public string X_Party { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsNetDisposableIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsNetDisposableIncome
    {
        
        /// <summary>
        /// <para>Captures the amount of the net disposable income calculated for the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the amount of the net disposable income calculated for the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period over which the amount of the net disposable income is considered disposable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period over which the amount of the net disposable income is conside" +
            "red disposable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsTotalGrossIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsTotalGrossIncome
    {
        
        /// <summary>
        /// <para>The total income amount of the application parties before accounting for taxes and deductions.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total income amount of the application parties before accounting for taxes an" +
            "d deductions.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period over which the total gross income amount is calculated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period over which the total gross income amount is calculated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsTotalNetIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsTotalNetIncome
    {
        
        /// <summary>
        /// <para>The total income amount of the application parties after all deductions such as taxes have been taken.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total income amount of the application parties after all deductions such as t" +
            "axes have been taken.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period over which the total net income amount is calculated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period over which the total net income amount is calculated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedExpense" +
        "s", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedExpenses
    {
        
        /// <summary>
        /// <para>The total system calculated expense amount.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total system calculated expense amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The frequency of the total system calculated expenses.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The frequency of the total system calculated expenses.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedLivingE" +
        "xpenses", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsTotalSystemCalculatedLivingExpenses
    {
        
        /// <summary>
        /// <para>The estimated living expenses amount calculated by or on behalf of the application capture or origination system.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated living expenses amount calculated by or on behalf of the applicatio" +
            "n capture or origination system.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period over which the living expenses were calculated.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period over which the living expenses were calculated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationSummaryServiceabilityResultsTotalUserStatedLivingExpense" +
        "s", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationSummaryServiceabilityResultsTotalUserStatedLivingExpenses
    {
        
        /// <summary>
        /// <para>The total amount of living expenses declared by the application parties.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of living expenses declared by the application parties.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the period over which the living expenses were captured.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the period over which the living expenses were captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Frequency")]
        public FrequencyShortList Frequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicant
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficialOwner> _beneficialOwner;
        
        /// <summary>
        /// <para>A beneficial owner of the trust. All beneficial owners of the trust should be captured (even persons captured elsewhere as directors, shareholders, beneficiaries etc.)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A beneficial owner of the trust. All beneficial owners of the trust should be cap" +
            "tured (even persons captured elsewhere as directors, shareholders, beneficiaries" +
            " etc.)")]
        [System.Xml.Serialization.XmlElementAttribute("BeneficialOwner")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficialOwner> BeneficialOwner
        {
            get
            {
                return this._beneficialOwner;
            }
            set
            {
                this._beneficialOwner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BeneficialOwner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeneficialOwnerSpecified
        {
            get
            {
                return (this.BeneficialOwner.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationTrustApplicant" /> class.</para>
        /// </summary>
        public PackageContentApplicationTrustApplicant()
        {
            this._beneficialOwner = new System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficialOwner>();
            this._beneficiary = new System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficiary>();
            this._dealingNumber = new System.Collections.Generic.List<DealingNumberType>();
            this._trustDeedVariation = new System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustDeedVariation>();
            this._trustee = new System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustee>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficiary> _beneficiary;
        
        /// <summary>
        /// <para>Wrapper for the trust beneficiaries</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wrapper for the trust beneficiaries")]
        [System.Xml.Serialization.XmlElementAttribute("Beneficiary")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicantBeneficiary> Beneficiary
        {
            get
            {
                return this._beneficiary;
            }
            set
            {
                this._beneficiary = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Beneficiary collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeneficiarySpecified
        {
            get
            {
                return (this.Beneficiary.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Contains information about the business of the trust</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the business of the trust")]
        [System.Xml.Serialization.XmlElementAttribute("Business")]
        public PackageContentApplicationTrustApplicantBusiness Business { get; set; }
        
        /// <summary>
        /// <para>Contains contact details for the trust applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains contact details for the trust applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public PackageContentApplicationTrustApplicantContact Contact { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<DealingNumberType> _dealingNumber;
        
        /// <summary>
        /// <para>The trust applicant's dealing number.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The trust applicant\'s dealing number.")]
        [System.Xml.Serialization.XmlElementAttribute("DealingNumber")]
        public System.Collections.Generic.List<DealingNumberType> DealingNumber
        {
            get
            {
                return this._dealingNumber;
            }
            set
            {
                this._dealingNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DealingNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DealingNumberSpecified
        {
            get
            {
                return (this.DealingNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The amount of income declared by the trust applicant for Lo Doc applications.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of income declared by the trust applicant for Lo Doc applications.")]
        [System.Xml.Serialization.XmlElementAttribute("DeclaredIncome")]
        public PackageContentApplicationTrustApplicantDeclaredIncome DeclaredIncome { get; set; }
        
        /// <summary>
        /// <para>Contains details of the existing customer details for this trust applicant where it is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains details of the existing customer details for this trust applicant where " +
            "it is an existing customer of the lender being applied to.")]
        [System.Xml.Serialization.XmlElementAttribute("ExistingCustomer")]
        public PackageContentApplicationTrustApplicantExistingCustomer ExistingCustomer { get; set; }
        
        /// <summary>
        /// <para>Container element for the detailed financial analysis of the company</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the detailed financial analysis of the company")]
        [System.Xml.Serialization.XmlElementAttribute("FinancialAnalysis")]
        public PackageContentApplicationTrustApplicantFinancialAnalysis FinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the previous financial year (immediately preceding the most recent full financial year), attributable to this applicant (for year = current year -2).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he previous financial year (immediately preceding the most recent full financial" +
            " year), attributable to this applicant (for year = current year -2).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomePrevious")]
        public PackageContentApplicationTrustApplicantIncomePrevious IncomePrevious { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the prior financial year (two years prior to the most recent full financial year), attributable to this applicant (for year = current year -3).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he prior financial year (two years prior to the most recent full financial year)" +
            ", attributable to this applicant (for year = current year -3).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomePrior")]
        public PackageContentApplicationTrustApplicantIncomePrior IncomePrior { get; set; }
        
        /// <summary>
        /// <para>Details of the share of the gross (pre-tax) income or income-related amounts in the most recent full financial year, attributable to this applicant (year = current year -1).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the share of the gross (pre-tax) income or income-related amounts in t" +
            "he most recent full financial year, attributable to this applicant (year = curre" +
            "nt year -1).")]
        [System.Xml.Serialization.XmlElementAttribute("IncomeRecent")]
        public PackageContentApplicationTrustApplicantIncomeRecent IncomeRecent { get; set; }
        
        /// <summary>
        /// <para>Details of the current year to date share of the gross (pre-tax) income or income-related amounts, attributable to this applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the current year to date share of the gross (pre-tax) income or income" +
            "-related amounts, attributable to this applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("IncomeYearToDate")]
        public PackageContentApplicationTrustApplicantIncomeYearToDate IncomeYearToDate { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustDeedVariation> _trustDeedVariation;
        
        /// <summary>
        /// <para>Container element for the date and description of a trust variation</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for the date and description of a trust variation")]
        [System.Xml.Serialization.XmlElementAttribute("TrustDeedVariation")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustDeedVariation> TrustDeedVariation
        {
            get
            {
                return this._trustDeedVariation;
            }
            set
            {
                this._trustDeedVariation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrustDeedVariation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrustDeedVariationSpecified
        {
            get
            {
                return (this.TrustDeedVariation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustee> _trustee;
        
        /// <summary>
        /// <para>Wrapper for the trustees</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Wrapper for the trustees")]
        [System.Xml.Serialization.XmlElementAttribute("Trustee")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicantTrustee> Trustee
        {
            get
            {
                return this._trustee;
            }
            set
            {
                this._trustee = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Trustee collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrusteeSpecified
        {
            get
            {
                return (this.Trustee.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Whether the trust is a borrower or a guarantor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Whether the trust is a borrower or a guarantor")]
        [System.Xml.Serialization.XmlAttributeAttribute("ApplicantType")]
        public ApplicantTypeList ApplicantType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicantType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The business name or trading name of the Trust</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The business name or trading name of the Trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessName")]
        public string BusinessName { get; set; }
        
        /// <summary>
        /// <para>Indicates if the Business Name is the same as the Trust Name.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates if the Business Name is the same as the Trust Name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BusinessNameSameAsTrustName")]
        public YesNoList BusinessNameSameAsTrustName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessNameSameAsTrustName property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusinessNameSameAsTrustNameSpecified { get; set; }
        
        /// <summary>
        /// <para>The country where the Trust was established</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The country where the Trust was established")]
        [System.Xml.Serialization.XmlAttributeAttribute("CountryEstablished")]
        public CountryCodeList CountryEstablished { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryEstablished property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountryEstablishedSpecified { get; set; }
        
        /// <summary>
        /// <para>The type of documentation under which the Trust is constituted e.g. Deed of Trust</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of documentation under which the Trust is constituted e.g. Deed of Trust" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocumentationType")]
        public string DocumentationType { get; set; }
        
        /// <summary>
        /// <para>Flag that indicates whether the trust has already been established.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag that indicates whether the trust has already been established.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Established")]
        public YesNoList Established { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Established property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstablishedSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the trust was established</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the trust was established")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstablishmentDate", DataType="date")]
        public System.DateTime EstablishmentDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstablishmentDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstablishmentDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The IRD Number of this Trust Applicant.</para>
        /// <para>The Inland Revenue Department Number (or IRD Number) is a unique identifier (consisting of 8 or 9 numbers) issued by the New Zealand Inland Revenue Department.</para>
        /// <para xml:lang="en">Pattern: \d{8,9}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The IRD Number of this Trust Applicant.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{8,9}")]
        [System.Xml.Serialization.XmlAttributeAttribute("IRDNumber")]
        public string IRDNumber { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the trust applicant is an existing customer of the lender being applied to.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the trust applicant is an existing customer of the lender being" +
            " applied to.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsExistingCustomer")]
        public YesNoList IsExistingCustomer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsExistingCustomer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsExistingCustomerSpecified { get; set; }
        
        /// <summary>
        /// <para>The number of beneficiaries of the Trust</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of beneficiaries of the Trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfBeneficiaries")]
        public string NumberOfBeneficiaries { get; set; }
        
        /// <summary>
        /// <para>The number of trustees of the Trust</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The number of trustees of the Trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("NumberOfTrustees")]
        public string NumberOfTrustees { get; set; }
        
        /// <summary>
        /// <para>Captures the NZBN of the trust applicant</para>
        /// <para>The New Zealand Business Number (NZBN) is a universal identifier which enables businesses to easily update, share key information and interact with each other.</para>
        /// <para xml:lang="en">Pattern: \d{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the NZBN of the trust applicant")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{13}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NZBN")]
        public string NZBN { get; set; }
        
        /// <summary>
        /// <para>The order of this trust applicant within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this trust applicant within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>This item is now deprecated and will be deleted in a release in 2019. The name of the person or company who originally provided the property on behalf of the Trust Beneficiaries, thereby establishing the Trust.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This item is now deprecated and will be deleted in a release in 2019. The name of" +
            " the person or company who originally provided the property on behalf of the Tru" +
            "st Beneficiaries, thereby establishing the Trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SettlorName")]
        public string SettlorName { get; set; }
        
        /// <summary>
        /// <para>The legal name of the Trust.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The legal name of the Trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TrustName")]
        public string TrustName { get; set; }
        
        /// <summary>
        /// <para>The purpose for which the trust has been established</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purpose for which the trust has been established")]
        [System.Xml.Serialization.XmlAttributeAttribute("TrustPurpose")]
        public TrustPurposeList TrustPurpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TrustPurpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrustPurposeSpecified { get; set; }
        
        /// <summary>
        /// <para>The structure of the trust as with particular regard to the discretion of the trustee</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The structure of the trust as with particular regard to the discretion of the tru" +
            "stee")]
        [System.Xml.Serialization.XmlAttributeAttribute("TrustStructure")]
        public TrustStructureList TrustStructure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TrustStructure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrustStructureSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>For a fixed trust, the date on which the property of the trust will vest in the beneficiaries.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("For a fixed trust, the date on which the property of the trust will vest in the b" +
            "eneficiaries.")]
        [System.Xml.Serialization.XmlAttributeAttribute("VestingDate", DataType="date")]
        public System.DateTime VestingDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VestingDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VestingDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the trust's current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the trust\'s current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantBeneficialOwner", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantBeneficialOwner
    {
        
        /// <summary>
        /// <para>A cross reference to the beneficial owner.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the beneficial owner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_BeneficialOwner")]
        public string X_BeneficialOwner { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantBeneficiary", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantBeneficiary
    {
        
        /// <summary>
        /// <para>Link to a beneficiary of the Trust. A Trust Beneficiary is a person, company, trust or other legal entity who may be entitled in some way to receive distributions of the assets or income of the Trust.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to a beneficiary of the Trust. A Trust Beneficiary is a person, company, tru" +
            "st or other legal entity who may be entitled in some way to receive distribution" +
            "s of the assets or income of the Trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Beneficiary")]
        public string X_Beneficiary { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantBusiness", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantBusiness
    {
        
        /// <summary>
        /// <para>An industry code, from a customised list supported by the lender where the lender requires a code that is not within ANZSIC, BIC or GICS.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An industry code, from a customised list supported by the lender where the lender" +
            " requires a code that is not within ANZSIC, BIC or GICS.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomIndustryCode")]
        public string CustomIndustryCode { get; set; }
        
        /// <summary>
        /// <para>A Global Industry Classification Standard (GICS) code.</para>
        /// <para>A pattern to restrict a Global Industry Classification Standard (GICS) code to be either 2, 4, 6, or 8 numerical digits.</para>
        /// <para xml:lang="en">Pattern: \d{2}(\d{2})?(\d{2})?(\d{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Global Industry Classification Standard (GICS) code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{2}(\\d{2})?(\\d{2})?(\\d{2})?")]
        [System.Xml.Serialization.XmlAttributeAttribute("GICSCode")]
        public string GICSCode { get; set; }
        
        /// <summary>
        /// <para>Captures a free text description of the Industry Code.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures a free text description of the Industry Code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Industry")]
        public string Industry { get; set; }
        
        /// <summary>
        /// <para>The four digit industry code, from the ANZSIC list of codes. If the nominal code is two or three digits, add '0's to the end to make the four digit code.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The four digit industry code, from the ANZSIC list of codes. If the nominal code " +
            "is two or three digits, add \'0\'s to the end to make the four digit code.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndustryCode")]
        public AnzsicIndustryCodeList IndustryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustryCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndustryCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>The main activity of the business</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The main activity of the business")]
        [System.Xml.Serialization.XmlAttributeAttribute("MainBusinessActivity")]
        public string MainBusinessActivity { get; set; }
        
        /// <summary>
        /// <para>A Business Industry Classification Code.</para>
        /// <para>A pattern to restrict a Business Industry Classification Code to be exactly 1 alphabetic character followed by 6 numerical digits.</para>
        /// <para xml:lang="en">Pattern: [A-z]\d{6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A Business Industry Classification Code.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-z]\\d{6}")]
        [System.Xml.Serialization.XmlAttributeAttribute("NewZealandBICCode")]
        public string NewZealandBICCode { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantContact", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantContact
    {
        
        /// <summary>
        /// <para>Contains information for the contact person for the trust</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information for the contact person for the trust")]
        [System.Xml.Serialization.XmlElementAttribute("ContactPerson")]
        public PackageContentApplicationTrustApplicantContactContactPerson ContactPerson { get; set; }
        
        /// <summary>
        /// <para>Fax number for the trust</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fax number for the trust")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeFax")]
        public PhoneType OfficeFax { get; set; }
        
        /// <summary>
        /// <para>Mobile phone number for the trust.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mobile phone number for the trust.")]
        [System.Xml.Serialization.XmlElementAttribute("OfficeMobile")]
        public PhoneType OfficeMobile { get; set; }
        
        /// <summary>
        /// <para>Office number for the trust</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Office number for the trust")]
        [System.Xml.Serialization.XmlElementAttribute("OfficePhone")]
        public PhoneType OfficePhone { get; set; }
        
        /// <summary>
        /// <para>The duration of the trust applicant trading at this address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the trust applicant trading at this address.")]
        [System.Xml.Serialization.XmlElementAttribute("PrincipalTradingAddressDuration")]
        public DurationType PrincipalTradingAddressDuration { get; set; }
        
        /// <summary>
        /// <para>The duration of registration of the trust applicant at this address.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of registration of the trust applicant at this address.")]
        [System.Xml.Serialization.XmlElementAttribute("RegisteredAddressDuration")]
        public DurationType RegisteredAddressDuration { get; set; }
        
        /// <summary>
        /// <para>An email address for the trust</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address for the trust")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>Specifies the preferred method for contacting this applicant</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the preferred method for contacting this applicant")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredContact")]
        public PreferredContactCompanyList PreferredContact { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreferredContactSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the trust applicant began trading at this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the trust applicant began trading at this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrincipalTradingAddressStartDate", DataType="date")]
        public System.DateTime PrincipalTradingAddressStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalTradingAddressStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalTradingAddressStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>The date the trust applicant registered at this address.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date the trust applicant registered at this address.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RegisteredAddressStartDate", DataType="date")]
        public System.DateTime RegisteredAddressStartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegisteredAddressStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegisteredAddressStartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>A URL for the trust's public accessible web site.</para>
        /// <para>The uniform resource locator, is a specific character string that constitutes a reference to a resource. In most web browsers, the URL of a web page is displayed on top inside an address bar.</para>
        /// <para xml:lang="en">Pattern: .+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A URL for the trust\'s public accessible web site.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("WebAddress")]
        public string WebAddress { get; set; }
        
        /// <summary>
        /// <para>Mailing address of the trust</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mailing address of the trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_MailingAddress")]
        public string X_MailingAddress { get; set; }
        
        /// <summary>
        /// <para>The official address of the trust where business is carried out.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The official address of the trust where business is carried out.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_PrincipalTradingAddress")]
        public string X_PrincipalTradingAddress { get; set; }
        
        /// <summary>
        /// <para>Registered address of the trust</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Registered address of the trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_RegisteredAddress")]
        public string X_RegisteredAddress { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantContactContactPerson", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantContactContactPerson
    {
        
        /// <summary>
        /// <para>A person's first name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s first name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FirstName")]
        public string FirstName { get; set; }
        
        /// <summary>
        /// <para>The name title this person uses when they are formally addressed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name title this person uses when they are formally addressed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NameTitle")]
        public NameTitleList NameTitle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NameTitle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameTitleSpecified { get; set; }
        
        /// <summary>
        /// <para>The role or job position of the contact person</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The role or job position of the contact person")]
        [System.Xml.Serialization.XmlAttributeAttribute("Role")]
        public string Role { get; set; }
        
        /// <summary>
        /// <para>A person's surname.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person\'s surname.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Surname")]
        public string Surname { get; set; }
        
        /// <summary>
        /// <para>A contact person for the trust</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A contact person for the trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_ContactPerson")]
        public string X_ContactPerson { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantDeclaredIncome", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantDeclaredIncome
    {
        
        /// <summary>
        /// <para>The amount of income declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of income declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeAmount")]
        public decimal IncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The net amount of income declared by the applicant.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The net amount of income declared by the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NetIncomeAmount")]
        public decimal NetIncomeAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetIncomeAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetIncomeAmountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantExistingCustomer", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantExistingCustomer
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<FinancialAccountType> _accountNumber;
        
        /// <summary>
        /// <para>Account details for an account held that identifies the party as an existing customer</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Account details for an account held that identifies the party as an existing cust" +
            "omer")]
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber")]
        public System.Collections.Generic.List<FinancialAccountType> AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AccountNumber collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountNumberSpecified
        {
            get
            {
                return (this.AccountNumber.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationTrustApplicantExistingCustomer" /> class.</para>
        /// </summary>
        public PackageContentApplicationTrustApplicantExistingCustomer()
        {
            this._accountNumber = new System.Collections.Generic.List<FinancialAccountType>();
        }
        
        /// <summary>
        /// <para>A unique number assigned by the lender used to identify the customer</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A unique number assigned by the lender used to identify the customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerNumber")]
        public string CustomerNumber { get; set; }
        
        /// <summary>
        /// <para>The approximate year that the applicant became a customer</para>
        /// <para>Local type that is based on a restriction of the gYear xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The approximate year that the applicant became a customer")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSince")]
        public string CustomerSince { get; set; }
        
        /// <summary>
        /// <para>The month (if known) that the trust applicant became a customer (only if the year is also provided in 'CustomerSince').</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The month (if known) that the trust applicant became a customer (only if the year" +
            " is also provided in \'CustomerSince\').")]
        [System.Xml.Serialization.XmlAttributeAttribute("CustomerSinceMonth")]
        public MmMonthList CustomerSinceMonth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomerSinceMonth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerSinceMonthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantFinancialAnalysis", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantFinancialAnalysis
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentApplicationTrustApplicantFinancialAnalysisCompanyFinancials> _companyFinancials;
        
        /// <summary>
        /// <para>Container for the reference to the financial data</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container for the reference to the financial data")]
        [System.Xml.Serialization.XmlElementAttribute("CompanyFinancials")]
        public System.Collections.Generic.List<PackageContentApplicationTrustApplicantFinancialAnalysisCompanyFinancials> CompanyFinancials
        {
            get
            {
                return this._companyFinancials;
            }
            set
            {
                this._companyFinancials = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CompanyFinancials collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyFinancialsSpecified
        {
            get
            {
                return (this.CompanyFinancials.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentApplicationTrustApplicantFinancialAnalysis" /> class.</para>
        /// </summary>
        public PackageContentApplicationTrustApplicantFinancialAnalysis()
        {
            this._companyFinancials = new System.Collections.Generic.List<PackageContentApplicationTrustApplicantFinancialAnalysisCompanyFinancials>();
        }
        
        /// <summary>
        /// <para>Total Principle and Interest payments on borrowings due to be paid in the next 12 months</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Principle and Interest payments on borrowings due to be paid in the next 12" +
            " months")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnnualPaymentOnCommitments")]
        public decimal AnnualPaymentOnCommitments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnnualPaymentOnCommitments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnualPaymentOnCommitmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether a complete financial analysis will be provided electronically, or only a summary view</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether a complete financial analysis will be provided electroni" +
            "cally, or only a summary view")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompleteFinancialAnalysis")]
        public YesNoList CompleteFinancialAnalysis { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompleteFinancialAnalysis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompleteFinancialAnalysisSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantFinancialAnalysisCompanyFinancials", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantFinancialAnalysisCompanyFinancials
    {
        
        /// <summary>
        /// <para>Reference to the element containing the financial analysis for each financial year, to be provided when Complete Financial Analysis = "Yes"</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the element containing the financial analysis for each financial yea" +
            "r, to be provided when Complete Financial Analysis = \"Yes\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_CompanyFinancials")]
        public string X_CompanyFinancials { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomePrevious", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomePrevious
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationTrustApplicantIncomePreviousAddback Addback { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the trust's accountant for the full previous financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the trust\'s accountant for the full previous financial year. This should " +
            "be populated when the accountant for the specified period is different to that d" +
            "eclared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomePreviousAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomePreviousAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total interest expense as listed in the financial report, including leasing expenses</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total interest expense as listed in the financial report, including leasing expen" +
            "ses")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to trustee that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to trustee that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToTrustee")]
        public decimal PaymentToTrustee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToTrustee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToTrusteeSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Super excess amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super excess amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomePrior", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomePrior
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationTrustApplicantIncomePriorAddback Addback { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the prior year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the prior year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the trust's accountant for the full prior financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the trust\'s accountant for the full prior financial year. This should be " +
            "populated when the accountant for the specified period is different to that decl" +
            "ared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomePriorAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomePriorAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>The Trust's total interest expense in the prior tax year as listed in the financial report, including leasing expenses</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The Trust\'s total interest expense in the prior tax year as listed in the financi" +
            "al report, including leasing expenses")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to trustee that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to trustee that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToTrustee")]
        public decimal PaymentToTrustee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToTrustee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToTrusteeSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Super excess amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super excess amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomeRecent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomeRecent
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationTrustApplicantIncomeRecentAddback Addback { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>When comparing past Tax Office Assessments, indicate whether the past return has improved on the previous year.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("When comparing past Tax Office Assessments, indicate whether the past return has " +
            "improved on the previous year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeGreaterThanPreviousYear")]
        public YesNoList IncomeGreaterThanPreviousYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeGreaterThanPreviousYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeGreaterThanPreviousYearSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Code to indicate the type of evidence of the income</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Code to indicate the type of evidence of the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofCode")]
        public ProofCodeTrustList ProofCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the Income evidence been sighted by the loan writer or assessor</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the Income evidence been sighted by the loan writer or assessor" +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProofSighted")]
        public YesNoList ProofSighted { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProofSighted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProofSightedSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Are Tax Office Assessments for at least the past two years available as supporting evidence for this application</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Are Tax Office Assessments for at least the past two years available as supportin" +
            "g evidence for this application")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxOfficeAssessments")]
        public YesNoList TaxOfficeAssessments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxOfficeAssessments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxOfficeAssessmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Link to the trust's accountant for the full most recent financial year. This should be populated when the accountant for the specified period is different to that declared as the current accountant.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the trust\'s accountant for the full most recent financial year. This shou" +
            "ld be populated when the accountant for the specified period is different to tha" +
            "t declared as the current accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Accountant")]
        public string X_Accountant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomeRecentAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomeRecentAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total interest expense as listed in the financial report, including leasing expenses</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total interest expense as listed in the financial report, including leasing expen" +
            "ses")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to trustee that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to trustee that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToTrustee")]
        public decimal PaymentToTrustee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToTrustee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToTrusteeSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Super excess amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super excess amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomeYearToDate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomeYearToDate
    {
        
        /// <summary>
        /// <para>Container element for Addback detail</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Container element for Addback detail")]
        [System.Xml.Serialization.XmlElementAttribute("Addback")]
        public PackageContentApplicationTrustApplicantIncomeYearToDateAddback Addback { get; set; }
        
        /// <summary>
        /// <para>The end date for the stated income, generally the end of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The end date for the stated income, generally the end of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("EndDate", DataType="date")]
        public System.DateTime EndDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the profit after tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the profit after tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitAfterTax")]
        public decimal ProfitAfterTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitAfterTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitAfterTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>Captures the net profit/profit before tax for the specified financial year.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the net profit/profit before tax for the specified financial year.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProfitBeforeTax")]
        public decimal ProfitBeforeTax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProfitBeforeTax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfitBeforeTaxSpecified { get; set; }
        
        /// <summary>
        /// <para>The start date for the stated income, generally the start of a financial year</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The start date for the stated income, generally the start of a financial year")]
        [System.Xml.Serialization.XmlAttributeAttribute("StartDate", DataType="date")]
        public System.DateTime StartDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantIncomeYearToDateAddback", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantIncomeYearToDateAddback
    {
        
        /// <summary>
        /// <para>Allowances amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Allowances amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Allowances")]
        public decimal Allowances { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Allowances property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowancesSpecified { get; set; }
        
        /// <summary>
        /// <para>Amortisation Of Goodwill amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Amortisation Of Goodwill amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AmortisationOfGoodwill")]
        public decimal AmortisationOfGoodwill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmortisationOfGoodwill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmortisationOfGoodwillSpecified { get; set; }
        
        /// <summary>
        /// <para>Bonus amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Bonus amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Bonus")]
        public decimal Bonus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Bonus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BonusSpecified { get; set; }
        
        /// <summary>
        /// <para>Carry Forward Losses amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Carry Forward Losses amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CarryForwardLosses")]
        public decimal CarryForwardLosses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CarryForwardLosses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CarryForwardLossesSpecified { get; set; }
        
        /// <summary>
        /// <para>Depreciation as recorded in the financial report</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depreciation as recorded in the financial report")]
        [System.Xml.Serialization.XmlAttributeAttribute("Depreciation")]
        public decimal Depreciation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Depreciation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepreciationSpecified { get; set; }
        
        /// <summary>
        /// <para>Home Office amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Home Office amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HomeOffice")]
        public decimal HomeOffice { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeOffice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeOfficeSpecified { get; set; }
        
        /// <summary>
        /// <para>Total interest expense as listed in the financial report, including leasing expenses</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total interest expense as listed in the financial report, including leasing expen" +
            "ses")]
        [System.Xml.Serialization.XmlAttributeAttribute("Interest")]
        public decimal Interest { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Interest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestSpecified { get; set; }
        
        /// <summary>
        /// <para>Lease amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Lease amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("Lease")]
        public decimal Lease { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-cash benefits amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-cash benefits amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonCashBenefits")]
        public decimal NonCashBenefits { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonCashBenefits property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonCashBenefitsSpecified { get; set; }
        
        /// <summary>
        /// <para>Non-recurring expense amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Non-recurring expense amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("NonRecurringExpenses")]
        public decimal NonRecurringExpenses { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonRecurringExpenses property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonRecurringExpensesSpecified { get; set; }
        
        /// <summary>
        /// <para>The payment to trustee that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The payment to trustee that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("PaymentToTrustee")]
        public decimal PaymentToTrustee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PaymentToTrustee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentToTrusteeSpecified { get; set; }
        
        /// <summary>
        /// <para>Salary amount that can be an addback to the income.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Salary amount that can be an addback to the income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Salary")]
        public decimal Salary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salary property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarySpecified { get; set; }
        
        /// <summary>
        /// <para>Super excess amount that can be an addback to the income</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Super excess amount that can be an addback to the income")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationExcess")]
        public decimal SuperannuationExcess { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationExcess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationExcessSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantTrustDeedVariation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantTrustDeedVariation
    {
        
        /// <summary>
        /// <para>The date of the variation to the trust</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the variation to the trust")]
        [System.Xml.Serialization.XmlAttributeAttribute("Date", DataType="date")]
        public System.DateTime Date { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified { get; set; }
        
        /// <summary>
        /// <para>The description or type of variation that was effected</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The description or type of variation that was effected")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Trust Deed Variation Element</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Trust Deed Variation Element")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentApplicationTrustApplicantTrustee", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentApplicationTrustApplicantTrustee
    {
        
        /// <summary>
        /// <para>The date that the party was appointed as a trustee</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the party was appointed as a trustee")]
        [System.Xml.Serialization.XmlAttributeAttribute("AppointmentDate", DataType="date")]
        public System.DateTime AppointmentDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppointmentDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppointmentDateSpecified { get; set; }
        
        /// <summary>
        /// <para>An Independent Trustee is a person or corporate entity (company) who derives no benefit from the trust assets. The FMA issues licences to provide independent trustee services.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An Independent Trustee is a person or corporate entity (company) who derives no b" +
            "enefit from the trust assets. The FMA issues licences to provide independent tru" +
            "stee services.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IndependentTrustee")]
        public YesNoList IndependentTrustee { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndependentTrustee property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndependentTrusteeSpecified { get; set; }
        
        /// <summary>
        /// <para>Links to the applicant or related party that is a trustee of the trust.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Links to the applicant or related party that is a trustee of the trust.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Trustee")]
        public string X_Trustee { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysis", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysis
    {
        
        /// <summary>
        /// <para>Information about the benefit derived by the applicants.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about the benefit derived by the applicants.")]
        [System.Xml.Serialization.XmlElementAttribute("BenefitToApplicants")]
        public PackageContentNeedsAnalysisBenefitToApplicants BenefitToApplicants { get; set; }
        
        /// <summary>
        /// <para>Interview that must be completed with each co-applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interview that must be completed with each co-applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("CoApplicantInterview")]
        public PackageContentNeedsAnalysisCoApplicantInterview CoApplicantInterview { get; set; }
        
        /// <summary>
        /// <para>Planned or anticipated changes to the applicant/s future financial circumstances.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Planned or anticipated changes to the applicant/s future financial circumstances." +
            "")]
        [System.Xml.Serialization.XmlElementAttribute("FutureCircumstances")]
        public PackageContentNeedsAnalysisFutureCircumstances FutureCircumstances { get; set; }
        
        /// <summary>
        /// <para>Information about the needs analysis interview.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information about the needs analysis interview.")]
        [System.Xml.Serialization.XmlElementAttribute("Interview")]
        public PackageContentNeedsAnalysisInterview Interview { get; set; }
        
        /// <summary>
        /// <para>The duration of the term of credit sought for this loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The duration of the term of credit sought for this loan.")]
        [System.Xml.Serialization.XmlElementAttribute("LoanTermSought")]
        public DurationType LoanTermSought { get; set; }
        
        /// <summary>
        /// <para>The preferences of the applicant with respect to the requirements, type of facilities, or features of the products they are seeking.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferences of the applicant with respect to the requirements, type of facili" +
            "ties, or features of the products they are seeking.")]
        [System.Xml.Serialization.XmlElementAttribute("Preferences")]
        public PackageContentNeedsAnalysisPreferences Preferences { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisPurposeOfApplication> _purposeOfApplication;
        
        /// <summary>
        /// <para>The purpose associated with a monetary amount that the customer has requested.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purpose associated with a monetary amount that the customer has requested.")]
        [System.Xml.Serialization.XmlElementAttribute("PurposeOfApplication")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisPurposeOfApplication> PurposeOfApplication
        {
            get
            {
                return this._purposeOfApplication;
            }
            set
            {
                this._purposeOfApplication = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PurposeOfApplication collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeOfApplicationSpecified
        {
            get
            {
                return (this.PurposeOfApplication.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysis" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysis()
        {
            this._purposeOfApplication = new System.Collections.Generic.List<PackageContentNeedsAnalysisPurposeOfApplication>();
        }
        
        /// <summary>
        /// <para>Details of refinancing or consolidating debts with the proceeds of the proposed loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of refinancing or consolidating debts with the proceeds of the proposed l" +
            "oan.")]
        [System.Xml.Serialization.XmlElementAttribute("RefinancingAndConsolidation")]
        public PackageContentNeedsAnalysisRefinancingAndConsolidation RefinancingAndConsolidation { get; set; }
        
        /// <summary>
        /// <para>Retirement details of the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Retirement details of the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("RetirementDetails")]
        public PackageContentNeedsAnalysisRetirementDetails RetirementDetails { get; set; }
        
        /// <summary>
        /// <para>The total amount of credit sought for this loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total amount of credit sought for this loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanAmountSought")]
        public decimal LoanAmountSought { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoanAmountSought property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoanAmountSoughtSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of the discussion between the broker and applicant regarding the duration of the loan term sought and the reason this duration was selected.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the discussion between the broker and applicant regarding the du" +
            "ration of the loan term sought and the reason this duration was selected.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanTermSoughtDescription")]
        public string LoanTermSoughtDescription { get; set; }
        
        /// <summary>
        /// <para>The primary purpose for this loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The primary purpose for this loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryApplicationPurpose")]
        public PrimaryPurposeLoanPurposeList PrimaryApplicationPurpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryApplicationPurpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryApplicationPurposeSpecified { get; set; }
        
        /// <summary>
        /// <para>Product selection having regard to the outcome of the requirements and objectives enquiries.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Product selection having regard to the outcome of the requirements and objectives" +
            " enquiries.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ProductSelection")]
        public string ProductSelection { get; set; }
        
        /// <summary>
        /// <para>A summary of the applicant/s stated purpose for the application.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A summary of the applicant/s stated purpose for the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PurposeSummary")]
        public string PurposeSummary { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this NeedsAnalysis element.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this NeedsAnalysis element.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisBenefitToApplicants", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisBenefitToApplicants
    {
        
        /// <summary>
        /// <para>All applicants and co-applicants clearly benefit from the products within this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("All applicants and co-applicants clearly benefit from the products within this ap" +
            "plication.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllApplicantsBenefit")]
        public YesNoList AllApplicantsBenefit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllApplicantsBenefit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllApplicantsBenefitSpecified { get; set; }
        
        /// <summary>
        /// <para>Describes the enquiries that have been made to ascertain the level of benefit to each applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Describes the enquiries that have been made to ascertain the level of benefit to " +
            "each applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BenefitEnquiries")]
        public string BenefitEnquiries { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisCoApplicantInterview", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisCoApplicantInterview
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewApplicant> _applicant;
        
        /// <summary>
        /// <para>The results of the interview with a co-applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The results of the interview with a co-applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Applicant")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewApplicant> Applicant
        {
            get
            {
                return this._applicant;
            }
            set
            {
                this._applicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Applicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantSpecified
        {
            get
            {
                return (this.Applicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisCoApplicantInterview" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisCoApplicantInterview()
        {
            this._applicant = new System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewApplicant>();
            this._witness = new System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewWitness>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewWitness> _witness;
        
        /// <summary>
        /// <para>A person that was a witness to the co-applicant interview.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A person that was a witness to the co-applicant interview.")]
        [System.Xml.Serialization.XmlElementAttribute("Witness")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisCoApplicantInterviewWitness> Witness
        {
            get
            {
                return this._witness;
            }
            set
            {
                this._witness = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Witness collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WitnessSpecified
        {
            get
            {
                return (this.Witness.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisCoApplicantInterviewApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisCoApplicantInterviewApplicant
    {
        
        /// <summary>
        /// <para>How the co-applicant substantially benefits from the products within this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("How the co-applicant substantially benefits from the products within this applica" +
            "tion.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BenefitEnquiries")]
        public BenefitEnquiriesList BenefitEnquiries { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BenefitEnquiries property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BenefitEnquiriesSpecified { get; set; }
        
        /// <summary>
        /// <para>A description of how the co-applicant substantially benefits from the products within this application.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of how the co-applicant substantially benefits from the products wi" +
            "thin this application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BenefitEnquiriesDescription")]
        public string BenefitEnquiriesDescription { get; set; }
        
        /// <summary>
        /// <para>Indicates whether the co-applicant substantially benefits from the products within this application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the co-applicant substantially benefits from the products withi" +
            "n this application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CoApplicantBenefit")]
        public CoApplicantBenefitList CoApplicantBenefit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoApplicantBenefit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoApplicantBenefitSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason the borrower wants to be a co-applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason the borrower wants to be a co-applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CoApplicantReason")]
        public string CoApplicantReason { get; set; }
        
        /// <summary>
        /// <para>The name of the co-applicant, to be used to identify the co-applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the co-applicant, to be used to identify the co-applicant when the ap" +
            "plication has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the a" +
            "pplicant when the application has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Indicates that the interviewer suspects the co-applicant is having difficulty understanding their obligations.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the interviewer suspects the co-applicant is having difficulty und" +
            "erstanding their obligations.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuspectDifficultyUnderstandingObligations")]
        public YesNoList SuspectDifficultyUnderstandingObligations { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuspectDifficultyUnderstandingObligations property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuspectDifficultyUnderstandingObligationsSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the interviewer suspects the co-applicant is experiencing financial abuse.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the interviewer suspects the co-applicant is experiencing financia" +
            "l abuse.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuspectExperiencingFinancialAbuse")]
        public YesNoList SuspectExperiencingFinancialAbuse { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuspectExperiencingFinancialAbuse property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuspectExperiencingFinancialAbuseSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the interviewer suspects the co-applicant is under pressure to enter the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the interviewer suspects the co-applicant is under pressure to ent" +
            "er the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuspectUnderPressure")]
        public YesNoList SuspectUnderPressure { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuspectUnderPressure property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuspectUnderPressureSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the interviewer suspects the co-applicant is subject to unreasonable or unfair conduct by someone involved in the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the interviewer suspects the co-applicant is subject to unreasonab" +
            "le or unfair conduct by someone involved in the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuspectUnfairConduct")]
        public YesNoList SuspectUnfairConduct { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuspectUnfairConduct property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuspectUnfairConductSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the co-applicant understands their obligations as co-applicant, and the difference between co-applicant and guarantor.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the co-applicant understands their obligations as co-applicant, an" +
            "d the difference between co-applicant and guarantor.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnderstandsCoApplicantObligations")]
        public YesNoList UnderstandsCoApplicantObligations { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnderstandsCoApplicantObligations property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnderstandsCoApplicantObligationsSpecified { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the applicant (a Person Applicant element).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the applicant (a Person Applicant element).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisCoApplicantInterviewWitness", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisCoApplicantInterviewWitness
    {
        
        /// <summary>
        /// <para>Occupation code (ANZSCO) of the person who was a witness to the co-applicant interview.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupation code (ANZSCO) of the person who was a witness to the co-applicant inte" +
            "rview.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ANZSCOOccupationCode")]
        public AnzscoOccupationCodeList ANZSCOOccupationCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANZSCOOccupationCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANZSCOOccupationCodeSpecified { get; set; }
        
        /// <summary>
        /// <para>Occupation description of the person who was a witness to the co-applicant interview.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Occupation description of the person who was a witness to the co-applicant interv" +
            "iew.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Occupation")]
        public string Occupation { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the person that was a witness to the co-applicant interview.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the person that was a witness to the co-applicant interview." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Witness")]
        public string X_Witness { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisFutureCircumstances", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisFutureCircumstances
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisFutureCircumstancesApplicant> _applicant;
        
        /// <summary>
        /// <para>An applicant to which these future financial circumstances apply.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An applicant to which these future financial circumstances apply.")]
        [System.Xml.Serialization.XmlElementAttribute("Applicant")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisFutureCircumstancesApplicant> Applicant
        {
            get
            {
                return this._applicant;
            }
            set
            {
                this._applicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Applicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantSpecified
        {
            get
            {
                return (this.Applicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisFutureCircumstances" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisFutureCircumstances()
        {
            this._applicant = new System.Collections.Generic.List<PackageContentNeedsAnalysisFutureCircumstancesApplicant>();
        }
        
        /// <summary>
        /// <para>Planned or anticipated changes in circumstances that will adversely affect the applicants' ability to make future loan repayments; the nature of the change, and how they will collectively continue to make repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Planned or anticipated changes in circumstances that will adversely affect the ap" +
            "plicants\' ability to make future loan repayments; the nature of the change, and " +
            "how they will collectively continue to make repayments.")]
        [System.Xml.Serialization.XmlElementAttribute("ResponsibleLending")]
        public ResponsibleLendingType ResponsibleLending { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisFutureCircumstancesApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisFutureCircumstancesApplicant
    {
        
        /// <summary>
        /// <para>The name of the applicant, to be used to identify the applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the applicant, to be used to identify the applicant when the applicat" +
            "ion has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the a" +
            "pplicant when the application has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the applicant (a Person Applicant element).</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the applicant (a Person Applicant element).")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisInterview", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisInterview
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisInterviewAttendee> _attendee;
        
        /// <summary>
        /// <para>Interview Attendee.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interview Attendee.")]
        [System.Xml.Serialization.XmlElementAttribute("Attendee")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisInterviewAttendee> Attendee
        {
            get
            {
                return this._attendee;
            }
            set
            {
                this._attendee = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attendee collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttendeeSpecified
        {
            get
            {
                return (this.Attendee.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisInterview" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisInterview()
        {
            this._attendee = new System.Collections.Generic.List<PackageContentNeedsAnalysisInterviewAttendee>();
        }
        
        /// <summary>
        /// <para>Indicates that all applicants and co-applicants were present for the needs analysis interview.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that all applicants and co-applicants were present for the needs analys" +
            "is interview.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllApplicantsPresent")]
        public YesNoList AllApplicantsPresent { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllApplicantsPresent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllApplicantsPresentSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that all the attendees of the needs analysis interview were clearly able to understand English.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that all the attendees of the needs analysis interview were clearly abl" +
            "e to understand English.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllApplicantsUnderstandEnglish")]
        public YesNoList AllApplicantsUnderstandEnglish { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllApplicantsUnderstandEnglish property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllApplicantsUnderstandEnglishSpecified { get; set; }
        
        /// <summary>
        /// <para>The date that the needs analysis interview takes place.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date that the needs analysis interview takes place.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Date", DataType="date")]
        public System.DateTime Date { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified { get; set; }
        
        /// <summary>
        /// <para>The language from which the interpreter translated.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The language from which the interpreter translated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterpreterLanguage")]
        public string InterpreterLanguage { get; set; }
        
        /// <summary>
        /// <para>Indicates that the services of an interpreter were recommended.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the services of an interpreter were recommended.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterpreterRecommended")]
        public YesNoList InterpreterRecommended { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterpreterRecommended property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterpreterRecommendedSpecified { get; set; }
        
        /// <summary>
        /// <para>The location at which the needs analysis interview takes place.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The location at which the needs analysis interview takes place.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Location")]
        public string X_Location { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisInterviewAttendee", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisInterviewAttendee
    {
        
        /// <summary>
        /// <para>The party that attended the interview.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The party that attended the interview.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Party")]
        public string X_Party { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferences", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferences
    {
        
        /// <summary>
        /// <para>Details of the applicant's funds access type preferences.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the applicant\'s funds access type preferences.")]
        [System.Xml.Serialization.XmlElementAttribute("FundsAccessTypeDetails")]
        public PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetails FundsAccessTypeDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the applicant's interest rate type preference.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the applicant\'s interest rate type preference.")]
        [System.Xml.Serialization.XmlElementAttribute("InterestRateTypeDetails")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetails InterestRateTypeDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the applicant's repayment type preferences.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the applicant\'s repayment type preferences.")]
        [System.Xml.Serialization.XmlElementAttribute("RepaymentTypeDetails")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetails RepaymentTypeDetails { get; set; }
        
        /// <summary>
        /// <para>A description of the conflict in the loan feature preferences.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description of the conflict in the loan feature preferences.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConflictDescription")]
        public string ConflictDescription { get; set; }
        
        /// <summary>
        /// <para>A flag to indicate that a conflict exists in the loan feature preferences.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A flag to indicate that a conflict exists in the loan feature preferences.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConflictExists")]
        public YesNoList ConflictExists { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConflictExists property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConflictExistsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant/s stated preference for type of facilities and/or features that provide access to funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant/s stated preference for type of facilities and/or features that pro" +
            "vide access to funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FundsAccessType")]
        public FundsAccessTypeList FundsAccessType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FundsAccessType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FundsAccessTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant/s stated preference for type of interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant/s stated preference for type of interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestRateType")]
        public InterestRateTypeList InterestRateType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InterestRateType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterestRateTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>A free text field to capture any other applicant/s stated preference otherwise not specifically captured.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free text field to capture any other applicant/s stated preference otherwise no" +
            "t specifically captured.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherPreferences")]
        public string OtherPreferences { get; set; }
        
        /// <summary>
        /// <para>A flag to indicate that the applicant has preferred lenders.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A flag to indicate that the applicant has preferred lenders.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredLenders")]
        public YesNoList PreferredLenders { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreferredLenders property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreferredLendersSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the applicant's preferred lenders.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the applicant\'s preferred lenders.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PreferredLendersDetails")]
        public string PreferredLendersDetails { get; set; }
        
        /// <summary>
        /// <para>The priorities and reasons for the priorities in loan feature preferences.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The priorities and reasons for the priorities in loan feature preferences.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrioritiesAndReasons")]
        public string PrioritiesAndReasons { get; set; }
        
        /// <summary>
        /// <para>The applicant/s stated preference for type of repayment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant/s stated preference for type of repayment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentType")]
        public PaymentTypeList RepaymentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>A summary of the applicant/s preferences with respect to requirements or features of the products they are seeking.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A summary of the applicant/s preferences with respect to requirements or features" +
            " of the products they are seeking.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Summary")]
        public string Summary { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetails
    {
        
        /// <summary>
        /// <para>The applicant's preferences for offset account funds access type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for offset account funds access type.")]
        [System.Xml.Serialization.XmlElementAttribute("OffsetAccount")]
        public PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccount OffsetAccount { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for redraw funds access type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for redraw funds access type.")]
        [System.Xml.Serialization.XmlElementAttribute("Redraw")]
        public PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedraw Redraw { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccount", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccount
    {
        
        /// <summary>
        /// <para>The reason offset account funds access type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason offset account funds access type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccountReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccountReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsOffsetAccountReason
    {
        
        /// <summary>
        /// <para>Offset account funds access type is important to the applicant to allow access to funds.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offset account funds access type is important to the applicant to allow access to" +
            " funds.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowsAccessToFunds")]
        public YesNoList AllowsAccessToFunds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowsAccessToFunds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowsAccessToFundsSpecified { get; set; }
        
        /// <summary>
        /// <para>Offset account funds access type is important to the applicant to allow paying off loan sooner.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offset account funds access type is important to the applicant to allow paying of" +
            "f loan sooner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowsPayingOffLoanSooner")]
        public YesNoList AllowsPayingOffLoanSooner { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowsPayingOffLoanSooner property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowsPayingOffLoanSoonerSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason offset account funds access type is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason offset account funds access type is important to the " +
            "applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Offset account funds access type is important to the applicant for tax purposes (based on financial or tax advice).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Offset account funds access type is important to the applicant for tax purposes (" +
            "based on financial or tax advice).")]
        [System.Xml.Serialization.XmlAttributeAttribute("ForTaxPurposes")]
        public YesNoList ForTaxPurposes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForTaxPurposes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForTaxPurposesSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason offset account funds access type is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason offset account funds access type is important to the applicant cannot " +
            "be captured in the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedraw", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedraw
    {
        
        /// <summary>
        /// <para>The reason redraw funds access type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason redraw funds access type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedrawReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedrawReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesFundsAccessTypeDetailsRedrawReason
    {
        
        /// <summary>
        /// <para>Details of the other reason redraw funds access type is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason redraw funds access type is important to the applican" +
            "t.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Redraw funds access type is important to the applicant for flexibility to access prepaid funds if needed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Redraw funds access type is important to the applicant for flexibility to access " +
            "prepaid funds if needed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FlexibilityToAccessPrepaidFundsIfNeeded")]
        public YesNoList FlexibilityToAccessPrepaidFundsIfNeeded { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlexibilityToAccessPrepaidFundsIfNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlexibilityToAccessPrepaidFundsIfNeededSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason redraw funds access type is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason redraw funds access type is important to the applicant cannot be captu" +
            "red in the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetails
    {
        
        /// <summary>
        /// <para>The applicant's preferences for a fixed and variable rate loan (i.e split loan).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for a fixed and variable rate loan (i.e split loan).")]
        [System.Xml.Serialization.XmlElementAttribute("FixedAndVariableRate")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRate FixedAndVariableRate { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for a fixed rate loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for a fixed rate loan.")]
        [System.Xml.Serialization.XmlElementAttribute("FixedRate")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRate FixedRate { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for a variable rate loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for a variable rate loan.")]
        [System.Xml.Serialization.XmlElementAttribute("VariableRate")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRate VariableRate { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRate" +
        "", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRate
    {
        
        /// <summary>
        /// <para>The preferred duration of the fixed rate period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred duration of the fixed rate period.")]
        [System.Xml.Serialization.XmlElementAttribute("FixedPeriodDuration")]
        public DurationType FixedPeriodDuration { get; set; }
        
        /// <summary>
        /// <para>The reason fixed and variable rate is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason fixed and variable rate is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRateReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRate" +
        "Reason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedAndVariableRateReason
    {
        
        /// <summary>
        /// <para>Details of the other reason fixed and variable rate is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason fixed and variable rate is important to the applicant" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Fixed and variable rate is important to the applicant to retain a degree of flexibility in relation to increased repayments, redraws and/or early repayment of part of the loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed and variable rate is important to the applicant to retain a degree of flexi" +
            "bility in relation to increased repayments, redraws and/or early repayment of pa" +
            "rt of the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Flexibility")]
        public YesNoList Flexibility { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Flexibility property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlexibilitySpecified { get; set; }
        
        /// <summary>
        /// <para>Fixed and variable rate is important to the applicant to limit risk of increasing variable interest rate to obtain some benefit from potential future decreases in the interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed and variable rate is important to the applicant to limit risk of increasing" +
            " variable interest rate to obtain some benefit from potential future decreases i" +
            "n the interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LimitingRateIncreaseRisk")]
        public YesNoList LimitingRateIncreaseRisk { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LimitingRateIncreaseRisk property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitingRateIncreaseRiskSpecified { get; set; }
        
        /// <summary>
        /// <para>Fixed and variable rate is important to the applicant to make budgeting easier than if the entire loan were variable.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed and variable rate is important to the applicant to make budgeting easier th" +
            "an if the entire loan were variable.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MakeBudgetingEasier")]
        public YesNoList MakeBudgetingEasier { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MakeBudgetingEasier property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MakeBudgetingEasierSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason fixed and variable rate is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason fixed and variable rate is important to the applicant cannot be captur" +
            "ed in the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRate
    {
        
        /// <summary>
        /// <para>The preferred duration of the fixed rate period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred duration of the fixed rate period.")]
        [System.Xml.Serialization.XmlElementAttribute("FixedPeriodDuration")]
        public DurationType FixedPeriodDuration { get; set; }
        
        /// <summary>
        /// <para>The reason fixed rate is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason fixed rate is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRateReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRateReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsFixedRateReason
    {
        
        /// <summary>
        /// <para>Fixed rate is important to the applicant to avoid risk of increasing variable interest rate during fixed interest period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed rate is important to the applicant to avoid risk of increasing variable int" +
            "erest rate during fixed interest period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AvoidingRateIncreaseRisk")]
        public YesNoList AvoidingRateIncreaseRisk { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvoidingRateIncreaseRisk property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvoidingRateIncreaseRiskSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason fixed rate is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason fixed rate is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Fixed rate is important to the applicant to make budgeting easier.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fixed rate is important to the applicant to make budgeting easier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MakeBudgetingEasier")]
        public YesNoList MakeBudgetingEasier { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MakeBudgetingEasier property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MakeBudgetingEasierSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason fixed rate is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason fixed rate is important to the applicant cannot be captured in the spe" +
            "cific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRate
    {
        
        /// <summary>
        /// <para>The reason variable rate is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason variable rate is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRateReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRateReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesInterestRateTypeDetailsVariableRateReason
    {
        
        /// <summary>
        /// <para>Details of the other reason variable rate is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason variable rate is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Variable rate is important to the applicant to retain flexibility with respect to repayment, redraw and/or early repayment of loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Variable rate is important to the applicant to retain flexibility with respect to" +
            " repayment, redraw and/or early repayment of loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Flexibility")]
        public YesNoList Flexibility { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Flexibility property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlexibilitySpecified { get; set; }
        
        /// <summary>
        /// <para>The reason variable rate is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason variable rate is important to the applicant cannot be captured in the " +
            "specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>Variable rate is important to the applicant to take advantage of potential future decreases in the interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Variable rate is important to the applicant to take advantage of potential future" +
            " decreases in the interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PotentialRateDecreases")]
        public YesNoList PotentialRateDecreases { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PotentialRateDecreases property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PotentialRateDecreasesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetails
    {
        
        /// <summary>
        /// <para>The applicant's preferences for interest in advance repayment type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for interest in advance repayment type.")]
        [System.Xml.Serialization.XmlElementAttribute("InterestInAdvance")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvance InterestInAdvance { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for interest only repayment type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for interest only repayment type.")]
        [System.Xml.Serialization.XmlElementAttribute("InterestOnly")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnly InterestOnly { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for line of credit repayment type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for line of credit repayment type.")]
        [System.Xml.Serialization.XmlElementAttribute("LineOfCredit")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCredit LineOfCredit { get; set; }
        
        /// <summary>
        /// <para>The applicant's preferences for principal and interest repayment type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s preferences for principal and interest repayment type.")]
        [System.Xml.Serialization.XmlElementAttribute("PrincipalAndInterest")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterest PrincipalAndInterest { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvance", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvance
    {
        
        /// <summary>
        /// <para>The reason interest in advance repayment type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest in advance repayment type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvanceReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvanceReason" +
        "", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestInAdvanceReason
    {
        
        /// <summary>
        /// <para>Details of the other reason interest in advance is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason interest in advance is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Interest in advance is important to the applicant for discounts on interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest in advance is important to the applicant for discounts on interest rate." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("DiscountsOnInterestRate")]
        public YesNoList DiscountsOnInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DiscountsOnInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountsOnInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest in advance is important to the applicant for tax purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest in advance is important to the applicant for tax purposes.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ForTaxPurposes")]
        public YesNoList ForTaxPurposes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForTaxPurposes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForTaxPurposesSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason interest in advance is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest in advance is important to the applicant cannot be captured i" +
            "n the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest in advance is important to the applicant to assist with cash flow and budgeting.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest in advance is important to the applicant to assist with cash flow and bu" +
            "dgeting.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ToAssistWithCashFlowAndBudgeting")]
        public YesNoList ToAssistWithCashFlowAndBudgeting { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ToAssistWithCashFlowAndBudgeting property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToAssistWithCashFlowAndBudgetingSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnly", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnly
    {
        
        /// <summary>
        /// <para>The preferred duration of the interest only period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred duration of the interest only period.")]
        [System.Xml.Serialization.XmlElementAttribute("InterestOnlyDuration")]
        public DurationType InterestOnlyDuration { get; set; }
        
        /// <summary>
        /// <para>The reason interest only repayment type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest only repayment type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnlyReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason why the proposed length of the interest only term is appropriate for the customer's needs.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason why the proposed length of the interest only term is appropriate for t" +
            "he customer\'s needs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("InterestOnlyDurationReason")]
        public string InterestOnlyDurationReason { get; set; }
        
        /// <summary>
        /// <para>The preferred repayment frequency.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred repayment frequency.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentFrequency")]
        public FrequencyShortList RepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnlyReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsInterestOnlyReason
    {
        
        /// <summary>
        /// <para>Interest only is important to the applicant to accommodate an anticipated nonrecurring expense item (e.g. education, renovation/construction, furniture).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to accommodate an anticipated nonrecu" +
            "rring expense item (e.g. education, renovation/construction, furniture).")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccommodateAnticipatedNonRecurringExpenseItem")]
        public YesNoList AccommodateAnticipatedNonRecurringExpenseItem { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccommodateAnticipatedNonRecurringExpenseItem property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccommodateAnticipatedNonRecurringExpenseItemSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant to accommodate a temporary reduction in income (e.g. parental leave, changing circumstances).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to accommodate a temporary reduction " +
            "in income (e.g. parental leave, changing circumstances).")]
        [System.Xml.Serialization.XmlAttributeAttribute("AccommodateTemporaryReductionInIncome")]
        public YesNoList AccommodateTemporaryReductionInIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AccommodateTemporaryReductionInIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccommodateTemporaryReductionInIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant to create funds for investment purposes.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to create funds for investment purpos" +
            "es.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreateFundsForInvestmentPurposes")]
        public YesNoList CreateFundsForInvestmentPurposes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreateFundsForInvestmentPurposes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateFundsForInvestmentPurposesSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason interest only is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason interest only is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant to maximise cash flow.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to maximise cash flow.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MaximiseCashFlow")]
        public YesNoList MaximiseCashFlow { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaximiseCashFlow property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximiseCashFlowSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant to minimise cash flow impact during construction.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to minimise cash flow impact during c" +
            "onstruction.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MinimiseCashFlowImpactDuringConstruction")]
        public YesNoList MinimiseCashFlowImpactDuringConstruction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimiseCashFlowImpactDuringConstruction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimiseCashFlowImpactDuringConstructionSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant to minimise cash flow Impact during the bridging period.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant to minimise cash flow Impact during t" +
            "he bridging period.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MinimiseCashFlowImpactDuringTheBridgingPeriod")]
        public YesNoList MinimiseCashFlowImpactDuringTheBridgingPeriod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimiseCashFlowImpactDuringTheBridgingPeriod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimiseCashFlowImpactDuringTheBridgingPeriodSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason interest only is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest only is important to the applicant cannot be captured in the " +
            "specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant because they plan to convert the property to an investment property.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant because they plan to convert the prop" +
            "erty to an investment property.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PlanToConvertToInvestmentProperty")]
        public YesNoList PlanToConvertToInvestmentProperty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanToConvertToInvestmentProperty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanToConvertToInvestmentPropertySpecified { get; set; }
        
        /// <summary>
        /// <para>Interest only is important to the applicant for principal reductions in an offset facility.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Interest only is important to the applicant for principal reductions in an offset" +
            " facility.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PrincipalReductionsInAnOffsetFacility")]
        public YesNoList PrincipalReductionsInAnOffsetFacility { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrincipalReductionsInAnOffsetFacility property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrincipalReductionsInAnOffsetFacilitySpecified { get; set; }
        
        /// <summary>
        /// <para>The reason interest only is important to the applicant is recommendation provided by an independent financial advisor or accountant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest only is important to the applicant is recommendation provided" +
            " by an independent financial advisor or accountant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Recommendation")]
        public YesNoList Recommendation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Recommendation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecommendationSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason interest only is important to the applicant is taxation or accounting reasons (based on financial or tax advice), including: release funds for investment purposes (e.g. shares, investment property, super contributions); priority is paying off nondeductable debts (this loan is for investment purposes); and plan to convert to an investment property in future.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The reason interest only is important to the applicant is taxation or accounting reasons (based on financial or tax advice), including: release funds for investment purposes (e.g. shares, investment property, super contributions); priority is paying off nondeductable debts (this loan is for investment purposes); and plan to convert to an investment property in future.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TaxationOrAccountingReasons")]
        public YesNoList TaxationOrAccountingReasons { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaxationOrAccountingReasons property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxationOrAccountingReasonsSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason interest only is important to the applicant is variable and unpredictable income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason interest only is important to the applicant is variable and unpredicta" +
            "ble income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("VariableAndUnpredictableIncome")]
        public YesNoList VariableAndUnpredictableIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VariableAndUnpredictableIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariableAndUnpredictableIncomeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCredit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCredit
    {
        
        /// <summary>
        /// <para>The reason line of credit repayment type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason line of credit repayment type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditReason Reason { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit at the end of or during the term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit at the end of or during the te" +
            "rm.")]
        [System.Xml.Serialization.XmlElementAttribute("RepaymentPlan")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditRepaymentPlan RepaymentPlan { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditReason
    {
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant to allows access to funds at any time.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant to allows access to f" +
            "unds at any time.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllowsAccessToFundsAtAnyTime")]
        public YesNoList AllowsAccessToFundsAtAnyTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllowsAccessToFundsAtAnyTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowsAccessToFundsAtAnyTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant due to anticipated variable cash flows.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant due to anticipated va" +
            "riable cash flows.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AnticipatedVariableCashFlows")]
        public YesNoList AnticipatedVariableCashFlows { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AnticipatedVariableCashFlows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnticipatedVariableCashFlowsSpecified { get; set; }
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant to assist with investment purchases and tax planning.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant to assist with invest" +
            "ment purchases and tax planning.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssistsWithInvestmentPurchasesAndTaxPlanning")]
        public YesNoList AssistsWithInvestmentPurchasesAndTaxPlanning { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssistsWithInvestmentPurchasesAndTaxPlanning property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssistsWithInvestmentPurchasesAndTaxPlanningSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason interest only is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason interest only is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant for flexibility to manage repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant for flexibility to ma" +
            "nage repayments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FlexibilityToManageRepayments")]
        public YesNoList FlexibilityToManageRepayments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlexibilityToManageRepayments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlexibilityToManageRepaymentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant because there is no need to apply for further lending in future.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant because there is no n" +
            "eed to apply for further lending in future.")]
        [System.Xml.Serialization.XmlAttributeAttribute("NoNeedToApplyForFurtherLendingInFuture")]
        public YesNoList NoNeedToApplyForFurtherLendingInFuture { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoNeedToApplyForFurtherLendingInFuture property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoNeedToApplyForFurtherLendingInFutureSpecified { get; set; }
        
        /// <summary>
        /// <para>Line of credit repayment type is important to the applicant for an ongoing need for funds - planning to make a few purchases over a period of time.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Line of credit repayment type is important to the applicant for an ongoing need f" +
            "or funds - planning to make a few purchases over a period of time.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OngoingNeedForFunds")]
        public YesNoList OngoingNeedForFunds { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OngoingNeedForFunds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OngoingNeedForFundsSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason line of credit repayment type is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason line of credit repayment type is important to the applicant cannot be " +
            "captured in the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditRepaymentPl" +
        "an", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsLineOfCreditRepaymentPlan
    {
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is co-applicant's income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is co-applicant\'s income.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CoApplicantIncome")]
        public YesNoList CoApplicantIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoApplicantIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoApplicantIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason line of credit is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason line of credit is important to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is downsizing.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is downsizing.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Downsizing")]
        public YesNoList Downsizing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Downsizing property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownsizingSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is income from other investments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is income from other investmen" +
            "ts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeFromOtherInvestments")]
        public YesNoList IncomeFromOtherInvestments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeFromOtherInvestments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeFromOtherInvestmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit cannot be captured in the specific data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit cannot be captured in the spec" +
            "ific data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is repayment of loan prior to end of term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is repayment of loan prior to " +
            "end of term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentOfLoanPriorToEndOfTerm")]
        public YesNoList RepaymentOfLoanPriorToEndOfTerm { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentOfLoanPriorToEndOfTerm property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentOfLoanPriorToEndOfTermSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is sale of assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SaleOfAssets")]
        public YesNoList SaleOfAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaleOfAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaleOfAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant's plan for paying off line of credit is savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s plan for paying off line of credit is savings.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Savings")]
        public YesNoList Savings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Savings property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SavingsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterest", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterest
    {
        
        /// <summary>
        /// <para>The reason principal and interest repayment type is important to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason principal and interest repayment type is important to the applicant.")]
        [System.Xml.Serialization.XmlElementAttribute("Reason")]
        public PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterestReason Reason { get; set; }
        
        /// <summary>
        /// <para>The importance of this feature to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The importance of this feature to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Importance")]
        public ImportanceList Importance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Importance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImportanceSpecified { get; set; }
        
        /// <summary>
        /// <para>The preferred repayment frequency.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The preferred repayment frequency.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentFrequency")]
        public FrequencyShortList RepaymentFrequency { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentFrequency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentFrequencySpecified { get; set; }
        
        /// <summary>
        /// <para>The risks of this feature have been explained to the applicant.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The risks of this feature have been explained to the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RisksExplained")]
        public YesNoList RisksExplained { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RisksExplained property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RisksExplainedSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterestRea" +
        "son", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPreferencesRepaymentTypeDetailsPrincipalAndInterestReason
    {
        
        /// <summary>
        /// <para>Principal and interest repayment type is important to the applicant to build up equity from the start.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Principal and interest repayment type is important to the applicant to build up e" +
            "quity from the start.")]
        [System.Xml.Serialization.XmlAttributeAttribute("BuildUpEquityFromTheStart")]
        public YesNoList BuildUpEquityFromTheStart { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildUpEquityFromTheStart property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildUpEquityFromTheStartSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason principal and interest repayment type is important to the applicant.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason principal and interest repayment type is important to" +
            " the applicant.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Principal and interest repayment type is important to the applicant for a higher lending limit.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Principal and interest repayment type is important to the applicant for a higher " +
            "lending limit.")]
        [System.Xml.Serialization.XmlAttributeAttribute("HigherLendingLimit")]
        public YesNoList HigherLendingLimit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HigherLendingLimit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HigherLendingLimitSpecified { get; set; }
        
        /// <summary>
        /// <para>Principal and interest repayment type is important to the applicant for a lower deposit required.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Principal and interest repayment type is important to the applicant for a lower d" +
            "eposit required.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LowerDepositRequired")]
        public YesNoList LowerDepositRequired { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LowerDepositRequired property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowerDepositRequiredSpecified { get; set; }
        
        /// <summary>
        /// <para>Principal and interest repayment type is important to the applicant to minimise interest paid over life of loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Principal and interest repayment type is important to the applicant to minimise i" +
            "nterest paid over life of loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("MinimiseInterestPaidOverLifeOfLoan")]
        public YesNoList MinimiseInterestPaidOverLifeOfLoan { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimiseInterestPaidOverLifeOfLoan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimiseInterestPaidOverLifeOfLoanSpecified { get; set; }
        
        /// <summary>
        /// <para>The reason principal and interest repayment type is important to the applicant cannot be captured in the specific reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason principal and interest repayment type is important to the applicant ca" +
            "nnot be captured in the specific reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisPurposeOfApplication", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisPurposeOfApplication
    {
        
        /// <summary>
        /// <para>The monetary amount the customer has requested for the stated purpose.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The monetary amount the customer has requested for the stated purpose.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Amount")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Amount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The description of the purpose the associated monetary amount is intended to be used for.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The description of the purpose the associated monetary amount is intended to be u" +
            "sed for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The purpose the associated monetary amount is intended to be used for.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The purpose the associated monetary amount is intended to be used for.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Purpose")]
        public PurposeOfApplicationList Purpose { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Purpose property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PurposeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRefinancingAndConsolidation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRefinancingAndConsolidation
    {
        
        /// <summary>
        /// <para>The reason for wanting to refinance the existing loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for wanting to refinance the existing loan.")]
        [System.Xml.Serialization.XmlElementAttribute("RefinancingReason")]
        public PackageContentNeedsAnalysisRefinancingAndConsolidationRefinancingReason RefinancingReason { get; set; }
        
        /// <summary>
        /// <para>Details of plans to close or reduce limits of existing credit cards.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of plans to close or reduce limits of existing credit cards.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DetailsOfCreditCardPlan")]
        public string DetailsOfCreditCardPlan { get; set; }
        
        /// <summary>
        /// <para>The broker has discussed with the applicant(s) that they may end up paying more interest, particularly if the applicant(s) incurs further credit card, personal loan or car loan debt after consolidating existing debts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The broker has discussed with the applicant(s) that they may end up paying more i" +
            "nterest, particularly if the applicant(s) incurs further credit card, personal l" +
            "oan or car loan debt after consolidating existing debts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExplainedIncreaseInterestRisk")]
        public YesNoList ExplainedIncreaseInterestRisk { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExplainedIncreaseInterestRisk property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExplainedIncreaseInterestRiskSpecified { get; set; }
        
        /// <summary>
        /// <para>The broker has confirmed the applicant(s) understands that an increase in the term of the loan may cause the applicant(s) to pay more interest and mean the applicant(s)'s equity in the property builds up at a slower rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The broker has confirmed the applicant(s) understands that an increase in the ter" +
            "m of the loan may cause the applicant(s) to pay more interest and mean the appli" +
            "cant(s)\'s equity in the property builds up at a slower rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExplainedIncreaseLoanTermRisk")]
        public YesNoList ExplainedIncreaseLoanTermRisk { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExplainedIncreaseLoanTermRisk property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExplainedIncreaseLoanTermRiskSpecified { get; set; }
        
        /// <summary>
        /// <para>Existing credit card limits will be reduced or cancelled.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Existing credit card limits will be reduced or cancelled.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PlanToCloseOrReduceCreditCard")]
        public YesNoList PlanToCloseOrReduceCreditCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanToCloseOrReduceCreditCard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanToCloseOrReduceCreditCardSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRefinancingAndConsolidationRefinancingReason", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRefinancingAndConsolidationRefinancingReason
    {
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is that the end of current loan term is close.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is that the end of current loan term" +
            " is close.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CloseToEndOfCurrentLoanTerm")]
        public YesNoList CloseToEndOfCurrentLoanTerm { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseToEndOfCurrentLoanTerm property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CloseToEndOfCurrentLoanTermSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of end of current loan term.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of end of current loan term.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CloseToEndOfCurrentLoanTermDetails")]
        public string CloseToEndOfCurrentLoanTermDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is to reduce number of lenders or consolidate debts.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is to reduce number of lenders or co" +
            "nsolidate debts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DebtConsolidation")]
        public YesNoList DebtConsolidation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DebtConsolidation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebtConsolidationSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of reduced number of lenders or consolidated debts.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of reduced number of lenders or consolidated debts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DebtConsolidationDetails")]
        public string DebtConsolidationDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is dissatisfaction with the applicant's current lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is dissatisfaction with the applican" +
            "t\'s current lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DissatisfactionWithCurrentLender")]
        public YesNoList DissatisfactionWithCurrentLender { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DissatisfactionWithCurrentLender property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DissatisfactionWithCurrentLenderSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of dissatisfaction with the applicant's current lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of dissatisfaction with the applicant\'s current lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DissatisfactionWithCurrentLenderDetails")]
        public string DissatisfactionWithCurrentLenderDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is greater flexibility, or extra or specific loan features under the new loan.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is greater flexibility, or extra or " +
            "specific loan features under the new loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GreaterFlexibility")]
        public YesNoList GreaterFlexibility { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GreaterFlexibility property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GreaterFlexibilitySpecified { get; set; }
        
        /// <summary>
        /// <para>Details of greater flexibility, or extra or specific loan features.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of greater flexibility, or extra or specific loan features.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GreaterFlexibilityDetails")]
        public string GreaterFlexibilityDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is to increase the total loan amount.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is to increase the total loan amount" +
            ".")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncreaseTotalLoanAmount")]
        public YesNoList IncreaseTotalLoanAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncreaseTotalLoanAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncreaseTotalLoanAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the increase to the total loan amount.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the increase to the total loan amount.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncreaseTotalLoanAmountDetails")]
        public string IncreaseTotalLoanAmountDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is to lower the interest rate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is to lower the interest rate.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LowerInterestRate")]
        public YesNoList LowerInterestRate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LowerInterestRate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LowerInterestRateSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of current and anticipated interest rates under the existing loan.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of current and anticipated interest rates under the existing loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LowerInterestRateDetails")]
        public string LowerInterestRateDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan cannot be captured in the specific refinancing reason data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan cannot be captured in the specific r" +
            "efinancing reason data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other reason for refinancing the existing loan.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other reason for refinancing the existing loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherDetails")]
        public string OtherDetails { get; set; }
        
        /// <summary>
        /// <para>The reason for refinancing the existing loan is to reduce repayments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason for refinancing the existing loan is to reduce repayments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ReducedRepayments")]
        public YesNoList ReducedRepayments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReducedRepayments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReducedRepaymentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of current and anticipated repayments under the existing loan.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of current and anticipated repayments under the existing loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ReducedRepaymentsDetails")]
        public string ReducedRepaymentsDetails { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicant> _applicant;
        
        /// <summary>
        /// <para>An applicant to which these retirement details apply.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An applicant to which these retirement details apply.")]
        [System.Xml.Serialization.XmlElementAttribute("Applicant")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicant> Applicant
        {
            get
            {
                return this._applicant;
            }
            set
            {
                this._applicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Applicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantSpecified
        {
            get
            {
                return (this.Applicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisRetirementDetails" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisRetirementDetails()
        {
            this._applicant = new System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicant>();
        }
        
        /// <summary>
        /// <para>The repayment options with which the applicant intends to meet the loan repayments if they plan to retire during the proposed loan term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment options with which the applicant intends to meet the loan repayment" +
            "s if they plan to retire during the proposed loan term.")]
        [System.Xml.Serialization.XmlElementAttribute("RepaymentOptions")]
        public PackageContentNeedsAnalysisRetirementDetailsRepaymentOptions RepaymentOptions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicant
    {
        
        /// <summary>
        /// <para>The repayment options with which the applicant intends to meet the loan repayments if they plan to retire during the proposed loan term.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment options with which the applicant intends to meet the loan repayment" +
            "s if they plan to retire during the proposed loan term.")]
        [System.Xml.Serialization.XmlElementAttribute("RepaymentOptions")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptions RepaymentOptions { get; set; }
        
        /// <summary>
        /// <para>The applicant's age at the end of the loan.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant\'s age at the end of the loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AgeAtEndOfLoan")]
        public string AgeAtEndOfLoan { get; set; }
        
        /// <summary>
        /// <para>The applicant will be retiring imminently. Refers to an applicant who is over a certain age or X number of years from retirement. Each lender can have different age/retirement years limits based on internal policy.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant will be retiring imminently. Refers to an applicant who is over a c" +
            "ertain age or X number of years from retirement. Each lender can have different " +
            "age/retirement years limits based on internal policy.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ImminentlyRetiring")]
        public YesNoList ImminentlyRetiring { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ImminentlyRetiring property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImminentlyRetiringSpecified { get; set; }
        
        /// <summary>
        /// <para>The age at which the applicant is planning to retire.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The age at which the applicant is planning to retire.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntendedRetirementAge")]
        public string IntendedRetirementAge { get; set; }
        
        /// <summary>
        /// <para>Details of the intended retirement age e.g. the reason why the intended retirement age is greater than the normal retirement age.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the intended retirement age e.g. the reason why the intended retiremen" +
            "t age is greater than the normal retirement age.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IntendedRetirementAgeDetails")]
        public string IntendedRetirementAgeDetails { get; set; }
        
        /// <summary>
        /// <para>The name of the applicant, to be used to identify the applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the applicant, to be used to identify the applicant when the applicat" +
            "ion has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the applicant when the application has not yet been created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant number (e.g. Applicant 1, Applicant 2) to be used to identify the a" +
            "pplicant when the application has not yet been created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>The broker has confirmed the applicant understands that if the term of the loan extends past their planned retirement age it may impact their retirement plans.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The broker has confirmed the applicant understands that if the term of the loan e" +
            "xtends past their planned retirement age it may impact their retirement plans.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UnderstandsImpactOnRetirementPlans")]
        public YesNoList UnderstandsImpactOnRetirementPlans { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnderstandsImpactOnRetirementPlans property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnderstandsImpactOnRetirementPlansSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A cross reference to the applicant (a Person Applicant element)</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the applicant (a Person Applicant element)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptions
    {
        
        /// <summary>
        /// <para>Co applicant income details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Co applicant income details.")]
        [System.Xml.Serialization.XmlElementAttribute("CoApplicantIncomeDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetails CoApplicantIncomeDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the applicant's plan to downsize their home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the applicant\'s plan to downsize their home.")]
        [System.Xml.Serialization.XmlElementAttribute("DownsizingHomeDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetails DownsizingHomeDetails { get; set; }
        
        /// <summary>
        /// <para>Details of financial assets compared to total liabilities.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of financial assets compared to total liabilities.")]
        [System.Xml.Serialization.XmlElementAttribute("LenderAcceptableAssetsDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetails LenderAcceptableAssetsDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the recurring income from superannuation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the recurring income from superannuation.")]
        [System.Xml.Serialization.XmlElementAttribute("RecurringIncomeFromSuperannuationDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsRecurringIncomeFromSuperannuationDetails RecurringIncomeFromSuperannuationDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the sale of assets.")]
        [System.Xml.Serialization.XmlElementAttribute("SaleOfAssetsDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSaleOfAssetsDetails SaleOfAssetsDetails { get; set; }
        
        /// <summary>
        /// <para>Information regarding the savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the savings.")]
        [System.Xml.Serialization.XmlElementAttribute("SavingsDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSavingsDetails SavingsDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the superannuation lump sum following retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the superannuation lump sum following retirement.")]
        [System.Xml.Serialization.XmlElementAttribute("SuperannuationLumpSumFollowingRetirementDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSuperannuationLumpSumFollowingRetirementDetails SuperannuationLumpSumFollowingRetirementDetails { get; set; }
        
        /// <summary>
        /// <para>The applicant has considered all exit strategy options.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant has considered all exit strategy options.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllRepaymentStrategiesConsidered")]
        public YesNoList AllRepaymentStrategiesConsidered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AllRepaymentStrategiesConsidered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllRepaymentStrategiesConsideredSpecified { get; set; }
        
        /// <summary>
        /// <para>A description to support the applicant's choice of exit strategy.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A description to support the applicant\'s choice of exit strategy.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AllRepaymentStrategiesConsideredDescription")]
        public string AllRepaymentStrategiesConsideredDescription { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with their co-applicant's income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with their co-applicant\'s incom" +
            "e.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CoApplicantIncome")]
        public YesNoList CoApplicantIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoApplicantIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoApplicantIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other repayment option.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other repayment option.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments by downsizing their home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments by downsizing their home.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DownsizingHome")]
        public YesNoList DownsizingHome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DownsizingHome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownsizingHomeSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with income from other investments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with income from other investme" +
            "nts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeFromOtherInvestments")]
        public YesNoList IncomeFromOtherInvestments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeFromOtherInvestments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeFromOtherInvestmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Financial assets compared to total liabilities.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial assets compared to total liabilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderAcceptableAssets")]
        public YesNoList LenderAcceptableAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderAcceptableAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderAcceptableAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants plan to meet the loan repayments cannot be captured in the specific repayment options data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants plan to meet the loan repayments cannot be captured in the specifi" +
            "c repayment options data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with recurring income from superannuation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with recurring income from supe" +
            "rannuation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RecurringIncomeFromSuperannuation")]
        public YesNoList RecurringIncomeFromSuperannuation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecurringIncomeFromSuperannuation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecurringIncomeFromSuperannuationSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to repay the loan prior to retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to repay the loan prior to retirement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentOfLoanPriorToRetirement")]
        public YesNoList RepaymentOfLoanPriorToRetirement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentOfLoanPriorToRetirement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentOfLoanPriorToRetirementSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments by sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments by sale of assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SaleOfAssets")]
        public YesNoList SaleOfAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaleOfAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaleOfAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with their savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with their savings.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Savings")]
        public YesNoList Savings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Savings property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SavingsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with a superannuation lump sum following retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with a superannuation lump sum " +
            "following retirement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationLumpSumFollowingRetirement")]
        public YesNoList SuperannuationLumpSumFollowingRetirement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationLumpSumFollowingRetirement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationLumpSumFollowingRetirementSpecified { get; set; }
        
        /// <summary>
        /// <para>Total dollar value of all existing an new liabilities.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total dollar value of all existing an new liabilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalLiability")]
        public decimal TotalLiability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLiability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalLiabilitySpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant plan to work past the statutory retirement age.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant plan to work past the statutory retirement age.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkPastStatutoryRetirementAge")]
        public YesNoList WorkPastStatutoryRetirementAge { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPastStatutoryRetirementAge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkPastStatutoryRetirementAgeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantI" +
        "ncomeDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetailsCoApplicant> _coApplicant;
        
        /// <summary>
        /// <para>Details of the co applicant that would pay the loan monthly expense in the event that the applicant is not able to do.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the co applicant that would pay the loan monthly expense in the event " +
            "that the applicant is not able to do.")]
        [System.Xml.Serialization.XmlElementAttribute("CoApplicant")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetailsCoApplicant> CoApplicant
        {
            get
            {
                return this._coApplicant;
            }
            set
            {
                this._coApplicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the CoApplicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoApplicantSpecified
        {
            get
            {
                return (this.CoApplicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetails" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetails()
        {
            this._coApplicant = new System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetailsCoApplicant>();
        }
        
        /// <summary>
        /// <para>Co applicant income details description.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Co applicant income details description.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantI" +
        "ncomeDetailsCoApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsCoApplicantIncomeDetailsCoApplicant
    {
        
        /// <summary>
        /// <para>A cross reference to the co applicant that can pay some or all of the loan monthly expense in the event that the applicant is not able to do.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the co applicant that can pay some or all of the loan monthl" +
            "y expense in the event that the applicant is not able to do.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHo" +
        "meDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsAcceptableAsset> _acceptableAsset;
        
        /// <summary>
        /// <para>An asset accepted by the lender to cover the equity shortfall.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An asset accepted by the lender to cover the equity shortfall.")]
        [System.Xml.Serialization.XmlElementAttribute("AcceptableAsset")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsAcceptableAsset> AcceptableAsset
        {
            get
            {
                return this._acceptableAsset;
            }
            set
            {
                this._acceptableAsset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the AcceptableAsset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptableAssetSpecified
        {
            get
            {
                return (this.AcceptableAsset.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetails" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetails()
        {
            this._acceptableAsset = new System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsAcceptableAsset>();
            this._propertyToSell = new System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsPropertyToSell>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsPropertyToSell> _propertyToSell;
        
        /// <summary>
        /// <para>A property that will be sold by the applicant in order to downsize.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A property that will be sold by the applicant in order to downsize.")]
        [System.Xml.Serialization.XmlElementAttribute("PropertyToSell")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsPropertyToSell> PropertyToSell
        {
            get
            {
                return this._propertyToSell;
            }
            set
            {
                this._propertyToSell = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PropertyToSell collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertyToSellSpecified
        {
            get
            {
                return (this.PropertyToSell.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The total estimated value of assets that could be used to cover the equity shortfall.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total estimated value of assets that could be used to cover the equity shortf" +
            "all.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AcceptableAssetTotalValue")]
        public decimal AcceptableAssetTotalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AcceptableAssetTotalValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptableAssetTotalValueSpecified { get; set; }
        
        /// <summary>
        /// <para>The total value of acceptable assets divided by the shortfall.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total value of acceptable assets divided by the shortfall.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssetsToEquityShortfallRatio")]
        public decimal AssetsToEquityShortfallRatio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssetsToEquityShortfallRatio property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetsToEquityShortfallRatioSpecified { get; set; }
        
        /// <summary>
        /// <para>The total equity available to the applicant. The total outstanding balance of all liabilities owed by the applicant subtracted from estimated value of all properties being sold.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total equity available to the applicant. The total outstanding balance of all" +
            " liabilities owed by the applicant subtracted from estimated value of all proper" +
            "ties being sold.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AvailableEquity")]
        public decimal AvailableEquity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvailableEquity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvailableEquitySpecified { get; set; }
        
        /// <summary>
        /// <para>A general description the applicant's plan to downsize their home.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A general description the applicant\'s plan to downsize their home.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The estimated value of the property or properties being purchased by the applicant in order to downsize.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The estimated value of the property or properties being purchased by the applican" +
            "t in order to downsize.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DownsizeToPropertyValue")]
        public decimal DownsizeToPropertyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DownsizeToPropertyValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownsizeToPropertyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>The dollar amount that the equity falls short of covering the cost of the new property.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The dollar amount that the equity falls short of covering the cost of the new pro" +
            "perty.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EquityShortfallAmount")]
        public decimal EquityShortfallAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EquityShortfallAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquityShortfallAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>The total value of all properties that will be sold by the applicant in order to downsize.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The total value of all properties that will be sold by the applicant in order to " +
            "downsize.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PropertyToSellTotalValue")]
        public decimal PropertyToSellTotalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropertyToSellTotalValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertyToSellTotalValueSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHo" +
        "meDetailsAcceptableAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsAcceptableAsset
    {
        
        /// <summary>
        /// <para>A cross reference to the real or non-real estate assets that is an acceptable asset by the lender to cover equity shortfall.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the real or non-real estate assets that is an acceptable ass" +
            "et by the lender to cover equity shortfall.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Asset")]
        public string X_Asset { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHo" +
        "meDetailsPropertyToSell", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsDownsizingHomeDetailsPropertyToSell
    {
        
        /// <summary>
        /// <para>A cross reference to the property that will be sold.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the property that will be sold.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Property")]
        public string X_Property { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAccept" +
        "ableAssetsDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetails
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetailsAsset> _asset;
        
        /// <summary>
        /// <para>Real estate and non real estate assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Real estate and non real estate assets.")]
        [System.Xml.Serialization.XmlElementAttribute("Asset")]
        public System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetailsAsset> Asset
        {
            get
            {
                return this._asset;
            }
            set
            {
                this._asset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Asset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssetSpecified
        {
            get
            {
                return (this.Asset.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetails" /> class.</para>
        /// </summary>
        public PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetails()
        {
            this._asset = new System.Collections.Generic.List<PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetailsAsset>();
        }
        
        /// <summary>
        /// <para>Additional explanation or comment.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Additional explanation or comment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Total dollar value of all assets.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total dollar value of all assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalLenderAcceptableAssetsAmount")]
        public decimal TotalLenderAcceptableAssetsAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLenderAcceptableAssetsAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalLenderAcceptableAssetsAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Ratio Of Assets To Total Liability.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ratio Of Assets To Total Liability.")]
        [System.Xml.Serialization.XmlAttributeAttribute("TotalLenderAcceptableAssetsAmountToTotalLiabilityRatio")]
        public decimal TotalLenderAcceptableAssetsAmountToTotalLiabilityRatio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalLenderAcceptableAssetsAmountToTotalLiabilityRatio property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalLenderAcceptableAssetsAmountToTotalLiabilityRatioSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAccept" +
        "ableAssetsDetailsAsset", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsLenderAcceptableAssetsDetailsAsset
    {
        
        /// <summary>
        /// <para>Asset that will be used to payoff existing or new liabilities.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Asset that will be used to payoff existing or new liabilities.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Asset")]
        public string X_Asset { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsRecurringInc" +
        "omeFromSuperannuationDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsRecurringIncomeFromSuperannuationDetails
    {
        
        /// <summary>
        /// <para>Financial planner documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial planner documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentation")]
        public YesNoList FinancialPlannerDocumentation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialPlannerDocumentation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialPlannerDocumentationSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the financial planner documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the financial planner documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentationDescription")]
        public string FinancialPlannerDocumentationDescription { get; set; }
        
        /// <summary>
        /// <para>A super statement showing projected recurring income documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A super statement showing projected recurring income documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedRecurringIncome")]
        public YesNoList SuperStatementShowingProjectedRecurringIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperStatementShowingProjectedRecurringIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperStatementShowingProjectedRecurringIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the super statement showing projected recurring income documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the super statement showing projected recurring income documenta" +
            "tion.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedRecurringIncomeDescription")]
        public string SuperStatementShowingProjectedRecurringIncomeDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSaleOfAssets" +
        "Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSaleOfAssetsDetails
    {
        
        /// <summary>
        /// <para>The asset is a security held by the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurity")]
        public YesNoList LenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details regarding the security asset held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details regarding the security asset held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurityDescription")]
        public string LenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>The sale of assets refers to sale of other assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The sale of assets refers to sale of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssets")]
        public YesNoList OtherAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the sales of other assets.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the sales of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssetsDescription")]
        public string OtherAssetsDescription { get; set; }
        
        /// <summary>
        /// <para>The asset is a security held by the other lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by the other lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurity")]
        public YesNoList OtherLenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the security asset held by the other lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the security asset held by the other lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurityDescription")]
        public string OtherLenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>Specifies if the sale of assets refers to sale of shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the sale of assets refers to sale of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Shares")]
        public YesNoList Shares { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shares property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharesSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the sales of shares.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the sales of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SharesDescription")]
        public string SharesDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSavingsDetai" +
        "ls", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSavingsDetails
    {
        
        /// <summary>
        /// <para>The savings are held in one or more accounts with this lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in one or more accounts with this lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccount")]
        public YesNoList LenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the accounts held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the accounts held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccountDescription")]
        public string LenderHeldSavingsAccountDescription { get; set; }
        
        /// <summary>
        /// <para>The savings are held in one or more accounts with another financial institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in one or more accounts with another financial institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccount")]
        public YesNoList OtherLenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the accounts held by another financial institution.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the accounts held by another financial institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccountDescription")]
        public string OtherLenderHeldSavingsAccountDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSuperannuati" +
        "onLumpSumFollowingRetirementDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsApplicantRepaymentOptionsSuperannuationLumpSumFollowingRetirementDetails
    {
        
        /// <summary>
        /// <para>Financial planner documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial planner documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentation")]
        public YesNoList FinancialPlannerDocumentation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialPlannerDocumentation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialPlannerDocumentationSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the financial planner documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the financial planner documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentationDescription")]
        public string FinancialPlannerDocumentationDescription { get; set; }
        
        /// <summary>
        /// <para>A super statement showing the projected Superannuation amount is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A super statement showing the projected Superannuation amount is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedSuperannuationAmount")]
        public YesNoList SuperStatementShowingProjectedSuperannuationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperStatementShowingProjectedSuperannuationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperStatementShowingProjectedSuperannuationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the super statement showing the projected Superannuation amount.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the super statement showing the projected Superannuation amount." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedSuperannuationAmountDescription")]
        public string SuperStatementShowingProjectedSuperannuationAmountDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsRepaymentOptions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsRepaymentOptions
    {
        
        /// <summary>
        /// <para>Details of the recurring income from superannuation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the recurring income from superannuation.")]
        [System.Xml.Serialization.XmlElementAttribute("RecurringIncomeFromSuperannuationDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsRecurringIncomeFromSuperannuationDetails RecurringIncomeFromSuperannuationDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the sale of assets.")]
        [System.Xml.Serialization.XmlElementAttribute("SaleOfAssetsDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSaleOfAssetsDetails SaleOfAssetsDetails { get; set; }
        
        /// <summary>
        /// <para>Information regarding the savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the savings.")]
        [System.Xml.Serialization.XmlElementAttribute("SavingsDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSavingsDetails SavingsDetails { get; set; }
        
        /// <summary>
        /// <para>Details of the superannuation lump sum following retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the superannuation lump sum following retirement.")]
        [System.Xml.Serialization.XmlElementAttribute("SuperannuationLumpSumFollowingRetirementDetails")]
        public PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSuperannuationLumpSumFollowingRetirementDetails SuperannuationLumpSumFollowingRetirementDetails { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with their co-applicant's income.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with their co-applicant\'s incom" +
            "e.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CoApplicantIncome")]
        public YesNoList CoApplicantIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CoApplicantIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CoApplicantIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Details of the other repayment option.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of the other repayment option.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments by downsizing their home.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments by downsizing their home.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DownsizingHome")]
        public YesNoList DownsizingHome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DownsizingHome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DownsizingHomeSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with income from other investments.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with income from other investme" +
            "nts.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IncomeFromOtherInvestments")]
        public YesNoList IncomeFromOtherInvestments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeFromOtherInvestments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeFromOtherInvestmentsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicants plan to meet the loan repayments cannot be captured in the specific repayment options data fields.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicants plan to meet the loan repayments cannot be captured in the specifi" +
            "c repayment options data fields.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Other")]
        public YesNoList Other { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Other property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with recurring income from superannuation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with recurring income from supe" +
            "rannuation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RecurringIncomeFromSuperannuation")]
        public YesNoList RecurringIncomeFromSuperannuation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecurringIncomeFromSuperannuation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecurringIncomeFromSuperannuationSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to repay the loan prior to retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to repay the loan prior to retirement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RepaymentOfLoanPriorToRetirement")]
        public YesNoList RepaymentOfLoanPriorToRetirement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RepaymentOfLoanPriorToRetirement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepaymentOfLoanPriorToRetirementSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments by sale of assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments by sale of assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SaleOfAssets")]
        public YesNoList SaleOfAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaleOfAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaleOfAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with their savings.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with their savings.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Savings")]
        public YesNoList Savings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Savings property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SavingsSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant intends to meet the loan repayments with a superannuation lump sum following retirement.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant intends to meet the loan repayments with a superannuation lump sum " +
            "following retirement.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperannuationLumpSumFollowingRetirement")]
        public YesNoList SuperannuationLumpSumFollowingRetirement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperannuationLumpSumFollowingRetirement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperannuationLumpSumFollowingRetirementSpecified { get; set; }
        
        /// <summary>
        /// <para>The applicant plan to work past the statutory retirement age.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant plan to work past the statutory retirement age.")]
        [System.Xml.Serialization.XmlAttributeAttribute("WorkPastStatutoryRetirementAge")]
        public YesNoList WorkPastStatutoryRetirementAge { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPastStatutoryRetirementAge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkPastStatutoryRetirementAgeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsRecurringIncomeFromSu" +
        "perannuationDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsRecurringIncomeFromSuperannuationDetails
    {
        
        /// <summary>
        /// <para>Financial planner documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial planner documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentation")]
        public YesNoList FinancialPlannerDocumentation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialPlannerDocumentation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialPlannerDocumentationSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the financial planner documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the financial planner documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentationDescription")]
        public string FinancialPlannerDocumentationDescription { get; set; }
        
        /// <summary>
        /// <para>A super statement showing projected recurring income documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A super statement showing projected recurring income documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedRecurringIncome")]
        public YesNoList SuperStatementShowingProjectedRecurringIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperStatementShowingProjectedRecurringIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperStatementShowingProjectedRecurringIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the super statement showing projected recurring income documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the super statement showing projected recurring income documenta" +
            "tion.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedRecurringIncomeDescription")]
        public string SuperStatementShowingProjectedRecurringIncomeDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSaleOfAssetsDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSaleOfAssetsDetails
    {
        
        /// <summary>
        /// <para>The asset is a security held by the lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurity")]
        public YesNoList LenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details regarding the security asset held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details regarding the security asset held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSecurityDescription")]
        public string LenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>The sale of assets refers to sale of other assets.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The sale of assets refers to sale of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssets")]
        public YesNoList OtherAssets { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherAssets property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherAssetsSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the sales of other assets.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the sales of other assets.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherAssetsDescription")]
        public string OtherAssetsDescription { get; set; }
        
        /// <summary>
        /// <para>This items has been marked for deprecation. Please use OtherLenderHeldSecurity instead.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This items has been marked for deprecation. Please use OtherLenderHeldSecurity in" +
            "stead.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldProperty")]
        public YesNoList OtherLenderHeldProperty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldProperty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldPropertySpecified { get; set; }
        
        /// <summary>
        /// <para>This items has been marked for deprecation. Please use OtherLenderHeldSecurityDescription instead.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This items has been marked for deprecation. Please use OtherLenderHeldSecurityDes" +
            "cription instead.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldPropertyDescription")]
        public string OtherLenderHeldPropertyDescription { get; set; }
        
        /// <summary>
        /// <para>The asset is a security held by the other lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The asset is a security held by the other lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurity")]
        public YesNoList OtherLenderHeldSecurity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSecurity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSecuritySpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the security asset held by the other lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the security asset held by the other lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSecurityDescription")]
        public string OtherLenderHeldSecurityDescription { get; set; }
        
        /// <summary>
        /// <para>Specifies if the sale of assets refers to sale of shares.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Specifies if the sale of assets refers to sale of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Shares")]
        public YesNoList Shares { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shares property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharesSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the sales of shares.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the sales of shares.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SharesDescription")]
        public string SharesDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSavingsDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSavingsDetails
    {
        
        /// <summary>
        /// <para>The savings are held in one or more accounts with this lender.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in one or more accounts with this lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccount")]
        public YesNoList LenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the accounts held by the lender.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the accounts held by the lender.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LenderHeldSavingsAccountDescription")]
        public string LenderHeldSavingsAccountDescription { get; set; }
        
        /// <summary>
        /// <para>The savings are held in one or more accounts with another financial institution.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The savings are held in one or more accounts with another financial institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccount")]
        public YesNoList OtherLenderHeldSavingsAccount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherLenderHeldSavingsAccount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherLenderHeldSavingsAccountSpecified { get; set; }
        
        /// <summary>
        /// <para>Information regarding the accounts held by another financial institution.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the accounts held by another financial institution.")]
        [System.Xml.Serialization.XmlAttributeAttribute("OtherLenderHeldSavingsAccountDescription")]
        public string OtherLenderHeldSavingsAccountDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSuperannuationLumpSum" +
        "FollowingRetirementDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentNeedsAnalysisRetirementDetailsRepaymentOptionsSuperannuationLumpSumFollowingRetirementDetails
    {
        
        /// <summary>
        /// <para>Financial planner documentation is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Financial planner documentation is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentation")]
        public YesNoList FinancialPlannerDocumentation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FinancialPlannerDocumentation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinancialPlannerDocumentationSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the financial planner documentation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the financial planner documentation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("FinancialPlannerDocumentationDescription")]
        public string FinancialPlannerDocumentationDescription { get; set; }
        
        /// <summary>
        /// <para>A super statement showing the projected Superannuation amount is present.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A super statement showing the projected Superannuation amount is present.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedSuperannuationAmount")]
        public YesNoList SuperStatementShowingProjectedSuperannuationAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SuperStatementShowingProjectedSuperannuationAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuperStatementShowingProjectedSuperannuationAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>Extra details of the super statement showing the projected Superannuation amount.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Extra details of the super statement showing the projected Superannuation amount." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("SuperStatementShowingProjectedSuperannuationAmountDescription")]
        public string SuperStatementShowingProjectedSuperannuationAmountDescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentStatementOfPosition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentStatementOfPosition
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageContentStatementOfPositionApplicant> _applicant;
        
        /// <summary>
        /// <para>The applicant covered by this Statement of Position.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The applicant covered by this Statement of Position.")]
        [System.Xml.Serialization.XmlElementAttribute("Applicant")]
        public System.Collections.Generic.List<PackageContentStatementOfPositionApplicant> Applicant
        {
            get
            {
                return this._applicant;
            }
            set
            {
                this._applicant = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Applicant collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicantSpecified
        {
            get
            {
                return (this.Applicant.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageContentStatementOfPosition" /> class.</para>
        /// </summary>
        public PackageContentStatementOfPosition()
        {
            this._applicant = new System.Collections.Generic.List<PackageContentStatementOfPositionApplicant>();
        }
        
        /// <summary>
        /// <para>The date of the Statement of Position.</para>
        /// <para>Local type that is based on a restriction of the date xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date of the Statement of Position.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Date", DataType="date")]
        public System.DateTime Date { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates that the Statement of Position has been fully signed.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates that the Statement of Position has been fully signed.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsSigned")]
        public YesNoList IsSigned { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsSigned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSignedSpecified { get; set; }
        
        /// <summary>
        /// <para>The order of this statement of position within the sequence.</para>
        /// <para>An integer is a number that is written without a fractional component. For example, 21, 4, and -2048 are integers; 9.75 and 51/2 are not integers.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The order of this statement of position within the sequence.")]
        [System.Xml.Serialization.XmlAttributeAttribute("SequenceNumber")]
        public string SequenceNumber { get; set; }
        
        /// <summary>
        /// <para>Unique Identifier for this Statement of Position.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unique Identifier for this Statement of Position.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageContentStatementOfPositionApplicant", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageContentStatementOfPositionApplicant
    {
        
        /// <summary>
        /// <para>Link to the applicant covered by this Statement of Position.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Link to the applicant covered by this Statement of Position.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Applicant")]
        public string X_Applicant { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructions
    {
        
        /// <summary>
        /// <para>Submission information or application status updates.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Submission information or application status updates.")]
        [System.Xml.Serialization.XmlElementAttribute("ApplicationInstructions")]
        public PackageInstructionsApplicationInstructions ApplicationInstructions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsErrorInstructions> _errorInstructions;
        
        /// <summary>
        /// <para>Error information.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Error information.")]
        [System.Xml.Serialization.XmlElementAttribute("ErrorInstructions")]
        public System.Collections.Generic.List<PackageInstructionsErrorInstructions> ErrorInstructions
        {
            get
            {
                return this._errorInstructions;
            }
            set
            {
                this._errorInstructions = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ErrorInstructions collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorInstructionsSpecified
        {
            get
            {
                return (this.ErrorInstructions.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructions" /> class.</para>
        /// </summary>
        public PackageInstructions()
        {
            this._errorInstructions = new System.Collections.Generic.List<PackageInstructionsErrorInstructions>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructions
    {
        
        /// <summary>
        /// <para>Submission information related to the application process.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Submission information related to the application process.")]
        [System.Xml.Serialization.XmlElementAttribute("Submit")]
        public PackageInstructionsApplicationInstructionsSubmit Submit { get; set; }
        
        /// <summary>
        /// <para>An update on the status of the application or events that have occurred in the application workflow.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An update on the status of the application or events that have occurred in the ap" +
            "plication workflow.")]
        [System.Xml.Serialization.XmlElementAttribute("Update")]
        public PackageInstructionsApplicationInstructionsUpdate Update { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsSubmit", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsSubmit
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsSubmitCondition> _condition;
        
        /// <summary>
        /// <para>Information provided in response to a request regarding conditions that must be met before the application can be approved.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Information provided in response to a request regarding conditions that must be m" +
            "et before the application can be approved.")]
        [System.Xml.Serialization.XmlElementAttribute("Condition")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsSubmitCondition> Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                this._condition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Condition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructionsApplicationInstructionsSubmit" /> class.</para>
        /// </summary>
        public PackageInstructionsApplicationInstructionsSubmit()
        {
            this._condition = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsSubmitCondition>();
        }
        
        /// <summary>
        /// <para>Indicates the type of assessment.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the type of assessment.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AssessmentType")]
        public AssessmentTypeApplicationInstructionsList AssessmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssessmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssessmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the application being submitted is an account variation.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the application being submitted is an account variation." +
            "")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsAccountVariation")]
        public YesNoList IsAccountVariation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsAccountVariation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAccountVariationSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the application being submitted is a resubmission.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the application being submitted is a resubmission.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsResubmission")]
        public YesNoList IsResubmission { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsResubmission property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsResubmissionSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicate whether the package contains only submission documents for an already submitted application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicate whether the package contains only submission documents for an already su" +
            "bmitted application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsSubmissionDocuments")]
        public YesNoList IsSubmissionDocuments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsSubmissionDocuments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSubmissionDocumentsSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag to indicate whether the submission only contains supporting documents for an already submitted application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate whether the submission only contains supporting documents for an" +
            " already submitted application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("IsSupportingDocuments")]
        public YesNoList IsSupportingDocuments { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsSupportingDocuments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSupportingDocumentsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsSubmitCondition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsSubmitCondition
    {
        
        /// <summary>
        /// <para>A comment associated with the condition response status.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A comment associated with the condition response status.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionResponseDescription")]
        public string ConditionResponseDescription { get; set; }
        
        /// <summary>
        /// <para>Indicates the degree to which the uploading party deems this response will meet the loan condition.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the degree to which the uploading party deems this response will meet t" +
            "he loan condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionResponseStatus")]
        public ConditionResponseStatusList ConditionResponseStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConditionResponseStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionResponseStatusSpecified { get; set; }
        
        /// <summary>
        /// <para>Detailed description of the condition.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Detailed description of the condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanConditionText")]
        public string LoanConditionText { get; set; }
        
        /// <summary>
        /// <para>The unique ID of an attached document that satisfies this condition.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The unique ID of an attached document that satisfies this condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_SupportingDocument")]
        public string X_SupportingDocument { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdate", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdate
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateEvent> _event;
        
        /// <summary>
        /// <para>An event that has occurred during the application workflow.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An event that has occurred during the application workflow.")]
        [System.Xml.Serialization.XmlElementAttribute("Event")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateEvent> Event
        {
            get
            {
                return this._event;
            }
            set
            {
                this._event = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Event collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventSpecified
        {
            get
            {
                return (this.Event.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructionsApplicationInstructionsUpdate" /> class.</para>
        /// </summary>
        public PackageInstructionsApplicationInstructionsUpdate()
        {
            this._event = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateEvent>();
        }
        
        /// <summary>
        /// <para>Contains information about the status that the application has achieved in the application workflow.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains information about the status that the application has achieved in the ap" +
            "plication workflow.")]
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public PackageInstructionsApplicationInstructionsUpdateStatus Status { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateEvent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateEvent
    {
        
        /// <summary>
        /// <para>The date and time at which the event is specified as having occurred.</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the event is specified as having occurred.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateTime", DataType="dateTime")]
        public System.DateTime DateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>A free-text field for the Broker/Lender to provide event specific details.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text field for the Broker/Lender to provide event specific details.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>The standardised name for the event that has occurred during application processing.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The standardised name for the event that has occurred during application processi" +
            "ng.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public EventNameApplicationInstructionsList Name { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateStatus", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateStatus
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusCondition> _condition;
        
        /// <summary>
        /// <para>Conditions that must be met before the application can be approved.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Conditions that must be met before the application can be approved.")]
        [System.Xml.Serialization.XmlElementAttribute("Condition")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusCondition> Condition
        {
            get
            {
                return this._condition;
            }
            set
            {
                this._condition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Condition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructionsApplicationInstructionsUpdateStatus" /> class.</para>
        /// </summary>
        public PackageInstructionsApplicationInstructionsUpdateStatus()
        {
            this._condition = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusCondition>();
            this._declined = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusDeclined>();
            this._preApproved = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusPreApproved>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusDeclined> _declined;
        
        /// <summary>
        /// <para>The reasons the application has been declined.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reasons the application has been declined.")]
        [System.Xml.Serialization.XmlElementAttribute("Declined")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusDeclined> Declined
        {
            get
            {
                return this._declined;
            }
            set
            {
                this._declined = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Declined collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeclinedSpecified
        {
            get
            {
                return (this.Declined.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusPreApproved> _preApproved;
        
        /// <summary>
        /// <para>Application pre approval details.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Application pre approval details.")]
        [System.Xml.Serialization.XmlElementAttribute("PreApproved")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusPreApproved> PreApproved
        {
            get
            {
                return this._preApproved;
            }
            set
            {
                this._preApproved = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PreApproved collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreApprovedSpecified
        {
            get
            {
                return (this.PreApproved.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The date and time at which the application achieved the status.</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the application achieved the status.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DateTime", DataType="dateTime")]
        public System.DateTime DateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>A free-text field for providing details about the Status, such as comments.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text field for providing details about the Status, such as comments.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>The status of the loan application.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The status of the loan application.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public StatusNameApplicationInstructionsList Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateStatusCondition", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateStatusCondition
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusConditionProduct> _product;
        
        /// <summary>
        /// <para>Where a specific financial product (or multiple products, or product set) is conditional upon this requirement being met, the link to the product, products/s or product set can be captured here.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where a specific financial product (or multiple products, or product set) is cond" +
            "itional upon this requirement being met, the link to the product, products/s or " +
            "product set can be captured here.")]
        [System.Xml.Serialization.XmlElementAttribute("Product")]
        public System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusConditionProduct> Product
        {
            get
            {
                return this._product;
            }
            set
            {
                this._product = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Product collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductSpecified
        {
            get
            {
                return (this.Product.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructionsApplicationInstructionsUpdateStatusCondition" /> class.</para>
        /// </summary>
        public PackageInstructionsApplicationInstructionsUpdateStatusCondition()
        {
            this._product = new System.Collections.Generic.List<PackageInstructionsApplicationInstructionsUpdateStatusConditionProduct>();
        }
        
        /// <summary>
        /// <para>Indicates the party responsible for satisfying the condition.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the party responsible for satisfying the condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionOwner")]
        public ConditionOwnerApplicationInstructionsList ConditionOwner { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConditionOwner property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionOwnerSpecified { get; set; }
        
        /// <summary>
        /// <para>Indicates the current status of the condition.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates the current status of the condition.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionStatus")]
        public ConditionStatusApplicationInstructionsList ConditionStatus { get; set; }
        
        /// <summary>
        /// <para>The type of condition.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The type of condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ConditionType")]
        public string ConditionType { get; set; }
        
        /// <summary>
        /// <para>The date and time at which the condition was issued.</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the condition was issued.")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreatedDateTime", DataType="dateTime")]
        public System.DateTime CreatedDateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreatedDateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedDateTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>Flag that indicates whether this condition is satisfied by the provision of a document.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Flag that indicates whether this condition is satisfied by the provision of a doc" +
            "ument.")]
        [System.Xml.Serialization.XmlAttributeAttribute("DocRequirement")]
        public YesNoList DocRequirement { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DocRequirement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocRequirementSpecified { get; set; }
        
        /// <summary>
        /// <para>Detailed description of the condition.E.g. "Privacy Consent form signed by each individual applicant"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Detailed description of the condition.E.g. \"Privacy Consent form signed by each i" +
            "ndividual applicant\"")]
        [System.Xml.Serialization.XmlAttributeAttribute("LoanConditionText")]
        public string LoanConditionText { get; set; }
        
        /// <summary>
        /// <para>The condition must be Satisfied or Waived before the application can enter this stage.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The condition must be Satisfied or Waived before the application can enter this s" +
            "tage.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("PreconditionToStage")]
        public PreConditionToStageApplicationInstructionsList PreconditionToStage { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The date and time at which the condition was last updated.</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the condition was last updated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UpdatedDateTime", DataType="dateTime")]
        public System.DateTime UpdatedDateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UpdatedDateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedDateTimeSpecified { get; set; }
        
        /// <summary>
        /// <para>The unique ID of an attached document that satisfies this condition.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The unique ID of an attached document that satisfies this condition.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_SupportingDocument")]
        public string X_SupportingDocument { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateStatusConditionProduct", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateStatusConditionProduct
    {
        
        /// <summary>
        /// <para>A cross reference to the financial product (or multiple products, or product set) that is conditional upon this requirement being met.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A cross reference to the financial product (or multiple products, or product set)" +
            " that is conditional upon this requirement being met.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_FinancialProduct")]
        public string X_FinancialProduct { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateStatusDeclined", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateStatusDeclined
    {
        
        /// <summary>
        /// <para>The credit reporting body used to provide the credit report/s, where Reason is "Credit History".</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The credit reporting body used to provide the credit report/s, where Reason is \"C" +
            "redit History\".")]
        [System.Xml.Serialization.XmlAttributeAttribute("CreditReportingBody")]
        public CreditReportingBodyList CreditReportingBody { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreditReportingBody property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditReportingBodySpecified { get; set; }
        
        /// <summary>
        /// <para>A free-text field for providing details about the reason why the application has been declined. E.g. when Reason = "Security" the Details would capture the details such as "The property is located in a high density area and it can't be accepted as security"</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"A free-text field for providing details about the reason why the application has been declined. E.g. when Reason = ""Security"" the Details would capture the details such as ""The property is located in a high density area and it can't be accepted as security""")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>The reason why the application has been declined.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The reason why the application has been declined.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Reason")]
        public DeclinedReasonApplicationInstructionsList Reason { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsApplicationInstructionsUpdateStatusPreApproved", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsApplicationInstructionsUpdateStatusPreApproved
    {
        
        /// <summary>
        /// <para>The amount of establishment and government fees to be paid should the applicant proceed to approval and draw down with the pre approved loan.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The amount of establishment and government fees to be paid should the applicant p" +
            "roceed to approval and draw down with the pre approved loan.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstablishmentAndGovernmentFees")]
        public decimal EstablishmentAndGovernmentFees { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstablishmentAndGovernmentFees property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstablishmentAndGovernmentFeesSpecified { get; set; }
        
        /// <summary>
        /// <para>The maximum loan amount estimated by the lender to be supported by the pre approval application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The maximum loan amount estimated by the lender to be supported by the pre approv" +
            "al application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedBorrowingPower")]
        public decimal EstimatedBorrowingPower { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedBorrowingPower property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedBorrowingPowerSpecified { get; set; }
        
        /// <summary>
        /// <para>The repayment amount estimated by the lender when pre approving the application.</para>
        /// <para>Local type that is based on a restriction of the decimal xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The repayment amount estimated by the lender when pre approving the application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedRepaymentAmount")]
        public decimal EstimatedRepaymentAmount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedRepaymentAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedRepaymentAmountSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsErrorInstructions", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsErrorInstructions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageInstructionsErrorInstructionsAnnotation> _annotation;
        
        /// <summary>
        /// <para>Contains the text of the error message. May occur more than once, with message text for each different audience e.g.. layperson, technician.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contains the text of the error message. May occur more than once, with message te" +
            "xt for each different audience e.g.. layperson, technician.")]
        [System.Xml.Serialization.XmlElementAttribute("Annotation")]
        public System.Collections.Generic.List<PackageInstructionsErrorInstructionsAnnotation> Annotation
        {
            get
            {
                return this._annotation;
            }
            set
            {
                this._annotation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Annotation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnnotationSpecified
        {
            get
            {
                return (this.Annotation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageInstructionsErrorInstructions" /> class.</para>
        /// </summary>
        public PackageInstructionsErrorInstructions()
        {
            this._annotation = new System.Collections.Generic.List<PackageInstructionsErrorInstructionsAnnotation>();
        }
        
        /// <summary>
        /// <para>Where Error Type is "Data Error", the technology that was used to generate the error.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where Error Type is \"Data Error\", the technology that was used to generate the er" +
            "ror.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ErrorSource")]
        public ErrorSourceList ErrorSource { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ErrorSource property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorSourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Where Error Type is "Data Error", the version of the technology identified in Error Source that was used to generate the error.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Where Error Type is \"Data Error\", the version of the technology identified in Err" +
            "or Source that was used to generate the error.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ErrorSourceVersion")]
        public string ErrorSourceVersion { get; set; }
        
        /// <summary>
        /// <para>The standardised name for the type of error.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The standardised name for the type of error.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ErrorInstructionsTypeList Type { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>The position in the XML application instance that this message relates to, in the form of an XPath expression.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The position in the XML application instance that this message relates to, in the" +
            " form of an XPath expression.")]
        [System.Xml.Serialization.XmlAttributeAttribute("XPath")]
        public string XPath { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageInstructionsErrorInstructionsAnnotation", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageInstructionsErrorInstructionsAnnotation
    {
        
        /// <summary>
        /// <para>The contents of the error message.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The contents of the error message.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Details")]
        public string Details { get; set; }
        
        /// <summary>
        /// <para>An indication of the intended audience for the message annotation. Can be used by the receiving system to determine the audience for the message e.g. technical versus end user error messages.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An indication of the intended audience for the message annotation. Can be used by" +
            " the receiving system to determine the audience for the message e.g. technical v" +
            "ersus end user error messages.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public AnnotationTypeList Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier.</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier.")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackagePublisher", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackagePublisher
    {
        
        /// <summary>
        /// <para>A phone number for the publisher</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A phone number for the publisher")]
        [System.Xml.Serialization.XmlElementAttribute("PhoneNumber")]
        public PhoneType PhoneNumber { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackagePublisherRelatedSoftware> _relatedSoftware;
        
        /// <summary>
        /// <para>Details of software that takes part in the creation of this message instance but is not the main software that is regarded as the message publisher.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Details of software that takes part in the creation of this message instance but " +
            "is not the main software that is regarded as the message publisher.")]
        [System.Xml.Serialization.XmlElementAttribute("RelatedSoftware")]
        public System.Collections.Generic.List<PackagePublisherRelatedSoftware> RelatedSoftware
        {
            get
            {
                return this._relatedSoftware;
            }
            set
            {
                this._relatedSoftware = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RelatedSoftware collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelatedSoftwareSpecified
        {
            get
            {
                return (this.RelatedSoftware.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackagePublisher" /> class.</para>
        /// </summary>
        public PackagePublisher()
        {
            this._relatedSoftware = new System.Collections.Generic.List<PackagePublisherRelatedSoftware>();
        }
        
        /// <summary>
        /// <para>The software details of the message publisher.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The software details of the message publisher.")]
        [System.Xml.Serialization.XmlElementAttribute("Software")]
        public PackagePublisherSoftware Software { get; set; }
        
        /// <summary>
        /// <para>The company name of the publisher</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The company name of the publisher")]
        [System.Xml.Serialization.XmlAttributeAttribute("CompanyName")]
        public string CompanyName { get; set; }
        
        /// <summary>
        /// <para>Contact person from the publisher</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Contact person from the publisher")]
        [System.Xml.Serialization.XmlAttributeAttribute("ContactName")]
        public string ContactName { get; set; }
        
        /// <summary>
        /// <para>An email address of the publisher contact person</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("An email address of the publisher contact person")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("Email")]
        public string Email { get; set; }
        
        /// <summary>
        /// <para>The LIXI-specified code of the sender/publisher of the Package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The LIXI-specified code of the sender/publisher of the Package.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXICode")]
        public string LIXICode { get; set; }
        
        /// <summary>
        /// <para>The date and time that the XML file was generated.</para>
        /// <para>Local type that is based on a restriction of the dateTime xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the XML file was generated.")]
        [System.Xml.Serialization.XmlAttributeAttribute("PublishedDateTime", DataType="dateTime")]
        public System.DateTime PublishedDateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishedDateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishedDateTimeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackagePublisherRelatedSoftware", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackagePublisherRelatedSoftware
    {
        
        /// <summary>
        /// <para>A free-text description of the related software provider, for example the company name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text description of the related software provider, for example the company" +
            " name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The environment of the related software used by the message publisher.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The environment of the related software used by the message publisher.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Environment")]
        public string Environment { get; set; }
        
        /// <summary>
        /// <para>The LIXI-specified code of the licensee that provides the related software.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The LIXI-specified code of the licensee that provides the related software.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXICode")]
        public string LIXICode { get; set; }
        
        /// <summary>
        /// <para>The name of the related software.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the related software.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Captures the email address to be used by the recipient to advise the sender's technical support contact of any technical problems with the related software.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the email address to be used by the recipient to advise the sender\'s tec" +
            "hnical support contact of any technical problems with the related software.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("TechnicalEmail")]
        public string TechnicalEmail { get; set; }
        
        /// <summary>
        /// <para>The version of the software application.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The version of the software application.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Version")]
        public string Version { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackagePublisherSoftware", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackagePublisherSoftware
    {
        
        /// <summary>
        /// <para>A free-text Description of the software provider, for example the company name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text Description of the software provider, for example the company name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The environment of the software used by the message publisher.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The environment of the software used by the message publisher.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Environment")]
        public string Environment { get; set; }
        
        /// <summary>
        /// <para>The LIXI-specified code of the licensee that provides the Software.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The LIXI-specified code of the licensee that provides the Software.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXICode")]
        public string LIXICode { get; set; }
        
        /// <summary>
        /// <para>The name of the software application used by the message publisher.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the software application used by the message publisher.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para>Captures the email address to be used by the recipient to advise the sender's technical support contact of any technical problems with the application.</para>
        /// <para>Messages distributed by electronic means from one computer user to one or more recipients via a network.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the email address to be used by the recipient to advise the sender\'s tec" +
            "hnical support contact of any technical problems with the application.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlAttributeAttribute("TechnicalEmail")]
        public string TechnicalEmail { get; set; }
        
        /// <summary>
        /// <para>The version of the software application used by the message publisher.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The version of the software application used by the message publisher.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Version")]
        public string Version { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageRecipient", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageRecipient
    {
        
        /// <summary>
        /// <para>The software used by the message recipient.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The software used by the message recipient.")]
        [System.Xml.Serialization.XmlElementAttribute("Software")]
        public PackageRecipientSoftware Software { get; set; }
        
        /// <summary>
        /// <para>A free-text description of the recipient, for example the company name.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A free-text description of the recipient, for example the company name.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>The LIXI-specified code for the licensee that is the intended recipient for the Package.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The LIXI-specified code for the licensee that is the intended recipient for the P" +
            "ackage.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXICode")]
        public string LIXICode { get; set; }
        
        /// <summary>
        /// <para>A recipient-specified code that enables the recipient to route the Package to a specific destination with the organisation.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A recipient-specified code that enables the recipient to route the Package to a s" +
            "pecific destination with the organisation.")]
        [System.Xml.Serialization.XmlAttributeAttribute("RoutingCode")]
        public string RoutingCode { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageRecipientSoftware", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageRecipientSoftware
    {
        
        /// <summary>
        /// <para>The environment of the software used by the message recipient.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The environment of the software used by the message recipient.")]
        [System.Xml.Serialization.XmlAttributeAttribute("Environment")]
        public string Environment { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageSchemaVersion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageSchemaVersion
    {
        
        /// <summary>
        /// <para>A LIXI-provided unique identifier for the 'type' of guidebook (e.g. full doc residential home loan) for the specific guidebook owner.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A LIXI-provided unique identifier for the \'type\' of guidebook (e.g. full doc resi" +
            "dential home loan) for the specific guidebook owner.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GuidebookCode")]
        public string GuidebookCode { get; set; }
        
        /// <summary>
        /// <para>If a message was created using an Electronic Guidebook, this attribute contains the human readable name of that Electronic Guidebook.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If a message was created using an Electronic Guidebook, this attribute contains t" +
            "he human readable name of that Electronic Guidebook.")]
        [System.Xml.Serialization.XmlAttributeAttribute("GuidebookName")]
        public string GuidebookName { get; set; }
        
        /// <summary>
        /// <para>Captures the message recipient (lender, MM, funder, insurer etc) guidebook version number that the application XML was written to conform with, for the specific type of guidebook (guidebook code)</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the message recipient (lender, MM, funder, insurer etc) guidebook versio" +
            "n number that the application XML was written to conform with, for the specific " +
            "type of guidebook (guidebook code)")]
        [System.Xml.Serialization.XmlAttributeAttribute("GuidebookVersion")]
        public string GuidebookVersion { get; set; }
        
        /// <summary>
        /// <para>Each LIXI Schema that is customised by restriction is allocated a Custom Version Identifier. If the XML instance is created from a LIXI Transaction Schema the LIXICustomVersion is optional and should remain empty. If the XML instance is created from a schema that has been Customised by Restriction, this attribute is mandatory and holds the composite identifier constructed from: the LIXI Code of the author organisation; the Customisation Code (jointly defined by LIXI and the customisation author); and the datetimestamp of when the Customised Schema was created.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Each LIXI Schema that is customised by restriction is allocated a Custom Version Identifier. If the XML instance is created from a LIXI Transaction Schema the LIXICustomVersion is optional and should remain empty. If the XML instance is created from a schema that has been Customised by Restriction, this attribute is mandatory and holds the composite identifier constructed from: the LIXI Code of the author organisation; the Customisation Code (jointly defined by LIXI and the customisation author); and the datetimestamp of when the Customised Schema was created.")]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXICustomVersion")]
        public string LIXICustomVersion { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _lIXITransactionType = "CNZ";
        
        /// <summary>
        /// <para>Identifies the transaction type of the schema, for example CAL (for a Credit Application) or DAS (for Documents Preparation and Settlement).</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifies the transaction type of the schema, for example CAL (for a Credit Appl" +
            "ication) or DAS (for Documents Preparation and Settlement).")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXITransactionType")]
        public string LIXITransactionType
        {
            get
            {
                return this._lIXITransactionType;
            }
            set
            {
                this._lIXITransactionType = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _lIXIVersion = "2.1.7";
        
        /// <summary>
        /// <para>Captures the LIXI version number that the application XML was written to conform with.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Captures the LIXI version number that the application XML was written to conform " +
            "with.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LIXIVersion")]
        public string LIXIVersion
        {
            get
            {
                return this._lIXIVersion;
            }
            set
            {
                this._lIXIVersion = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageTransformMetadata", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageTransformMetadata
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<PackageTransformMetadataIdentifier> _identifier;
        
        /// <summary>
        /// <para>Identifier metadata required for enabling round trip transformations from a different data model into a LIXI 2.x message and back again.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identifier metadata required for enabling round trip transformations from a diffe" +
            "rent data model into a LIXI 2.x message and back again.")]
        [System.Xml.Serialization.XmlElementAttribute("Identifier")]
        public System.Collections.Generic.List<PackageTransformMetadataIdentifier> Identifier
        {
            get
            {
                return this._identifier;
            }
            set
            {
                this._identifier = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Identifier collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdentifierSpecified
        {
            get
            {
                return (this.Identifier.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PackageTransformMetadata" /> class.</para>
        /// </summary>
        public PackageTransformMetadata()
        {
            this._identifier = new System.Collections.Generic.List<PackageTransformMetadataIdentifier>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.495.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PackageTransformMetadataIdentifier", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackageTransformMetadataIdentifier
    {
        
        /// <summary>
        /// <para>The name of the attribute in this schema to which this Identifier relates.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The name of the attribute in this schema to which this Identifier relates.")]
        [System.Xml.Serialization.XmlAttributeAttribute("AttributeName")]
        public string AttributeName { get; set; }
        
        /// <summary>
        /// <para>The value of the identifier in the external data model.</para>
        /// <para>Local type that is a restriction of the string xml data type.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The value of the identifier in the external data model.")]
        [System.Xml.Serialization.XmlAttributeAttribute("ExternalID")]
        public string ExternalID { get; set; }
        
        /// <summary>
        /// <para>System assigned unique identifier</para>
        /// <para>Value must be unique within the scope, e.g. Application, Valuation, LMI response, etc.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("System assigned unique identifier")]
        [System.Xml.Serialization.XmlAttributeAttribute("UniqueID")]
        public string UniqueID { get; set; }
        
        /// <summary>
        /// <para>A link to a UniqueID field identifying an element within this LIXI 2.x message instance to which this external data model Identifier belongs.</para>
        /// <para>Must point to a Unique ID</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("A link to a UniqueID field identifying an element within this LIXI 2.x message in" +
            "stance to which this external data model Identifier belongs.")]
        [System.Xml.Serialization.XmlAttributeAttribute("x_Context")]
        public string X_Context { get; set; }
    }
}
